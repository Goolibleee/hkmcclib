{"version":3,"sources":["pages/Home.js","Util.js","ListView.js","api/query.js","pages/Notice.js","pages/Search.js","pages/CheckOutStatus.js","pages/CheckOut.js","pages/Return.js","UserInfo.js","pages/UserSearch.js","pages/RentalSituation.js","pages/RentHistory.js","pages/NewMember.js","Doc.js","Context.js","Dropdown.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useEffect","async","console","log","doc","setCallback","undefined","initialize","serverAvailable","_jsxs","id","children","_jsx","Link","className","to","text","checkOut","return","dangerouslySetInnerHTML","__html","homeText","SEARCH_PER_SCREEN","MAX_SEARCH_ENTRY","String","prototype","format","formatted","this","i","arguments","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","getUserState","state","normal","overDue","stopped","getBookState","available","checkedOut","reserved","lost","damaged","given","notAvailable","deleted","compareBook","book1","book2","name","claim1","parseInt","claim_num","claim2","compareUser","a1","a2","compareRent","rentDate","title","toUtf8","unescape","encodeURIComponent","loadingId","loggingId","showCallback","ListView","itemList","setItemList","useState","pageNum","setPageNum","displayList","setDisplayList","list","keyValue","startIdx","count","Math","min","slice","detail","NavigateBeforeIcon","fontSize","sx","color","onClick","NavigateNextIcon","gql","RENT_QUERY","USERS_QUERY","USER_QUERY","HISTORY_QUERY","HISTORY_BOOK_QUERY","HISTORY_PERIOD_QUERY","NOTICE_QUERY","CONTENT_QUERY","SERVER_QUERY","REQUEST_QUERY","Notice","searchResults","setSearchResults","displayedCodes","setDisplayedCodes","loading","noticeLoading","data","noticeData","error","noticeError","useQuery","useParams","loadSelected","selectedLoading","selectedData","selectedError","useLazyQuery","notice","toString","showEntry","result","date","colSpan","_id","content","entries","map","initialized","Search","inputText","setInputText","selectedId","setSelectedId","bookList","setBookList","rentList","setRentList","bookState","setBookState","needConfirm","setNeedConfirm","queryRequest","toggleQueryRequest","bookId","setBookId","advancedSearch","setAdvancedSearch","author","setAuthor","fromId","setFromId","toId","setToId","fromDate","setFromDate","toDate","setToDate","stateFilter","setStateFilter","rentHistory","setRentHistory","searchQuery","useDebounce","loadHistory","historyData","selectedRef","useRef","needConfirmRef","bookStateRef","historyAvailable","updateDoc","rl","rm","rented","rent","push","code","book_id","retDate","return_date","bl","books","book","key","num","claim","regDate","registration_date","totalName","series","category","publisher","publish","isbn","setState","current","setSearchState","stateStr","value","document","getElementById","checked","filter","idx","element","isOpen","keyword","sr","results","btoa","url","serverInfo","localIp","port","param","response","requestGet","resultString","BOOKNAME","CLAIMNUM","_STATE","returnDate","_RETURN","resultObject","index","BARCODE","REG_DATE","AUTHOR","TOTAL_NAME","PUBLISH","CLAIM","ISBN","findBookLocally","sort","findBooks","query","history","rentLog","book_state","pair","timestamp","hidden","entryId","flags","selectId","rowSpan","entry","showHistoryEntry","admin","disabled","ipAddr","portNum","obj","requestPost","confirmAction","confirm","cancel","setPeriod","from","toLowerCase","row","includes","bookSearch","placeholder","searchBook","onChange","event","target","type","advSearch","bookCode","registeredDate","Calendar","date1","date2","dateStr1","getFullYear","getMonth","padStart","getDate","dateStr2","selectRange","all","search","showEntries","State","LoggedOut","LoggingIn","LoggedIn","MAX_EXTEND","CheckOutStatus","userText","setUserText","passwordText","setPasswordText","setInitialized","userId","setUserId","setHistory","extendCount","setExtendCount","autoLogin","setAutoLogin","loadUser","userData","loadRequest","requestData","expireDate","setExpireDate","setTitle","logged","userInfo","getRent","adminMode","userSearch","logIn","context","cookie","Date","setTime","getTime","days","toGMTString","compare","func","bookReady","rentReady","hist","rentLogs","split","setRequest","request","retText","dueDate","showRented","maxExtended","titleRowSpan","extending","hasRequest","React","Fragment","extend","maxExtend","noEntry","toISOString","sendRequest","addRequest","toast","isActive","prop","user","checkLogIn","TYPE","SUCCESS","logInSucceed","ERROR","logInFail","render","toastId","update","info","idHolder","onInput","pwHolder","toggleAutoLogin","cookieString","toUpperCase","Navigate","LoggingOut","CheckOut","bookText","setBookText","bookValue","barcode","setBarcode","notifyRequest","setNotifyRequest","setRented","setUserData","bookData","setBookData","navigate","useNavigate","interval","setInterval","scan","prefixList","getElementsByName","prefix","clearInterval","notify","RENTED","dismiss","getUserData","USER_CODE","inputId","substring","found","userValue","showBook","_bookId","setBookValue","htmlFor","pattern","inputMode","onKeyDown","setUserKeyDown","USER_NAME","nameSuffix","USER_STATE","_RENT","rentSuffix","numberOnly","bookHolder","confirmRent","ret","rentSucceed","NOT_AVAILABLE","logOut","finish","Return","scannedBook","setScannedBook","returned","setReturned","NOT_RENTED","CameraAltIcon","confirmReturn","returnSucceed","UserInfo","setDisabled","setUserInfo","setProperty","PHONE_NUMBER","EMAIL","ADDRESS","USER_LEVEL","NOTICE","Object","keys","phone","email","address","notice_","level","kid","adult","save","confirmSave","refresh","userLoading","userListData","userError","userList","setUserList","succeededToOpen","users","setUser","getUser","bookName","forceSelect","showUsers","showUser","_Fragment","input","trim","findUsers","RentHistory","RETURN_DATE","STATS","LENT_DATE","CLAMENUM","USER","userName","situation","fromTime","setFromTime","toTime","setToTime","historyLoading","historyError","yearValue","setYear","monthValue","setMonth","setQuery","option","year","month","createElement","add","thisYear","thisMonth","user_id","bookInfo","_RETURN_DATE","RENT_DATE","queryTo","nextMonth","e","warn","movePrev","moveNext","NewMember","prepareNewMember","newMember","regSuccess","regFail","Doc","constructor","userReady","Set","logCallback","os","navigator","platform","axios","get","post","checkServerIp","checkState","callback","setLogCallback","setRent","checkRent","has","setServerInfo","globalIp","proxy","setBook","clear","_EXTEND_COUNT","retEntry","rent_date","extend_count","updateFunc","NodeRSA","require","queueUri","config","Context","env","rawCookie","v","reduce","acc","shift","join","decodeURIComponent","aws_key","REACT_APP_AWSS_KEY1","REACT_APP_AWSS_KEY2","aws_sec","REACT_APP_AWSS_SECRET1","REACT_APP_AWSS_SECRET2","configObject","region","credentials","accessKeyId","secretAccessKey","sqsClient","SQSClient","prk","REACT_APP_PRIVATE_KEY","passwordTyped","matched","emailDb","phoneDb","sign","numberString","isNaN","body","deduplicationId","floor","random","command","SendMessageCommand","MessageBody","QueueUrl","MessageGroupId","MessageDeduplicationId","send","requests","ReceiveMessageCommand","AttributeNames","MessageAttributeNames","MaxNumberOfMessages","VisibilityTimeout","WaitTimeSeconds","Messages","msg","JSON","parse","Body","DropDown","dropdown","setDropdown","setTimeout","window","addEventListener","close","menu","classList","remove","removeEventListener","toggleMenu","MenuIcon","home","checkOutStatus","Navbar","isMobile","process","textString","logMsg","App","setLogged","rentLoading","rentError","rentData","serverLoading","serverError","serverData","notifyInit","updateLog","REACT_APP_QUEUE_URL","lang","languages","ts","kr","en","updateIpAddr","nothing","password","LOADING","book_url","then","Router","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","limit","Routes","Route","path","UserSearch","RentalSituation","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","link","HttpLink","uri","graphql_url","headers","cache","InMemoryCache","container","createRoot","StrictMode","ApolloProvider"],"mappings":"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","file":"static/js/main.52b07030.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport \"./Home.css\";\r\n\r\nfunction Home(props) {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Home\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    if (!props.doc.serverAvailable)\r\n    {\r\n        return (<div id=\"home\" dangerouslySetInnerHTML={{__html:props.text.homeText}}></div>);\r\n    }\r\n    else\r\n    {\r\n        import(\"./PageServer.css\");\r\n        return (<div id=\"home\">\r\n                    <Link className='home-items' to=\"/checkOut\">\r\n                        {props.text.checkOut}\r\n                    </Link>\r\n                    <Link className='home-items' to=\"/return\">\r\n                        {props.text.return}\r\n                    </Link>\r\n                </div>);\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","export const SEARCH_PER_SCREEN = 10;\r\nexport const MAX_SEARCH_ENTRY = 500;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n\r\nexport const getUserState = function(text, state) {\r\n    if (state === \"0\" || state === 0)\r\n        return text.normal;\r\n    else if (state === \"1\" || state === 1)\r\n        return text.overDue;\r\n    else if (state === \"2\" || state === 2)\r\n        return text.stopped;\r\n}\r\n\r\nexport const getBookState = function(text, state) {\r\n    switch (state)\r\n    {\r\n        case \"0\":\r\n        case 0:\r\n            return text.available;\r\n        case \"1\":\r\n        case 1:\r\n            return text.checkedOut;\r\n        case \"2\":\r\n        case 2:\r\n            return text.reserved;\r\n        case \"3\":\r\n        case 3:\r\n            return text.overDue;\r\n        case \"4\":\r\n        case 4:\r\n            return text.lost;\r\n        case \"5\":\r\n        case 5:\r\n            return text.damaged;\r\n        case \"6\":\r\n        case 6:\r\n            return text.given;\r\n        case \"7\":\r\n        case 7:\r\n        default:\r\n            return text.notAvailable;\r\n        case \"8\":\r\n        case 8:\r\n            return text.deleted;\r\n    }\r\n}\r\n\r\nexport const compareBook = function(book1, book2)\r\n{\r\n    if (book1.name > book2.name)\r\n        return 1;\r\n    else if (book1.name < book2.name)\r\n        return -1;\r\n    const claim1 = parseInt(book1.claim_num);\r\n    const claim2 = parseInt(book2.claim_num);\r\n    if (claim1 > claim2)\r\n        return 1;\r\n    else if (claim1 < claim2)\r\n        return -1;\r\n\r\n    return 0;\r\n}\r\n\r\nexport const compareUser = function(a1, a2)\r\n{\r\n    if (a1.name > a2.name)\r\n        return 1;\r\n    else if (a1.name < a2.name)\r\n        return -1;\r\n    else\r\n        return 0;\r\n}\r\n\r\nexport const compareRent = function(a1, a2)\r\n{\r\n    if (a1.rentDate > a2.rentDate)\r\n        return 1;\r\n    else if (a1.rentDate < a2.rentDate)\r\n        return -1;\r\n    if (a1.title > a2.title)\r\n        return 1;\r\n    else if (a1.title < a2.title)\r\n        return -1;\r\n    else\r\n        return 0;\r\n}\r\n\r\nexport const toUtf8 = function(text) {\r\n    return unescape(encodeURIComponent(text));\r\n};\r\n\r\nexport const fromUtf8 = function(text) {\r\n    return decodeURIComponent(escape(text));\r\n};\r\n\r\nexport const loadingId = \"custom-loading-id\";\r\nexport const loggingId = \"custom-logging-id\";\r\n","import { useEffect, useState } from \"react\";\nimport { SEARCH_PER_SCREEN } from \"./Util\";\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\n\nfunction doNothing() {\n    console.log(\"Do nothing...\");\n}\n\nvar showCallback = doNothing;\nfunction ListView(props) {\n        const [itemList, setItemList] = useState([]);\n//        const [showCallback, setShowCallback] = useState(doNothing);\n        const [pageNum, setPageNum] = useState(0);\n        const [displayList, setDisplayList] = useState([]);\n\n    useEffect(function () {\n        console.log(\"Init List View\");\n    }, []);\n\n    useEffect(function () {\n//        console.log(\"Set Item List\");\n        setItemList(props.list);\n    }, [props.list]);\n\n    useEffect(function () {\n        setPageNum(0);\n    }, [props.keyValue]);\n\n    useEffect(function () {\n        if (props.showCallback)\n        {\n//            console.log(\"Set show callback\");\n //           setShowCallback(props.showCallback);\n            showCallback = props.showCallback;\n        }\n    }, [props.showCallback]);\n\n    useEffect(function () {\n        const length = itemList.length;\n //       console.log(\"Page num \" + pageNum.toString());\n        if (length > SEARCH_PER_SCREEN)\n        {\n            const startIdx = pageNum * SEARCH_PER_SCREEN;\n            const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\n            setDisplayList(itemList.slice(startIdx,startIdx+count));\n        }\n        else\n        {\n            setDisplayList(itemList)\n        }\n    }, [itemList, pageNum]);\n\n    function movePrev() {\n        console.log(\"Prev\");\n        if (pageNum > 0)\n        {\n            setPageNum(pageNum - 1);\n        }\n    }\n\n    function moveNext() {\n        console.log(\"Next\");\n        if (itemList.length > (pageNum + 1) * SEARCH_PER_SCREEN)\n        {\n            setPageNum(pageNum + 1);\n        }\n    }\n\n    return (\n        <div id=\"listView\">\n            {showCallback(displayList, props.detail)}\n            {itemList && itemList.length > SEARCH_PER_SCREEN && (\n                <div id=\"pageControl\">\n                    <div className=\"page\" id = \"page\">\n                        <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={() => {movePrev();} }/>\n                    </div>\n                    <div className=\"pageNum\" id=\"pageNum\">\n                        {pageNum+1}\n                    </div>\n                    <div className=\"page\" id = \"page\">\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: (itemList.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={() => {moveNext();} }/>\n                    </div>\n                </div>)\n            }\n        </div>\n    );\n}\nexport default ListView;\n","import gql from \"graphql-tag\";\r\n\r\nexport const BOOK_QUERY = gql`\r\n    query AllBook{\r\n        book (limit:20000) {\r\n            _id\r\n            author\r\n            title\r\n            claim_num\r\n            num\r\n            series\r\n            category\r\n            claim\r\n            publisher\r\n            seqnum\r\n            registration_date\r\n            isbn\r\n            deleted\r\n        }\r\n    }\r\n`;\r\n\r\nexport const RENT_QUERY = gql`\r\n    query AllRent{\r\n        rent (limit:20000) {\r\n            _id\r\n            book_id\r\n            user_id\r\n            rent_date\r\n            return_date\r\n            extend_count\r\n            state\r\n        }\r\n    }\r\n`;\r\n\r\nexport const USERS_QUERY = gql`\r\n    query AllUser {\r\n        user (limit: 20000) {\r\n            _id\r\n            name\r\n            state\r\n            level\r\n        }\r\n    }`;\r\n\r\nexport const USER_QUERY = gql`\r\n    query FindUser($_id: string){\r\n        user (where: {_id: {_eq: $_id}}) {\r\n            _id\r\n            name\r\n            state\r\n            level\r\n            encrypted_email\r\n            encrypted_phone\r\n        }\r\n    }`;\r\n\r\nexport const HISTORY_QUERY = gql`\r\n    query findLogs($user_id: string){\r\n        rentLog (limit: 20000, where: {user_id: {_eq: $user_id}}) {\r\n            _id\r\n            book_id\r\n            book_state\r\n            timestamp\r\n            return_date\r\n            user_id\r\n        }\r\n    }`;\r\n\r\nexport const HISTORY_BOOK_QUERY = gql`\r\n    query findLogs($book_id: string){\r\n        rentLog (limit: 20000, where: {book_id: {_eq: $book_id}}) {\r\n            _id\r\n            book_id\r\n            book_state\r\n            timestamp\r\n            return_date\r\n            user_id\r\n        }\r\n    }`;\r\n\r\nexport const HISTORY_PERIOD_QUERY = gql`\r\n    query findLogs ($fromTime: string, $toTime: string) {\r\n        rentLog(limit: 20000, where: {timestamp: {_gte: $fromTime, _lt: $toTime}}) {\r\n            _id\r\n            book_id\r\n            book_state\r\n            timestamp\r\n            return_date\r\n            user_id\r\n        }\r\n    }`;\r\n\r\nexport const NOTICE_QUERY = gql`\r\n    query GetNotices {\r\n        notice (order_by: {date: asc}, limit:20000) {\r\n            _id\r\n            date\r\n            title\r\n        }\r\n    }`;\r\n\r\nexport const CONTENT_QUERY = gql`\r\n    query GetContent ($_id: string) {\r\n        notice (where: {_id: {_eq: $_id}}) {\r\n            _id\r\n            date\r\n            title\r\n            content\r\n        }\r\n    }`;\r\n\r\nexport const SERVER_QUERY = gql`\r\n    query GetServerInfo {\r\n        serverInfo {\r\n            _id\r\n            globalIp\r\n            localIp\r\n            port\r\n            proxy\r\n        }\r\n    }`;\r\n\r\nexport const REQUEST_QUERY = gql`\r\n    query GetRequests($user_id: string) {\r\n        request (limit: 20000, where: {user_id: {_eq: $user_id}}) {\r\n            _id\r\n            user_id\r\n            action\r\n            state\r\n            book_id\r\n        }\r\n    }`;\r\n\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { SEARCH_PER_SCREEN } from \"../Util\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport ListView from \"../ListView\";\r\nimport {NOTICE_QUERY, CONTENT_QUERY} from \"../api/query.js\";\r\n\r\nfunction Notice(props) {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const { loading: noticeLoading, data: noticeData, error: noticeError } = useQuery(NOTICE_QUERY);\r\n    const { id } = useParams();\r\n    const [loadSelected, { loading: selectedLoading, data: selectedData, error: selectedError}] = useLazyQuery(CONTENT_QUERY,\r\n            {\"variables\": {\"_id\": id}});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Notice\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Notice\");\r\n//            console.log(noticeData);\r\n//            console.log(noticeError);\r\n//            console.log(noticeLoading);\r\n            if (noticeData)\r\n            {\r\n                setSearchResults(noticeData.notice);\r\n            }\r\n        }, [noticeData, noticeError, noticeLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Content\");\r\n//            console.log(selectedData);\r\n//            console.log(selectedError);\r\n//            console.log(selectedLoading);\r\n            if (selectedData)\r\n            {\r\n//                setSearchResults(selectedData.content);\r\n            }\r\n        }, [selectedData, selectedError, selectedLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n            console.log(\"Page num \" + pageNum.toString() + \" \");\r\n            console.log(length);\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n//           console.log(displayedCodes);\r\n        }, [displayedCodes]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Select id: \" + id);\r\n            if (id)\r\n            {\r\n                loadSelected();\r\n            }\r\n        }, [id, loadSelected]\r\n    );\r\n\r\n    const showEntries = (entries) => {\r\n        return (\r\n            <div id=\"noticeList\">\r\n                <table><tbody>\r\n                   {displayedCodes.length > 0 && displayedCodes.map((result) => showEntry(result))}\r\n                </tbody></table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n//        console.log(result);\r\n        return (\r\n                <tr className=\"\" key={result._id}>\r\n                    <td className=\"\"> {result.date} </td>\r\n                    <td className=\"noticeEntry\" colSpan=\"2\">\r\n                        {id !== result._id &&\r\n                            (<Link to={\"/notice/\"+result._id}>{result.title}</Link>)}\r\n                        {id === result._id &&\r\n                            (<Link to={\"/notice\"}>{result.title}</Link>)}\r\n                    </td>\r\n                </tr>\r\n        );\r\n    }\r\n\r\n    return (\r\n            <div id=\"notice\">\r\n                <div id=\"title\">\r\n                    <h2>\r\n                        {props.text.notice}\r\n                    </h2>\r\n                </div>\r\n                {id && selectedData &&\r\n                    <div id=\"noticeContent\">\r\n                        <table className=\"content\"><tbody>\r\n                               {showEntry(selectedData.notice[0])}\r\n                            <tr>\r\n                                <td className=\"content\" colSpan=\"3\">\r\n                                    {selectedData.notice[0].content}\r\n                                </td>\r\n                            </tr>\r\n                        </tbody></table>\r\n                    </div>\r\n                }\r\n                <ListView list={searchResults} showCallback={(entries) => { return showEntries(entries); }}/>\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default Notice;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { MAX_SEARCH_ENTRY, getBookState, toUtf8, compareBook } from \"../Util\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport {HISTORY_BOOK_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\nimport Calendar from \"react-calendar\";\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nlet initialized = false;\r\n\r\nfunction Search(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n\r\n    const [bookList, setBookList] = useState([]);\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    const [bookState, setBookState] = useState(0);\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n\r\n    const [bookId, setBookId] = useState(\"\");\r\n\r\n    const [advancedSearch, setAdvancedSearch] = useState(false);\r\n\r\n    const [author, setAuthor] = useState(\"\");\r\n    const [fromId, setFromId] = useState(\"\");\r\n    const [toId, setToId] = useState(\"\");\r\n    const [fromDate, setFromDate] = useState(\"\");\r\n    const [toDate, setToDate] = useState(\"\");\r\n\r\n    const [stateFilter, setStateFilter] = useState(0);\r\n    const [rentHistory, setRentHistory] = useState([]);\r\n\r\n    const [searchQuery] = useDebounce(inputText, 300);\r\n    const [loadHistory, {data: historyData}] = useLazyQuery(HISTORY_BOOK_QUERY,\r\n            {\"variables\": { \"book_id\": bookId }});\r\n    const selectedRef = useRef(\"0\");\r\n    const needConfirmRef = useRef(false);\r\n    const bookStateRef = useRef(0);\r\n    const historyAvailable = useRef(false);\r\n    const { id } = useParams();\r\n\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n            console.log(\"BOOK ID: \" + id);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                console.log(\"Set Book ID \" + id);\r\n //               setInputText(id);\r\n                setBookId(id);\r\n                loadHistory();\r\n            }\r\n            else\r\n            {\r\n//                setInputText(\"\");\r\n                setBookId(\"\");\r\n            }\r\n        }, [id, loadHistory]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findBooks(text) {\r\n                let results = [];\r\n\r\n                if (props.doc.serverAvailable)\r\n                {\r\n                    console.log(toUtf8(text));\r\n                    console.log(btoa(toUtf8(text)));\r\n                    const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                        props.doc.serverInfo.port + \"/book\";\r\n                    console.log(\"=======================\");\r\n                    console.log(\"Request book list\");\r\n                    const param = {\"book\": btoa(toUtf8(text)), \"match\":false};\r\n                    const response = await props.doc.requestGet(url, param);\r\n                    console.log(response)\r\n                    if (!(\"books\" in response.data.return))\r\n                        return results;\r\n                    const books = response.data.return.books;\r\n                    for (let i = 0 ; i < books.length ; i++)\r\n                    {\r\n                        const book = books[i];\r\n                        const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                        const state = book._STATE;\r\n                        let retDate = \"\";\r\n                        if (state === 1 || state === 3 || state === \"1\" || state === \"3\")\r\n                        {\r\n                            retDate = props.text.returnDate + \" \" + book._RETURN;\r\n                        }\r\n                        let resultObject = {\r\n                            index: i,\r\n                            text: resultString,\r\n                            name: book.BOOKNAME,\r\n                            code: book.BARCODE,\r\n                            rent: getBookState(props.text, book._STATE.toString()),\r\n                            retDate: retDate,\r\n                            regDate: book.REG_DATE,\r\n                            author: book.AUTHOR,\r\n                            totalName: book.TOTAL_NAME,\r\n                            claim_num: book.CLAIMNUM,\r\n                            publish: book.PUBLISH,\r\n                            claim: book.CLAIM,\r\n                            state: book._STATE,\r\n                            isbn: book.ISBN\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    results = findBookLocally(text, bookList);\r\n                }\r\n                results.sort(compareBook);\r\n                return results;\r\n            }\r\n            async function query() {\r\n                console.log(\"Refresh\");\r\n                if (advancedSearch) {\r\n                    return;\r\n                }\r\n                var keyword;\r\n                if (bookId !== \"\")\r\n                    keyword = bookId;\r\n                else\r\n                    keyword = searchQuery;\r\n                console.log(keyword)\r\n                if (keyword) {\r\n                    let sr = await findBooks(keyword);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        selectedRef.current = sr[0].code;\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [searchQuery, bookId, bookList, rentList, props, queryRequest, advancedSearch]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"History update\");\r\n            console.log(historyData);\r\n            if (!historyData)\r\n            {\r\n                setRentHistory([])\r\n                historyAvailable.current = false;\r\n                return;\r\n            }\r\n            let history = [];\r\n            for (let i = 0 ; i < historyData.rentLog.length ; i++)\r\n            {\r\n                const rent = historyData.rentLog[i];\r\n                if (rent.book_state !== 1)\r\n                    continue;\r\n                let pair = [rent.timestamp];\r\n                if ( \"return_date\" in rent)\r\n                    pair.push(rent.return_date)\r\n                else\r\n                    pair.push(rent.return_date)\r\n                history.push(pair);\r\n            }\r\n            console.log(history.length);\r\n            setRentHistory(history);\r\n            historyAvailable.current = (history.length > 0);\r\n        },\r\n        [historyData]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        initialized = true;\r\n\r\n        let rl = [];\r\n        let rm = {};\r\n        const rented = props.doc.rent;\r\n        for (let i = 0 ; i < rented.length; i++)\r\n        {\r\n           rl.push({code:rented[i].book_id, retDate:rented[i].return_date, state:rented[i].state});\r\n           rm[rented[i].book_id] = rented[i].state;\r\n        }\r\n        setRentList(rl);\r\n\r\n        let bl = [];\r\n        const books = props.doc.book\r\n        for (const key in books)\r\n        {\r\n           const book = books[key];\r\n           const state = (key in rm) ? rm[key] : 0;\r\n           bl.push({code: book._id, name: book.title, state: state, num: book.num, author: book.author, claim: book.claim,\r\n                    regDate: book.registration_date,\r\n                    claim_num: book.claim_num, totalName: book.series, category: book.publisher, publish: book.publisher, isbn: book.isbn, deleted: book.deleted});\r\n        }\r\n        console.log(\"Load\");\r\n        console.log(bl.length);\r\n        setBookList(bl);\r\n\r\n        console.log(bookId);\r\n        if (bookId !== \"\")\r\n        {\r\n            console.log(\"Load history\");\r\n            loadHistory();\r\n        }\r\n    }\r\n\r\n    const selectId = async (code) => {\r\n        console.log(\"Prev \" + selectedRef.current);\r\n        if (searchResults.length === 1 || selectedRef.current === -1 || selectedRef.current !== code)\r\n        {\r\n            console.log(\"Select \" + code);\r\n            setSelectedId(code);\r\n            selectedRef.current = code;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + code);\r\n            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n        }\r\n    }\r\n\r\n    function setState(state)\r\n    {\r\n        console.log(\"Set state \" + bookState + \" to \" + state.toString());\r\n        needConfirmRef.current = true;\r\n        setNeedConfirm(true);\r\n        setBookState(state);\r\n        bookStateRef.current = state;\r\n        console.log(selectedId.toString() + needConfirmRef.current);\r\n    }\r\n\r\n    function setSearchState(state)\r\n    {\r\n        const stateStr = state.toString()\r\n        const value = document.getElementById(stateStr).checked;\r\n        console.log(\"Set Search state \" + stateStr + \" Value: \" + value);\r\n        if (stateStr === \"1023\")\r\n        {\r\n            document.getElementById(\"1023\").checked = value;\r\n            document.getElementById(\"0\").checked = value;\r\n            document.getElementById(\"1\").checked = value;\r\n            document.getElementById(\"3\").checked = value;\r\n            document.getElementById(\"4\").checked = value;\r\n            document.getElementById(\"5\").checked = value;\r\n            document.getElementById(\"6\").checked = value;\r\n            document.getElementById(\"7\").checked = value;\r\n            document.getElementById(\"8\").checked = value;\r\n        }\r\n        else\r\n        {\r\n            document.getElementById(stateStr).checked = value;\r\n        }\r\n\r\n        var filter = 0;\r\n        for (var i = 0 ; i < 9 ; i++)\r\n        {\r\n            const idx = i.toString();\r\n            const element = document.getElementById(idx);\r\n            if (element)\r\n                filter |= (element.checked) ? (1 << i) : 0;\r\n        }\r\n        setStateFilter(filter);\r\n        console.log(\"Filter: \" + filter.toString());\r\n    }\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n\r\n        const ipAddr = props.doc.serverInfo.localIp;\r\n        const portNum = props.doc.serverInfo.port;\r\n        if (ipAddr.length === 0 || portNum <= 0)\r\n            return;\r\n\r\n        const url = \"https://\" + ipAddr + \":\" +\r\n            portNum + \"/book\";\r\n        var obj = {};\r\n        obj[\"book\"] = selectedRef.current;\r\n        obj[\"state\"] = bookStateRef.current;\r\n        console.log(\"=======================\");\r\n        console.log(\"Change book state\");\r\n        await props.doc.requestPost(url, obj);\r\n\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n    }\r\n\r\n    const showHistoryEntry = (entry) => {\r\n        return (<tr key={entry[0]}><td key={entry[0] + \"x\"}>{entry[0]}</td><td>{entry[1]}</td></tr>);\r\n    }\r\n\r\n    const showEntry = (result, detail) => {\r\n        const hidden = (result.code !== selectedRef.current);\r\n        const entryId = (hidden) ? \"searchResult\" : \"selectedSearchResult\";\r\n        const flags = [false, false, false, false, false, false, false, false, false, false]\r\n        flags[result.state] = true;\r\n        if (result.state === 1 || result.state === 2 || result.state === 3)\r\n            flags[0] = true;\r\n//        if (!hidden)\r\n//        {\r\n//            console.log(detail);\r\n//            console.log(flags);\r\n//        }\r\n        const rentHistory = detail[2];\r\n        return (\r\n            <div key={result.code}>\r\n            <div id={entryId} onClick={async () => await selectId(result.code)}>\r\n                <table><tbody>\r\n                    <tr className=\"searchTr\">\r\n                        <td className=\"searchTitle\">{result.text}</td>\r\n                        <td className=\"searchRent\">{result.rent}</td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {!hidden &&\r\n            <div>\r\n                <table><tbody>\r\n                <tr key=\"row1\">\r\n                    <td>{result.author} </td>\r\n                    <td colSpan=\"2\" rowSpan=\"2\">{result.totalName + \" \"}<b>{result.name}</b>{\" \" + result.claim_num}</td>\r\n                </tr>\r\n                <tr key=\"row2\">\r\n                    <td>\r\n                        <Link to={\"/search/\"+result.code}>{result.code}</Link>\r\n                    </td>\r\n                </tr>\r\n                <tr key=\"row3\">\r\n                    <td>{result.publish}</td>\r\n                    <td colSpan={result.retDate.length > 0 ? \"1\":\"2\"}>{result.claim}</td>\r\n                    {result.retDate.length > 0 && <td>{result.retDate}</td> }\r\n                </tr>\r\n                </tbody></table>\r\n                <table className=\"rentHistory\" hidden={!historyAvailable.current}><tbody>\r\n                    <tr id=\"titles\"><td>{props.text.rentDate}</td><td>{props.text.returnDate}</td></tr>\r\n                    {rentHistory.map(entry => showHistoryEntry(entry))}\r\n                </tbody></table>\r\n                <div hidden={!props.doc.serverAvailable || !props.doc.admin}>\r\n                    <button className=\"bookStates\" id = \"0\" disabled={flags[0]} onClick={() => setState(0)}> {props.text.available} </button>\r\n                    <button className=\"bookStates\" id = \"4\" disabled={flags[4]} onClick={() => setState(4)}> {props.text.lost} </button>\r\n                    <button className=\"bookStates\" id = \"5\" disabled={flags[5]} onClick={() => setState(5)}> {props.text.damaged} </button>\r\n                    <button className=\"bookStates\" id = \"6\" disabled={flags[6]} onClick={() => setState(6)}> {props.text.given} </button>\r\n                    <button className=\"bookStates\" id = \"7\" disabled={flags[7]} onClick={() => setState(7)}> {props.text.notAvailable} </button>\r\n                    <button className=\"bookStates\" id = \"8\" disabled={flags[8]} onClick={() => setState(8)}> {props.text.deleted} </button>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirmRef.current}>\r\n                    <div id=\"bookName\"> {getBookState(props.text, bookStateRef.current)} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n            </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function showEntries(results, detail)\r\n    {\r\n        console.log(\"Redraw \" + needConfirmRef.current);\r\n        console.log(historyAvailable.current);\r\n        console.log(detail);\r\n        return results.map((result) => showEntry(result, detail))\r\n    }\r\n\r\n    function setPeriod(from, text)\r\n    {\r\n        if (from)\r\n            setFromId(text)\r\n        else\r\n            setToId(text)\r\n    }\r\n\r\n    function findBookLocally(keyword, bookList)\r\n    {\r\n        let results = [];\r\n        console.log(advancedSearch);\r\n        const text = keyword.toLowerCase();\r\n        console.log(text);\r\n        for (let i = 0 ; i < bookList.length ; i++) {\r\n            const row = bookList[i];\r\n            if (results.length >= MAX_SEARCH_ENTRY) break;\r\n\r\n            if (text.length > 0 &&\r\n                (!row.name || !row.name.toString().toLowerCase().includes(text)) &&\r\n                (!row.totalName || !row.totalName.toString().toLowerCase().includes(text)) &&\r\n                (!row.author || !row.author.toString().toLowerCase().includes(text)) &&\r\n                row.code.toLowerCase() !== text && row.isbn !== text)\r\n                continue\r\n            if (row.deleted && row.deleted === \"Y\")\r\n                continue\r\n//            console.log(row)\r\n\r\n            if (advancedSearch)\r\n            {\r\n                if (author.length > 0 && row.author && !row.author.toString().toLowerCase().includes(author.toLowerCase()))\r\n                    continue;\r\n\r\n                if (fromId.length > 0 && row.code < fromId)\r\n                    continue;\r\n\r\n                if (toId.length > 0 && row.code > toId)\r\n                    continue;\r\n\r\n                const regDate = row.regDate;\r\n\r\n                if (regDate < fromDate || regDate > toDate)\r\n                    continue;\r\n                console.log(row);\r\n                console.log(regDate);\r\n                console.log(regDate < fromDate);\r\n                console.log(regDate > toDate);\r\n\r\n                if (!((1<<row.state) & stateFilter))\r\n                    continue;\r\n            }\r\n            else if (text.length === 0)\r\n                continue;\r\n\r\n            let resultString = `${row.name} ${row.claim_num}`;\r\n            let retDate = \"\";\r\n            let state = \"0\";\r\n            for (const entry of rentList)\r\n            {\r\n                if (entry.code === row.code)\r\n                {\r\n                    state = entry.state;\r\n                    if (state === \"1\" || state === \"3\")\r\n                    {\r\n                        retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            let resultObject = {\r\n                index: i,\r\n                text: resultString,\r\n                name: row.name,\r\n                code: row.code.toString(),\r\n                rent: getBookState(props.text, state),\r\n                retDate: retDate,\r\n                regDate: row.regDate,\r\n                author: row.author,\r\n                totalName: row.totalName,\r\n                claim_num: row.claim_num,\r\n                publish: row.publish,\r\n                claim: row.claim,\r\n                state: parseInt(state),\r\n                isbn: row.isbn\r\n            };\r\n            results.push(resultObject);\r\n//            console.log(resultObject);\r\n        }\r\n        console.log(results.length);\r\n\r\n        return results;\r\n    }\r\n\r\n    function onChangeDate(date)\r\n    {\r\n        console.log(date);\r\n        const date1 = date[0]\r\n        const date2 = date[1]\r\n        const y1 = date1.getFullYear().toString();\r\n        const m1 = (date1.getMonth() + 1).toString().padStart(2, \"0\")\r\n        const d1 = date1.getDate().toString().padStart(2, \"0\");\r\n        const dateStr1 = y1 + \"-\" + m1 + \"-\" + d1;\r\n        console.log(dateStr1);\r\n        setFromDate(dateStr1);\r\n\r\n        const y2 = date2.getFullYear().toString();\r\n        const m2 = (date2.getMonth() + 1).toString().padStart(2, \"0\")\r\n        const d2 = date2.getDate().toString().padStart(2, \"0\");\r\n        const dateStr2 = y2 + \"-\" + m2 + \"-\" + d2;\r\n        console.log(dateStr2);\r\n        setToDate(dateStr2);\r\n    }\r\n\r\n    function searchEntry()\r\n    {\r\n        console.log(\"Search\");\r\n        console.log(fromId);\r\n        console.log(toId);\r\n        console.log(fromDate);\r\n        console.log(toDate);\r\n        let results = findBookLocally(inputText, bookList);\r\n        results.sort(compareBook);\r\n\r\n        let sr = results;\r\n        if (sr.length > 0)\r\n            setSearchResults(sr);\r\n        else\r\n            setSearchResults([]);\r\n        if (sr.length === 1)\r\n            selectedRef.current = sr[0].code;\r\n    }\r\n\r\n    function toggleAdvancedSearch()\r\n    {\r\n        setAdvancedSearch(!advancedSearch);\r\n    }\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <div id=\"title\">\r\n                <h2> {props.text.bookSearch} </h2>\r\n            </div>\r\n            <div id=\"searchContents\" hidden={bookId !== \"\"}>\r\n                <input id=\"searchInput\"\r\n                    placeholder={props.text.searchBook}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n                    <div hidden={!props.doc.admin}>\r\n                        <input type=\"checkbox\" id=\"advancedSearch\" checked={advancedSearch} onChange={() => toggleAdvancedSearch()}/>\r\n                        <label>\r\n                            {props.text.advSearch}\r\n                        </label>\r\n                    </div>\r\n                <div hidden={!advancedSearch}>\r\n                    <div>\r\n                    <label> {props.text.author} </label>\r\n                    <input type=\"text\" id=\"author\" onChange={(event) => {setAuthor(event.target.value)}} />\r\n                    </div>\r\n                    <div>\r\n                    <label> {props.text.bookCode} </label>\r\n                    <input type=\"text\" id=\"fromPeriod\" onChange={(event) => {setPeriod(true, event.target.value);}} />\r\n                    <label> ~  </label>\r\n                    <input type=\"text\" id=\"toPeriod\" onChange={(event) => {setPeriod(false, event.target.value);}} />\r\n                    </div>\r\n                    <div>\r\n                    <label> {props.text.registeredDate} </label>\r\n                    <Calendar onChange={onChangeDate} selectRange={true}/>\r\n                    </div>\r\n                    <div>\r\n                    <table><tbody>\r\n                        <tr key=\"stateName\" className=\"bookData\">\r\n                            <td className =\"stateName\">{props.text.all}</td>\r\n                            <td className =\"stateName\">{props.text.available}</td>\r\n                            <td className =\"stateName\">{props.text.checkedOut}</td>\r\n                            <td className =\"stateName\">{props.text.overDue}</td>\r\n                            <td className =\"stateName\">{props.text.lost}</td>\r\n                            <td className =\"stateName\">{props.text.damaged}</td>\r\n                            <td className =\"stateName\">{props.text.given}</td>\r\n                            <td className =\"stateName\">{props.text.notAvailable}</td>\r\n                            <td className =\"stateName\">{props.text.deleted}</td>\r\n                        </tr>\r\n                        <tr key=\"stateButton\" className=\"bookData\">\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"1023\" onChange={() => setSearchState(1023)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"0\" onChange={() => setSearchState(0)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"1\" onChange={() => setSearchState(1)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"3\" onChange={() => setSearchState(3)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"4\" onChange={() => setSearchState(4)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"5\" onChange={() => setSearchState(5)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"6\" onChange={() => setSearchState(6)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"7\" onChange={() => setSearchState(7)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"8\" onChange={() => setSearchState(8)}/>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                    </div>\r\n                    <div>\r\n                    <button id=\"searchEntry\" onClick={searchEntry}> {props.text.search} </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ListView keyValue={searchQuery} list={searchResults} detail={[selectedId, needConfirm, rentHistory]} showCallback={(entries, detail) => { return showEntries(entries, detail); }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, compareRent } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USER_QUERY, HISTORY_QUERY, REQUEST_QUERY} from \"../api/query.js\";\r\n//import {USER_QUERY, HISTORY_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nconst MAX_EXTEND = 1;\r\n\r\nfunction CheckOutStatus(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [extendCount, setExtendCount] = useState(0);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [loadRequest, { data: requestData }] = useLazyQuery(REQUEST_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [expireDate, setExpireDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOutStatus initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n\r\n            if (\"autoLogin\" in props.context.cookie)\r\n            {\r\n                const autoLogin = (props.context.cookie.autoLogin === \"true\") ? true : false;\r\n                setAutoLogin(autoLogin);\r\n            }\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            setExpireDate(date.toGMTString());\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.doc.logged]\r\n    );\r\n\r\n    useEffect(() => {\r\n            async function func() {\r\n                console.log(\"User data updated \");\r\n                await compare();\r\n            }\r\n            func();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData)\r\n            let hist = [];\r\n            const rentLogs = historyData.rentLog;\r\n//            const rentLogs = historyData.rentLog_tests;\r\n            for (let i = 0 ; i < rentLogs.length ; i++)\r\n            {\r\n                const entry = rentLogs[i];\r\n                if (entry.book_state !== \"1\" && entry.book_state !== 1)\r\n                    continue;\r\n                if (! (\"return_date\" in entry) || ! entry.return_date)\r\n                    continue;\r\n//                console.log(entry);\r\n                const id = entry.book_id;\r\n                if (!(id in props.doc.book))\r\n                    continue;\r\n\r\n                const book = props.doc.book[id];\r\n//                console.log(book)\r\n                const title = book.title;\r\n                const claim = book.claim;\r\n                const date = entry.timestamp.split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                const retDate = entry.return_date.split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                hist.push(\r\n                    {\"id\": id, \"title\": title, \"rentDate\": date, \"retDate\": retDate, \"claim\": claim,\r\n                     \"totalName\": book.series, \"claim_num\": book.claim_num\r\n                    }\r\n                );\r\n\r\n            }\r\n            hist.sort(compareRent);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Request data\");\r\n            if (requestData)\r\n            {\r\n                console.log(\"Request available\");\r\n                props.doc.setRequest(requestData.request)\r\n            }\r\n        },\r\n        [requestData]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.logged)\r\n        {\r\n            setState(State.LoggedIn);\r\n            const userId = props.doc.userInfo['_id'];\r\n            setUserId(userId);\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            console.log(props.doc.getRent(userId));\r\n            await loadHistory();\r\n            await loadRequest();\r\n        }\r\n        else\r\n        {\r\n            setState(State.LoggedOut);\r\n            setUserId(\"\");\r\n            setPasswordText(\"\");\r\n        }\r\n\r\n        console.log(\"Set title \" + props.doc.logged)\r\n        if (props.doc.logged)\r\n        {\r\n            if (props.doc.adminMode)\r\n                setTitle(props.text.userSearch);\r\n            else\r\n                setTitle(props.text.checkOut);\r\n        }\r\n        else\r\n        {\r\n            setTitle(props.text.logIn);\r\n        }\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index, history) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const claim = rent[\"claim\"];\r\n        const key = index.toString();\r\n        const extendCount = rent.extendCount;\r\n        const maxExtended = extendCount >= MAX_EXTEND;\r\n        let titleRowSpan;\r\n        let extending;\r\n        if (history)\r\n        {\r\n            titleRowSpan = \"1\"\r\n        }\r\n        else\r\n        {\r\n            extending = props.doc.hasRequest(id);\r\n            titleRowSpan = \"2\"\r\n        }\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" rowSpan={titleRowSpan} className=\"bookName\">\r\n                            {rent.totalName + \" \"}<b>{rent.title}</b>{\" \" + rent.claim_num}\r\n                        </td>\r\n                    </tr>\r\n                    {!history &&\r\n                        <tr key={key + \"Extend\"} className=\"bookExtend\">\r\n                            <td className=\"bookExtend\"> <button id=\"extend\" onClick={async () => extend(id)}\r\n                                disabled={extending || maxExtended}>\r\n                                {maxExtended && props.text.maxExtend}\r\n                                {(extending && !maxExtended) && props.text.extending}\r\n                                {!(extending || maxExtended) && props.text.extend}\r\n                                ({extendCount})\r\n                            </button></td>\r\n                        </tr>\r\n                    }\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const toggleAutoLogin = () => {\r\n        console.log(\"Toggle autoLogin\");\r\n        const cookieString = \"autoLogin=\" + (autoLogin ? \"false\":\"true\") + \"; expires=\" + expireDate + \";\";\r\n//        console.log(cookieString);\r\n        document.cookie = cookieString;\r\n        setAutoLogin(!autoLogin);\r\n    }\r\n\r\n    const showEntries = (result, history) => {\r\n        let retText;\r\n        if (history)\r\n            retText = props.text.returnDate;\r\n        else\r\n            retText = props.text.dueDate;\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{retText}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index, history);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        setState(State.LoggingIn);\r\n        setUserId(userText.toUpperCase());\r\n        await loadUser();\r\n        await loadHistory();\r\n        await loadRequest();\r\n        console.log(\"Log In\");\r\n        await compare();\r\n    }\r\n\r\n    const extend = async (bookId) => {\r\n        console.log(\"Extend\");\r\n        const date = new Date().toISOString().replace(\"T\", \" \").replace(\"Z\", \"\");\r\n        console.log(date);\r\n        const request =\r\n            \"{\\n\" +\r\n            \" \\\"user_id\\\": \\\"\" + userId + \"\\\",\\n\" +\r\n            \" \\\"book_id\\\": \\\"\" + bookId + \"\\\",\\n\" +\r\n            \" \\\"date\\\": \\\"\" + date + \"\\\",\\n\" +\r\n            \" \\\"action\\\": \\\"extend\\\"\\n\" +\r\n            \"}\\n\"\r\n\r\n        props.context.sendRequest(request);\r\n        props.doc.addRequest(bookId);\r\n        setExtendCount(extendCount + 1);\r\n    }\r\n\r\n    const compare = async () => {\r\n        if (!userData || state === State.LoggedOut)\r\n            return;\r\n\r\n        console.log(toast.isActive(loggingId));\r\n        const prop = toastProp;\r\n\r\n        console.log(passwordText);\r\n        let text;\r\n        const user = userData.user[0];\r\n        if (props.context.checkLogIn(user, passwordText))\r\n        {\r\n            props.doc.logIn(user);\r\n\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            setState(State.LoggedIn);\r\n\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            document.cookie = \"user_id=\" + userId + \"; expires=\" + expireDate + \";\";\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.render = text;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = loggingId;\r\n        if (toast.isActive(loggingId))\r\n        {\r\n            console.log(\"update toast\");\r\n            toast.update(loggingId, prop);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"New toast\");\r\n            toast.info(text, prop);\r\n        }\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {title}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!(state !== State.LoggedIn)}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <input type=\"password\" id=\"searchPassword\"\r\n                    placeholder={props.text.pwHolder}\r\n                    value={passwordText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setPasswordText(event.target.value);\r\n                    }} />\r\n                <div id=\"autoLogin\">\r\n                    <input type=\"checkbox\" id=\"autoLoginButton\" checked={autoLogin} onChange={() => toggleAutoLogin()}/>\r\n                    <label>\r\n                            {props.text.autoLogin}\r\n                    </label>\r\n                </div>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={!(state === State.LoggedIn)}>\r\n                <div>\r\n                    { showEntries(searchResults, false) }\r\n                </div>\r\n\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <ListView list={history} showCallback={(entries) => { return showEntries(entries, true); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOutStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, loadingId, getUserState } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\n//import CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport ListView from \"../ListView\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2,\r\n    LoggingOut: 3\r\n}\r\n\r\nfunction CheckOut(props) {\r\n    const [userId, setUserId] = useState(\"\");\r\n\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [bookValue] = useDebounce(bookText, 500);\r\n    const [bookId, setBookId] = useState(\"\");\r\n\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n\r\n    const [barcode, setBarcode] = useState(\"\");\r\n\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n\r\n    const [rented, setRented] = useState([]);\r\n    const [userData, setUserData] = useState({});\r\n    const [bookData, setBookData] = useState({});\r\n    const [state, setState] = useState(State.LoggedOut);\r\n\r\n    const { id } = useParams();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOut initialize\");\r\n            const prefixList = document.getElementsByName(\"idPrefix\");\r\n            for (var i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                const prefix = prefixList[i].id\r\n                if (\"AB\" === prefix)\r\n                    prefixList[i].checked = true\r\n                else\r\n                    prefixList[i].checked = false\r\n\r\n            }\r\n            console.log(\"ID: \" + id);\r\n            if (id && id.length !== 0)\r\n            {\r\n//                setBarcode(id)\r\n                setUserId(id);\r\n                logIn(id);\r\n            }\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n//            console.log(props.doc.serverInfo);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            if (props.doc.admin)\r\n                return;\r\n            import(\"./PageServer.css\");\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                const response = await props.doc.requestGet(url, {});\r\n                const code = response.data.scan;\r\n                if (code) {\r\n                    console.log(code)\r\n                    console.log(state)\r\n                    setBarcode(code)\r\n                }\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!barcode)\r\n                return;\r\n            console.log(\"Updated barcode: \" + barcode);\r\n            console.log(\"state : \" + state);\r\n            if (state === State.LoggedIn)\r\n                setBookId(barcode);\r\n            else if (state === State.LoggedOut)\r\n                logIn(barcode);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [barcode]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            console.log(toast.isActive(loggingId));\r\n            const prop = toastProp;\r\n\r\n            let text;\r\n            let notify = false;\r\n            if (\"USER_CODE\" in userData && state !== State.LoggedIn)\r\n            {\r\n                console.log(\"Set state to LoggedIn from \" + state);\r\n                setState(State.LoggedIn);\r\n\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                text = props.text.logInSucceed;\r\n                notify = true;\r\n            }\r\n            else if (!(\"USER_CODE\" in userData))\r\n            {\r\n                console.log(\"Set state to LoggedOut from \" + state);\r\n\r\n                if (state === State.LoggingIn)\r\n                {\r\n                    prop.type = toast.TYPE.ERROR;\r\n                    text = props.text.logInFail;\r\n                    notify = true;\r\n                }\r\n                setState(State.LoggedOut);\r\n            }\r\n\r\n            if (notify)\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": prop.type})\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in bookData)\r\n            {\r\n                if (bookData._STATE === 0)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    setNeedConfirm(false);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n//                setBarcode(\"\")\r\n                setBookId(\"\");\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [bookData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            console.log(\"Notification \" + notifyRequest.text)\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//            if (\"id\" in notifyRequest)\r\n//                id = notifyRequest.id\r\n\r\n//            prop.toastId = id\r\n//            if (toast.isActive(id))\r\n//                toast.update(id, notifyRequest.text, prop);\r\n//            else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            if (state === State.LoggedIn)\r\n                return;\r\n\r\n            const prefixList = document.getElementsByName(\"idPrefix\");\r\n            var prefix = \"\"\r\n            for (var i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                if (prefixList[i].checked)\r\n                    prefix = prefixList[i].id\r\n                    console.log(\"Pressed [\" + i.toString() + \" \" + prefix + \"]\")\r\n\r\n            }\r\n            let _userId;\r\n            if (userValue[0] === \"A\" || userValue[0] === \"a\")\r\n                _userId = userValue;\r\n            else\r\n                _userId = prefix + userValue;\r\n//                setBarcode(_userId);\r\n            setUserId(_userId);\r\n\r\n        }, [state, userValue]\r\n    );\r\n*/\r\n\r\n    const getUserData = async (userText) => {\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/user?user=\" + userText;\r\n        const param = {\"user\": userText, \"data\":\"nothing\"};\r\n        const response = await props.doc.requestGet(url, param);\r\n        const user = response.data.return;\r\n\r\n        setUserData(user);\r\n        console.log(user);\r\n        setUserId(user.USER_CODE);\r\n    }\r\n\r\n    const logIn = async (inputId = undefined) => {\r\n        var userId;\r\n        var prefix = \"\";\r\n        var i;\r\n        const prefixList = document.getElementsByName(\"idPrefix\");\r\n        if (inputId)\r\n        {\r\n            if (inputId.length <= 2)\r\n                return;\r\n            prefix = inputId.substring(0, 2);\r\n            var found = false;\r\n            for (i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                if (prefix === prefixList[i].id)\r\n                {\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!found)\r\n                return;\r\n            userId = inputId;\r\n        }\r\n        else\r\n        {\r\n            const userValue = document.getElementById('userInput').value;\r\n            for (i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                if (prefixList[i].checked)\r\n                    prefix = prefixList[i].id\r\n                    console.log(\"Pressed [\" + i.toString() + \" \" + prefix + \"]\")\r\n\r\n            }\r\n            if (userValue[0] === \"A\" || userValue[0] === \"a\")\r\n                userId = userValue;\r\n            else\r\n                userId = prefix + userValue;\r\n        }\r\n        console.log(\"LOGIN\");\r\n        console.log(userId);\r\n        if (userId.length === 0)\r\n            return;\r\n        console.log(\"Set state to LoggingIn from \" + state );\r\n        setState(State.LoggingIn);\r\n        const _id = userId.toUpperCase();\r\n        getUserData(_id);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Finish\")\r\n        setUserData({});\r\n        setBookData({});\r\n//        setBarcode(\"\");\r\n        setUserId(\"\");\r\n        setBookId(\"\");\r\n        setRented([])\r\n        navigate(\"/\")\r\n    }\r\n\r\n/*\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n*/\r\n\r\n    useEffect(() => {\r\n        async function setBookValue() {\r\n            if (bookValue.length <= 0)\r\n                return;\r\n            var _bookId;\r\n            if (props.doc.admin)\r\n                _bookId = bookValue;\r\n            else\r\n                _bookId = \"HK\" + bookValue;\r\n            console.log(\"Search book1 \" + _bookId);\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(_bookId)), \"match\": true}};\r\n            const param = {\"book\": _bookId, \"match\": true};\r\n            const response = await props.doc.requestGet(url, param);\r\n            const book = response.data.return;\r\n            console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n            if ('books' in book && 'BOOKNAME' in book.books)\r\n            {\r\n                console.log(book.books)\r\n                setBookData(book.books)\r\n            }\r\n        }\r\n        setBookValue()\r\n    }, [bookValue, props.doc]);\r\n\r\n    useEffect(() => {\r\n        async function setBookId() {\r\n            console.log(\"Set bookId: \" + bookId);\r\n            if (bookId.length === 0)\r\n                return;\r\n            console.log(\"Search book2 \" + bookId);\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n            const param = {\"book\": bookId, \"match\": true};\r\n            const response = await props.doc.requestGet(url, param);\r\n            const book = response.data.return;\r\n            console.log(book)\r\n            if ('books' in book && 'BOOKNAME' in book.books)\r\n            {\r\n                setBookData(book.books)\r\n            }\r\n        }\r\n        setBookId();\r\n    }, [bookId, props.doc]);\r\n\r\n    useEffect(() => {\r\n        async function setUserId() {\r\n            console.log(\"Set userId: \" + userId);\r\n            if (!userId || userId.length === 0)\r\n                return;\r\n            if (userId.search(\"AA\") === 0 || userId.search(\"AB\") === 0 )\r\n            {\r\n                const prefixList = document.getElementsByName(\"idPrefix\");\r\n                const prefix = userId.substring(0, 2);\r\n                for (var i = 0 ; i < prefixList.length ; i++)\r\n                {\r\n                    const id = prefixList[i].id\r\n                    if (prefix === id)\r\n                        prefixList[i].checked = true\r\n                    else\r\n                        prefixList[i].checked = false\r\n\r\n                }\r\n            }\r\n        }\r\n    setUserId();\r\n    }, [userId]);\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(bookData);\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/checkOut\"\r\n        const param = {\r\n            book: bookData.BARCODE,\r\n            user: userId\r\n        };\r\n        const response = await props.doc.requestPost(url, param);\r\n        const ret = response.data.return\r\n        console.log(\"Rent confirmed\");\r\n        console.log(ret)\r\n\r\n        if (ret === \"SUCCESS\")\r\n        {\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.rentSucceed,\r\n                              \"type\": toast.TYPE.SUCCESS})\r\n            rented.push({\"id\": bookData.BARCODE, \"name\": bookData.BOOKNAME})\r\n            console.log(rented)\r\n            setRented(rented)\r\n        }\r\n        else\r\n        {\r\n            let text\r\n            if (ret in props.text)\r\n                text = props.text[ret];\r\n            else\r\n                text = props.text.NOT_AVAILABLE;\r\n            console.log(text)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": text,\r\n                              \"type\": toast.TYPE.ERROR})\r\n        }\r\n        setBookData({});\r\n//        setBarcode(\"\");\r\n        setBookId(\"\");\r\n        getUserData(userId);\r\n    }\r\n\r\n    function showEntry(index, rent)\r\n    {\r\n    /*\r\n        return (<React.Fragment key={index + \"Fragment\"}>\r\n                    <tr key={index}>\r\n                        <td className=\"bookCell\"> {rent.id} </td>\r\n                        <td colSpan=\"3\" className=\"bookCell\"> {rent.name} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    */\r\n        return (<div id=\"bookEntry\" key={rent.id}>\r\n                    <div id=\"bookItem\"> {rent.id} </div>\r\n                    <div id=\"bookItem\"> {rent.name} </div>\r\n                </div>);\r\n\r\n    }\r\n\r\n    function showBook(books)\r\n    {\r\n        return (<div id=\"bookList\">\r\n                    <div id=\"dueDate\">\r\n                    {props.text.dueDate} : {props.doc.dueDate}\r\n                    </div>\r\n                    {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                </div>);\r\n    }\r\n    /*\r\n                    <table><tbody>\r\n                        {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                    </tbody></table>\r\n    */\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setBookData({});\r\n//        setBarcode(\"\")\r\n        setBookId(\"\");\r\n    }\r\n\r\n    function setUserKeyDown(event)\r\n    {\r\n        if (event.key === \"Enter\")\r\n        {\r\n            console.log(event);\r\n            console.log(document.getElementById('userInput').value);\r\n            logIn();\r\n        }\r\n    }\r\n\r\n//            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn ? true : false }>\r\n//            <div id=\"checkOutResult\" hidden={true}>\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.checkOut}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={state === State.LoggedIn}>\r\n                <input type=\"radio\" id = \"AA\" name=\"idPrefix\"/>\r\n                <label htmlFor=\"AA\" className=\"idPrefix\" name=\"idPrefix\"> AA </label>\r\n                <input type=\"radio\" id = \"AB\" name=\"idPrefix\"/>\r\n                <label htmlFor=\"AB\" className=\"idPrefix\" name=\"idPrefix\"> AB </label>\r\n                <input type=\"text\" id=\"userInput\" pattern=\"[0-9]*\" inputMode=\"numeric\"\r\n                    placeholder={props.text.idHolder}\r\n                    onKeyDown={(event) => {\r\n                        setUserKeyDown(event);\r\n                    }}/>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn}>\r\n                {userData.USER_CODE && (\r\n                    <div id=\"userInfo\">\r\n                        <div id=\"userItem\">\r\n                            {userData.USER_CODE + \" : \" + userData.USER_NAME + props.text.nameSuffix}\r\n                        </div>\r\n                        <div id=\"userItem\"> {getUserState(props.text, userData.USER_STATE)} </div>\r\n                        <div id=\"userItem\"> {userData._RENT.length + \" \" + props.text.rentSuffix} </div>\r\n                    </div>\r\n                )}\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                    <label id=\"manualInput\">\r\n                        <div id=\"hkPrefix\">\r\n                        {props.text.numberOnly}\r\n                        </div>\r\n                        <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"bookInput\"\r\n                            placeholder={props.text.bookHolder}\r\n                            onInput={(event) => {\r\n                                setBookText(event.target.value);\r\n                            }} />\r\n                    </label>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmRent} </div>\r\n                    <div id=\"bookName\"> {bookData.AUTHOR + \":\"} </div>\r\n                    <div id=\"bookName\"> {bookData.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={async () => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                {rented.length > 0 &&\r\n                    <ListView list={rented} showCallback={(entry) => {return showBook(entry)}}/>\r\n                }\r\n            </div>\r\n            <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.finish} </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport ListView from \"../ListView\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Return(props) {\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 300);\r\n//    const [initialized, setInitialized] = useState(false);\r\n//    const [userId, setUserId] = useState(\"\");\r\n//    const [state, setState] = useState(State.LoggedOut);\r\n//    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n//                     { \"variables\": { \"_id\": userId } });\r\n//    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n//                     { \"variables\": { \"user_id\": userId } });\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n    const [returned, setReturned] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            props.doc.setCallback(undefined);\r\n            console.log(\"=======================================\");\r\n            console.log(\"Return initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            if (props.doc.admin)\r\n                return;\r\n            import(\"./PageServer.css\")\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr && ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                const response = await props.doc.requestGet(url, {});\r\n                const book = response.data.scan;\r\n                if (book) {\r\n                    console.log(book.search(\"HK\"))\r\n                    if (book.search(\"HK\") === 0) {\r\n                        console.log(barcode + \" -> \" + book)\r\n                        setBarcode(book)\r\n                    }\r\n                }\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n*/\r\n\r\n    useEffect(() => {\r\n        async function setBookId() {\r\n            if (bookText.length > 0)\r\n            {\r\n                var bookId;\r\n                if (props.doc.admin)\r\n                    bookId = bookText;\r\n                else\r\n                    bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const param = {\"book\": bookId, \"match\": true};\r\n                const response = await props.doc.requestGet(url, param);\r\n                const book = response.data.return;\r\n                if ('books' in book && 'BOOKNAME' in book.books)\r\n                {\r\n                    setScannedBook(book.books)\r\n                }\r\n            }\r\n        }\r\n        setBookId();\r\n    }, [searchQuery, props.doc, bookText]);\r\n\r\n    useEffect(() => {\r\n        async function setBarcode()  {\r\n            console.log(\"B\" + barcode);\r\n            if (barcode.length > 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n                const param = {\"book\": bookId, \"match\": true};\r\n                const response = await props.doc.requestGet(url, param);\r\n                const book = response.data.return;\r\n                console.log(book)\r\n                if ('books' in book && 'BOOKNAME' in book.books)\r\n                {\r\n                    setScannedBook(book.books)\r\n                }\r\n            }\r\n        }\r\n        setBarcode();\r\n    }, [barcode, props.doc]);\r\n\r\n/*\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n*/\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 1 || scannedBook._STATE === 3)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    console.log(\"Not rented\")\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.NOT_RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                    setBarcode(\"\")\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//           if (\"id\" in notifyRequest)\r\n//               id = notifyRequest.id\r\n\r\n//           prop.toastId = id\r\n //          if (toast.isActive(id))\r\n//               toast.update(id, notifyRequest.text, prop);\r\n//           else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Returned updated\");\r\n            console.log(returned);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            console.log(\"Update return list\");\r\n            const bookId = \"HK\" + bookText;\r\n            console.log(\"Search book1 \" + bookId);\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n            const param = {\"books\": returned};\r\n            props.doc.requestGet(url, param);\r\n        },\r\n        [returned, bookText, props.doc]\r\n    );\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/return\"\r\n        const param = {\r\n            book: scannedBook.BARCODE\r\n        }\r\n        const response = await props.doc.requestPost(url, param)\r\n        const ret = response.data.return;\r\n        console.log(ret);\r\n        if (ret === \"SUCCESS\")\r\n        {\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.returnSucceed,\r\n                              \"type\": toast.TYPE.SUCCESS})\r\n            returned.push({\"id\": scannedBook.BARCODE, \"name\": scannedBook.BOOKNAME})\r\n            console.log(returned)\r\n            setReturned(returned)\r\n        }\r\n        else\r\n        {\r\n            let text\r\n            if (ret in props.text)\r\n                text = props.text[ret];\r\n            else\r\n                text = props.text.NOT_AVAILABLE;\r\n            console.log(text)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": text,\r\n                              \"type\": toast.TYPE.ERROR})\r\n        }\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    function showEntry(index, rent)\r\n    {\r\n        return (<div id=\"bookEntry\" key={rent.id}>\r\n                    <div id=\"bookItem\"> {rent.id} </div>\r\n                    <div id=\"bookItem\"> {rent.name} </div>\r\n                </div>);\r\n    }\r\n\r\n    function showBook(books)\r\n    {\r\n        return (<div id=\"bookList\">\r\n                    {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                </div>);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Finish\")\r\n        navigate(\"/\")\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.return}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                <label id=\"barcodeScan\" hidden>\r\n                    <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                    <span>\r\n                    </span>\r\n                </label>\r\n                <label id=\"manualInput\">\r\n                    <div id=\"hkPrefix\">\r\n                        {props.text.numberOnly}\r\n                    </div>\r\n                    <input inputMode=\"numeric\" pattern=\"\\d*\" type=\"text\" id=\"searchInput\"\r\n                        placeholder={props.text.bookHolder}\r\n                        onInput={(event) => {\r\n                            setBookText(event.target.value);\r\n                        }} />\r\n                </label>\r\n                </div>\r\n                <div id=\"checkReturn\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmReturn} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\"} </div>\r\n                    <div id=\"bookName\"> {scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                {returned.length > 0 &&\r\n                    <ListView list={returned} showCallback={(entry) => {return showBook(entry)}}/>\r\n                }\r\n            </div>\r\n            <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.finish} </button>\r\n        </div>\r\n    );\r\n}\r\n//                    <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n\r\nexport default Return;\r\n","import { useEffect, useState } from \"react\";\nimport { toUtf8 } from \"./Util\";\nimport \"./UserInfo.css\";\n\nfunction UserInfo(props) {\n    const [needConfirm, setNeedConfirm] = useState(false);\n    const [disabled, setDisabled] = useState(true);\n    const [userInfo, setUserInfo] = useState({});\n\n    useEffect(function() {\n        console.log(\"User Info\");\n        console.log(props.info);\n        document.getElementById('userName').value = props.info.USER_NAME ? props.info.USER_NAME : \"\";\n        document.getElementById('phone').value = props.info.PHONE_NUMBER ? props.info.PHONE_NUMBER : \"\";\n        document.getElementById('email').value = props.info.EMAIL ? props.info.EMAIL : \"\";\n        document.getElementById('address').value = props.info.ADDRESS ? props.info.ADDRESS : \"\";\n        document.getElementById('notice_').value = props.info.NOTICE ? props.info.NOTICE : \"\";\n        document.getElementById('user_level').value = props.info.USER_LEVEL;\n        setUserInfo({\"USER_CODE\": props.info.USER_CODE});\n        setDisabled(true);\n\n    }, [props.info]);\n\n    function setProperty(index, value)\n    {\n        console.log(index);\n        console.log(value);\n        var info = userInfo;\n        switch (index)\n        {\n        case 0:\n            info.USER_NAME = value;\n            break;\n        case 1:\n            info.PHONE_NUMBER = value;\n            break;\n        case 2:\n            info.EMAIL = value;\n            break;\n        case 3:\n            info.ADDRESS = value;\n            break;\n        case 4:\n            info.USER_LEVEL = value;\n            break;\n        case 5:\n            info.NOTICE = value;\n            break;\n        default:\n            break;\n        }\n        const length = Object.keys(info).length;\n        console.log(length);\n//        if (length >= 1 && \"USER_LEVEL\" in info && info.USER_LEVEL >= 0 && info.USER_LEVEL <= 2)\n        if (length > 1)\n            setDisabled(false);\n        setUserInfo(info);\n    }\n\n    async function confirmAction()\n    {\n        console.log(\"Save modification\");\n        console.log(userInfo);\n        const ipAddr = props.doc.serverInfo.localIp;\n        const portNum = props.doc.serverInfo.port;\n        if (ipAddr.length === 0 || portNum <= 0)\n            return;\n\n        const url = \"https://\" + ipAddr + \":\" +\n            portNum + \"/user\";\n\n        var obj = {};\n        console.log(userInfo)\n        for (const key in userInfo)\n        {\n            obj[key] = btoa(toUtf8(userInfo[key]));\n        }\n        const response = await props.doc.requestPost(url, obj);\n        console.log(response);\n        props.refresh(response);\n        setNeedConfirm(false);\n    }\n\n    function cancelAction()\n    {\n        setNeedConfirm(false);\n    }\n\n    return (\n        <div>\n            <table><tbody>\n                <tr key=\"Name\">\n                    <td> {props.text.name} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"userName\" onChange={(event) => {setProperty(0, event.target.value);}} />\n                    </td>\n                </tr>\n                {\"REG_DATE\" in props.info &&\n                    <tr key=\"Register\">\n                        <td> {props.text.registeredDate} </td>\n                        <td colSpan=\"3\" className=\"data\">\n                            {props.info.REG_DATE}\n                        </td>\n                    </tr>\n                }\n                <tr key=\"Phone\">\n                    <td> {props.text.phone} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"phone\" onChange={(event) => {setProperty(1, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Email\">\n                    <td> {props.text.email} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"email\" onChange={(event) => {setProperty(2, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Address\">\n                    <td> {props.text.address} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"address\" onChange={(event) => {setProperty(3, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Notice\">\n                    <td> {props.text.notice_} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"notice_\" onChange={(event) => {setProperty(5, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Level\">\n                    <td> {props.text.level} </td>\n                    <td colSpan=\"3\" className=\"cell\">\n                        <select name=\"User Level\" id=\"user_level\" className=\"dropdown\" onChange={(event) => {setProperty(4, event.target.value);}}>\n                            <option value=\"0\"> {props.text.kid} </option>\n                            <option value=\"1\"> {props.text.adult} </option>\n                            <option value=\"2\"> {props.text.admin} </option>\n                        </select>\n                    </td>\n                </tr>\n            </tbody></table>\n           <button id=\"modify\" hidden={needConfirm} onClick={async () => setNeedConfirm(true)} disabled={disabled}> {props.text.save} </button>\n            <div id=\"checkModify\" hidden={!needConfirm}>\n                <div id=\"noticeMsg\"> {props.text.confirmSave} </div>\n                <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\n                <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\n            </div>\n        </div>\n    );\n}\nexport default UserInfo;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp, MAX_SEARCH_ENTRY, getUserState, toUtf8, compareUser } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { useNavigate, Link, Navigate, useParams } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport UserInfo from \"../UserInfo\";\r\n\r\n//var rentList = [];\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(userText, 300);\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n//    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n    const { id } = useParams();\r\n    const [rentList, setRentList] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n            {\r\n                return;\r\n            }\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"UserSearch initialize\");\r\n            console.log(\"User ID: \" + id);\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc(false);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.user;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n\r\n        if (notify)\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Set title \" + props.logged)\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    async function extend(key)\r\n    {\r\n        console.log(\"Extend \" + key);\r\n        const ipAddr = props.doc.serverInfo.localIp;\r\n        const portNum = props.doc.serverInfo.port;\r\n        if (ipAddr.length === 0 || portNum <= 0)\r\n            return;\r\n\r\n        const url = \"https://\" + ipAddr + \":\" +\r\n            portNum + \"/extend\";\r\n        var obj = {};\r\n        obj[\"book\"] = key\r\n\r\n        const ret = await props.doc.requestPost(url, obj);\r\n        console.log(\"Extended\")\r\n        console.log(ret)\r\n        selectId(selectedRef.current, true);\r\n        if (ret.data.return === \"SUCCESS\")\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.extend, prop);\r\n        }\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const extendCount = rent.extendCount;\r\n        const key = index.toString();\r\n//                        <td colSpan={props.doc.serverAvailable?\"3\":\"2\"} className=\"bookName\">{bookName}</td>\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan={props.doc.serverAvailable?\"2\":\"3\"} className=\"bookName\">{bookName}</td>\r\n                        {props.doc.serverAvailable &&\r\n                            <td className=\"bookName\"><button className=\"extend\" onClick={() => extend(id)}>{props.text.extend + \" (\" + extendCount.toString() + \")\"}</button></td>\r\n                        }\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const selectId = async (id, forceSelect = false) => {\r\n        const rent = await props.doc.getRent(id);\r\n        console.log(rent);\r\n        if (selectedRef.current === -1 || selectedRef.current !== id || forceSelect )\r\n        {\r\n            console.log(\"Select \" + id);\r\n//            setSelectedId(id);\r\n            selectedRef.current = id;\r\n            console.log(\"Set Rent List\");\r\n            console.log(rent)\r\n            setRentList(rent);\r\n//            rentList = rent;\r\n        }\r\n        else if (searchResults.length > 1)\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n//            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n            setRentList([]);\r\n//            rentList = [];\r\n        }\r\n    }\r\n\r\n    const showUser = (user, detail, index) => {\r\n        const key = index.toString();\r\n        return (\r\n                <div key={key}>\r\n                    <table><tbody>\r\n                        <tr key={user.id} className=\"searchTr\" onClick={async ()=> await selectId(user.id)}>\r\n                            <td className=\"bookData\">{user.id}</td>\r\n                            <td className=\"bookData\">{user.name}</td>\r\n                            <td className=\"bookData\">{user.state}</td>\r\n                            <td className=\"bookData\">{user.rent}</td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                        {user.id === selectedRef.current && showEntries(user, detail) }\r\n                </div>\r\n                );\r\n    }\r\n\r\n    const showUsers = (result, detail) => {\r\n        return (<div>\r\n                    {\r\n                        result.map((user, index) => {\r\n                            return showUser(user, detail, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 &&\r\n                        <table><tbody>\r\n                            <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                        </tbody></table>\r\n                    }\r\n                </div>);\r\n    }\r\n\r\n    const showEntries = (user, detail) => {\r\n        console.log(\"Detail\");\r\n        console.log(user);\r\n        return (<>\r\n                    {props.doc.serverAvailable &&\r\n                        <div>\r\n                        <UserInfo text={props.text} doc={props.doc} info={user} refresh={refresh}/>\r\n                        <button id=\"modify\" onClick={() => navigate(\"/checkOut/\" + user.USER_CODE)}> {props.text.checkOut} </button>\r\n                        </div>\r\n                    }\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        detail.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        detail.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </>);\r\n    }\r\n    useEffect(\r\n        () => {\r\n            async function findUsers(text) {\r\n                let results = [];\r\n\r\n//                for (let i = 0 ; i < userList.length ; i++) {\r\n                  for (const key in userList) {\r\n                    const row = userList[key];\r\n                    if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                    if ((row.name && row.name.toString().includes(text)) ||\r\n                        (row.id.toLowerCase() === text.toLowerCase()))\r\n                    {\r\n                        results.push(row);\r\n                    }\r\n                }\r\n                results.sort(compareUser);\r\n                console.log(results);\r\n                return results;\r\n            }\r\n            async function query() {\r\n                const input = userText.trim()\r\n                console.log(\"Query \" + input + \" \" + searchQuery)\r\n                if (input.length > 0 && searchQuery) {\r\n\r\n                    let sr;\r\n                    if (props.doc.serverAvailable)\r\n                    {\r\n                        console.log(\"from CLIB\")\r\n                        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/users\";\r\n                        const param = {\"user\": btoa(toUtf8(input))};\r\n                        const response = await props.doc.requestGet(url, param);\r\n                        const users = response.data.return.data;\r\n                        console.log(response.data.return);\r\n                        sr = [];\r\n                        if (users) {\r\n                            for (const entry of response.data.return.data)\r\n                            {\r\n                                console.log(entry);\r\n                                let user = entry;\r\n                                user.id = entry.USER_CODE;\r\n                                user.name = entry.USER_NAME;\r\n                                user.state = getUserState(props.text, entry.USER_STATE);\r\n                                user.rent = entry._RENT.length;\r\n                                sr.push(user);\r\n                            }\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log(\"from DB\")\r\n                        sr = await findUsers(searchQuery);\r\n                    }\r\n\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                       selectId(sr[0].id);\r\n                   else\r\n                       selectId(0);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n       [searchQuery, props, userList, queryRequest, userText]\r\n    );\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.userSearch}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onChange={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <div>\r\n                    <ListView keyValue={searchQuery} list={searchResults} detail={rentList} showCallback={(entries, detail) => { return showUsers(entries, detail); }}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getBookState, compareRent } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.user;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userList]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.serverAvailable)\r\n        {\r\n            let results = [];\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n            const param = {\"user\": \"*\", \"match\":false};\r\n//            console.log(obj);\r\n            const response = await props.doc.requestGet(url, param);\r\n//           console.log(response)\r\n//            if (!(\"books\" in response.data.return))\r\n//                return results;\r\n            const books = response.data.return.books;\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                const state = book._STATE;\r\n                let retDate = \"\";\r\n                if (state === 1 || state === 3 || state === \"1\" || state === \"3\")\r\n                {\r\n                    retDate = book.RETURN_DATE;\r\n                }\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: book.BOOKNAME,\r\n                    id: book.BARCODE,\r\n                    rent: getBookState(props.text, book.STATS.toString()),\r\n                    rentDate: book.LENT_DATE,\r\n                    retDate: retDate,\r\n                    author: book.AUTHOR,\r\n                    totalName: book.TOTAL_NAME,\r\n                    claim_num: book.CLAMENUM,\r\n                    publish: book.PUBLISH,\r\n                    claim: book.CLAIM,\r\n                    user: book.USER,\r\n                    userName: book.USER_NAME\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compareRent);\r\n            setRentList(results);\r\n        }\r\n        else\r\n        {\r\n\r\n            const rent = await props.doc.getRent();\r\n            console.log(\"Rent\");\r\n            console.log(rent);\r\n            rent.sort(compareRent);\r\n            for (const index in rent)\r\n            {\r\n                const userId = rent[index][\"user\"];\r\n                let userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                rent[index][\"userName\"] = userName;\r\n//                console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n            }\r\n            setRentList(rent);\r\n        }\r\n\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n//        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        const claim = rent[\"claim\"];\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookName\">\r\n                        {rent.totalName + \" \"}<b>{rent.title}</b>{\" \" + rent.claim_num}\r\n                        </td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"situation\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.situation}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue=\"\" list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { compareRent } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n//    const [initialized, setInitialized] = useState(false);\r\n    const [fromTime, setFromTime] = useState(\"\");\r\n    const [toTime, setToTime] = useState(\"\");\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [loadHistory, {loading: historyLoading, data: historyData, error: historyError }] = useLazyQuery(HISTORY_PERIOD_QUERY,\r\n            {\"variables\": { \"fromTime\" : fromTime, \"toTime\": toTime}});\r\n    const [userList, setUserList] = useState({});\r\n    const [yearValue, setYear] = useState(0);\r\n    const [monthValue, setMonth] = useState(0);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [searchQuery] = useDebounce(query, 300);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            var i;\r\n            var option;\r\n            var year = document.getElementById('year')\r\n            var month = document.getElementById('month')\r\n            for (i = 1; i <= 12 ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                month.add(option, i);\r\n            }\r\n            const thisYear = new Date().getFullYear();\r\n            const thisMonth = new Date().getMonth() + 1;\r\n            const fromYear = 2017;\r\n\r\n            for (i = fromYear ; i <= thisYear ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                year.add(option, i);\r\n            }\r\n\r\n            console.log(thisYear);\r\n            console.log(thisMonth);\r\n            setYear(thisYear);\r\n            setMonth(thisMonth);\r\n            document.getElementById('year').value = thisYear;\r\n            document.getElementById('month').value = thisMonth;\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n//                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.user;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"History update\")\r\n\r\n            if (!historyData)\r\n                return\r\n\r\n//            console.log(historyData.rentLog_tests)\r\n\r\n            const books = historyData.rentLog;\r\n//            const books = historyData.rentLog_tests;\r\n            let results = [];\r\n            let retDate = \"\";\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const state = book.book_state;\r\n                if (state !== \"1\" && state !== 1)\r\n                    continue\r\n                if (!book.return_date || book.return_date.length === 0)\r\n                    continue\r\n//                console.log(book)\r\n                const bookId = book.book_id;\r\n                const userId = book.user_id;\r\n                var userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                var bookInfo;\r\n                if (bookId in props.doc.book)\r\n                {\r\n                    bookInfo = props.doc.book[bookId];\r\n                }\r\n                else\r\n                {\r\n                    bookInfo = {}\r\n                    bookInfo.author = \"\"\r\n                    bookInfo.totalName = \"\"\r\n                    bookInfo.claim_num = \"\"\r\n                    bookInfo.publish = \"\"\r\n                    bookInfo.title = \"\"\r\n                }\r\n//                console.log(bookInfo)\r\n                const resultString = `${bookInfo.title} ${bookInfo.claim_num}`;\r\n                retDate = book.return_date;\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: bookInfo.title,\r\n                    id: bookId,\r\n                    rentDate: book.timestamp,\r\n                    retDate: retDate,\r\n                    author: bookInfo.author,\r\n                    totalName: bookInfo.series,\r\n                    claim_num: bookInfo.claim_num,\r\n                    publish: bookInfo.publisher,\r\n                    claim: bookInfo.claim,\r\n                    user: userId,\r\n                    userName: userName\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compareRent);\r\n            console.log(results);\r\n            setRentList(results);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, historyLoading, historyError]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        }, [userList]\r\n    );\r\n*/\r\n\r\n/*\r\n    async function updateDoc()\r\n    {\r\n        setInitialized(true);\r\n    }\r\n*/\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n//        const bookName = rent.totalName + \" \" + rent.title + \" \" + rent.claim_num\r\n        const claim = rent.claim;\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookCell\">\r\n                        {rent.totalName + \" \"}<b>{rent.title}</b>{\" \" + rent.claim_num}\r\n                        </td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n    function setProperty(index, value)\r\n    {\r\n        console.log(index);\r\n        console.log(value);\r\n        switch (index)\r\n        {\r\n            case 0:\r\n                setYear(value);\r\n                break;\r\n            case 1:\r\n                setMonth(parseInt(value));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(function () {\r\n        setQuery(yearValue.toString() + \"-\" + monthValue.toString().padStart(2, \"0\"))\r\n\r\n    }, [yearValue, monthValue]\r\n    );\r\n\r\n    useEffect(function () {\r\n        async function search()\r\n        {\r\n            console.log(\"Search\")\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/history\";\r\n                const param = {\"period\": query};\r\n                const response = await props.doc.requestGet(url, param);\r\n                console.log(response);\r\n\r\n                const books = response.data.return.books;\r\n                let results = [];\r\n                let retDate = \"\";\r\n                for (let i = 0 ; i < books.length ; i++)\r\n                {\r\n                    const book = books[i];\r\n                    const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                    if (\"_RETURN_DATE\" in book)\r\n                    {\r\n                        retDate = book._RETURN_DATE;\r\n                    }\r\n                    let resultObject = {\r\n                        index: i,\r\n                        text: resultString,\r\n                        title: book.BOOKNAME,\r\n                        id: book.BARCODE,\r\n        //                rent: getBookState(props.text, book..toString()),\r\n                        rentDate: book.RENT_DATE,\r\n                        retDate: retDate,\r\n                        author: book.AUTHOR,\r\n                        totalName: book.TOTAL_NAME,\r\n                        claim_num: book.CLAMENUM,\r\n                        publish: book.PUBLISH,\r\n                        claim: book.CLAIM,\r\n                        user: book.USER,\r\n                        userName: book.USER_NAME\r\n                    };\r\n                    results.push(resultObject);\r\n                }\r\n                results.sort(compareRent);\r\n                setRentList(results);\r\n            }\r\n            else\r\n            {\r\n                var queryTo;\r\n                const nextMonth = monthValue + 1\r\n                queryTo = yearValue.toString() + \"-\" + nextMonth.toString().padStart(2, \"0\")\r\n                setFromTime(query)\r\n                setToTime(queryTo)\r\n                console.log(query)\r\n                console.log(queryTo)\r\n\r\n                try {\r\n                    await loadHistory();\r\n                }\r\n                catch (e)\r\n                {\r\n                    console.warn(e.name);\r\n                }\r\n\r\n    /*\r\n                for (const index in rent)\r\n                {\r\n                    const userId = rent[index][\"user\"];\r\n                    let userName;\r\n                    if (userList && userId in userList)\r\n                        userName = userList[userId].name;\r\n                    else\r\n                        userName = \"\"\r\n                    rent[index][\"userName\"] = userName;\r\n                    console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n                }\r\n                setRentList(rent);\r\n    */\r\n            }\r\n        }\r\n        search();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [searchQuery]\r\n    );\r\n\r\n    function movePrev()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month > 1)\r\n        {\r\n            month -= 1\r\n        }\r\n        else\r\n        {\r\n            year -= 1;\r\n            month = 12;\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    function moveNext()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month < 12)\r\n        {\r\n            month += 1\r\n        }\r\n        else\r\n        {\r\n            year += 1\r\n            month = 1\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.history}\r\n                </h2>\r\n            </div>\r\n            <div id=\"searchRange\">\r\n                <div className=\"page\" id = \"page\">\r\n                    <NavigateBeforeIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {movePrev();} }/>\r\n                </div>\r\n                <select name=\"year\" id=\"year\" className=\"dropdown\" onChange={(event) => {setProperty(0, event.target.value);}}/>\r\n                <select name=\"month\" id=\"month\" className=\"dropdown\" onChange={(event) => {setProperty(1, event.target.value);}}/>\r\n                    <div className=\"page\" id = \"page\">\r\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {moveNext();} }/>\r\n                    </div>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue={searchQuery} list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp } from \"../Util\";\r\nimport { Navigate } from 'react-router-dom'\r\nimport UserInfo from \"../UserInfo\";\r\n\r\nfunction NewMember(props) {\r\n//    const [userText, setUserText] = useState(\"\");\r\n    const [userInfo, setUserInfo] = useState({});\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n//    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n//    const [userList, setUserList] = useState({});\r\n//    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized || !props.doc.serverAvailable)\r\n            {\r\n                return;\r\n            }\r\n            import(\"./PageServer.css\");\r\n            console.log(\"=======================================\");\r\n            console.log(\"NewMember initialize\");\r\n            prepareNewMember();\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n*/\r\n\r\n    function prepareNewMember()\r\n    {\r\n        var info = {};\r\n        info.USER_CODE = \"\";\r\n        info.USER_NAME = \"\";\r\n        info.PHONE_NUMBER = \"\";\r\n        info.EMAIL = \"\";\r\n        info.ADDRESS = \"\";\r\n        info.NOTICE = \"\";\r\n        info.USER_LEVEL = -1;\r\n        setUserInfo(info);\r\n    }\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n*/\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n\r\n        const prop = toastProp;\r\n        var text\r\n        if (response.data.return === \"OK\")\r\n        {\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.regSuccess;\r\n            prepareNewMember()\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.regFail;\r\n        }\r\n        prop.autoClose = 3000;\r\n        toast.info(text, prop);\r\n    }\r\n    if (!props.doc.initialized || !props.doc.serverAvailable)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.newMember}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                {props.doc.serverAvailable &&\r\n                    <UserInfo text={props.text} doc={props.doc} info={userInfo} refresh={refresh}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewMember;\r\n","import { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        this.initialized = false;\r\n        this.bookReady = false;\r\n        this.rentReady = false;\r\n        this.userReady = false;\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        this.book = {};\r\n        this.rent = {};\r\n        this.request = new Set();\r\n        this.logCallback = undefined;\r\n        this.admin = false;\r\n        this.dueDate = \"\";\r\n        this.serverInfo = {};\r\n        this.serverAvailable = false;\r\n        this.ipAddr = \"\"\r\n    }\r\n\r\n    async requestGet(url, param)\r\n    {\r\n        param.os = navigator.platform;\r\n        const obj = {\"params\": param};\r\n        console.log(\"Request GET : \" + url);\r\n//        console.log(obj);\r\n        const response = await axios.get(url, obj);\r\n        return response;\r\n    }\r\n\r\n    async requestPost(url, param)\r\n    {\r\n        console.log(\"Request POST: \" + url);\r\n        param.os = navigator.platform;\r\n//        console.log(param);\r\n        const response = await axios.post(url, param);\r\n\r\n        return response;\r\n    }\r\n\r\n    async updateIpAddr()\r\n    {\r\n        return;\r\n//        const response = await axios.get(\"https://ipv4.seeip.org/jsonip\");\r\n/*\r\n        const response = await axios.get(\"https://api.ipify.org/?format=json\")\r\n        console.log(\"Get IP Address\");\r\n        console.log(response.data);\r\n        const ipAddr = response.data.ip;\r\n        console.log(\"IP addr updated \" + ipAddr)\r\n        this.ipAddr = ipAddr;\r\n        this.checkServerIp()\r\n*/\r\n    }\r\n\r\n    checkServerIp()\r\n    {\r\n        return;\r\n/*\r\n        if (this.ipAddr.length === 0 || !this.serverInfo.globalIp)\r\n            return;\r\n        if (this.serverInfo.globalIp === this.ipAddr)\r\n        {\r\n            console.log(\"Server is accessible \" + this.serverInfo.localIp);\r\n            const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n            this.serverAvailable = true;\r\n            axios.get(query, {\"params\": {\"os\": navigator.platform, }})\r\n                .then( (response) => {\r\n                    console.log(\"Server connected\");\r\n                    console.log(response.data);\r\n                    this.admin = response.data.admin;\r\n                    this.dueDate = response.data.dueDate;\r\n                    this.initialized = true;\r\n                })\r\n                .catch(error => {\r\n                  const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n                  window.open(query);\r\n                });\r\n        }\r\n*/\r\n    }\r\n\r\n\r\n    checkState() {\r\n        if (this.bookReady && this.rentReady) {\r\n            this.initialized = true;\r\n            toast.dismiss();\r\n            if (this.callback) {\r\n                this.callback();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setLogCallback(callback) {\r\n        this.logCallback = callback;\r\n    }\r\n\r\n    setRent(rent) {\r\n        this.rent = rent\r\n        this.rentReady = true;\r\n        this.checkState();\r\n        this.checkRent();\r\n    }\r\n\r\n    setRequest(request) {\r\n//        console.log(request);\r\n        for (const entry of request)\r\n        {\r\n            this.request.add(entry.book_id);\r\n        }\r\n    }\r\n\r\n    hasRequest(entry)\r\n    {\r\n//        console.log(this.request);\r\n        return this.request.has(entry);\r\n    }\r\n\r\n    addRequest(entry)\r\n    {\r\n        this.request.add(entry)\r\n    }\r\n\r\n    setServerInfo(serverInfo)\r\n    {\r\n        console.log(serverInfo)\r\n        this.serverInfo = serverInfo;\r\n        this.serverInfo = {}\r\n        this.serverInfo.globalIp = serverInfo.globalIp;\r\n\r\n        if (serverInfo.proxy)\r\n        {\r\n            this.serverInfo.localIp = \"libserver.hkmcclibrary.duckdns.org\";\r\n            this.serverInfo.port = 443;\r\n        }\r\n        else\r\n        {\r\n            this.serverInfo.localIp = serverInfo.localIp;\r\n            this.serverInfo.port = serverInfo.port;\r\n        }\r\n\r\n\r\n        console.log(this.serverInfo);\r\n        this.checkServerIp()\r\n    }\r\n\r\n    setBook(books) {\r\n        this.book = {};\r\n        console.log(\"Register \" + books.length + \" books\");\r\n        for (let i = 0 ; i < books.length ; i++)\r\n        {\r\n            const book = books[i];\r\n            const id = book['_id'];\r\n            this.book[id] = {...book};\r\n            this.book[id].claim = book.claim.replace(/_/g, \" \");\r\n        }\r\n        this.bookReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setUser(users) {\r\n        this.user = {};\r\n        for (let i = 0 ; i < users.length ; i++)\r\n        {\r\n            const user = users[i];\r\n            const id = user.id;\r\n            this.user[id] = user;\r\n            this.user[id][\"rent\"] = 0;\r\n        }\r\n        this.userReady = true;\r\n        this.checkRent();\r\n    }\r\n\r\n    checkRent() {\r\n        if (!this.userReady || !this.rentReady)\r\n        {\r\n            console.log(\"Cannot check rent\");\r\n            return;\r\n        }\r\n//        console.log(this.rent);\r\n        for (let i = 0 ; i < this.rent.length ; i++)\r\n        {\r\n            const state = this.rent[i].state;\r\n\r\n//            console.log(state);\r\n            if (state !== \"1\" && state !== \"3\" && state !== 1 && state !== 3)\r\n                continue;\r\n\r\n            const userId = this.rent[i].user_id;\r\n//            console.log(this.rent[i]);\r\n//           console.log(userId);\r\n//           console.log(userId.length);\r\n            if (userId && userId.length > 0 && userId in this.user)\r\n            {\r\n                if (\"rent\" in this.user[userId])\r\n                    this.user[userId][\"rent\"] += 1;\r\n                else\r\n                    this.user[userId][\"rent\"] = 1;\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Invalid user\")\r\n                console.log(this.rent[i])\r\n            }\r\n        }\r\n//        console.log(this.user);\r\n    }\r\n\r\n    logIn(userInfo) {\r\n        console.log(\"Logged in: \" + userInfo['_id']);\r\n        this.logged = true;\r\n        this.userInfo = userInfo;\r\n        if (userInfo['level'] === \"2\" ||\r\n            userInfo['level'] === 2)\r\n            this.admin = true;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n        const userId = userInfo['_id'];\r\n        console.log(userId);\r\n        /*\r\n        for (const entry of this.request)\r\n        {\r\n            console.log(entry);\r\n        }\r\n        */\r\n    }\r\n\r\n    logOut() {\r\n        console.log(\"Logged out\");\r\n        this.logged = false;\r\n        this.admin = false;\r\n        this.userInfo = {};\r\n        this.request.clear();\r\n        if (this.logCallback)\r\n            this.logCallback(false);\r\n    }\r\n\r\n    async getRent(userId = undefined) {\r\n        let ret = [];\r\n        if (this.serverAvailable) {\r\n            const url = \"https://\" + this.serverInfo.localIp + \":\" +\r\n                this.serverInfo.port + \"/book\";\r\n            const param = {\"user\": userId};\r\n            const result = await this.requestGet(url, param);\r\n            console.log(result);\r\n            if (\"books\" in result.data.return)\r\n            {\r\n                // BARCODE, BOOKNAME, LENT_DATE, RETURN_DATE, STATS\r\n                // id, title, rentDate, retData,  stat\r\n                for (const entry of result.data.return.books)\r\n                {\r\n                    console.log(entry);\r\n                    const book = {\r\n                        'id': entry.BARCODE,\r\n                        'title': entry.BOOKNAME,\r\n                        'claim': entry.CLAIM,\r\n                        'claim_num': entry.CLAMENUM,\r\n                        'totalName': entry.TOTAL_NAME,\r\n                        'rentDate': entry.LENT_DATE,\r\n                        'retDate': entry.RETURN_DATE,\r\n                        'stat': entry.STATS,\r\n                        'extendCount': entry._EXTEND_COUNT\r\n                    };\r\n                    ret.push(book);\r\n                }\r\n//                ret = result.data.return.books;\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"Check \" + userId);\r\n            console.log(this.bookReady);\r\n            if (!this.bookReady)\r\n                return ret;\r\n    //        console.log(this.rent.length);\r\n            for (let i = 0 ; i < this.rent.length ; i++) {\r\n                const entry = this.rent[i];\r\n                if (userId !== undefined && entry.user_id !== userId)\r\n                    continue;\r\n    //            console.log(entry)\r\n                if (entry.state !== \"1\" && entry.state !== \"3\" && entry.state !== 1 && entry.state !== 3)\r\n                    continue;\r\n    //            console.log(entry);\r\n                const id = entry[\"book_id\"];\r\n                const book = this.book[id];\r\n//                console.log(book)\r\n                let retEntry = {};\r\n                retEntry[\"id\"] = book._id;\r\n                retEntry[\"title\"] = book.title;\r\n                retEntry['claim_num'] = book.claim_num;\r\n                retEntry['totalName'] = book.series;\r\n                retEntry[\"rentDate\"] = entry.rent_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\");\r\n                retEntry[\"retDate\"] = entry.return_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\");\r\n                retEntry[\"claim\"] = book.claim;\r\n                retEntry[\"user\"] = entry.user_id;\r\n                retEntry['extendCount'] = entry.extend_count;\r\n                ret.push(retEntry)\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n\r\n    async openDoc() {\r\n        try {\r\n            this.initialized = true;\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.initialized;\r\n    }\r\n\r\n    setCallback(updateFunc)\r\n    {\r\n        console.log(\"Update function registered\");\r\n        this.callback = updateFunc;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","import {SQSClient, SendMessageCommand, ReceiveMessageCommand} from '@aws-sdk/client-sqs'\r\nimport config from \"./api/config\";\r\n\r\nconst NodeRSA = require('node-rsa');\r\n\r\n\r\n\r\nconst queueUri = config[\"queue_url\"];\r\n\r\nclass Context {\r\n    constructor(env) {\r\n        console.log(\"Create Context\");\r\n\r\n        console.log(\"Cookies\");\r\n        const rawCookie = document.cookie;\r\n        this.cookie = rawCookie\r\n            .split(\";\")\r\n            .map(v => v.split(\"=\"))\r\n            .reduce((acc, v) => {\r\n                const key = v.shift().trim();\r\n                const value = v.join(\"=\").trim();\r\n                acc[decodeURIComponent(key)] = decodeURIComponent(value);\r\n                return acc;\r\n            }, {});\r\n        const aws_key = env.REACT_APP_AWSS_KEY1 + env.REACT_APP_AWSS_KEY2;\r\n        const aws_sec = env.REACT_APP_AWSS_SECRET1 + env.REACT_APP_AWSS_SECRET2;\r\n        const configObject =\r\n        {\r\n            region: config[\"region\"],\r\n            credentials: {\r\n                accessKeyId: aws_key,\r\n                secretAccessKey: aws_sec\r\n            },\r\n        }\r\n        this.sqsClient = new SQSClient(configObject);\r\n//        this.prk = new NodeRSA(config[\"privateKey\"]);\r\n        this.prk = new NodeRSA(env.REACT_APP_PRIVATE_KEY);\r\n    }\r\n\r\n    checkLogIn(user, passwordText) {\r\n        var matched = false;\r\n        var passwordTyped;\r\n        if (user && passwordText.length > 0) {\r\n            console.log(\"User data available\");\r\n            const emailDb = user[\"encrypted_email\"];\r\n            const phoneDb = user[\"encrypted_phone\"];\r\n\r\n            passwordTyped = this.prk.sign(passwordText, 'base64');\r\n            if (passwordText === emailDb ||\r\n                passwordText === phoneDb )\r\n            {\r\n                passwordTyped = passwordText;\r\n                matched = true;\r\n            }\r\n            else if (emailDb === passwordTyped)\r\n            {\r\n//                console.log(\"Email match\");\r\n                matched = true;\r\n            }\r\n            else\r\n            {\r\n                var numberString = \"\";\r\n                for (let i = 0 ; i < passwordText.length ; i++)\r\n                {\r\n                    if (!isNaN(passwordText[i]))\r\n                        numberString += passwordText[i];;\r\n                }\r\n                passwordTyped = this.prk.sign(numberString, 'base64');\r\n                if (passwordTyped === phoneDb)\r\n                {\r\n//                    console.log(\"Phone match\");\r\n                    matched = true;\r\n                }\r\n                else\r\n                {\r\n//                    console.log(\"Nothing matched\");\r\n                }\r\n            }\r\n\r\n//            console.log(\"toast available\");\r\n        }\r\n        if (matched)\r\n        {\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            const expireDate = date.toGMTString();\r\n            document.cookie = \"password=\" +  passwordTyped + \"; expires=\" + expireDate + \" ; SameSite=Lax ;\" ;\r\n        }\r\n        return matched\r\n    }\r\n\r\n    async sendRequest(body)\r\n    {\r\n        const deduplicationId = Math.floor(Math.random() * 100000000).toString();\r\n        try\r\n        {\r\n            const command = new SendMessageCommand({\r\n                MessageBody: body,\r\n                QueueUrl: queueUri,\r\n                MessageGroupId: \"1\",\r\n                MessageDeduplicationId: deduplicationId\r\n            });\r\n            await this.sqsClient.send(command);\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    async receiveRequest()\r\n    {\r\n        console.log(\"Read request\")\r\n        var requests = [];\r\n        try\r\n        {\r\n            const command = new ReceiveMessageCommand({\r\n                QueueUrl: queueUri,\r\n                AttributeNames: [\"\"], // AttributeNameList\r\n                MessageAttributeNames: [ // MessageAttributeNameList\r\n                \"STRING_VALUE\",\r\n                ],\r\n                MaxNumberOfMessages: 100,\r\n                VisibilityTimeout: 5,\r\n                WaitTimeSeconds: 5\r\n            });\r\n            const results = await this.sqsClient.send(command);\r\n            console.log(results);\r\n            if (results.Messages !== undefined)\r\n            {\r\n                for (const result of results.Messages)\r\n                {\r\n                    const msg = JSON.parse(result.Body);\r\n                    requests.push(msg);\r\n                }\r\n            }\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n        }\r\n\r\n        return requests;\r\n    }\r\n}\r\n\r\nexport default Context;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Dropdown.css'\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction DropDown(props) {\r\n\r\n    const [dropdown, setDropdown] = useState(false);\r\n\r\n    useEffect(\r\n        () => {\r\n            function registerClose() {\r\n                console.log(\"Register close\");\r\n                window.addEventListener(\"click\", close);\r\n            };\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./DropdownServer.css\");\r\n            }\r\n\r\n            if (dropdown)\r\n            {\r\n                setTimeout(registerClose, 100.);\r\n            }\r\n\r\n            const menu = document.getElementById(\"dropdown-menu\");\r\n            if (!dropdown)\r\n            {\r\n               menu.classList.remove('is-show');\r\n            }\r\n            else\r\n            {\r\n               menu.classList.add('is-show');\r\n            }\r\n\r\n            return () => {\r\n                window.removeEventListener(\"click\", close);\r\n            }\r\n\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [dropdown, props.doc.logged, props.doc.serverAvailable]\r\n    );\r\n\r\n    const close = () => {\r\n        console.log(\"Close\")\r\n        console.log(dropdown)\r\n        setDropdown(false);\r\n        window.removeEventListener(\"click\", close);\r\n    };\r\n\r\n\r\n    const toggleMenu = () => {\r\n        console.log(\"Click menu\")\r\n        setDropdown(!dropdown);\r\n        console.log(dropdown)\r\n        if (dropdown)\r\n            window.removeEventListener(\"click\", close);\r\n    }\r\n\r\n    const logOut = () =>\r\n    {\r\n        props.doc.logOut();\r\n        document.cookie = \"user_id=\";\r\n        document.cookie = \"password=\";\r\n        document.cookie = \"autoLogin=false\";\r\n    }\r\n\r\n    return (<div>\r\n            <div className='menu' onClick={toggleMenu} >\r\n                <MenuIcon className=\"img\" fontSize=\"large\" sx={{ color: \"#ffffff\"}}/>\r\n            </div>\r\n            <div id='dropdown-menu' onClick={() => { close() }} className='dropdown-menu'>\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                    <div className='menu-items'>\r\n                        {props.doc.userInfo[\"_id\"] + \" : \" + props.doc.userInfo[\"name\"] + props.text.nameSuffix}\r\n                    </div>\r\n                    <hr className=\"hline\"/>\r\n                    </>\r\n                }\r\n                <Link className='menu-items' to=\"/\">\r\n                    {props.text.home}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/notice\">\r\n                    {props.text.notice}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/search\">\r\n                    {props.text.bookSearch}\r\n                </Link>\r\n                {props.doc.serverAvailable &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOut\">\r\n                            {props.text.checkOut}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/return\">\r\n                            {props.text.return}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\">\r\n                            {props.text.checkOutStatus}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {props.doc.admin &&\r\n                    <>\r\n                    <hr className=\"hline\"/>\r\n                    <Link className='menu-items' to=\"/userSearch\">\r\n                        {props.text.userSearch}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentalSituation\">\r\n                        {props.text.situation}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentHistory\">\r\n                        {props.text.history}\r\n                    </Link>\r\n                    </>\r\n                }\r\n                {props.doc.serverAvailable && props.doc.admin &&\r\n                    <Link className='menu-items' to=\"/newMember\">\r\n                        {props.text.newMember}\r\n                    </Link>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <hr className=\"hline\"/>\r\n                        <div className='menu-items' onClick={logOut}>\r\n                            {props.text.logOut}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && !props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\">\r\n                            {props.text.logIn}\r\n                        </Link>\r\n                    </>\r\n                }\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DropDown;\r\n","import {isMobile} from \"react-device-detect\";\r\nimport \"./Navbar.css\";\r\nimport DropDown from \"./Dropdown\";\r\n\r\nfunction Navbar(props) {\r\n\r\nreturn (\r\n    <>\r\n        <div id=\"navbar\" className=\"navbar\">\r\n            <div className='title'>\r\n                {isMobile? (<h1>{props.text[\"titleShort\"]}</h1>) : (<h1>{props.text[\"titleLong\"]}</h1>)}\r\n            </div>\r\n            <DropDown text={props.text} doc={props.doc}/>\r\n        </div>\r\n    </>\r\n)\r\n}\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Notice from \"./pages/Notice\";\r\nimport Search from \"./pages/Search\";\r\nimport CheckOutStatus from \"./pages/CheckOutStatus\";\r\nimport CheckOut from \"./pages/CheckOut\";\r\nimport Return from \"./pages/Return\";\r\nimport UserSearch from \"./pages/UserSearch\";\r\nimport RentalSituation from \"./pages/RentalSituation\";\r\nimport RentHistory from \"./pages/RentHistory\";\r\nimport NewMember from \"./pages/NewMember\";\r\n//import Reader from \"./pages/Reader\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\nimport Context from \"./Context\";\r\nimport text from \"./api/text\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"./Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport Navbar from \"./Navbar\";\r\nimport {SERVER_QUERY} from \"./api/query.js\";\r\nimport {RENT_QUERY, USER_QUERY, REQUEST_QUERY} from \"./api/query.js\";\r\nimport config from \"./api/config\";\r\n//import {BOOK_QUERY, RENT_QUERY, USER_QUERY} from \"./api/query_test.js\";\r\n\r\nconst doc = new Doc();\r\nconst context = new Context(process.env);\r\n\r\nconst textString = {};\r\nlet logMsg = \"\"\r\nfunction App() {\r\n\r\n//    const [checkOutStr, setCheckOutStr] = useState(\"\");\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [logged, setLogged] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const { loading: rentLoading, error: rentError, data: rentData } = useQuery(RENT_QUERY);\r\n    const [loadRequest, { data: requestData }] = useLazyQuery(REQUEST_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const { loading: serverLoading, error: serverError, data: serverData } = useQuery(SERVER_QUERY);\r\n//    const [loadBook, { loading: bookLoading, error: bookError, data: bookData }] = useLazyQuery(BOOK_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY, { \"variables\": { \"_id\": userId } });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            console.log(\"Platform: \");\r\n            console.log(navigator.platform);\r\n            logMsg = logMsg + \"<p>Initialize app</p>\";\r\n            console.log(process.env.REACT_APP_NAME);\r\n            console.log(process.env.REACT_APP_VERSION);\r\n            console.log(process.env.REACT_APP_QUEUE_URL);\r\n            const lang = navigator.languages;\r\n            console.log(lang);\r\n            let ts = {}\r\n            if (lang.length> 0 && (lang[0].toLowerCase().includes(\"kr\") || lang[0].toLowerCase().includes(\"ko\")))\r\n            {\r\n                ts = text.kr;\r\n            }\r\n            else\r\n            {\r\n                ts = text.en;\r\n            }\r\n            for (let key in ts)\r\n            {\r\n                textString[key] = ts[key];\r\n            }\r\n\r\n            await doc.updateIpAddr();\r\n\r\n            if (\"autoLogin\" in context.cookie &&  context.cookie.autoLogin === \"true\")\r\n            {\r\n                console.log(\"Auto Login: \" + context.cookie.user_id);\r\n                setUserId(context.cookie.user_id);\r\n                console.log(context.cookie.nothing);\r\n                loadUser();\r\n            }\r\n            setInitialized(true);\r\n        }\r\n        initialize();\r\n    }, [loadUser]);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data loaded\");\r\n            if (!userData)\r\n            {\r\n                return;\r\n            }\r\n\r\n//            console.log(\"Login check \" + context.cookie.password);\r\n            const user = userData.user[0]\r\n//            const user = userData.user_test\r\n//            console.log(user);\r\n            if (context.cookie.password && context.checkLogIn(user, context.cookie.password))\r\n            {\r\n                console.log(\"Login suceeded\");\r\n                doc.logIn(user);\r\n                loadRequest();\r\n            }\r\n\r\n\r\n\r\n        }, [userData]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Rent Query Updated\");\r\n            logMsg = logMsg + \"<p>Rent Query Updated \" + rentLoading + \" \" + rentError + \"</p>\";\r\n            console.log(rentLoading);\r\n            console.log(\"Rent Error\");\r\n            console.log(rentError);\r\n            if (rentData)\r\n            {\r\n                console.log(\"Rent available\");\r\n                logMsg = logMsg + \"<p>Rent available</p>\"\r\n//                console.log(rentData.rent)\r\n                doc.setRent(rentData.rent)\r\n//                doc.setRent(rentData.rent_tests)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [rentLoading, rentError, rentData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Request Query Updated\");\r\n            if (requestData)\r\n            {\r\n                console.log(\"Request available\");\r\n                doc.setRequest(requestData.request)\r\n//                doc.setRent(rentData.rent_tests)\r\n            }\r\n        }, [requestData]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Book Query Updated\");\r\n            logMsg = logMsg + \"<p>Book Query Updated</p>\";\r\n            console.log(bookLoading)\r\n            console.log(bookError)\r\n            if (bookData)\r\n            {\r\n                console.log(\"Book available\")\r\n                logMsg = logMsg + \"<p>Book available</p>\";\r\n//                console.log(bookData.books)\r\n                doc.setBook(bookData.book)\r\n//                doc.setBook(bookData.book_tests)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [bookLoading, bookError, bookData]\r\n    );\r\n*/\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Server Query Updated\");\r\n            logMsg = logMsg + \"<p>Server Query Updated</p>\";\r\n\r\n            console.log(serverData);\r\n            console.log(initialized);\r\n            if (!serverData || !initialized)\r\n                return\r\n\r\n            console.log(\"Server info available\")\r\n            logMsg = logMsg + \"<p>Server info available</p>\";\r\n            console.log(serverData)\r\n            doc.setServerInfo(serverData.serverInfo)\r\n\r\n            if (!doc.serverAvailable)\r\n            {\r\n                console.log(\"Server is not available. Load books from cloud DB\");\r\n//                loadBook();\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.LOADING;\r\n                prop.autoClose = false;\r\n                prop.toastId = loadingId;\r\n                toast.loading(textString.loading, prop);\r\n                doc.setLogCallback(updateLog);\r\n\r\n                console.log(\"Get github file\");\r\n                doc.requestGet(config.book_url, {}).then(function (response) {\r\n/*\r\n                    const zipData = response.data;\r\n                    console.log(typeof(zipData));\r\n                    console.log(zipData.substring(0,50));\r\n                    console.log(zipData.length);\r\n                    zlib.gunzip(zipData, (err, buffer) => {\r\n                        console.log(\"Unzipped \");\r\n                        console.log(buffer)\r\n                    });\r\n*/\r\n                    const data = response.data;\r\n                    console.log(\"Downloaded books\");\r\n                    const bookList = []\r\n                    for (let key in data)\r\n                    {\r\n                        const entry = data[key];\r\n                        bookList.push(entry);\r\n                    }\r\n                    doc.setBook(bookList);\r\n                    if (doc.initialized)\r\n                        notifyInit()\r\n                });\r\n            }\r\n        }, [serverLoading, serverError, serverData, initialized]\r\n    );\r\n\r\n    function notifyInit()\r\n    {\r\n        const prop = toastProp;\r\n        prop.type = toast.TYPE.SUCCESS;\r\n        prop.render = textString.succeededToOpen;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = \"\";\r\n        toast.info(textString.succeededToOpen, prop);\r\n    }\r\n\r\n    function updateLog(logged) {\r\n        console.log(\"==== Update logging state \" + doc.logged);\r\n//        console.log(doc.userInfo);\r\n        setLogged(doc.logged);\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n        <div className=\"App\">\r\n            <div>\r\n                <ToastContainer\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    limit={10}\r\n                />\r\n            </div>\r\n            <Navbar doc={doc} text={textString}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home doc={doc} text={textString}/>} />\r\n                <Route path=\"/notice/:id?\" element={<Notice doc={doc} text={textString} />} />\r\n                <Route path=\"/search/:id?\" element={<Search doc={doc} text={textString}/>} />\r\n                <Route path=\"/checkOutStatus\" element={<CheckOutStatus context={context} doc={doc} text={textString} logged={logged}/>} />\r\n                <Route path=\"/userSearch/:id?\" element={<UserSearch context={context} doc={doc} text={textString} />} />\r\n                <Route path=\"/checkOut/:id?\" element={<CheckOut context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/return\" element={<Return context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentalSituation\" element={<RentalSituation context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentHistory\" element={<RentHistory context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/newMember\" element={<NewMember context={context} doc={doc} text={textString}/>} />\r\n            </Routes>\r\n\r\n            <h3>\r\n                v {process.env.REACT_APP_VERSION}\r\n            </h3>\r\n        </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport {createRoot} from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport config from \"./api/config\";\r\n\r\n\r\n\r\n//import * as Realm from \"realm-web\";\r\nimport {\r\n    ApolloClient,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    InMemoryCache,\r\n} from \"@apollo/client\";\r\n\r\n\r\nconst authToken = process.env.REACT_APP_HASURA_TOKEN;\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: config.graphql_url,\r\n        headers: {\r\n            'x-hasura-admin-secret': authToken\r\n        }\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\n\r\n/*\r\nconst APP_ID = 'data-xaque';\r\nconst graphqlUri = `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\r\nconst app = new Realm.App(APP_ID);\r\n\r\n// Gets a valid Realm user access token to authenticate requests\r\nasync function getValidAccessToken() {\r\n    // Guarantee that there's a logged in user with a valid access token\r\n    if (!app.currentUser) {\r\n        // If no user is logged in, log in an anonymous user. The logged in user will have a valid\r\n        // access token.\r\n        await app.logIn(Realm.Credentials.anonymous());\r\n//        await app.logIn(apiKey);\r\n    } else {\r\n        // An already logged in user's access token might be stale. Tokens must be refreshed after\r\n        // 30 minutes. To guarantee that the token is valid, we refresh the user's access token.\r\n        await app.currentUser.refreshAccessToken();\r\n    }\r\n//    console.log(\"AccessToken: [\" + app.currentUser.accessToken + \"]\");\r\n\r\n    return app.currentUser.accessToken;\r\n}\r\n\r\n// Configure the ApolloClient to connect to your app's GraphQL endpoint\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\r\n        // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\r\n        // access token before sending the request.\r\n        fetch: async (uri, options) => {\r\n            const accessToken = await getValidAccessToken();\r\n            options.headers.Authorization = `Bearer ${accessToken}`;\r\n            return fetch(uri, options);\r\n        },\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n*/\r\n\r\nconst container = document.getElementById('root')\r\nconst root = createRoot(container);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}