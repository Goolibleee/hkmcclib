{"version":3,"sources":["pages/Home.js","Util.js","api/query.js","pages/Notice.js","ListView.js","pages/Search.js","pages/CheckOutStatus.js","pages/CheckOut.js","pages/Return.js","pages/UserSearch.js","pages/RentHistory.js","Doc.js","Context.js","Dropdown.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useEffect","_initialize","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","console","log","doc","setCallback","undefined","stop","apply","arguments","initialize","_jsx","id","dangerouslySetInnerHTML","__html","text","homeText","SEARCH_PER_SCREEN","MAX_SEARCH_ENTRY","String","prototype","format","formatted","this","i","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","getUserState","state","normal","overDue","stopped","getBookState","available","checkedOut","notAvailable","toUtf8","unescape","encodeURIComponent","loadingId","loggingId","BOOK_QUERY","gql","_templateObject","_taggedTemplateLiteral","RENT_QUERY","_templateObject2","USERS_QUERY","_templateObject3","USER_QUERY","_templateObject4","HISTORY_QUERY","_templateObject5","NOTICE_QUERY","_templateObject6","CONTENT_QUERY","_templateObject7","SERVER_QUERY","_templateObject8","Notice","_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useState3","_useState4","displayedCodes","setDisplayedCodes","_useState5","_useState6","pageNum","setPageNum","_useState7","_useState8","selectedId","setSelectedId","_useQuery","useQuery","noticeLoading","loading","noticeData","data","noticeError","error","_useLazyQuery","useLazyQuery","_useLazyQuery2","loadSelected","_useLazyQuery2$","selectedLoading","selectedData","selectedError","notices","toString","startIdx","count","Math","min","slice","showEntry","result","_jsxs","className","children","date","colSpan","onClick","_id","title","notice","content","map","NavigateBeforeIcon","fontSize","sx","color","NavigateNextIcon","showCallback","ListView","itemList","setItemList","displayList","setDisplayList","list","initialized","Search","inputText","setInputText","_useDebounce","useDebounce","searchQuery","selectedRef","useRef","bookList","setBookList","_useState9","_useState10","rentList","setRentList","useParams","updateDoc","_updateDoc","_callee6","rl","rented","bl","books","key","book","_context6","rent","push","code","book_id","retDate","return_date","name","num","author","claim","claim_num","totalName","series","category","publisher","publish","isOpen","findBooks","_x","_findBooks","_callee2","results","url","obj","response","resultString","resultObject","_i","row","_resultString","_retDate","_state","_iterator","_step","entry","_resultObject","_context2","serverAvailable","btoa","serverInfo","localIp","port","axios","get","sent","return","concat","BOOKNAME","CLAIMNUM","_STATE","returnDate","_RETURN","index","BARCODE","AUTHOR","TOTAL_NAME","CLAMENUM","PUBLISH","CLAIM","abrupt","includes","_createForOfIteratorHelper","s","n","done","value","t0","e","f","finish","sort","a","b","_query","_callee3","sr","_context3","current","query","selectId","_ref","_callee4","_context4","_x2","hidden","entryId","_callee5","_context5","rowSpan","bookSearch","placeholder","searchBook","onChange","event","target","entries","State","LoggedOut","LoggingIn","LoggedIn","CheckOutStatus","userText","setUserText","passwordText","setPasswordText","setInitialized","userId","setUserId","_useState11","_useState12","setState","_useState13","_useState14","history","setHistory","_useState15","_useState16","autoLogin","setAutoLogin","loadUser","userData","_useLazyQuery3","_useLazyQuery4","loadHistory","historyData","_useState17","_useState18","expireDate","setExpireDate","_useState19","_useState20","setTitle","_userId","logged","userInfo","getRent","adminMode","userSearch","checkOut","logIn","_autoLogin","context","cookie","Date","setTime","getTime","days","toGMTString","compare","rawHist","bookReady","rentReady","split","s1","s2","hist","j","showEntries","rentDate","bookName","React","Fragment","Link","to","showRented","noEntry","toUpperCase","toast","isActive","prop","checkLogIn","user","type","TYPE","SUCCESS","logInSucceed","document","ERROR","logInFail","render","toastId","update","info","idHolder","disabled","onInput","pwHolder","checked","cookieString","toggleAutoLogin","LoggingOut","CheckOut","bookText","setBookText","setUserData","scannedBook","setScannedBook","needConfirm","setNeedConfirm","notifyRequest","setNotifyRequest","barcode","setBarcode","interval","setInterval","ipAddr","portNum","then","scan","clearInterval","notify","RENTED","getElementById","dismiss","updateUser","_ref2","JSON","stringify","_ref3","logOut","_ref4","imageCaptured","files","file","INFO","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","getBase64","img","method","mode","crossDomain","headers","withCredentials","credentials","image","succeededToOpen","INVALID_BOOK","bookId","USER_CODE","USER_NAME","nameSuffix","USER_STATE","_RENT","rentSuffix","CameraAltIcon","accept","capture","inputMode","pattern","bookHolder","confirmRent","ret","rentSucceed","NOT_AVAILABLE","confirmAction","confirm","cancel","Return","NOT_RENTED","confirmReturn","returnSucceed","userLoading","userListData","userError","userList","setUserList","_args6","users","level","setUser","getUser","showUsers","showUser","_Fragment","findUsers","_findUsers","keys","t1","toLowerCase","admin","RentHistory","a1","a2","userName","Doc","_classCallCheck","userReady","logCallback","_createClass","_updateIpAddr","ip","checkServerIp","globalIp","window","open","callback","checkState","checkRent","user_id","retEntry","rent_date","_openDoc","updateFunc","prk","require","config","Context","rawCookie","v","reduce","acc","shift","trim","join","decodeURIComponent","passwordTyped","matched","emailDb","encrypted_email","phoneDb","encrypted_phone","sign","numberString","isNaN","DropDown","dropdown","setDropdown","click","setClick","menu","classList","add","remove","home","checkOutStatus","Navbar","isMobile","maxWidth","style","width","MenuIcon","textString","logMsg","App","setLogged","rentLoading","rentError","rentData","_useQuery2","serverLoading","serverError","serverData","loadBook","bookLoading","bookError","bookData","notifyInit","updateLog","lang","ts","process","APP_NAME","APP_VERSION","navigator","languages","kr","en","updateIpAddr","nothing","password","setRent","rents","setBook","setServerInfo","LOADING","setLogCallback","Router","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","limit","Routes","Route","path","element","UserSearch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","APP_ID","graphqlUri","app","Realm","getValidAccessToken","_getValidAccessToken","currentUser","anonymous","refreshAccessToken","accessToken","client","ApolloClient","link","HttpLink","uri","fetch","_fetch","options","Authorization","_x3","_x4","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider"],"mappings":"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","file":"static/js/main.93e76c10.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./Home.css\";\r\n\r\nfunction Home(props) {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Home\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (<div id=\"home\" dangerouslySetInnerHTML={{__html:props.text.homeText}}></div>);\r\n}\r\n\r\nexport default Home;\r\n","export const SEARCH_PER_SCREEN = 10;\r\nexport const MAX_SEARCH_ENTRY = 500;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n\r\nexport const getUserState = function(text, state) {\r\n    if (state === \"0\")\r\n        return text.normal;\r\n    else if (state === \"1\")\r\n        return text.overDue;\r\n    else if (state === \"2\")\r\n        return text.stopped;\r\n}\r\n\r\nexport const getBookState = function(text, state) {\r\n    if (state === \"0\")\r\n    {\r\n        return text.available;\r\n    }\r\n    else if (state === \"1\")\r\n    {\r\n        return text.checkedOut;\r\n    }\r\n    else if (state === \"3\")\r\n    {\r\n        return text.overDue;\r\n    }\r\n    else\r\n    {\r\n        return text.notAvailable;\r\n    }\r\n}\r\n\r\nexport const toUtf8 = function(text) {\r\n    return unescape(encodeURIComponent(text));\r\n};\r\n\r\nexport const fromUtf8 = function(text) {\r\n    return decodeURIComponent(escape(text));\r\n};\r\n\r\nexport const loadingId = \"custom-loading-id\";\r\nexport const loggingId = \"custom-logging-id\";\r\n","import gql from \"graphql-tag\";\n\nexport const BOOK_QUERY = gql`\n    query AllBook{\n        books (sortBy: TITLE_ASC, limit:20000) {\n            _id\n            author\n            title\n            claim_num\n            num\n            series\n            category\n            claim\n            publisher\n            seqnum\n        }\n    }\n`;\n\nexport const RENT_QUERY = gql`\n    query AllRent{\n        rents (limit:20000) {\n            _id\n            book_id\n            user_id\n            rent_date\n            return_date\n            state\n        }\n    }\n`;\n\nexport const USERS_QUERY = gql`\n    query AllUser {\n        users (limit: 20000) {\n            _id\n            name\n            state\n            level\n        }\n    }`;\n\nexport const USER_QUERY = gql`\n    query FindUser($_id: String!){\n        user (query: {_id:$_id}) {\n            _id\n            name\n            state\n            level\n            encrypted_email\n            encrypted_phone\n        }\n    }`;\n\nexport const HISTORY_QUERY = gql`\n    query findLogs($user_id: String!){\n        rentLogs (query: {user_id: $user_id}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            user_id\n        }\n    }`;\n\nexport const NOTICE_QUERY = gql`\n    query GetNotices {\n        notices (sortBy: _ID_DESC, limit:20000) {\n            _id\n            date\n            title\n        }\n    }`;\n\nexport const CONTENT_QUERY = gql`\n    query GetContent ($_id: String!) {\n        notice (query: {_id: $_id}) {\n            _id\n            date\n            title\n            content\n        }\n    }`;\n\nexport const SERVER_QUERY = gql`\n    query GetServerInfo {\n        serverInfo {\n            _id\n            globalIp\n            localIp\n            port\n        }\n    }`;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { SEARCH_PER_SCREEN } from \"../Util\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport {NOTICE_QUERY, CONTENT_QUERY} from \"../api/query.js\";\r\n\r\nfunction Notice(props) {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(-1);\r\n    const { loading: noticeLoading, data: noticeData, error: noticeError } = useQuery(NOTICE_QUERY);\r\n    const [loadSelected, { loading: selectedLoading, data: selectedData, error: selectedError}] = useLazyQuery(CONTENT_QUERY,\r\n            {\"variables\": {\"_id\": selectedId}});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Notice\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Notice\");\r\n//            console.log(noticeData);\r\n//            console.log(noticeError);\r\n//            console.log(noticeLoading);\r\n            if (noticeData)\r\n            {\r\n                setSearchResults(noticeData.notices);\r\n            }\r\n        }, [noticeData, noticeError, noticeLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Content\");\r\n//            console.log(selectedData);\r\n//            console.log(selectedError);\r\n//            console.log(selectedLoading);\r\n            if (selectedData)\r\n            {\r\n//                setSearchResults(selectedData.content);\r\n            }\r\n        }, [selectedData, selectedError, selectedLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n            console.log(\"Page num \" + pageNum.toString() + \" \");\r\n            console.log(length);\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n//           console.log(displayedCodes);\r\n        }, [displayedCodes]\r\n    );\r\n\r\n    const selectEntry = (id) => {\r\n        console.log(\"selected \" + id.toString());\r\n        if (selectedId === id)\r\n        {\r\n            setSelectedId(-1);\r\n        }\r\n        else\r\n        {\r\n            setSelectedId(id);\r\n        }\r\n        loadSelected();\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n//        console.log(result);\r\n        return (\r\n                <tr className=\"\" key={result._id}>\r\n                    <td className=\"\"> {result.date} </td>\r\n                    <td className=\"noticeEntry\" colSpan=\"2\" onClick={() => selectEntry(result._id)}> {result.title}</td>\r\n                </tr>\r\n        );\r\n    }\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (searchResults.length > (pageNum + 1) * SEARCH_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div id=\"notice\">\r\n                <div id=\"title\">\r\n                    <h2>\r\n                        {props.text.notice}\r\n                    </h2>\r\n                </div>\r\n                {selectedId > 0 && selectedData &&\r\n                <div id=\"noticeContent\">\r\n                    <table className=\"content\"><tbody>\r\n                           {showEntry(selectedData.notice)}\r\n                        <tr>\r\n                            <td className=\"content\" colSpan=\"3\">\r\n                                {selectedData.notice.content}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                </div>\r\n                }\r\n                <div id=\"noticeList\">\r\n                    <table><tbody>\r\n                       {displayedCodes.length > 0 && displayedCodes.map((result) => showEntry(result))}\r\n                    </tbody></table>\r\n                </div>\r\n                {searchResults.length > SEARCH_PER_SCREEN && (\r\n                    <div id=\"pageControl\">\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={movePrev}/>\r\n                        </div>\r\n                        <div className=\"pageNum\" id=\"pageNum\">\r\n                            {pageNum+1}\r\n                        </div>\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateNextIcon fontSize=\"large\" sx={{color: (searchResults.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={moveNext}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default Notice;\r\n","import { useEffect, useState } from \"react\";\nimport { SEARCH_PER_SCREEN } from \"./Util\";\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\n\nfunction doNothing() {\n    console.log(\"Do nothing...\");\n}\n\nvar showCallback = doNothing;\nfunction ListView(props) {\n        const [itemList, setItemList] = useState([]);\n//        const [showCallback, setShowCallback] = useState(doNothing);\n        const [pageNum, setPageNum] = useState(0);\n        const [displayList, setDisplayList] = useState([]);\n\n    useEffect(function () {\n        console.log(\"Init List View\");\n    }, []);\n\n    useEffect(function () {\n//        console.log(\"Set Item List\");\n        setItemList(props.list);\n    }, [props.list]);\n\n    useEffect(function () {\n        if (props.showCallback)\n        {\n//            console.log(\"Set show callback\");\n //           setShowCallback(props.showCallback);\n            showCallback = props.showCallback;\n        }\n    }, [props.showCallback]);\n\n    useEffect(function () {\n        const length = itemList.length;\n //       console.log(\"Page num \" + pageNum.toString());\n        if (length > SEARCH_PER_SCREEN)\n        {\n            const startIdx = pageNum * SEARCH_PER_SCREEN;\n            const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\n            setDisplayList(itemList.slice(startIdx,startIdx+count));\n        }\n        else\n        {\n            setDisplayList(itemList)\n        }\n    }, [itemList, pageNum]);\n\n    function movePrev() {\n        console.log(\"Prev\");\n        if (pageNum > 0)\n        {\n            setPageNum(pageNum - 1);\n        }\n    }\n\n    function moveNext() {\n        console.log(\"Next\");\n        if (itemList.length > (pageNum + 1) * SEARCH_PER_SCREEN)\n        {\n            setPageNum(pageNum + 1);\n        }\n    }\n\n    return (\n        <div id=\"listView\">\n            {showCallback(displayList)}\n            {itemList && itemList.length > SEARCH_PER_SCREEN && (\n                <div id=\"pageControl\">\n                    <div className=\"page\" id = \"page\">\n                        <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={() => {movePrev();} }/>\n                    </div>\n                    <div className=\"pageNum\" id=\"pageNum\">\n                        {pageNum+1}\n                    </div>\n                    <div className=\"page\" id = \"page\">\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: (itemList.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={() => {moveNext();} }/>\n                    </div>\n                </div>)\n            }\n        </div>\n    );\n}\nexport default ListView;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { MAX_SEARCH_ENTRY, getBookState, toUtf8 } from \"../Util\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ListView from \"../ListView\";\r\n\r\nlet initialized = false;\r\n\r\nfunction Search(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(inputText, 50);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n\r\n    const [bookList, setBookList] = useState([]);\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"BOOK ID: \" + id);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setInputText(id);\r\n            }\r\n            else\r\n            {\r\n                setInputText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findBooks(text) {\r\n                let results = [];\r\n\r\n                if (props.doc.serverAvailable)\r\n                {\r\n                    console.log(toUtf8(text));\r\n                    console.log(btoa(toUtf8(text)));\r\n                    const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                        props.doc.serverInfo.port + \"/book\";\r\n                    const obj = {\"params\": {\"book\": btoa(toUtf8(text)), \"metch\":false}};\r\n                    console.log(obj);\r\n                    const response = await axios.get(url, obj);\r\n                    console.log(response)\r\n                    const books = response.data.return;\r\n                    let retDate = \"\";\r\n                    for (let i = 0 ; i < books.length ; i++)\r\n                    {\r\n                        const book = books[i];\r\n                        const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                        const state = book._STATE;\r\n                        if (state === 1 || state === 3)\r\n                        {\r\n                            retDate = props.text.returnDate + \" \" + book._RETURN;\r\n                        }\r\n                        let resultObject = {\r\n                            index: i,\r\n                            text: resultString,\r\n                            name: book.BOOKNAME,\r\n                            code: book.BARCODE,\r\n                            rent: getBookState(props.text, book._STATE.toString()),\r\n                            retDate: retDate,\r\n                            author: book.AUTHOR,\r\n                            totalName: book.TOTAL_NAME,\r\n                            claim_num: book.CLAMENUM,\r\n                            publish: book.PUBLISH,\r\n                            claim: book.CLAIM\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n\r\n                    for (let i = 0 ; i < bookList.length ; i++) {\r\n                        const row = bookList[i];\r\n                        if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                        if ((row.name && row.name.toString().includes(text)) ||\r\n                            (row.code === text))\r\n                        {\r\n                            let resultString = `${row.name} ${row.claim_num}`;\r\n                            let retDate = \"\";\r\n                            let state = \"0\";\r\n                            for (const entry of rentList)\r\n                            {\r\n                                if (entry.code === row.code)\r\n                                {\r\n                                    state = entry.state;\r\n                                    if (state === \"1\" || state === \"3\")\r\n                                    {\r\n                                        retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                            let resultObject = {\r\n                                index: i,\r\n                                text: resultString,\r\n                                name: row.name,\r\n                                code: row.code.toString(),\r\n                                rent: getBookState(props.text, state),\r\n                                retDate: retDate,\r\n                                author: row.author,\r\n                                totalName: row.totalName,\r\n                                claim_num: row.claim_num,\r\n                                publish: row.publish,\r\n                                claim: row.claim\r\n                            };\r\n                            results.push(resultObject);\r\n                        }\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a['text'] > b['text']; });\r\n                return results;\r\n            }\r\n            async function query() {\r\n                if (searchQuery) {\r\n                    let sr = await findBooks(searchQuery);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        selectedRef.current = sr[0].code;\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, bookList, rentList, props]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        initialized = true;\r\n\r\n        let rl = [];\r\n        const rented = props.doc.rent;\r\n        for (let i = 0 ; i < rented.length; i++)\r\n        {\r\n           rl.push({code:rented[i].book_id, retDate:rented[i].return_date, state:rented[i].state});\r\n        }\r\n        setRentList(rl);\r\n\r\n        let bl = [];\r\n        const books = props.doc.book\r\n        for (const key in books)\r\n        {\r\n           const book = books[key];\r\n           bl.push({code: book._id, name: book.title, num: book.num, author: book.author, claim: book.claim,\r\n                    claim_num: book.claim_num, totalName: book.series, category: book.publisher, publish: book.publisher});\r\n        }\r\n        console.log(\"Load\");\r\n        console.log(books.length);\r\n        setBookList(bl);\r\n    }\r\n\r\n    const selectId = async (code) => {\r\n        console.log(\"Prev \" + selectedRef.current);\r\n        if (selectedRef.current === -1 || selectedRef.current !== code)\r\n        {\r\n            console.log(\"Select \" + code);\r\n            setSelectedId(code);\r\n            selectedRef.current = code;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + code);\r\n            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n        }\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n        const hidden = (result.code !== selectedRef.current);\r\n        const entryId = (hidden) ? \"searchResult\" : \"selectedSearchResult\";\r\n        return (\r\n            <div key={result.code}>\r\n            <div id={entryId} onClick={async () => await selectId(result.code)}>\r\n                <table><tbody>\r\n                    <tr className=\"searchTr\">\r\n                        <td className=\"searchTitle\"> {result.text}</td>\r\n                        <td className=\"searchRent\"> {result.rent} </td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {!hidden &&\r\n            <div>\r\n                <table><tbody>\r\n                <tr>\r\n                    <td>{result.author} </td>\r\n                    <td colSpan=\"2\" rowSpan=\"2\">{result.totalName} <b>{result.name}</b> { result.claim_num} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.code} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.publish}</td>\r\n                    <td colSpan={result.retDate.length > 0 ? \"1\":\"2\"}>{result.claim} </td>\r\n                    {result.retDate.length > 0 && <td>{result.retDate}</td> }\r\n                </tr>\r\n                </tbody></table>\r\n            </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function showEntries(results)\r\n    {\r\n        return results.map((result) => showEntry(result))\r\n    }\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <div id=\"title\">\r\n                <h2> {props.text.bookSearch} </h2>\r\n            </div>\r\n            <div id=\"searchContents\">\r\n                <input id=\"searchInput\"\r\n                    placeholder={props.text.searchBook}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n            </div>\r\n            <ListView list={searchResults} showCallback={(entries) => { return showEntries(entries); }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link } from 'react-router-dom'\r\nimport {USER_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction CheckOutStatus(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [expireDate, setExpireDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOutStatus initialize\");\r\n\r\n\r\n            if (\"autoLogin\" in props.context.cookie)\r\n            {\r\n                const autoLogin = (props.context.cookie.autoLogin === \"true\") ? true : false;\r\n                setAutoLogin(autoLogin);\r\n            }\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            setExpireDate(date.toGMTString());\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.doc.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            compare();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.logged)\r\n        {\r\n            setState(State.LoggedIn);\r\n            const userId = props.doc.userInfo['_id'];\r\n            setUserId(userId);\r\n            setSearchResults(props.doc.getRent(userId));\r\n            await loadHistory();\r\n        }\r\n        else\r\n        {\r\n            setState(State.LoggedOut);\r\n            setUserId(\"\");\r\n            setPasswordText(\"\");\r\n        }\r\n\r\n        console.log(\"Set title \" + props.doc.logged)\r\n        if (props.doc.logged)\r\n        {\r\n            if (props.doc.adminMode)\r\n                setTitle(props.text.userSearch);\r\n            else\r\n                setTitle(props.text.checkOut);\r\n        }\r\n        else\r\n        {\r\n            setTitle(props.text.logIn);\r\n        }\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const toggleAutoLogin = () => {\r\n        console.log(\"Toggle autoLogin\");\r\n        const cookieString = \"autoLogin=\" + (autoLogin ? \"false\":\"true\") + \"; expires=\" + expireDate + \";\";\r\n        console.log(cookieString);\r\n        document.cookie = cookieString;\r\n        setAutoLogin(!autoLogin);\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        setState(State.LoggingIn);\r\n        setUserId(userText.toUpperCase());\r\n        await loadUser();\r\n        await loadHistory();\r\n        console.log(\"Log In\");\r\n        compare();\r\n    }\r\n\r\n    const compare = () => {\r\n        if (!userData || state === State.LoggedOut)\r\n            return;\r\n\r\n        console.log(toast.isActive(loggingId));\r\n        const prop = toastProp;\r\n\r\n        let text;\r\n        if (props.context.checkLogIn(userData, passwordText))\r\n        {\r\n            props.doc.logIn(userData.user);\r\n\r\n            setSearchResults(props.doc.getRent(userId));\r\n            setState(State.LoggedIn);\r\n\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            document.cookie = \"user_id=\" + userId + \"; expires=\" + expireDate + \";\";\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.render = text;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = loggingId;\r\n        if (toast.isActive(loggingId))\r\n        {\r\n            console.log(\"update toast\");\r\n            toast.update(loggingId, prop);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"New toast\");\r\n            toast.info(text, prop);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {title}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!(state !== State.LoggedIn)}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <input type=\"password\" id=\"searchPassword\"\r\n                    placeholder={props.text.pwHolder}\r\n                    value={passwordText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setPasswordText(event.target.value);\r\n                    }} />\r\n                <div id=\"autoLogin\">\r\n                    <input type=\"checkbox\" id=\"autoLoginButton\" checked={autoLogin} onChange={() => toggleAutoLogin()}/>\r\n                    <label>\r\n                            {props.text.autoLogin}\r\n                    </label>\r\n                </div>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={!(state === State.LoggedIn)}>\r\n                <div>\r\n                    { showEntries(searchResults) }\r\n                </div>\r\n\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <ListView list={history} showCallback={(entries) => { return showEntries(entries); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOutStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, loadingId, getUserState } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2,\r\n    LoggingOut: 3\r\n}\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 50);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [userData, setUserData] = useState({});\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOut initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                axios.get(url).then( response => {\r\n                        const book = response.data.scan;\r\n                        if (book) {\r\n                            console.log(book)\r\n                            setBarcode(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            console.log(toast.isActive(loggingId));\r\n            const prop = toastProp;\r\n\r\n            let text;\r\n            let notify = false;\r\n            if (\"USER_CODE\" in userData && state !== State.LoggedIn)\r\n            {\r\n                setState(State.LoggedIn);\r\n\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                text = props.text.logInSucceed;\r\n                notify = true;\r\n            }\r\n            else if (!(\"USER_CODE\" in userData))\r\n            {\r\n                setState(State.LoggedOut);\r\n\r\n                if (state === State.LoggingIn)\r\n                {\r\n                    prop.type = toast.TYPE.ERROR;\r\n                    text = props.text.logInFail;\r\n                    notify = true;\r\n                }\r\n            }\r\n\r\n            if (notify)\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": prop.type})\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 0)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n                setBarcode(\"\")\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            console.log(\"Notification \" + notifyRequest.text)\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//            if (\"id\" in notifyRequest)\r\n//                id = notifyRequest.id\r\n\r\n//            prop.toastId = id\r\n//            if (toast.isActive(id))\r\n//                toast.update(id, notifyRequest.text, prop);\r\n//            else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (state !== State.LoggedIn)\r\n                setBarcode(userText);\r\n        }, [state, userText]\r\n    );\r\n\r\n    const updateUser = async (userText) => {\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/user?user=\" + userText;\r\n        const obj = {\"params\": {\"user\": userText, \"data\":\"nothing\"}};\r\n        console.log(obj);\r\n        const response = await axios.get(url, btoa(JSON.stringify(obj)));\r\n        const user = response.data.return;\r\n        setUserData(user);\r\n        console.log(user);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        console.log(\"LOGIN\");\r\n        console.log(userText);\r\n        if (userText.length === 0)\r\n            return;\r\n        setState(State.LoggingIn);\r\n        const id = userText.toUpperCase();\r\n        setUserId(id);\r\n        updateUser(id);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Log Out\");\r\n        setUserData({});\r\n        setUserText(\"\");\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n        document.getElementById('barcodeScan').value= null;\r\n    }\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            console.log(url)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.loading,\r\n                              \"type\": toast.TYPE.INFO})\r\n            getBase64(file).then(\r\n                img => {\r\n                    axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(response);\r\n                        console.log(book);\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.succeededToOpen,\r\n                                              \"type\": toast.TYPE.SUCCESS});\r\n                        }\r\n                        else\r\n                        {\r\n                            console.log(\"Failed\");\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR});\r\n                            setScannedBook({});\r\n                            setBarcode(\"\")\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                const bookId = \"HK\" + bookText;\r\n                console.log(\"Search book \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery, bookText, props.doc]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Barcode: \" + barcode);\r\n            if (barcode.length === 0)\r\n                return;\r\n            if (state !== State.LoggedIn)\r\n            {\r\n                setUserText(barcode);\r\n            }\r\n            else\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [barcode, props.doc, state]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n        document.getElementById('barcodeScan').value= null;\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/checkOut\"\r\n        axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE,\r\n                user: userId\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return\r\n            console.log(\"Rent confirmed\");\r\n            console.log(ret)\r\n\r\n            if (ret === \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.rentSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            setScannedBook({});\r\n            setBarcode(\"\")\r\n            updateUser(userId);\r\n        });\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        document.getElementById('barcodeScan').value= null;\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n//            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn ? true : false }>\r\n//            <div id=\"checkOutResult\" hidden={true}>\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.checkOut}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={state === State.LoggedIn}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn}>\r\n                {userData.USER_CODE && (\r\n                    <div id=\"userInfo\">\r\n                        <div id=\"userItem\">\r\n                            {userData.USER_CODE + \" : \" + userData.USER_NAME + props.text.nameSuffix}\r\n                        </div>\r\n                        <div id=\"userItem\"> {getUserState(props.text, userData.USER_STATE)} </div>\r\n                        <div id=\"userItem\"> {userData._RENT.length + \" \" + props.text.rentSuffix} </div>\r\n                    </div>\r\n                )}\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                    <label id=\"barcodeScan\" hidden>\r\n                        <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                        <span>\r\n                        <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                        </span>\r\n                    </label>\r\n                    <label id=\"manualInput\">\r\n                        <div id=\"hkPrefix\">\r\n                        HK\r\n                        </div>\r\n                        <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n                            placeholder={props.text.bookHolder}\r\n                            onInput={(event) => {\r\n                                setBookText(event.target.value);\r\n                            }} />\r\n                    </label>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmRent} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \": \" + scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.logOut} </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\n\r\nfunction Return(props) {\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 50);\r\n//    const [initialized, setInitialized] = useState(false);\r\n//    const [userId, setUserId] = useState(\"\");\r\n//    const [state, setState] = useState(State.LoggedOut);\r\n//    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n//                     { \"variables\": { \"_id\": userId } });\r\n//    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n//                     { \"variables\": { \"user_id\": userId } });\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            props.doc.setCallback(undefined);\r\n            console.log(\"=======================================\");\r\n            console.log(\"Return initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr && ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                axios.get(url).then( response => {\r\n                        const book = response.data.scan;\r\n                        if (book) {\r\n                            console.log(barcode + \" -> \" + book)\r\n                            setBarcode(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n*/\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                const bookId = \"HK\" + bookText;\r\n                console.log(\"Search book \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery, bookText, props.doc]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"B\" + barcode);\r\n            if (barcode.length > 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [barcode, props.doc]\r\n    );\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.loading,\r\n                              \"type\": toast.TYPE.INFO})\r\n            getBase64(file).then(\r\n                img => {\r\n                    axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.succeededToOpen,\r\n                                              \"type\": toast.TYPE.SUCCESS});\r\n                        }\r\n                        else\r\n                        {\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR})\r\n                            setScannedBook({})\r\n                            setBarcode(\"\")\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 1 || scannedBook._STATE === 3)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    console.log(\"Not rented\")\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.NOT_RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                    setBarcode(\"\")\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//           if (\"id\" in notifyRequest)\r\n//               id = notifyRequest.id\r\n\r\n//           prop.toastId = id\r\n //          if (toast.isActive(id))\r\n//               toast.update(id, notifyRequest.text, prop);\r\n//           else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/return\"\r\n        axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return;\r\n            console.log(ret);\r\n            if (ret === \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.returnSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            setScannedBook({});\r\n            setBarcode(\"\")\r\n        });\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.return}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                <label id=\"barcodeScan\" hidden>\r\n                    <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                    <span>\r\n                    <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                    </span>\r\n                </label>\r\n                <label id=\"manualInput\">\r\n                    <div id=\"hkPrefix\">\r\n                        HK\r\n                    </div>\r\n                    <input inputMode=\"numeric\" pattern=\"\\d*\" type=\"text\" id=\"searchInput\"\r\n                        placeholder={props.text.bookHolder}\r\n                        onInput={(event) => {\r\n                            setBookText(event.target.value);\r\n                        }} />\r\n                </label>\r\n                </div>\r\n                <div id=\"checkReturn\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmReturn} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\" + scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n//                    <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n\r\nexport default Return;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp, MAX_SEARCH_ENTRY, getUserState } from \"../Util\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(userText, 50);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const {loading: userLoading, data: userListData, error: userError } = useQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"UserSearch initialize\");\r\n            console.log(\"User ID: \" + id);\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc(false);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n*/\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n*/\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n\r\n        if (notify)\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Set title \" + props.logged)\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const selectId = async (id) => {\r\n        if (selectedRef.current === -1 || selectedRef.current !== id)\r\n        {\r\n            console.log(\"Select \" + id);\r\n            setSelectedId(id);\r\n            selectedRef.current = id;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n        }\r\n    }\r\n\r\n    const showUser = (user, index) => {\r\n        const key = index.toString();\r\n        return (\r\n                <div key={key}>\r\n                    <table><tbody>\r\n                        <tr key={user.id} className=\"searchTr\" onClick={async ()=> await selectId(user.id)}>\r\n                            <td className=\"bookData\">{user.id}</td>\r\n                            <td className=\"bookData\">{user.name}</td>\r\n                            <td className=\"bookData\">{user.state}</td>\r\n                            <td className=\"bookData\">{user.rent}</td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                        {user.id === selectedRef.current && showEntries(user.id) }\r\n                </div>\r\n                );\r\n    }\r\n\r\n    const showUsers = (result) => {\r\n        return (<div>\r\n                    {\r\n                        result.map((user, index) => {\r\n                            return showUser(user, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 &&\r\n                        <table><tbody>\r\n                            <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                        </tbody></table>\r\n                    }\r\n                </div>);\r\n    }\r\n\r\n    const showEntries = (id) => {\r\n        const result = props.doc.getRent(id);\r\n        return (<>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </>);\r\n    }\r\n    useEffect(\r\n        () => {\r\n            async function findUsers(text) {\r\n                let results = [];\r\n\r\n//                for (let i = 0 ; i < userList.length ; i++) {\r\n                  for (const key in userList) {\r\n                    const row = userList[key];\r\n                    if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                    if ((row.name && row.name.toString().includes(text)) ||\r\n                        (row.id.toLowerCase() === text.toLowerCase()))\r\n                    {\r\n                        results.push(row);\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a.name > b.name; });\r\n                console.log(results);\r\n                return results;\r\n            }\r\n            async function query() {\r\n                if (searchQuery) {\r\n                    let sr = await findUsers(searchQuery);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                       selectId(sr[0].id);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, props, userList]\r\n    );\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.userSearch}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onChange={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <div>\r\n                    <ListView list={searchResults} showCallback={(entries) => { return showUsers(entries); }}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { Link } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const {loading: userLoading, data: userListData, error: userError } = useQuery(USERS_QUERY);\r\n//    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n//                     { \"variables\": { \"user_id\": userId } });\r\n    const [userList, setUserList] = useState({});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n*/\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        return a1.rentDate > a2.rentDate;\r\n    }\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        const rent = props.doc.getRent();\r\n        rent.sort(compare);\r\n        setRentList(rent);\r\n\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        var userName;\r\n        const key = index.toString();\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td colSpan=\"3\" className=\"bookCell\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.history}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n/*\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <div>\r\n                    { showEntries(history) }\r\n                </div>\r\n*/\r\n\r\nexport default RentHistory;\r\n","import { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        this.initialized = false;\r\n        this.bookReady = false;\r\n        this.rentReady = false;\r\n        this.userReady = false;\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        this.book = {};\r\n        this.rent = {};\r\n        this.logCallback = undefined;\r\n        this.admin = false;\r\n        this.adminMode = false;\r\n        this.serverInfo = {};\r\n        this.serverAvailable = false;\r\n        this.ipAddr = \"\"\r\n    }\r\n\r\n    async updateIpAddr()\r\n    {\r\n        const response = await axios.get(\"https://api.ipify.org/?format=json\");\r\n        console.log(\"Get IP Address\");\r\n        console.log(response.data);\r\n        const ipAddr = response.data.ip;\r\n        console.log(\"IP addr updated \" + ipAddr)\r\n        this.ipAddr = ipAddr;\r\n        this.checkServerIp()\r\n    }\r\n\r\n    checkServerIp()\r\n    {\r\n        if (this.ipAddr.length === 0 || !this.serverInfo.globalIp)\r\n            return\r\n        if (this.serverInfo.globalIp === this.ipAddr)\r\n        {\r\n            console.log(\"Server is accessible \" + this.serverInfo.localIp);\r\n            this.serverAvailable = true;\r\n            const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n            window.open(query);\r\n            axios.get(query).then( (response) => {\r\n                                console.log(\"Server connected\");\r\n                                console.log(response.data);\r\n                          });\r\n        }\r\n    }\r\n\r\n\r\n    checkState() {\r\n        if (this.bookReady && this.rentReady) {\r\n            this.initialized = true;\r\n            toast.dismiss();\r\n            if (this.callback) {\r\n                this.callback();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setLogCallback(callback) {\r\n        this.logCallback = callback;\r\n    }\r\n\r\n    setRent(rent) {\r\n        this.rent = rent\r\n        this.rentReady = true;\r\n        this.checkState();\r\n        this.checkRent();\r\n    }\r\n\r\n    setServerInfo(serverInfo)\r\n    {\r\n        this.serverInfo = serverInfo;\r\n        console.log(this.serverInfo.globalIp);\r\n        this.checkServerIp()\r\n    }\r\n\r\n    setBook(books) {\r\n        this.book = {};\r\n        for (let i = 0 ; i < books.length ; i++)\r\n        {\r\n            const book = books[i];\r\n            const id = book['_id'];\r\n            this.book[id] = book;\r\n        }\r\n        this.bookReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setUser(users) {\r\n        this.user = {};\r\n        for (let i = 0 ; i < users.length ; i++)\r\n        {\r\n            const user = users[i];\r\n            const id = user.id;\r\n            this.user[id] = user;\r\n            this.user[id][\"rent\"] = 0;\r\n        }\r\n        this.userReady = true;\r\n        this.checkRent();\r\n    }\r\n\r\n    checkRent() {\r\n        if (!this.userReady || !this.rentReady)\r\n        {\r\n            console.log(\"Cannot check rent\");\r\n            return;\r\n        }\r\n        console.log(this.rent);\r\n        for (let i = 0 ; i < this.rent.length ; i++)\r\n        {\r\n            const state = this.rent[i].state;\r\n\r\n//            console.log(state);\r\n            if (state !== \"1\" && state !== \"3\")\r\n                continue;\r\n\r\n            const userId = this.rent[i].user_id;\r\n//            console.log(this.rent[i]);\r\n            console.log(userId);\r\n            console.log(userId.length);\r\n            if (userId && userId.length > 0 && userId in this.user)\r\n                this.user[userId][\"rent\"] += 1;\r\n            else\r\n                this.user[userId][\"rent\"] = 1;\r\n        }\r\n        console.log(this.user);\r\n    }\r\n\r\n    setAdminMode(mode) {\r\n        this.adminMode = mode;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n    }\r\n\r\n    logIn(userInfo) {\r\n        console.log(\"Logged in: \" + userInfo['_id']);\r\n        this.logged = true;\r\n        this.userInfo = userInfo;\r\n        if (userInfo['level'] === \"2\")\r\n            this.admin = true;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n    }\r\n\r\n    logOut() {\r\n        console.log(\"Logged out\");\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        if (this.logCallback)\r\n            this.logCallback(false);\r\n    }\r\n\r\n    getRent(userId = undefined) {\r\n        let ret = [];\r\n        console.log(\"Check \" + userId);\r\n        if (!this.bookReady)\r\n            return ret;\r\n//        console.log(this.rent.length);\r\n        for (let i = 0 ; i < this.rent.length ; i++) {\r\n            const entry = this.rent[i];\r\n            if (userId !== undefined && entry.user_id !== userId)\r\n                continue;\r\n//            console.log(entry)\r\n            if (entry.state !== \"1\" && entry.state !== \"3\")\r\n                continue;\r\n//            console.log(entry);\r\n            const id = entry[\"book_id\"];\r\n            const book = this.book[id];\r\n//            console.log(book)\r\n            let retEntry = {}\r\n            retEntry[\"id\"] = book._id\r\n            retEntry[\"title\"] = book.title\r\n            retEntry[\"rentDate\"] = entry.rent_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n            retEntry[\"retDate\"] = entry.return_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n            retEntry[\"user\"] = entry.user_id;\r\n            ret.push(retEntry)\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n\r\n    async openDoc() {\r\n        try {\r\n            this.initialized = true;\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.initialized;\r\n    }\r\n\r\n    setCallback(updateFunc)\r\n    {\r\n        console.log(\"Update function registered\");\r\n        this.callback = updateFunc;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","import config from \"./api/key\";\n\nconst NodeRSA = require('node-rsa');\n\nconst prk = new NodeRSA(config[\"privateKey\"]);\n\nclass Context {\n    constructor() {\n        console.log(\"Create Context\");\n\n        console.log(\"Cookies\");\n        const rawCookie = document.cookie;\n        this.cookie = rawCookie\n            .split(\";\")\n            .map(v => v.split(\"=\"))\n            .reduce((acc, v) => {\n                const key = v.shift().trim();\n                const value = v.join(\"=\").trim();\n                acc[decodeURIComponent(key)] = decodeURIComponent(value);\n                return acc;\n            }, {});\n        console.log(this.cookie);\n    }\n\n    checkLogIn(userData, passwordText) {\n        var matched = false;\n        var passwordTyped;\n        if (userData.user && passwordText.length > 0) {\n            console.log(\"User data available\");\n            const emailDb = userData.user.encrypted_email;\n            const phoneDb = userData.user.encrypted_phone;\n\n            passwordTyped = prk.sign(passwordText, 'base64');\n            if (passwordText === emailDb ||\n                passwordText === phoneDb )\n            {\n                passwordTyped = passwordText;\n                matched = true;\n            }\n            else if (emailDb === passwordTyped)\n            {\n//                console.log(\"Email match\");\n                matched = true;\n            }\n            else\n            {\n                var numberString = \"\";\n                for (let i = 0 ; i < passwordText.length ; i++)\n                {\n                    if (!isNaN(passwordText[i]))\n                        numberString += passwordText[i];;\n                }\n                passwordTyped = prk.sign(numberString, 'base64');\n                if (passwordTyped === phoneDb)\n                {\n//                    console.log(\"Phone match\");\n                    matched = true;\n                }\n                else\n                {\n//                    console.log(\"Nothing matched\");\n                }\n            }\n\n//            console.log(\"toast available\");\n        }\n        if (matched)\n        {\n            const date = new Date();\n            const days=2;\n            date.setTime(date.getTime()+(days*24*60*60*1000));\n            const expireDate = date.toGMTString();\n            document.cookie = \"password=\" +  passwordTyped + \"; expires=\" + expireDate + \";\";\n        }\n        return matched\n    }\n}\n\nexport default Context;\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Dropdown.css'\r\n\r\nfunction DropDown(props) {\r\n\r\n    const [dropdown, setDropdown] = useState(false);\r\n    const [click, setClick] = useState(false)\r\n\r\n    useEffect(\r\n        () => {\r\n            if (dropdown !== props.dropdown)\r\n            {\r\n                console.log(\"User clicked \" + props.doc.logged);\r\n                console.log(props.dropdown);\r\n                setClick(!click);\r\n                setDropdown(props.dropdown);\r\n            }\r\n            const menu = document.getElementById(\"dropdown-menu\");\r\n//            menu.hidden = !click;\r\n            if (!click)\r\n            {\r\n               menu.classList.remove('is-show');\r\n            }\r\n            else\r\n            {\r\n               menu.classList.add('is-show');\r\n            }\r\n\r\n        }, [props.dropdown, dropdown, click, props.doc.logged]\r\n    );\r\n\r\n    const logOut = () =>\r\n    {\r\n        setClick(false);\r\n        props.doc.logOut();\r\n        document.cookie = \"user_id=\";\r\n        document.cookie = \"password=\";\r\n        document.cookie = \"autoLogin=false\";\r\n    }\r\n\r\n    return (\r\n            <div id='dropdown-menu' onClick={() => { setClick(!click)}} className='dropdown-menu'>\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                    <div className='menu-items'>\r\n                        {props.doc.userInfo[\"_id\"] + \" : \" + props.doc.userInfo[\"name\"] + props.text.nameSuffix}\r\n                    </div>\r\n                    <hr className=\"hline\"/>\r\n                    </>\r\n                }\r\n                <Link className='menu-items' to=\"/\" onClick={() => setClick(false)}>\r\n                    {props.text.home}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/notice\" onClick={() => setClick(false)}>\r\n                    {props.text.notice}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/search\" onClick={() => setClick(false)}>\r\n                    {props.text.bookSearch}\r\n                </Link>\r\n                {props.doc.serverAvailable &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOut\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOut}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/return\" onClick={() => setClick(false)}>\r\n                            {props.text.return}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOutStatus}\r\n                        </Link>\r\n                        {props.doc.admin &&\r\n                            <>\r\n                            <hr className=\"hline\"/>\r\n                            <Link className='menu-items' to=\"/userSearch\" onClick={() => setClick(false)}>\r\n                                {props.text.userSearch}\r\n                            </Link>\r\n                            <Link className='menu-items' to=\"/rentHistory\" onClick={() => setClick(false)}>\r\n                                {props.text.history}\r\n                            </Link>\r\n                            </>\r\n                        }\r\n                        <hr className=\"hline\"/>\r\n                        <div className='menu-items' onClick={() => logOut()}>\r\n                            {props.text.logOut}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && !props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.logIn}\r\n                        </Link>\r\n                    </>\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default DropDown;\r\n","import React, { useState } from 'react';\r\nimport {isMobile} from \"react-device-detect\";\r\nimport \"./Navbar.css\";\r\nimport DropDown from \"./Dropdown\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction Navbar(props) {\r\n    const [dropdown, setDropdown] = useState(false)\r\n\r\n    const onClick = () => {\r\n        const maxWidth = document.getElementById(\"navbar\").style.maxWidth;\r\n        console.log(\"maxWidth\");\r\n        console.log(maxWidth);\r\n        console.log(document.getElementById(\"navbar\").style.width);\r\n        setDropdown(!dropdown);\r\n    }\r\n\r\nreturn (\r\n    <>\r\n        <div id=\"navbar\" className=\"navbar\">\r\n            <div className='title'>\r\n                {isMobile? (<h1>{props.text[\"titleShort\"]}</h1>) : (<h1>{props.text[\"titleLong\"]}</h1>)}\r\n            </div>\r\n            <div className='menu' onClick={onClick} >\r\n                <MenuIcon className=\"img\" fontSize=\"large\" sx={{ color: \"#ffffff\"}}/>\r\n            </div>\r\n            <DropDown text={props.text} doc={props.doc} dropdown={dropdown}/>\r\n        </div>\r\n    </>\r\n)\r\n}\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Notice from \"./pages/Notice\";\r\nimport Search from \"./pages/Search\";\r\nimport CheckOutStatus from \"./pages/CheckOutStatus\";\r\nimport CheckOut from \"./pages/CheckOut\";\r\nimport Return from \"./pages/Return\";\r\nimport UserSearch from \"./pages/UserSearch\";\r\nimport RentHistory from \"./pages/RentHistory\";\r\n//import Reader from \"./pages/Reader\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\nimport Context from \"./Context\";\r\nimport text from \"./api/text\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"./Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport Navbar from \"./Navbar\";\r\nimport {BOOK_QUERY, RENT_QUERY, USER_QUERY, SERVER_QUERY} from \"./api/query.js\";\r\n\r\nconst doc = new Doc();\r\nconst context = new Context();\r\n\r\nconst textString = {};\r\nlet logMsg = \"\"\r\nfunction App() {\r\n\r\n//    const [checkOutStr, setCheckOutStr] = useState(\"\");\r\n    const [logged, setLogged] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const { loading: rentLoading, error: rentError, data: rentData } = useQuery(RENT_QUERY);\r\n    const { loading: serverLoading, error: serverError, data: serverData } = useQuery(SERVER_QUERY);\r\n    const [loadBook, { loading: bookLoading, error: bookError, data: bookData }] = useLazyQuery(BOOK_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY, { \"variables\": { \"_id\": userId } });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            logMsg = logMsg + \"<p>Initialize app</p>\";\r\n            console.log(process.env.APP_NAME);\r\n            console.log(process.env.APP_VERSION);\r\n            const lang = navigator.languages;\r\n            console.log(lang);\r\n            let ts = {}\r\n            if (lang.length> 0 && (lang[0].toLowerCase().includes(\"kr\") || lang[0].toLowerCase().includes(\"ko\")))\r\n            {\r\n                ts = text.kr;\r\n            }\r\n            else\r\n            {\r\n                ts = text.en;\r\n            }\r\n            for (let key in ts)\r\n            {\r\n                textString[key] = ts[key];\r\n            }\r\n\r\n            await doc.updateIpAddr();\r\n\r\n            if (\"autoLogin\" in context.cookie &&  context.cookie.autoLogin === \"true\")\r\n            {\r\n                console.log(\"Auto Login: \" + context.cookie.user_id);\r\n                setUserId(context.cookie.user_id);\r\n                console.log(context.cookie.nothing);\r\n                loadUser();\r\n            }\r\n\r\n        }\r\n        initialize();\r\n    }, [loadUser]);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data loaded\");\r\n            if (!userData)\r\n            {\r\n                return;\r\n            }\r\n\r\n            console.log(\"Login check \" + context.cookie.password);\r\n            console.log(userData);\r\n            if (context.cookie.password && context.checkLogIn(userData, context.cookie.password))\r\n            {\r\n                console.log(\"Login suceeded\");\r\n                doc.logIn(userData.user);\r\n            }\r\n\r\n\r\n\r\n        }, [userData]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Rent Query Updated\");\r\n            logMsg = logMsg + \"<p>Rent Query Updated \" + rentLoading + \" \" + rentError + \"</p>\";\r\n            console.log(rentLoading);\r\n            console.log(rentError);\r\n            if (rentData)\r\n            {\r\n                console.log(\"Rent available\");\r\n                logMsg = logMsg + \"<p>Rent available</p>\"\r\n//                console.log(rentData.rents)\r\n                doc.setRent(rentData.rents)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [rentLoading, rentError, rentData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Book Query Updated\");\r\n            logMsg = logMsg + \"<p>Book Query Updated</p>\";\r\n            console.log(bookLoading)\r\n            console.log(bookError)\r\n            if (bookData)\r\n            {\r\n                console.log(\"Book available\")\r\n                logMsg = logMsg + \"<p>Book available</p>\";\r\n//                console.log(bookData.books)\r\n                doc.setBook(bookData.books)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [bookLoading, bookError, bookData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Server Query Updated\");\r\n            logMsg = logMsg + \"<p>Server Query Updated</p>\";\r\n            console.log(serverLoading)\r\n            console.log(serverError)\r\n            if (serverData)\r\n            {\r\n                console.log(\"Server info available\")\r\n                logMsg = logMsg + \"<p>Server info available</p>\";\r\n                console.log(serverData.serverInfo)\r\n                doc.setServerInfo(serverData.serverInfo)\r\n\r\n                if (!doc.serverAvailable)\r\n                {\r\n                    console.log(\"Server is not available. Load books from cloud DB\");\r\n                    loadBook();\r\n                    const prop = toastProp;\r\n                    prop.type = toast.TYPE.LOADING;\r\n                    prop.autoClose = false;\r\n                    prop.toastId = loadingId;\r\n                    toast.loading(textString.loading, prop);\r\n                    doc.setLogCallback(updateLog);\r\n                }\r\n            }\r\n        }, [serverLoading, serverError, serverData, loadBook]\r\n    );\r\n\r\n    function notifyInit()\r\n    {\r\n        const prop = toastProp;\r\n        prop.type = toast.TYPE.SUCCESS;\r\n        prop.render = textString.succeededToOpen;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = \"\";\r\n        toast.info(textString.succeededToOpen, prop);\r\n    }\r\n\r\n    function updateLog(logged) {\r\n        console.log(\"==== Update logging state \" + doc.logged);\r\n        console.log(doc.userInfo);\r\n        setLogged(doc.logged);\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n        <div className=\"App\">\r\n            <div>\r\n                <ToastContainer\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    limit={10}\r\n                />\r\n            </div>\r\n            <Navbar doc={doc} text={textString}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home doc={doc} text={textString}/>} />\r\n                <Route path=\"/notice\" element={<Notice doc={doc} text={textString} />} />\r\n                <Route path=\"/search/:id?\" element={<Search doc={doc} text={textString}/>} />\r\n                <Route path=\"/checkOutStatus\" element={<CheckOutStatus context={context} doc={doc} text={textString} logged={logged}/>} />\r\n                <Route path=\"/userSearch/:id?\" element={<UserSearch context={context} doc={doc} text={textString} />} />\r\n                <Route path=\"/checkOut\" element={<CheckOut context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/return\" element={<Return context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentHistory\" element={<RentHistory context={context} doc={doc} text={textString}/>} />\r\n            </Routes>\r\n\r\n            <h3>\r\n                v {process.env.REACT_APP_VERSION}\r\n            </h3>\r\n        </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport * as Realm from \"realm-web\";\r\nimport {\r\n    ApolloClient,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    InMemoryCache,\r\n} from \"@apollo/client\";\r\n\r\nconst APP_ID = 'data-xaque';\r\nconst graphqlUri = `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\r\nconst app = new Realm.App(APP_ID);\r\n\r\n// Gets a valid Realm user access token to authenticate requests\r\nasync function getValidAccessToken() {\r\n    // Guarantee that there's a logged in user with a valid access token\r\n    if (!app.currentUser) {\r\n        // If no user is logged in, log in an anonymous user. The logged in user will have a valid\r\n        // access token.\r\n        await app.logIn(Realm.Credentials.anonymous());\r\n//        await app.logIn(apiKey);\r\n    } else {\r\n        // An already logged in user's access token might be stale. Tokens must be refreshed after\r\n        // 30 minutes. To guarantee that the token is valid, we refresh the user's access token.\r\n        await app.currentUser.refreshAccessToken();\r\n    }\r\n//    console.log(\"AccessToken: [\" + app.currentUser.accessToken + \"]\");\r\n\r\n    return app.currentUser.accessToken;\r\n}\r\n\r\n// Configure the ApolloClient to connect to your app's GraphQL endpoint\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\r\n        // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\r\n        // access token before sending the request.\r\n        fetch: async (uri, options) => {\r\n            const accessToken = await getValidAccessToken();\r\n            options.headers.Authorization = `Bearer ${accessToken}`;\r\n            return fetch(uri, options);\r\n        },\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}