{"version":3,"sources":["pages/Home.js","Util.js","api/query.js","pages/Notice.js","ListView.js","pages/Search.js","pages/CheckOutStatus.js","pages/CheckOut.js","pages/Return.js","pages/UserSearch.js","pages/RentHistory.js","Doc.js","Context.js","Dropdown.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useEffect","_initialize","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","console","log","doc","setCallback","undefined","stop","apply","arguments","initialize","_jsx","id","dangerouslySetInnerHTML","__html","text","homeText","SEARCH_PER_SCREEN","MAX_SEARCH_ENTRY","String","prototype","format","formatted","this","i","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","getUserState","state","normal","overDue","stopped","getBookState","available","checkedOut","notAvailable","toUtf8","unescape","encodeURIComponent","loadingId","loggingId","BOOK_QUERY","gql","_templateObject","_taggedTemplateLiteral","RENT_QUERY","_templateObject2","USERS_QUERY","_templateObject3","USER_QUERY","_templateObject4","HISTORY_QUERY","_templateObject5","NOTICE_QUERY","_templateObject6","CONTENT_QUERY","_templateObject7","SERVER_QUERY","_templateObject8","Notice","_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useState3","_useState4","displayedCodes","setDisplayedCodes","_useState5","_useState6","pageNum","setPageNum","_useState7","_useState8","selectedId","setSelectedId","_useQuery","useQuery","noticeLoading","loading","noticeData","data","noticeError","error","_useLazyQuery","useLazyQuery","_useLazyQuery2","loadSelected","_useLazyQuery2$","selectedLoading","selectedData","selectedError","notices","toString","startIdx","count","Math","min","slice","showEntry","result","_jsxs","className","children","date","colSpan","onClick","_id","title","notice","content","map","NavigateBeforeIcon","fontSize","sx","color","NavigateNextIcon","showCallback","ListView","itemList","setItemList","displayList","setDisplayList","list","detail","initialized","Search","inputText","setInputText","_useDebounce","useDebounce","searchQuery","selectedRef","useRef","bookList","setBookList","_useState9","_useState10","rentList","setRentList","useParams","updateDoc","_updateDoc","_callee6","rl","rented","bl","books","key","book","_context6","rent","push","code","book_id","retDate","return_date","name","num","author","claim","claim_num","totalName","series","category","publisher","publish","isOpen","findBooks","_x","_findBooks","_callee2","results","url","obj","response","resultString","resultObject","_i","row","_resultString","_retDate","_state","_iterator","_step","entry","_resultObject","_context2","serverAvailable","btoa","serverInfo","localIp","port","axios","get","sent","return","abrupt","concat","BOOKNAME","CLAIMNUM","_STATE","returnDate","_RETURN","index","BARCODE","AUTHOR","TOTAL_NAME","CLAMENUM","PUBLISH","CLAIM","includes","_createForOfIteratorHelper","s","n","done","value","t0","e","f","finish","sort","a","b","_query","_callee3","sr","_context3","current","query","selectId","_ref","_callee4","_context4","_x2","hidden","entryId","_callee5","_context5","rowSpan","bookSearch","placeholder","searchBook","onChange","event","target","entries","State","LoggedOut","LoggingIn","LoggedIn","CheckOutStatus","userText","setUserText","passwordText","setPasswordText","setInitialized","userId","setUserId","_useState11","_useState12","setState","_useState13","_useState14","history","setHistory","_useState15","_useState16","autoLogin","setAutoLogin","loadUser","userData","_useLazyQuery3","_useLazyQuery4","loadHistory","historyData","_useState17","_useState18","expireDate","setExpireDate","_useState19","_useState20","setTitle","_userId","logged","userInfo","getRent","t1","adminMode","userSearch","checkOut","logIn","_autoLogin","context","cookie","Date","setTime","getTime","days","toGMTString","compare","rawHist","bookReady","rentReady","split","s1","s2","hist","j","showEntries","rentDate","bookName","React","Fragment","Link","to","showRented","noEntry","toUpperCase","toast","isActive","prop","checkLogIn","user","type","TYPE","SUCCESS","logInSucceed","document","ERROR","logInFail","render","toastId","update","info","idHolder","disabled","onInput","pwHolder","checked","cookieString","toggleAutoLogin","LoggingOut","CheckOut","bookText","setBookText","setUserData","scannedBook","setScannedBook","needConfirm","setNeedConfirm","notifyRequest","setNotifyRequest","barcode","setBarcode","interval","setInterval","ipAddr","portNum","then","scan","clearInterval","notify","RENTED","getElementById","dismiss","updateUser","_ref2","JSON","stringify","_ref3","logOut","_ref4","imageCaptured","files","file","INFO","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","getBase64","img","method","mode","crossDomain","headers","withCredentials","credentials","image","succeededToOpen","INVALID_BOOK","bookId","USER_CODE","USER_NAME","nameSuffix","USER_STATE","_RENT","rentSuffix","CameraAltIcon","accept","capture","inputMode","pattern","bookHolder","confirmRent","ret","rentSucceed","NOT_AVAILABLE","confirmAction","confirm","cancel","Return","NOT_RENTED","confirmReturn","returnSucceed","userLoading","userListData","userError","userList","setUserList","_args6","window","location","href","users","level","setUser","getUser","showUsers","showUser","_Fragment","findUsers","_findUsers","keys","toLowerCase","err","admin","RentHistory","a1","a2","userName","RETURN_DATE","STATS","LENT_DATE","USER","Doc","_classCallCheck","userReady","logCallback","_createClass","_updateIpAddr","ip","checkServerIp","globalIp","callback","checkState","checkRent","user_id","_getRent","_entry","_book","retEntry","_args2","rent_date","_openDoc","updateFunc","prk","require","config","Context","rawCookie","v","reduce","acc","shift","trim","join","decodeURIComponent","passwordTyped","matched","emailDb","encrypted_email","phoneDb","encrypted_phone","sign","numberString","isNaN","DropDown","dropdown","setDropdown","click","setClick","menu","classList","add","remove","home","checkOutStatus","Navbar","isMobile","maxWidth","style","width","MenuIcon","textString","logMsg","App","setLogged","rentLoading","rentError","rentData","_useQuery2","serverLoading","serverError","serverData","loadBook","bookLoading","bookError","bookData","notifyInit","updateLog","lang","ts","process","APP_NAME","APP_VERSION","navigator","languages","kr","en","updateIpAddr","nothing","password","setRent","rents","setBook","setServerInfo","LOADING","setLogCallback","Router","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","limit","Routes","Route","path","element","UserSearch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","APP_ID","graphqlUri","app","Realm","getValidAccessToken","_getValidAccessToken","currentUser","anonymous","refreshAccessToken","accessToken","client","ApolloClient","link","HttpLink","uri","fetch","_fetch","options","Authorization","_x3","_x4","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider"],"mappings":"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","file":"static/js/main.ec424852.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./Home.css\";\r\n\r\nfunction Home(props) {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Home\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (<div id=\"home\" dangerouslySetInnerHTML={{__html:props.text.homeText}}></div>);\r\n}\r\n\r\nexport default Home;\r\n","export const SEARCH_PER_SCREEN = 10;\r\nexport const MAX_SEARCH_ENTRY = 500;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n\r\nexport const getUserState = function(text, state) {\r\n    if (state === \"0\" || state === 0)\r\n        return text.normal;\r\n    else if (state === \"1\" || state === 1)\r\n        return text.overDue;\r\n    else if (state === \"2\" || state === 2)\r\n        return text.stopped;\r\n}\r\n\r\nexport const getBookState = function(text, state) {\r\n    if (state === \"0\")\r\n    {\r\n        return text.available;\r\n    }\r\n    else if (state === \"1\")\r\n    {\r\n        return text.checkedOut;\r\n    }\r\n    else if (state === \"3\")\r\n    {\r\n        return text.overDue;\r\n    }\r\n    else\r\n    {\r\n        return text.notAvailable;\r\n    }\r\n}\r\n\r\nexport const toUtf8 = function(text) {\r\n    return unescape(encodeURIComponent(text));\r\n};\r\n\r\nexport const fromUtf8 = function(text) {\r\n    return decodeURIComponent(escape(text));\r\n};\r\n\r\nexport const loadingId = \"custom-loading-id\";\r\nexport const loggingId = \"custom-logging-id\";\r\n","import gql from \"graphql-tag\";\n\nexport const BOOK_QUERY = gql`\n    query AllBook{\n        books (sortBy: TITLE_ASC, limit:20000) {\n            _id\n            author\n            title\n            claim_num\n            num\n            series\n            category\n            claim\n            publisher\n            seqnum\n        }\n    }\n`;\n\nexport const RENT_QUERY = gql`\n    query AllRent{\n        rents (limit:20000) {\n            _id\n            book_id\n            user_id\n            rent_date\n            return_date\n            state\n        }\n    }\n`;\n\nexport const USERS_QUERY = gql`\n    query AllUser {\n        users (limit: 20000) {\n            _id\n            name\n            state\n            level\n        }\n    }`;\n\nexport const USER_QUERY = gql`\n    query FindUser($_id: String!){\n        user (query: {_id:$_id}) {\n            _id\n            name\n            state\n            level\n            encrypted_email\n            encrypted_phone\n        }\n    }`;\n\nexport const HISTORY_QUERY = gql`\n    query findLogs($user_id: String!){\n        rentLogs (query: {user_id: $user_id}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            user_id\n        }\n    }`;\n\nexport const NOTICE_QUERY = gql`\n    query GetNotices {\n        notices (sortBy: _ID_DESC, limit:20000) {\n            _id\n            date\n            title\n        }\n    }`;\n\nexport const CONTENT_QUERY = gql`\n    query GetContent ($_id: String!) {\n        notice (query: {_id: $_id}) {\n            _id\n            date\n            title\n            content\n        }\n    }`;\n\nexport const SERVER_QUERY = gql`\n    query GetServerInfo {\n        serverInfo {\n            _id\n            globalIp\n            localIp\n            port\n        }\n    }`;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { SEARCH_PER_SCREEN } from \"../Util\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport {NOTICE_QUERY, CONTENT_QUERY} from \"../api/query.js\";\r\n\r\nfunction Notice(props) {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(-1);\r\n    const { loading: noticeLoading, data: noticeData, error: noticeError } = useQuery(NOTICE_QUERY);\r\n    const [loadSelected, { loading: selectedLoading, data: selectedData, error: selectedError}] = useLazyQuery(CONTENT_QUERY,\r\n            {\"variables\": {\"_id\": selectedId}});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Notice\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Notice\");\r\n//            console.log(noticeData);\r\n//            console.log(noticeError);\r\n//            console.log(noticeLoading);\r\n            if (noticeData)\r\n            {\r\n                setSearchResults(noticeData.notices);\r\n            }\r\n        }, [noticeData, noticeError, noticeLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Content\");\r\n//            console.log(selectedData);\r\n//            console.log(selectedError);\r\n//            console.log(selectedLoading);\r\n            if (selectedData)\r\n            {\r\n//                setSearchResults(selectedData.content);\r\n            }\r\n        }, [selectedData, selectedError, selectedLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n            console.log(\"Page num \" + pageNum.toString() + \" \");\r\n            console.log(length);\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n//           console.log(displayedCodes);\r\n        }, [displayedCodes]\r\n    );\r\n\r\n    const selectEntry = (id) => {\r\n        console.log(\"selected \" + id.toString());\r\n        if (selectedId === id)\r\n        {\r\n            setSelectedId(-1);\r\n        }\r\n        else\r\n        {\r\n            setSelectedId(id);\r\n        }\r\n        loadSelected();\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n//        console.log(result);\r\n        return (\r\n                <tr className=\"\" key={result._id}>\r\n                    <td className=\"\"> {result.date} </td>\r\n                    <td className=\"noticeEntry\" colSpan=\"2\" onClick={() => selectEntry(result._id)}> {result.title}</td>\r\n                </tr>\r\n        );\r\n    }\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (searchResults.length > (pageNum + 1) * SEARCH_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div id=\"notice\">\r\n                <div id=\"title\">\r\n                    <h2>\r\n                        {props.text.notice}\r\n                    </h2>\r\n                </div>\r\n                {selectedId > 0 && selectedData &&\r\n                <div id=\"noticeContent\">\r\n                    <table className=\"content\"><tbody>\r\n                           {showEntry(selectedData.notice)}\r\n                        <tr>\r\n                            <td className=\"content\" colSpan=\"3\">\r\n                                {selectedData.notice.content}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                </div>\r\n                }\r\n                <div id=\"noticeList\">\r\n                    <table><tbody>\r\n                       {displayedCodes.length > 0 && displayedCodes.map((result) => showEntry(result))}\r\n                    </tbody></table>\r\n                </div>\r\n                {searchResults.length > SEARCH_PER_SCREEN && (\r\n                    <div id=\"pageControl\">\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={movePrev}/>\r\n                        </div>\r\n                        <div className=\"pageNum\" id=\"pageNum\">\r\n                            {pageNum+1}\r\n                        </div>\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateNextIcon fontSize=\"large\" sx={{color: (searchResults.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={moveNext}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default Notice;\r\n","import { useEffect, useState } from \"react\";\nimport { SEARCH_PER_SCREEN } from \"./Util\";\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\n\nfunction doNothing() {\n    console.log(\"Do nothing...\");\n}\n\nvar showCallback = doNothing;\nfunction ListView(props) {\n        const [itemList, setItemList] = useState([]);\n//        const [showCallback, setShowCallback] = useState(doNothing);\n        const [pageNum, setPageNum] = useState(0);\n        const [displayList, setDisplayList] = useState([]);\n\n    useEffect(function () {\n        console.log(\"Init List View\");\n    }, []);\n\n    useEffect(function () {\n//        console.log(\"Set Item List\");\n        setItemList(props.list);\n    }, [props.list]);\n\n    useEffect(function () {\n        if (props.showCallback)\n        {\n//            console.log(\"Set show callback\");\n //           setShowCallback(props.showCallback);\n            showCallback = props.showCallback;\n        }\n    }, [props.showCallback]);\n\n    useEffect(function () {\n        const length = itemList.length;\n //       console.log(\"Page num \" + pageNum.toString());\n        if (length > SEARCH_PER_SCREEN)\n        {\n            const startIdx = pageNum * SEARCH_PER_SCREEN;\n            const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\n            setDisplayList(itemList.slice(startIdx,startIdx+count));\n        }\n        else\n        {\n            setDisplayList(itemList)\n        }\n    }, [itemList, pageNum]);\n\n    function movePrev() {\n        console.log(\"Prev\");\n        if (pageNum > 0)\n        {\n            setPageNum(pageNum - 1);\n        }\n    }\n\n    function moveNext() {\n        console.log(\"Next\");\n        if (itemList.length > (pageNum + 1) * SEARCH_PER_SCREEN)\n        {\n            setPageNum(pageNum + 1);\n        }\n    }\n\n    return (\n        <div id=\"listView\">\n            {showCallback(displayList, props.detail)}\n            {itemList && itemList.length > SEARCH_PER_SCREEN && (\n                <div id=\"pageControl\">\n                    <div className=\"page\" id = \"page\">\n                        <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={() => {movePrev();} }/>\n                    </div>\n                    <div className=\"pageNum\" id=\"pageNum\">\n                        {pageNum+1}\n                    </div>\n                    <div className=\"page\" id = \"page\">\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: (itemList.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={() => {moveNext();} }/>\n                    </div>\n                </div>)\n            }\n        </div>\n    );\n}\nexport default ListView;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { MAX_SEARCH_ENTRY, getBookState, toUtf8 } from \"../Util\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ListView from \"../ListView\";\r\n\r\nlet initialized = false;\r\n\r\nfunction Search(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(inputText, 50);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n\r\n    const [bookList, setBookList] = useState([]);\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"BOOK ID: \" + id);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setInputText(id);\r\n            }\r\n            else\r\n            {\r\n                setInputText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findBooks(text) {\r\n                let results = [];\r\n\r\n                if (props.doc.serverAvailable)\r\n                {\r\n                    console.log(toUtf8(text));\r\n                    console.log(btoa(toUtf8(text)));\r\n                    const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                        props.doc.serverInfo.port + \"/book\";\r\n                    const obj = {\"params\": {\"book\": btoa(toUtf8(text)), \"match\":false}};\r\n                    console.log(obj);\r\n                    const response = await axios.get(url, obj);\r\n                    console.log(response)\r\n                    if (!(\"books\" in response.data.return))\r\n                        return results;\r\n                    const books = response.data.return.books;\r\n                    let retDate = \"\";\r\n                    for (let i = 0 ; i < books.length ; i++)\r\n                    {\r\n                        const book = books[i];\r\n                        const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                        const state = book._STATE;\r\n                        if (state === 1 || state === 3)\r\n                        {\r\n                            retDate = props.text.returnDate + \" \" + book._RETURN;\r\n                        }\r\n                        let resultObject = {\r\n                            index: i,\r\n                            text: resultString,\r\n                            name: book.BOOKNAME,\r\n                            code: book.BARCODE,\r\n                            rent: getBookState(props.text, book._STATE.toString()),\r\n                            retDate: retDate,\r\n                            author: book.AUTHOR,\r\n                            totalName: book.TOTAL_NAME,\r\n                            claim_num: book.CLAMENUM,\r\n                            publish: book.PUBLISH,\r\n                            claim: book.CLAIM\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n\r\n                    for (let i = 0 ; i < bookList.length ; i++) {\r\n                        const row = bookList[i];\r\n                        if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                        if ((row.name && row.name.toString().includes(text)) ||\r\n                            (row.code === text))\r\n                        {\r\n                            let resultString = `${row.name} ${row.claim_num}`;\r\n                            let retDate = \"\";\r\n                            let state = \"0\";\r\n                            for (const entry of rentList)\r\n                            {\r\n                                if (entry.code === row.code)\r\n                                {\r\n                                    state = entry.state;\r\n                                    if (state === \"1\" || state === \"3\")\r\n                                    {\r\n                                        retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                            let resultObject = {\r\n                                index: i,\r\n                                text: resultString,\r\n                                name: row.name,\r\n                                code: row.code.toString(),\r\n                                rent: getBookState(props.text, state),\r\n                                retDate: retDate,\r\n                                author: row.author,\r\n                                totalName: row.totalName,\r\n                                claim_num: row.claim_num,\r\n                                publish: row.publish,\r\n                                claim: row.claim\r\n                            };\r\n                            results.push(resultObject);\r\n                        }\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a['text'] > b['text']; });\r\n                return results;\r\n            }\r\n            async function query() {\r\n                if (searchQuery) {\r\n                    let sr = await findBooks(searchQuery);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        selectedRef.current = sr[0].code;\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, bookList, rentList, props]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        initialized = true;\r\n\r\n        let rl = [];\r\n        const rented = props.doc.rent;\r\n        for (let i = 0 ; i < rented.length; i++)\r\n        {\r\n           rl.push({code:rented[i].book_id, retDate:rented[i].return_date, state:rented[i].state});\r\n        }\r\n        setRentList(rl);\r\n\r\n        let bl = [];\r\n        const books = props.doc.book\r\n        for (const key in books)\r\n        {\r\n           const book = books[key];\r\n           bl.push({code: book._id, name: book.title, num: book.num, author: book.author, claim: book.claim,\r\n                    claim_num: book.claim_num, totalName: book.series, category: book.publisher, publish: book.publisher});\r\n        }\r\n        console.log(\"Load\");\r\n        console.log(books.length);\r\n        setBookList(bl);\r\n    }\r\n\r\n    const selectId = async (code) => {\r\n        console.log(\"Prev \" + selectedRef.current);\r\n        if (selectedRef.current === -1 || selectedRef.current !== code)\r\n        {\r\n            console.log(\"Select \" + code);\r\n            setSelectedId(code);\r\n            selectedRef.current = code;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + code);\r\n            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n        }\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n        const hidden = (result.code !== selectedRef.current);\r\n        const entryId = (hidden) ? \"searchResult\" : \"selectedSearchResult\";\r\n        return (\r\n            <div key={result.code}>\r\n            <div id={entryId} onClick={async () => await selectId(result.code)}>\r\n                <table><tbody>\r\n                    <tr className=\"searchTr\">\r\n                        <td className=\"searchTitle\"> {result.text}</td>\r\n                        <td className=\"searchRent\"> {result.rent} </td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {!hidden &&\r\n            <div>\r\n                <table><tbody>\r\n                <tr>\r\n                    <td>{result.author} </td>\r\n                    <td colSpan=\"2\" rowSpan=\"2\">{result.totalName} <b>{result.name}</b> { result.claim_num} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.code} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.publish}</td>\r\n                    <td colSpan={result.retDate.length > 0 ? \"1\":\"2\"}>{result.claim} </td>\r\n                    {result.retDate.length > 0 && <td>{result.retDate}</td> }\r\n                </tr>\r\n                </tbody></table>\r\n            </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function showEntries(results)\r\n    {\r\n        return results.map((result) => showEntry(result))\r\n    }\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <div id=\"title\">\r\n                <h2> {props.text.bookSearch} </h2>\r\n            </div>\r\n            <div id=\"searchContents\">\r\n                <input id=\"searchInput\"\r\n                    placeholder={props.text.searchBook}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n            </div>\r\n            <ListView list={searchResults} showCallback={(entries) => { return showEntries(entries); }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link } from 'react-router-dom'\r\nimport {USER_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction CheckOutStatus(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [expireDate, setExpireDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOutStatus initialize\");\r\n\r\n\r\n            if (\"autoLogin\" in props.context.cookie)\r\n            {\r\n                const autoLogin = (props.context.cookie.autoLogin === \"true\") ? true : false;\r\n                setAutoLogin(autoLogin);\r\n            }\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            setExpireDate(date.toGMTString());\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.doc.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            compare();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.logged)\r\n        {\r\n            setState(State.LoggedIn);\r\n            const userId = props.doc.userInfo['_id'];\r\n            setUserId(userId);\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            await loadHistory();\r\n        }\r\n        else\r\n        {\r\n            setState(State.LoggedOut);\r\n            setUserId(\"\");\r\n            setPasswordText(\"\");\r\n        }\r\n\r\n        console.log(\"Set title \" + props.doc.logged)\r\n        if (props.doc.logged)\r\n        {\r\n            if (props.doc.adminMode)\r\n                setTitle(props.text.userSearch);\r\n            else\r\n                setTitle(props.text.checkOut);\r\n        }\r\n        else\r\n        {\r\n            setTitle(props.text.logIn);\r\n        }\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const toggleAutoLogin = () => {\r\n        console.log(\"Toggle autoLogin\");\r\n        const cookieString = \"autoLogin=\" + (autoLogin ? \"false\":\"true\") + \"; expires=\" + expireDate + \";\";\r\n        console.log(cookieString);\r\n        document.cookie = cookieString;\r\n        setAutoLogin(!autoLogin);\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        setState(State.LoggingIn);\r\n        setUserId(userText.toUpperCase());\r\n        await loadUser();\r\n        await loadHistory();\r\n        console.log(\"Log In\");\r\n        compare();\r\n    }\r\n\r\n    const compare = () => {\r\n        if (!userData || state === State.LoggedOut)\r\n            return;\r\n\r\n        console.log(toast.isActive(loggingId));\r\n        const prop = toastProp;\r\n\r\n        let text;\r\n        if (props.context.checkLogIn(userData, passwordText))\r\n        {\r\n            props.doc.logIn(userData.user);\r\n\r\n            setSearchResults(props.doc.getRent(userId));\r\n            setState(State.LoggedIn);\r\n\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            document.cookie = \"user_id=\" + userId + \"; expires=\" + expireDate + \";\";\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.render = text;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = loggingId;\r\n        if (toast.isActive(loggingId))\r\n        {\r\n            console.log(\"update toast\");\r\n            toast.update(loggingId, prop);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"New toast\");\r\n            toast.info(text, prop);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {title}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!(state !== State.LoggedIn)}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <input type=\"password\" id=\"searchPassword\"\r\n                    placeholder={props.text.pwHolder}\r\n                    value={passwordText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setPasswordText(event.target.value);\r\n                    }} />\r\n                <div id=\"autoLogin\">\r\n                    <input type=\"checkbox\" id=\"autoLoginButton\" checked={autoLogin} onChange={() => toggleAutoLogin()}/>\r\n                    <label>\r\n                            {props.text.autoLogin}\r\n                    </label>\r\n                </div>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={!(state === State.LoggedIn)}>\r\n                <div>\r\n                    { showEntries(searchResults) }\r\n                </div>\r\n\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <ListView list={history} showCallback={(entries) => { return showEntries(entries); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOutStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, loadingId, getUserState } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2,\r\n    LoggingOut: 3\r\n}\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 50);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [userData, setUserData] = useState({});\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOut initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n//            console.log(props.doc.serverInfo);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                axios.get(url).then( response => {\r\n                        const book = response.data.scan;\r\n                        if (book) {\r\n                            console.log(book)\r\n                            setBarcode(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            console.log(toast.isActive(loggingId));\r\n            const prop = toastProp;\r\n\r\n            let text;\r\n            let notify = false;\r\n            if (\"USER_CODE\" in userData && state !== State.LoggedIn)\r\n            {\r\n                setState(State.LoggedIn);\r\n\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                text = props.text.logInSucceed;\r\n                notify = true;\r\n            }\r\n            else if (!(\"USER_CODE\" in userData))\r\n            {\r\n                setState(State.LoggedOut);\r\n\r\n                if (state === State.LoggingIn)\r\n                {\r\n                    prop.type = toast.TYPE.ERROR;\r\n                    text = props.text.logInFail;\r\n                    notify = true;\r\n                }\r\n            }\r\n\r\n            if (notify)\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": prop.type})\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 0)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n                setBarcode(\"\")\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            console.log(\"Notification \" + notifyRequest.text)\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//            if (\"id\" in notifyRequest)\r\n//                id = notifyRequest.id\r\n\r\n//            prop.toastId = id\r\n//            if (toast.isActive(id))\r\n//                toast.update(id, notifyRequest.text, prop);\r\n//            else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (state !== State.LoggedIn)\r\n                setBarcode(userText);\r\n        }, [state, userText]\r\n    );\r\n\r\n    const updateUser = async (userText) => {\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/user?user=\" + userText;\r\n        const obj = {\"params\": {\"user\": userText, \"data\":\"nothing\"}};\r\n        console.log(obj);\r\n        const response = await axios.get(url, btoa(JSON.stringify(obj)));\r\n        const user = response.data.return;\r\n        setUserData(user);\r\n        console.log(user);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        console.log(\"LOGIN\");\r\n        console.log(userText);\r\n        if (userText.length === 0)\r\n            return;\r\n        setState(State.LoggingIn);\r\n        const id = userText.toUpperCase();\r\n        setUserId(id);\r\n        updateUser(id);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Log Out\");\r\n        setUserData({});\r\n        setUserText(\"\");\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n        document.getElementById('barcodeScan').value= null;\r\n    }\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            console.log(url)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.loading,\r\n                              \"type\": toast.TYPE.INFO})\r\n            getBase64(file).then(\r\n                img => {\r\n                    axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(response);\r\n                        console.log(book);\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.succeededToOpen,\r\n                                              \"type\": toast.TYPE.SUCCESS});\r\n                        }\r\n                        else\r\n                        {\r\n                            console.log(\"Failed\");\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR});\r\n                            setScannedBook({});\r\n                            setBarcode(\"\")\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                const bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            console.log(book.books)\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery, bookText, props.doc]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Barcode: \" + barcode);\r\n            if (barcode.length === 0)\r\n                return;\r\n            if (state !== State.LoggedIn)\r\n            {\r\n                setUserText(barcode);\r\n            }\r\n            else\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [barcode, props.doc, state]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n        document.getElementById('barcodeScan').value= null;\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/checkOut\"\r\n        axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE,\r\n                user: userId\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return\r\n            console.log(\"Rent confirmed\");\r\n            console.log(ret)\r\n\r\n            if (ret === \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.rentSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            setScannedBook({});\r\n            setBarcode(\"\")\r\n            updateUser(userId);\r\n        });\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        document.getElementById('barcodeScan').value= null;\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n//            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn ? true : false }>\r\n//            <div id=\"checkOutResult\" hidden={true}>\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.checkOut}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={state === State.LoggedIn}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn}>\r\n                {userData.USER_CODE && (\r\n                    <div id=\"userInfo\">\r\n                        <div id=\"userItem\">\r\n                            {userData.USER_CODE + \" : \" + userData.USER_NAME + props.text.nameSuffix}\r\n                        </div>\r\n                        <div id=\"userItem\"> {getUserState(props.text, userData.USER_STATE)} </div>\r\n                        <div id=\"userItem\"> {userData._RENT.length + \" \" + props.text.rentSuffix} </div>\r\n                    </div>\r\n                )}\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                    <label id=\"barcodeScan\" hidden>\r\n                        <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                        <span>\r\n                        <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                        </span>\r\n                    </label>\r\n                    <label id=\"manualInput\">\r\n                        <div id=\"hkPrefix\">\r\n                        HK\r\n                        </div>\r\n                        <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n                            placeholder={props.text.bookHolder}\r\n                            onInput={(event) => {\r\n                                setBookText(event.target.value);\r\n                            }} />\r\n                    </label>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmRent} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \": \" + scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.logOut} </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\n\r\nfunction Return(props) {\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 50);\r\n//    const [initialized, setInitialized] = useState(false);\r\n//    const [userId, setUserId] = useState(\"\");\r\n//    const [state, setState] = useState(State.LoggedOut);\r\n//    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n//                     { \"variables\": { \"_id\": userId } });\r\n//    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n//                     { \"variables\": { \"user_id\": userId } });\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            props.doc.setCallback(undefined);\r\n            console.log(\"=======================================\");\r\n            console.log(\"Return initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr && ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                axios.get(url).then( response => {\r\n                        const book = response.data.scan;\r\n                        if (book) {\r\n                            console.log(barcode + \" -> \" + book)\r\n                            setBarcode(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n*/\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                const bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery, bookText, props.doc]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"B\" + barcode);\r\n            if (barcode.length > 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [barcode, props.doc]\r\n    );\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.loading,\r\n                              \"type\": toast.TYPE.INFO})\r\n            getBase64(file).then(\r\n                img => {\r\n                    axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.succeededToOpen,\r\n                                              \"type\": toast.TYPE.SUCCESS});\r\n                        }\r\n                        else\r\n                        {\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR})\r\n                            setScannedBook({})\r\n                            setBarcode(\"\")\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 1 || scannedBook._STATE === 3)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    console.log(\"Not rented\")\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.NOT_RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                    setBarcode(\"\")\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//           if (\"id\" in notifyRequest)\r\n//               id = notifyRequest.id\r\n\r\n//           prop.toastId = id\r\n //          if (toast.isActive(id))\r\n//               toast.update(id, notifyRequest.text, prop);\r\n//           else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/return\"\r\n        axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return;\r\n            console.log(ret);\r\n            if (ret === \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.returnSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            setScannedBook({});\r\n            setBarcode(\"\")\r\n        });\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.return}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                <label id=\"barcodeScan\" hidden>\r\n                    <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                    <span>\r\n                    <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                    </span>\r\n                </label>\r\n                <label id=\"manualInput\">\r\n                    <div id=\"hkPrefix\">\r\n                        HK\r\n                    </div>\r\n                    <input inputMode=\"numeric\" pattern=\"\\d*\" type=\"text\" id=\"searchInput\"\r\n                        placeholder={props.text.bookHolder}\r\n                        onInput={(event) => {\r\n                            setBookText(event.target.value);\r\n                        }} />\r\n                </label>\r\n                </div>\r\n                <div id=\"checkReturn\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmReturn} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\" + scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n//                    <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n\r\nexport default Return;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp, MAX_SEARCH_ENTRY, getUserState, toUtf8 } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\nimport axios from \"axios\";\r\n\r\n//var rentList = [];\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(userText, 50);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n    const { id } = useParams();\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n            {\r\n                console.log(\"Document is not ready\");\r\n                window.location.href = \"/\";\r\n                return;\r\n            }\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"UserSearch initialize\");\r\n            console.log(\"User ID: \" + id);\r\n\r\n            if (!props.doc.serverAvailable)\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc(false);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n\r\n        if (notify)\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Set title \" + props.logged)\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const selectId = async (id) => {\r\n        if (selectedRef.current === -1 || selectedRef.current !== id)\r\n        {\r\n            console.log(\"Select \" + id);\r\n            setSelectedId(id);\r\n            selectedRef.current = id;\r\n            const rent = await props.doc.getRent(id);\r\n            console.log(\"Set Rent List\");\r\n            console.log(rent)\r\n            setRentList(rent);\r\n//            rentList = rent;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n            setRentList([]);\r\n//            rentList = [];\r\n        }\r\n    }\r\n\r\n    const showUser = (user, detail, index) => {\r\n        const key = index.toString();\r\n        return (\r\n                <div key={key}>\r\n                    <table><tbody>\r\n                        <tr key={user.id} className=\"searchTr\" onClick={async ()=> await selectId(user.id)}>\r\n                            <td className=\"bookData\">{user.id}</td>\r\n                            <td className=\"bookData\">{user.name}</td>\r\n                            <td className=\"bookData\">{user.state}</td>\r\n                            <td className=\"bookData\">{user.rent}</td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                        {user.id === selectedRef.current && showEntries(user.id, detail) }\r\n                </div>\r\n                );\r\n    }\r\n\r\n    const showUsers = (result, detail) => {\r\n        return (<div>\r\n                    {\r\n                        result.map((user, index) => {\r\n                            return showUser(user, detail, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 &&\r\n                        <table><tbody>\r\n                            <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                        </tbody></table>\r\n                    }\r\n                </div>);\r\n    }\r\n\r\n    const showEntries = (id, detail) => {\r\n        console.log(\"Detail\");\r\n        console.log(detail);\r\n        return (<>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        detail.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        detail.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </>);\r\n    }\r\n    useEffect(\r\n        () => {\r\n            async function findUsers(text) {\r\n                let results = [];\r\n\r\n//                for (let i = 0 ; i < userList.length ; i++) {\r\n                  for (const key in userList) {\r\n                    const row = userList[key];\r\n                    if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                    if ((row.name && row.name.toString().includes(text)) ||\r\n                        (row.id.toLowerCase() === text.toLowerCase()))\r\n                    {\r\n                        results.push(row);\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a.name > b.name; });\r\n                console.log(results);\r\n                return results;\r\n            }\r\n            async function query() {\r\n                if (searchQuery) {\r\n\r\n                    let sr;\r\n                    if (props.doc.serverAvailable)\r\n                    {\r\n                        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/users\";\r\n                        const obj = {\"params\": {\"user\": btoa(toUtf8(userText))}};\r\n                        console.log(obj);\r\n                        const response = await axios.get(url, obj);\r\n                        const users = response.data.return.data;\r\n                        console.log(response.data.return);\r\n                        sr = [];\r\n                        if (users) {\r\n                            for (const entry of response.data.return.data)\r\n                            {\r\n                                console.log(entry);\r\n                                let user = {};\r\n                                user.id = entry.USER_CODE;\r\n                                user.name = entry.USER_NAME;\r\n                                user.state = getUserState(props.text, entry.USER_STATE);\r\n                                user.rent = entry._RENT.length;\r\n                                sr.push(user);\r\n                            }\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        sr = await findUsers(searchQuery);\r\n                    }\r\n\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                       selectId(sr[0].id);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, props, userList]\r\n    );\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.userSearch}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onChange={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <div>\r\n                    <ListView list={searchResults} detail={rentList} showCallback={(entries, detail) => { return showUsers(entries, detail); }}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getBookState, toUtf8 } from \"../Util\";\r\nimport { Link } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\nimport axios from \"axios\";\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n            {\r\n                console.log(\"Document is not ready\");\r\n                window.location.href = \"/\";\r\n                return;\r\n            }\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        }, [userList]\r\n    );\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        return a1.rentDate > a2.rentDate;\r\n    }\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.serverAvailable)\r\n        {\r\n            let results = [];\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n            const obj = {\"params\": {\"user\": \"*\", \"match\":false}};\r\n            console.log(obj);\r\n            const response = await axios.get(url, obj);\r\n            console.log(response)\r\n//            if (!(\"books\" in response.data.return))\r\n//                return results;\r\n            const books = response.data.return.books;\r\n            let retDate = \"\";\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                const state = book._STATE;\r\n                if (state === 1 || state === 3)\r\n                {\r\n                    retDate = props.text.returnDate + \" \" + book.RETURN_DATE;\r\n                }\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: book.BOOKNAME,\r\n                    id: book.BARCODE,\r\n                    rent: getBookState(props.text, book.STATS.toString()),\r\n                    rentDate: book.LENT_DATE,\r\n                    retDate: retDate,\r\n                    author: book.AUTHOR,\r\n                    totalName: book.TOTAL_NAME,\r\n                    claim_num: book.CLAMENUM,\r\n                    publish: book.PUBLISH,\r\n                    claim: book.CLAIM,\r\n                    user: book.USER,\r\n                    userName: book.USER_NAME\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compare);\r\n            setRentList(results);\r\n        }\r\n        else\r\n        {\r\n\r\n            const rent = await props.doc.getRent();\r\n            console.log(\"Rent\");\r\n            console.log(rent);\r\n            rent.sort(compare);\r\n            for (const index in rent)\r\n            {\r\n                const userId = rent[index][\"user\"];\r\n                let userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                rent[index][\"userName\"] = userName;\r\n                console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n            }\r\n            setRentList(rent);\r\n        }\r\n\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td colSpan=\"3\" className=\"bookCell\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.history}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        this.initialized = false;\r\n        this.bookReady = false;\r\n        this.rentReady = false;\r\n        this.userReady = false;\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        this.book = {};\r\n        this.rent = {};\r\n        this.logCallback = undefined;\r\n        this.admin = false;\r\n        this.serverInfo = {};\r\n        this.serverAvailable = false;\r\n        this.ipAddr = \"\"\r\n    }\r\n\r\n    async updateIpAddr()\r\n    {\r\n        const response = await axios.get(\"https://ipv4.seeip.org/jsonip\");\r\n//        \"https://api.ipify.org/?format=json\"\r\n        console.log(\"Get IP Address\");\r\n        console.log(response.data);\r\n        const ipAddr = response.data.ip;\r\n        console.log(\"IP addr updated \" + ipAddr)\r\n        this.ipAddr = ipAddr;\r\n        this.checkServerIp()\r\n    }\r\n\r\n    checkServerIp()\r\n    {\r\n        if (this.ipAddr.length === 0 || !this.serverInfo.globalIp)\r\n            return\r\n        return\r\n        if (this.serverInfo.globalIp === this.ipAddr)\r\n        {\r\n            console.log(\"Server is accessible \" + this.serverInfo.localIp);\r\n            const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n            this.serverAvailable = true;\r\n            axios.get(query, {timeout: 1000})\r\n                .then( (response) => {\r\n                    console.log(\"Server connected\");\r\n                    console.log(response.data);\r\n                    this.admin = response.data.admin;\r\n                    this.initialized = true;\r\n                })\r\n                .catch(error => {\r\n                  const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n                  window.open(query);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    checkState() {\r\n        if (this.bookReady && this.rentReady) {\r\n            this.initialized = true;\r\n            toast.dismiss();\r\n            if (this.callback) {\r\n                this.callback();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setLogCallback(callback) {\r\n        this.logCallback = callback;\r\n    }\r\n\r\n    setRent(rent) {\r\n        this.rent = rent\r\n        this.rentReady = true;\r\n        this.checkState();\r\n        this.checkRent();\r\n    }\r\n\r\n    setServerInfo(serverInfo)\r\n    {\r\n        this.serverInfo = serverInfo;\r\n        console.log(this.serverInfo.globalIp);\r\n        this.checkServerIp()\r\n    }\r\n\r\n    setBook(books) {\r\n        this.book = {};\r\n        for (let i = 0 ; i < books.length ; i++)\r\n        {\r\n            const book = books[i];\r\n            const id = book['_id'];\r\n            this.book[id] = book;\r\n        }\r\n        this.bookReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setUser(users) {\r\n        this.user = {};\r\n        for (let i = 0 ; i < users.length ; i++)\r\n        {\r\n            const user = users[i];\r\n            const id = user.id;\r\n            this.user[id] = user;\r\n            this.user[id][\"rent\"] = 0;\r\n        }\r\n        this.userReady = true;\r\n        this.checkRent();\r\n    }\r\n\r\n    checkRent() {\r\n        if (!this.userReady || !this.rentReady)\r\n        {\r\n            console.log(\"Cannot check rent\");\r\n            return;\r\n        }\r\n        console.log(this.rent);\r\n        for (let i = 0 ; i < this.rent.length ; i++)\r\n        {\r\n            const state = this.rent[i].state;\r\n\r\n//            console.log(state);\r\n            if (state !== \"1\" && state !== \"3\")\r\n                continue;\r\n\r\n            const userId = this.rent[i].user_id;\r\n//            console.log(this.rent[i]);\r\n            console.log(userId);\r\n            console.log(userId.length);\r\n            if (userId && userId.length > 0 && userId in this.user)\r\n                this.user[userId][\"rent\"] += 1;\r\n            else\r\n                this.user[userId][\"rent\"] = 1;\r\n        }\r\n        console.log(this.user);\r\n    }\r\n\r\n    logIn(userInfo) {\r\n        console.log(\"Logged in: \" + userInfo['_id']);\r\n        this.logged = true;\r\n        this.userInfo = userInfo;\r\n        if (userInfo['level'] === \"2\")\r\n            this.admin = true;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n    }\r\n\r\n    logOut() {\r\n        console.log(\"Logged out\");\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        if (this.logCallback)\r\n            this.logCallback(false);\r\n    }\r\n\r\n    async getRent(userId = undefined) {\r\n        let ret = [];\r\n        if (this.serverAvailable) {\r\n            const url = \"https://\" + this.serverInfo.localIp + \":\" +\r\n                this.serverInfo.port + \"/book\";\r\n            const obj = {\"params\": {\"user\": userId}};\r\n            console.log(obj);\r\n            const result = await axios.get(url, obj);\r\n            console.log(result);\r\n            if (\"books\" in result.data.return)\r\n            {\r\n                // BARCODE, BOOKNAME, LENT_DATE, RETURN_DATE, STATS\r\n                // id, title, rentDate, retData,  stat\r\n                for (const entry of result.data.return.books)\r\n                {\r\n                    console.log(entry);\r\n                    const book = {'id': entry.BARCODE, 'title': entry.BOOKNAME, 'rentDate': entry.LENT_DATE, 'retDate': entry.RETURN_DATE, 'stat': entry.STATS}\r\n                    ret.push(book);\r\n                }\r\n//                ret = result.data.return.books;\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"Check \" + userId);\r\n            console.log(this.bookReady);\r\n            if (!this.bookReady)\r\n                return ret;\r\n    //        console.log(this.rent.length);\r\n            for (let i = 0 ; i < this.rent.length ; i++) {\r\n                const entry = this.rent[i];\r\n                if (userId !== undefined && entry.user_id !== userId)\r\n                    continue;\r\n    //            console.log(entry)\r\n                if (entry.state !== \"1\" && entry.state !== \"3\")\r\n                    continue;\r\n    //            console.log(entry);\r\n                const id = entry[\"book_id\"];\r\n                const book = this.book[id];\r\n    //            console.log(book)\r\n                let retEntry = {}\r\n                retEntry[\"id\"] = book._id\r\n                retEntry[\"title\"] = book.title\r\n                retEntry[\"rentDate\"] = entry.rent_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"retDate\"] = entry.return_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"user\"] = entry.user_id;\r\n                ret.push(retEntry)\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n\r\n    async openDoc() {\r\n        try {\r\n            this.initialized = true;\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.initialized;\r\n    }\r\n\r\n    setCallback(updateFunc)\r\n    {\r\n        console.log(\"Update function registered\");\r\n        this.callback = updateFunc;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","import config from \"./api/key\";\n\nconst NodeRSA = require('node-rsa');\n\nconst prk = new NodeRSA(config[\"privateKey\"]);\n\nclass Context {\n    constructor() {\n        console.log(\"Create Context\");\n\n        console.log(\"Cookies\");\n        const rawCookie = document.cookie;\n        this.cookie = rawCookie\n            .split(\";\")\n            .map(v => v.split(\"=\"))\n            .reduce((acc, v) => {\n                const key = v.shift().trim();\n                const value = v.join(\"=\").trim();\n                acc[decodeURIComponent(key)] = decodeURIComponent(value);\n                return acc;\n            }, {});\n        console.log(this.cookie);\n    }\n\n    checkLogIn(userData, passwordText) {\n        var matched = false;\n        var passwordTyped;\n        if (userData.user && passwordText.length > 0) {\n            console.log(\"User data available\");\n            const emailDb = userData.user.encrypted_email;\n            const phoneDb = userData.user.encrypted_phone;\n\n            passwordTyped = prk.sign(passwordText, 'base64');\n            if (passwordText === emailDb ||\n                passwordText === phoneDb )\n            {\n                passwordTyped = passwordText;\n                matched = true;\n            }\n            else if (emailDb === passwordTyped)\n            {\n//                console.log(\"Email match\");\n                matched = true;\n            }\n            else\n            {\n                var numberString = \"\";\n                for (let i = 0 ; i < passwordText.length ; i++)\n                {\n                    if (!isNaN(passwordText[i]))\n                        numberString += passwordText[i];;\n                }\n                passwordTyped = prk.sign(numberString, 'base64');\n                if (passwordTyped === phoneDb)\n                {\n//                    console.log(\"Phone match\");\n                    matched = true;\n                }\n                else\n                {\n//                    console.log(\"Nothing matched\");\n                }\n            }\n\n//            console.log(\"toast available\");\n        }\n        if (matched)\n        {\n            const date = new Date();\n            const days=2;\n            date.setTime(date.getTime()+(days*24*60*60*1000));\n            const expireDate = date.toGMTString();\n            document.cookie = \"password=\" +  passwordTyped + \"; expires=\" + expireDate + \";\";\n        }\n        return matched\n    }\n}\n\nexport default Context;\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Dropdown.css'\r\n\r\nfunction DropDown(props) {\r\n\r\n    const [dropdown, setDropdown] = useState(false);\r\n    const [click, setClick] = useState(false)\r\n\r\n    useEffect(\r\n        () => {\r\n            if (dropdown !== props.dropdown)\r\n            {\r\n                console.log(\"User clicked \" + props.doc.logged);\r\n                console.log(props.dropdown);\r\n                setClick(!click);\r\n                setDropdown(props.dropdown);\r\n            }\r\n            const menu = document.getElementById(\"dropdown-menu\");\r\n//            menu.hidden = !click;\r\n            if (!click)\r\n            {\r\n               menu.classList.remove('is-show');\r\n            }\r\n            else\r\n            {\r\n               menu.classList.add('is-show');\r\n            }\r\n\r\n        }, [props.dropdown, dropdown, click, props.doc.logged]\r\n    );\r\n\r\n    const logOut = () =>\r\n    {\r\n        setClick(false);\r\n        props.doc.logOut();\r\n        document.cookie = \"user_id=\";\r\n        document.cookie = \"password=\";\r\n        document.cookie = \"autoLogin=false\";\r\n    }\r\n\r\n    return (\r\n            <div id='dropdown-menu' onClick={() => { setClick(!click)}} className='dropdown-menu'>\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                    <div className='menu-items'>\r\n                        {props.doc.userInfo[\"_id\"] + \" : \" + props.doc.userInfo[\"name\"] + props.text.nameSuffix}\r\n                    </div>\r\n                    <hr className=\"hline\"/>\r\n                    </>\r\n                }\r\n                <Link className='menu-items' to=\"/\" onClick={() => setClick(false)}>\r\n                    {props.text.home}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/notice\" onClick={() => setClick(false)}>\r\n                    {props.text.notice}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/search\" onClick={() => setClick(false)}>\r\n                    {props.text.bookSearch}\r\n                </Link>\r\n                {props.doc.serverAvailable &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOut\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOut}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/return\" onClick={() => setClick(false)}>\r\n                            {props.text.return}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOutStatus}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {props.doc.admin &&\r\n                    <>\r\n                    <hr className=\"hline\"/>\r\n                    <Link className='menu-items' to=\"/userSearch\" onClick={() => setClick(false)}>\r\n                        {props.text.userSearch}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentHistory\" onClick={() => setClick(false)}>\r\n                        {props.text.history}\r\n                    </Link>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <hr className=\"hline\"/>\r\n                        <div className='menu-items' onClick={() => logOut()}>\r\n                            {props.text.logOut}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && !props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.logIn}\r\n                        </Link>\r\n                    </>\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default DropDown;\r\n","import React, { useState } from 'react';\r\nimport {isMobile} from \"react-device-detect\";\r\nimport \"./Navbar.css\";\r\nimport DropDown from \"./Dropdown\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction Navbar(props) {\r\n    const [dropdown, setDropdown] = useState(false)\r\n\r\n    const onClick = () => {\r\n        const maxWidth = document.getElementById(\"navbar\").style.maxWidth;\r\n        console.log(\"maxWidth\");\r\n        console.log(maxWidth);\r\n        console.log(document.getElementById(\"navbar\").style.width);\r\n        setDropdown(!dropdown);\r\n    }\r\n\r\nreturn (\r\n    <>\r\n        <div id=\"navbar\" className=\"navbar\">\r\n            <div className='title'>\r\n                {isMobile? (<h1>{props.text[\"titleShort\"]}</h1>) : (<h1>{props.text[\"titleLong\"]}</h1>)}\r\n            </div>\r\n            <div className='menu' onClick={onClick} >\r\n                <MenuIcon className=\"img\" fontSize=\"large\" sx={{ color: \"#ffffff\"}}/>\r\n            </div>\r\n            <DropDown text={props.text} doc={props.doc} dropdown={dropdown}/>\r\n        </div>\r\n    </>\r\n)\r\n}\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Notice from \"./pages/Notice\";\r\nimport Search from \"./pages/Search\";\r\nimport CheckOutStatus from \"./pages/CheckOutStatus\";\r\nimport CheckOut from \"./pages/CheckOut\";\r\nimport Return from \"./pages/Return\";\r\nimport UserSearch from \"./pages/UserSearch\";\r\nimport RentHistory from \"./pages/RentHistory\";\r\n//import Reader from \"./pages/Reader\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\nimport Context from \"./Context\";\r\nimport text from \"./api/text\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"./Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport Navbar from \"./Navbar\";\r\nimport {BOOK_QUERY, RENT_QUERY, USER_QUERY, SERVER_QUERY} from \"./api/query.js\";\r\n\r\nconst doc = new Doc();\r\nconst context = new Context();\r\n\r\nconst textString = {};\r\nlet logMsg = \"\"\r\nfunction App() {\r\n\r\n//    const [checkOutStr, setCheckOutStr] = useState(\"\");\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [logged, setLogged] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const { loading: rentLoading, error: rentError, data: rentData } = useQuery(RENT_QUERY);\r\n    const { loading: serverLoading, error: serverError, data: serverData } = useQuery(SERVER_QUERY);\r\n    const [loadBook, { loading: bookLoading, error: bookError, data: bookData }] = useLazyQuery(BOOK_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY, { \"variables\": { \"_id\": userId } });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            logMsg = logMsg + \"<p>Initialize app</p>\";\r\n            console.log(process.env.APP_NAME);\r\n            console.log(process.env.APP_VERSION);\r\n            const lang = navigator.languages;\r\n            console.log(lang);\r\n            let ts = {}\r\n            if (lang.length> 0 && (lang[0].toLowerCase().includes(\"kr\") || lang[0].toLowerCase().includes(\"ko\")))\r\n            {\r\n                ts = text.kr;\r\n            }\r\n            else\r\n            {\r\n                ts = text.en;\r\n            }\r\n            for (let key in ts)\r\n            {\r\n                textString[key] = ts[key];\r\n            }\r\n\r\n            await doc.updateIpAddr();\r\n\r\n            if (\"autoLogin\" in context.cookie &&  context.cookie.autoLogin === \"true\")\r\n            {\r\n                console.log(\"Auto Login: \" + context.cookie.user_id);\r\n                setUserId(context.cookie.user_id);\r\n                console.log(context.cookie.nothing);\r\n                loadUser();\r\n            }\r\n            setInitialized(true);\r\n        }\r\n        initialize();\r\n    }, [loadUser]);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data loaded\");\r\n            if (!userData)\r\n            {\r\n                return;\r\n            }\r\n\r\n            console.log(\"Login check \" + context.cookie.password);\r\n            console.log(userData);\r\n            if (context.cookie.password && context.checkLogIn(userData, context.cookie.password))\r\n            {\r\n                console.log(\"Login suceeded\");\r\n                doc.logIn(userData.user);\r\n            }\r\n\r\n\r\n\r\n        }, [userData]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Rent Query Updated\");\r\n            logMsg = logMsg + \"<p>Rent Query Updated \" + rentLoading + \" \" + rentError + \"</p>\";\r\n            console.log(rentLoading);\r\n            console.log(rentError);\r\n            if (rentData)\r\n            {\r\n                console.log(\"Rent available\");\r\n                logMsg = logMsg + \"<p>Rent available</p>\"\r\n//                console.log(rentData.rents)\r\n                doc.setRent(rentData.rents)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [rentLoading, rentError, rentData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Book Query Updated\");\r\n            logMsg = logMsg + \"<p>Book Query Updated</p>\";\r\n            console.log(bookLoading)\r\n            console.log(bookError)\r\n            if (bookData)\r\n            {\r\n                console.log(\"Book available\")\r\n                logMsg = logMsg + \"<p>Book available</p>\";\r\n//                console.log(bookData.books)\r\n                doc.setBook(bookData.books)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [bookLoading, bookError, bookData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Server Query Updated\");\r\n            logMsg = logMsg + \"<p>Server Query Updated</p>\";\r\n\r\n            console.log(serverData);\r\n            console.log(initialized);\r\n            if (!serverData || !initialized)\r\n                return\r\n\r\n            console.log(\"Server info available\")\r\n            logMsg = logMsg + \"<p>Server info available</p>\";\r\n            console.log(serverData.serverInfo)\r\n            doc.setServerInfo(serverData.serverInfo)\r\n\r\n            if (!doc.serverAvailable)\r\n            {\r\n                console.log(\"Server is not available. Load books from cloud DB\");\r\n                loadBook();\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.LOADING;\r\n                prop.autoClose = false;\r\n                prop.toastId = loadingId;\r\n                toast.loading(textString.loading, prop);\r\n                doc.setLogCallback(updateLog);\r\n            }\r\n        }, [serverLoading, serverError, serverData, loadBook, initialized]\r\n    );\r\n\r\n    function notifyInit()\r\n    {\r\n        const prop = toastProp;\r\n        prop.type = toast.TYPE.SUCCESS;\r\n        prop.render = textString.succeededToOpen;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = \"\";\r\n        toast.info(textString.succeededToOpen, prop);\r\n    }\r\n\r\n    function updateLog(logged) {\r\n        console.log(\"==== Update logging state \" + doc.logged);\r\n        console.log(doc.userInfo);\r\n        setLogged(doc.logged);\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n        <div className=\"App\">\r\n            <div>\r\n                <ToastContainer\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    limit={10}\r\n                />\r\n            </div>\r\n            <Navbar doc={doc} text={textString}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home doc={doc} text={textString}/>} />\r\n                <Route path=\"/notice\" element={<Notice doc={doc} text={textString} />} />\r\n                <Route path=\"/search/:id?\" element={<Search doc={doc} text={textString}/>} />\r\n                <Route path=\"/checkOutStatus\" element={<CheckOutStatus context={context} doc={doc} text={textString} logged={logged}/>} />\r\n                <Route path=\"/userSearch/:id?\" element={<UserSearch context={context} doc={doc} text={textString} />} />\r\n                <Route path=\"/checkOut\" element={<CheckOut context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/return\" element={<Return context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentHistory\" element={<RentHistory context={context} doc={doc} text={textString}/>} />\r\n            </Routes>\r\n\r\n            <h3>\r\n                v {process.env.REACT_APP_VERSION}\r\n            </h3>\r\n        </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport * as Realm from \"realm-web\";\r\nimport {\r\n    ApolloClient,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    InMemoryCache,\r\n} from \"@apollo/client\";\r\n\r\nconst APP_ID = 'data-xaque';\r\nconst graphqlUri = `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\r\nconst app = new Realm.App(APP_ID);\r\n\r\n// Gets a valid Realm user access token to authenticate requests\r\nasync function getValidAccessToken() {\r\n    // Guarantee that there's a logged in user with a valid access token\r\n    if (!app.currentUser) {\r\n        // If no user is logged in, log in an anonymous user. The logged in user will have a valid\r\n        // access token.\r\n        await app.logIn(Realm.Credentials.anonymous());\r\n//        await app.logIn(apiKey);\r\n    } else {\r\n        // An already logged in user's access token might be stale. Tokens must be refreshed after\r\n        // 30 minutes. To guarantee that the token is valid, we refresh the user's access token.\r\n        await app.currentUser.refreshAccessToken();\r\n    }\r\n//    console.log(\"AccessToken: [\" + app.currentUser.accessToken + \"]\");\r\n\r\n    return app.currentUser.accessToken;\r\n}\r\n\r\n// Configure the ApolloClient to connect to your app's GraphQL endpoint\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\r\n        // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\r\n        // access token before sending the request.\r\n        fetch: async (uri, options) => {\r\n            const accessToken = await getValidAccessToken();\r\n            options.headers.Authorization = `Bearer ${accessToken}`;\r\n            return fetch(uri, options);\r\n        },\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}