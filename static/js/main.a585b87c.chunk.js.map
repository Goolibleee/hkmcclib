{"version":3,"sources":["pages/Home.js","Util.js","api/query.js","pages/Notice.js","ListView.js","pages/Search.js","pages/CheckOutStatus.js","pages/CheckOut.js","pages/Return.js","UserInfo.js","pages/UserSearch.js","pages/RentalSituation.js","pages/RentHistory.js","pages/NewMember.js","Doc.js","Context.js","Dropdown.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useEffect","_initialize","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","console","log","doc","setCallback","undefined","stop","apply","arguments","initialize","serverAvailable","_jsxs","id","children","_jsx","Link","className","to","text","checkOut","return","dangerouslySetInnerHTML","__html","homeText","SEARCH_PER_SCREEN","MAX_SEARCH_ENTRY","String","prototype","format","formatted","this","i","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","getUserState","state","normal","overDue","stopped","getBookState","available","checkedOut","reserved","lost","damaged","given","notAvailable","deleted","compareBook","book1","book2","name","claim1","parseInt","claim_num","claim2","compareUser","a1","a2","compareRent","rentDate","title","toUtf8","unescape","encodeURIComponent","loadingId","loggingId","BOOK_QUERY","gql","_templateObject","_taggedTemplateLiteral","RENT_QUERY","_templateObject2","USERS_QUERY","_templateObject3","USER_QUERY","_templateObject4","HISTORY_QUERY","_templateObject5","HISTORY_BOOK_QUERY","_templateObject6","HISTORY_PERIOD_QUERY","_templateObject7","NOTICE_QUERY","_templateObject8","CONTENT_QUERY","_templateObject9","SERVER_QUERY","_templateObject10","Notice","_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useState3","_useState4","displayedCodes","setDisplayedCodes","_useState5","_useState6","pageNum","setPageNum","_useState7","_useState8","selectedId","setSelectedId","_useQuery","useQuery","noticeLoading","loading","noticeData","data","noticeError","error","_useLazyQuery","useLazyQuery","_useLazyQuery2","loadSelected","_useLazyQuery2$","selectedLoading","selectedData","selectedError","notices","toString","startIdx","count","Math","min","slice","showEntry","result","date","colSpan","onClick","_id","notice","content","map","NavigateBeforeIcon","fontSize","sx","color","NavigateNextIcon","showCallback","ListView","itemList","setItemList","displayList","setDisplayList","list","keyValue","detail","initialized","Search","inputText","setInputText","bookList","setBookList","_useState9","_useState10","rentList","setRentList","_useState11","_useState12","setBookState","_useState13","_useState14","needConfirm","setNeedConfirm","_useState15","_useState16","queryRequest","toggleQueryRequest","_useState17","_useState18","bookId","setBookId","_useState19","_useState20","advancedSearch","setAdvancedSearch","_useState21","_useState22","author","setAuthor","_useState23","_useState24","fromId","setFromId","_useState25","_useState26","toId","setToId","_useState27","_useState28","fromDate","setFromDate","_useState29","_useState30","toDate","setToDate","_useState31","_useState32","stateFilter","setStateFilter","_useState33","_useState34","rentHistory","setRentHistory","_useDebounce","useDebounce","searchQuery","loadHistory","historyData","selectedRef","useRef","needConfirmRef","bookStateRef","historyAvailable","useParams","updateDoc","_updateDoc","_callee6","rl","rm","rented","bl","books","key","book","_context6","rent","push","code","book_id","retDate","return_date","num","claim","regDate","registration_date","totalName","series","category","publisher","publish","isbn","isOpen","findBooks","_x","_findBooks","_callee2","results","url","param","response","resultString","resultObject","_context2","btoa","serverInfo","localIp","port","requestGet","sent","abrupt","concat","BOOKNAME","CLAIMNUM","_STATE","returnDate","_RETURN","index","BARCODE","REG_DATE","AUTHOR","TOTAL_NAME","PUBLISH","CLAIM","ISBN","findBookLocally","sort","_query","_callee3","keyword","sr","_context3","current","query","history","rentLogs","book_state","pair","timestamp","selectId","_ref","_callee4","_context4","_x2","setState","setSearchState","stateStr","value","document","getElementById","checked","filter","idx","element","_confirmAction","_callee7","ipAddr","portNum","obj","_context7","requestPost","hidden","entryId","flags","_callee5","_context5","rowSpan","entry","showHistoryEntry","admin","disabled","confirmAction","confirm","cancel","setPeriod","from","row","toLowerCase","includes","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","bookSearch","placeholder","searchBook","onChange","event","target","type","advSearch","bookCode","registeredDate","Calendar","date1","date2","dateStr1","getFullYear","getMonth","padStart","getDate","dateStr2","selectRange","all","search","entries","showEntries","State","LoggedOut","LoggingIn","LoggedIn","CheckOutStatus","userText","setUserText","passwordText","setPasswordText","setInitialized","userId","setUserId","setHistory","autoLogin","setAutoLogin","loadUser","userData","_useLazyQuery3","_useLazyQuery4","expireDate","setExpireDate","setTitle","_userId","logged","userInfo","t0","getRent","t1","adminMode","userSearch","logIn","_autoLogin","context","cookie","Date","setTime","getTime","days","toGMTString","_func","compare","func","bookReady","rentReady","hist","split","retText","bookName","React","Fragment","showRented","noEntry","toUpperCase","_ref2","prop","toast","isActive","checkLogIn","user","TYPE","SUCCESS","logInSucceed","ERROR","logInFail","render","toastId","update","info","idHolder","onInput","pwHolder","cookieString","toggleAutoLogin","dueDate","Navigate","LoggingOut","CheckOut","bookText","setBookText","bookValue","barcode","setBarcode","notifyRequest","setNotifyRequest","setRented","setUserData","bookData","setBookData","navigate","useNavigate","prefixList","prefix","getElementsByName","interval","setInterval","scan","clearInterval","notify","RENTED","dismiss","getUserData","USER_CODE","_ref3","inputId","found","userValue","_args4","substring","logOut","_ref4","_callee11","ret","_context11","rentSucceed","NOT_AVAILABLE","showBook","_setBookValue","_bookId","setBookValue","_setBookId","_setUserId","_callee8","_id2","_context8","htmlFor","pattern","inputMode","onKeyDown","setUserKeyDown","_callee9","_context9","USER_NAME","nameSuffix","USER_STATE","_RENT","rentSuffix","numberOnly","bookHolder","confirmRent","_callee10","_context10","finish","Return","scannedBook","setScannedBook","returned","setReturned","returnSucceed","_setBarcode","NOT_RENTED","CameraAltIcon","confirmReturn","UserInfo","setDisabled","setUserInfo","setProperty","PHONE_NUMBER","EMAIL","ADDRESS","USER_LEVEL","NOTICE","Object","keys","refresh","phone","email","address","notice_","level","kid","adult","save","confirmSave","userLoading","userListData","userError","userList","setUserList","_args6","succeededToOpen","_extend","extend","users","setUser","getUser","extendCount","forceSelect","_args2","showUsers","showUser","_Fragment","findUsers","_x3","_findUsers","input","trim","RentHistory","userName","RETURN_DATE","STATS","LENT_DATE","CLAMENUM","USER","situation","fromTime","setFromTime","toTime","setToTime","_useLazyQuery4$","historyLoading","historyError","yearValue","setYear","monthValue","setMonth","setQuery","option","year","month","thisYear","thisMonth","createElement","add","bookInfo","user_id","_search","queryTo","nextMonth","_RETURN_DATE","RENT_DATE","warn","movePrev","moveNext","NewMember","prepareNewMember","newMember","regSuccess","regFail","Doc","_classCallCheck","userReady","logCallback","_createClass","_requestGet","os","navigator","platform","axios","get","_requestPost","post","_x4","_updateIpAddr","ip","checkServerIp","_this","globalIp","then","catch","window","open","callback","checkState","checkRent","proxy","_objectSpread","_getRent","_entry","_book","retEntry","_EXTEND_COUNT","rent_date","_openDoc","updateFunc","prk","require","config","Context","rawCookie","v","reduce","acc","shift","join","decodeURIComponent","passwordTyped","matched","emailDb","phoneDb","sign","numberString","isNaN","DropDown","dropdown","setDropdown","close","addEventListener","menu","classList","remove","removeEventListener","MenuIcon","home","checkOutStatus","Navbar","isMobile","textString","logMsg","App","setLogged","rentLoading","rentError","rentData","_useQuery2","serverLoading","serverError","serverData","loadBook","bookLoading","bookError","notifyInit","updateLog","lang","ts","process","APP_NAME","APP_VERSION","languages","kr","en","updateIpAddr","nothing","password","setRent","rents","setBook","setServerInfo","LOADING","setLogCallback","Router","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","limit","Routes","Route","path","UserSearch","RentalSituation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","APP_ID","graphqlUri","app","Realm","getValidAccessToken","_getValidAccessToken","currentUser","anonymous","refreshAccessToken","accessToken","client","ApolloClient","link","HttpLink","uri","fetch","_fetch","options","headers","Authorization","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider"],"mappings":"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","file":"static/js/main.a585b87c.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport \"./Home.css\";\r\n\r\nfunction Home(props) {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Home\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    if (!props.doc.serverAvailable)\r\n    {\r\n        return (<div id=\"home\" dangerouslySetInnerHTML={{__html:props.text.homeText}}></div>);\r\n    }\r\n    else\r\n    {\r\n        import(\"./PageServer.css\");\r\n        return (<div id=\"home\">\r\n                    <Link className='home-items' to=\"/checkOut\">\r\n                        {props.text.checkOut}\r\n                    </Link>\r\n                    <Link className='home-items' to=\"/return\">\r\n                        {props.text.return}\r\n                    </Link>\r\n                </div>);\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","export const SEARCH_PER_SCREEN = 10;\r\nexport const MAX_SEARCH_ENTRY = 500;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n\r\nexport const getUserState = function(text, state) {\r\n    if (state === \"0\" || state === 0)\r\n        return text.normal;\r\n    else if (state === \"1\" || state === 1)\r\n        return text.overDue;\r\n    else if (state === \"2\" || state === 2)\r\n        return text.stopped;\r\n}\r\n\r\nexport const getBookState = function(text, state) {\r\n    switch (state)\r\n    {\r\n        case \"0\":\r\n        case 0:\r\n            return text.available;\r\n        case \"1\":\r\n        case 1:\r\n            return text.checkedOut;\r\n        case \"2\":\r\n        case 2:\r\n            return text.reserved;\r\n        case \"3\":\r\n        case 3:\r\n            return text.overDue;\r\n        case \"4\":\r\n        case 4:\r\n            return text.lost;\r\n        case \"5\":\r\n        case 5:\r\n            return text.damaged;\r\n        case \"6\":\r\n        case 6:\r\n            return text.given;\r\n        case \"7\":\r\n        case 7:\r\n        default:\r\n            return text.notAvailable;\r\n        case \"8\":\r\n        case 8:\r\n            return text.deleted;\r\n    }\r\n}\r\n\r\nexport const compareBook = function(book1, book2)\r\n{\r\n    if (book1.name > book2.name)\r\n        return 1;\r\n    else if (book1.name < book2.name)\r\n        return -1;\r\n    const claim1 = parseInt(book1.claim_num);\r\n    const claim2 = parseInt(book2.claim_num);\r\n    if (claim1 > claim2)\r\n        return 1;\r\n    else if (claim1 < claim2)\r\n        return -1;\r\n\r\n    return 0;\r\n}\r\n\r\nexport const compareUser = function(a1, a2)\r\n{\r\n    if (a1.name > a2.name)\r\n        return 1;\r\n    else if (a1.name < a2.name)\r\n        return -1;\r\n    else\r\n        return 0;\r\n}\r\n\r\nexport const compareRent = function(a1, a2)\r\n{\r\n    if (a1.rentDate > a2.rentDate)\r\n        return 1;\r\n    else if (a1.rentDate < a2.rentDate)\r\n        return -1;\r\n    if (a1.title > a2.title)\r\n        return 1;\r\n    else if (a1.title < a2.title)\r\n        return -1;\r\n    else\r\n        return 0;\r\n}\r\n\r\nexport const toUtf8 = function(text) {\r\n    return unescape(encodeURIComponent(text));\r\n};\r\n\r\nexport const fromUtf8 = function(text) {\r\n    return decodeURIComponent(escape(text));\r\n};\r\n\r\nexport const loadingId = \"custom-loading-id\";\r\nexport const loggingId = \"custom-logging-id\";\r\n","import gql from \"graphql-tag\";\n\nexport const BOOK_QUERY = gql`\n    query AllBook{\n        books (sortBy: TITLE_ASC, limit:20000) {\n            _id\n            author\n            title\n            claim_num\n            num\n            series\n            category\n            claim\n            publisher\n            seqnum\n            registration_date\n            isbn\n            deleted\n        }\n    }\n`;\n\nexport const RENT_QUERY = gql`\n    query AllRent{\n        rents (limit:20000) {\n            _id\n            book_id\n            user_id\n            rent_date\n            return_date\n            state\n        }\n    }\n`;\n\nexport const USERS_QUERY = gql`\n    query AllUser {\n        users (limit: 20000) {\n            _id\n            name\n            state\n            level\n        }\n    }`;\n\nexport const USER_QUERY = gql`\n    query FindUser($_id: String!){\n        user (query: {_id:$_id}) {\n            _id\n            name\n            state\n            level\n            encrypted_email\n            encrypted_phone\n        }\n    }`;\n\nexport const HISTORY_QUERY = gql`\n    query findLogs($user_id: String!){\n        rentLogs (limit: 20000, query: {user_id: $user_id}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_date\n            user_id\n        }\n    }`;\n\nexport const HISTORY_BOOK_QUERY = gql`\n    query findLogs($book_id: String!){\n        rentLogs (limit: 20000, query: {book_id: $book_id}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_date\n            user_id\n        }\n    }`;\n\nexport const HISTORY_PERIOD_QUERY = gql`\n    query findLogs ($fromTime: String!, $toTime: String!) {\n        rentLogs(limit: 20000, query: {AND: [{timestamp_gte: $fromTime}, {timestamp_lt: $toTime}]}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_date\n            user_id\n        }\n    }`;\n\nexport const NOTICE_QUERY = gql`\n    query GetNotices {\n        notices (sortBy: _ID_DESC, limit:20000) {\n            _id\n            date\n            title\n        }\n    }`;\n\nexport const CONTENT_QUERY = gql`\n    query GetContent ($_id: String!) {\n        notice (query: {_id: $_id}) {\n            _id\n            date\n            title\n            content\n        }\n    }`;\n\nexport const SERVER_QUERY = gql`\n    query GetServerInfo {\n        serverInfo {\n            _id\n            globalIp\n            localIp\n            port\n            proxy\n        }\n    }`;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { SEARCH_PER_SCREEN } from \"../Util\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport {NOTICE_QUERY, CONTENT_QUERY} from \"../api/query.js\";\r\n\r\nfunction Notice(props) {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(-1);\r\n    const { loading: noticeLoading, data: noticeData, error: noticeError } = useQuery(NOTICE_QUERY);\r\n    const [loadSelected, { loading: selectedLoading, data: selectedData, error: selectedError}] = useLazyQuery(CONTENT_QUERY,\r\n            {\"variables\": {\"_id\": selectedId}});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Notice\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Notice\");\r\n//            console.log(noticeData);\r\n//            console.log(noticeError);\r\n//            console.log(noticeLoading);\r\n            if (noticeData)\r\n            {\r\n                setSearchResults(noticeData.notices);\r\n            }\r\n        }, [noticeData, noticeError, noticeLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Content\");\r\n//            console.log(selectedData);\r\n//            console.log(selectedError);\r\n//            console.log(selectedLoading);\r\n            if (selectedData)\r\n            {\r\n//                setSearchResults(selectedData.content);\r\n            }\r\n        }, [selectedData, selectedError, selectedLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n            console.log(\"Page num \" + pageNum.toString() + \" \");\r\n            console.log(length);\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n//           console.log(displayedCodes);\r\n        }, [displayedCodes]\r\n    );\r\n\r\n    const selectEntry = (id) => {\r\n        console.log(\"selected \" + id.toString());\r\n        if (selectedId === id)\r\n        {\r\n            setSelectedId(-1);\r\n        }\r\n        else\r\n        {\r\n            setSelectedId(id);\r\n        }\r\n        loadSelected();\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n//        console.log(result);\r\n        return (\r\n                <tr className=\"\" key={result._id}>\r\n                    <td className=\"\"> {result.date} </td>\r\n                    <td className=\"noticeEntry\" colSpan=\"2\" onClick={() => selectEntry(result._id)}> {result.title}</td>\r\n                </tr>\r\n        );\r\n    }\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (searchResults.length > (pageNum + 1) * SEARCH_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div id=\"notice\">\r\n                <div id=\"title\">\r\n                    <h2>\r\n                        {props.text.notice}\r\n                    </h2>\r\n                </div>\r\n                {selectedId > 0 && selectedData &&\r\n                <div id=\"noticeContent\">\r\n                    <table className=\"content\"><tbody>\r\n                           {showEntry(selectedData.notice)}\r\n                        <tr>\r\n                            <td className=\"content\" colSpan=\"3\">\r\n                                {selectedData.notice.content}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                </div>\r\n                }\r\n                <div id=\"noticeList\">\r\n                    <table><tbody>\r\n                       {displayedCodes.length > 0 && displayedCodes.map((result) => showEntry(result))}\r\n                    </tbody></table>\r\n                </div>\r\n                {searchResults.length > SEARCH_PER_SCREEN && (\r\n                    <div id=\"pageControl\">\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={movePrev}/>\r\n                        </div>\r\n                        <div className=\"pageNum\" id=\"pageNum\">\r\n                            {pageNum+1}\r\n                        </div>\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateNextIcon fontSize=\"large\" sx={{color: (searchResults.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={moveNext}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default Notice;\r\n","import { useEffect, useState } from \"react\";\nimport { SEARCH_PER_SCREEN } from \"./Util\";\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\n\nfunction doNothing() {\n    console.log(\"Do nothing...\");\n}\n\nvar showCallback = doNothing;\nfunction ListView(props) {\n        const [itemList, setItemList] = useState([]);\n//        const [showCallback, setShowCallback] = useState(doNothing);\n        const [pageNum, setPageNum] = useState(0);\n        const [displayList, setDisplayList] = useState([]);\n\n    useEffect(function () {\n        console.log(\"Init List View\");\n    }, []);\n\n    useEffect(function () {\n//        console.log(\"Set Item List\");\n        setItemList(props.list);\n    }, [props.list]);\n\n    useEffect(function () {\n        setPageNum(0);\n    }, [props.keyValue]);\n\n    useEffect(function () {\n        if (props.showCallback)\n        {\n//            console.log(\"Set show callback\");\n //           setShowCallback(props.showCallback);\n            showCallback = props.showCallback;\n        }\n    }, [props.showCallback]);\n\n    useEffect(function () {\n        const length = itemList.length;\n //       console.log(\"Page num \" + pageNum.toString());\n        if (length > SEARCH_PER_SCREEN)\n        {\n            const startIdx = pageNum * SEARCH_PER_SCREEN;\n            const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\n            setDisplayList(itemList.slice(startIdx,startIdx+count));\n        }\n        else\n        {\n            setDisplayList(itemList)\n        }\n    }, [itemList, pageNum]);\n\n    function movePrev() {\n        console.log(\"Prev\");\n        if (pageNum > 0)\n        {\n            setPageNum(pageNum - 1);\n        }\n    }\n\n    function moveNext() {\n        console.log(\"Next\");\n        if (itemList.length > (pageNum + 1) * SEARCH_PER_SCREEN)\n        {\n            setPageNum(pageNum + 1);\n        }\n    }\n\n    return (\n        <div id=\"listView\">\n            {showCallback(displayList, props.detail)}\n            {itemList && itemList.length > SEARCH_PER_SCREEN && (\n                <div id=\"pageControl\">\n                    <div className=\"page\" id = \"page\">\n                        <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={() => {movePrev();} }/>\n                    </div>\n                    <div className=\"pageNum\" id=\"pageNum\">\n                        {pageNum+1}\n                    </div>\n                    <div className=\"page\" id = \"page\">\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: (itemList.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={() => {moveNext();} }/>\n                    </div>\n                </div>)\n            }\n        </div>\n    );\n}\nexport default ListView;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { MAX_SEARCH_ENTRY, getBookState, toUtf8, compareBook } from \"../Util\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport {HISTORY_BOOK_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\nimport Calendar from \"react-calendar\";\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nlet initialized = false;\r\n\r\nfunction Search(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n\r\n    const [bookList, setBookList] = useState([]);\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    const [bookState, setBookState] = useState(0);\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n\r\n    const [bookId, setBookId] = useState(\"\");\r\n\r\n    const [advancedSearch, setAdvancedSearch] = useState(false);\r\n\r\n    const [author, setAuthor] = useState(\"\");\r\n    const [fromId, setFromId] = useState(\"\");\r\n    const [toId, setToId] = useState(\"\");\r\n    const [fromDate, setFromDate] = useState(\"\");\r\n    const [toDate, setToDate] = useState(\"\");\r\n\r\n    const [stateFilter, setStateFilter] = useState(0);\r\n    const [rentHistory, setRentHistory] = useState([]);\r\n\r\n    const [searchQuery] = useDebounce(inputText, 300);\r\n    const [loadHistory, {data: historyData}] = useLazyQuery(HISTORY_BOOK_QUERY,\r\n            {\"variables\": { \"book_id\": bookId }});\r\n    const selectedRef = useRef(\"0\");\r\n    const needConfirmRef = useRef(false);\r\n    const bookStateRef = useRef(0);\r\n    const historyAvailable = useRef(false);\r\n    const { id } = useParams();\r\n\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n            console.log(\"BOOK ID: \" + id);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                console.log(\"Set Book ID \" + id);\r\n //               setInputText(id);\r\n                setBookId(id);\r\n                loadHistory();\r\n            }\r\n            else\r\n            {\r\n//                setInputText(\"\");\r\n                setBookId(\"\");\r\n            }\r\n        }, [id, loadHistory]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findBooks(text) {\r\n                let results = [];\r\n\r\n                if (props.doc.serverAvailable)\r\n                {\r\n                    console.log(toUtf8(text));\r\n                    console.log(btoa(toUtf8(text)));\r\n                    const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                        props.doc.serverInfo.port + \"/book\";\r\n                    console.log(\"=======================\");\r\n                    console.log(\"Request book list\");\r\n                    const param = {\"book\": btoa(toUtf8(text)), \"match\":false};\r\n                    const response = await props.doc.requestGet(url, param);\r\n                    console.log(response)\r\n                    if (!(\"books\" in response.data.return))\r\n                        return results;\r\n                    const books = response.data.return.books;\r\n                    for (let i = 0 ; i < books.length ; i++)\r\n                    {\r\n                        const book = books[i];\r\n                        const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                        const state = book._STATE;\r\n                        let retDate = \"\";\r\n                        if (state === 1 || state === 3 || state === \"1\" || state === \"3\")\r\n                        {\r\n                            retDate = props.text.returnDate + \" \" + book._RETURN;\r\n                        }\r\n                        let resultObject = {\r\n                            index: i,\r\n                            text: resultString,\r\n                            name: book.BOOKNAME,\r\n                            code: book.BARCODE,\r\n                            rent: getBookState(props.text, book._STATE.toString()),\r\n                            retDate: retDate,\r\n                            regDate: book.REG_DATE,\r\n                            author: book.AUTHOR,\r\n                            totalName: book.TOTAL_NAME,\r\n                            claim_num: book.CLAIMNUM,\r\n                            publish: book.PUBLISH,\r\n                            claim: book.CLAIM,\r\n                            state: book._STATE,\r\n                            isbn: book.ISBN\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    results = findBookLocally(text, bookList);\r\n                }\r\n                results.sort(compareBook);\r\n                return results;\r\n            }\r\n            async function query() {\r\n                console.log(\"Refresh\");\r\n                if (advancedSearch) {\r\n                    return;\r\n                }\r\n                var keyword;\r\n                if (bookId !== \"\")\r\n                    keyword = bookId;\r\n                else\r\n                    keyword = searchQuery;\r\n                console.log(keyword)\r\n                if (keyword) {\r\n                    let sr = await findBooks(keyword);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        selectedRef.current = sr[0].code;\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [searchQuery, bookId, bookList, rentList, props, queryRequest, advancedSearch]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"History update\");\r\n            console.log(historyData);\r\n            if (!historyData)\r\n            {\r\n                setRentHistory([])\r\n                historyAvailable.current = false;\r\n                return;\r\n            }\r\n            let history = [];\r\n            for (let i = 0 ; i < historyData.rentLogs.length ; i++)\r\n            {\r\n                const rent = historyData.rentLogs[i];\r\n                if (rent.book_state !== 1)\r\n                    continue;\r\n                let pair = [rent.timestamp];\r\n                if ( \"return_date\" in rent)\r\n                    pair.push(rent.return_date)\r\n                else\r\n                    pair.push(rent.return_date)\r\n                history.push(pair);\r\n            }\r\n            console.log(history.length);\r\n            setRentHistory(history);\r\n            historyAvailable.current = (history.length > 0);\r\n        },\r\n        [historyData]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        initialized = true;\r\n\r\n        let rl = [];\r\n        let rm = {};\r\n        const rented = props.doc.rent;\r\n        for (let i = 0 ; i < rented.length; i++)\r\n        {\r\n           rl.push({code:rented[i].book_id, retDate:rented[i].return_date, state:rented[i].state});\r\n           rm[rented[i].book_id] = rented[i].state;\r\n        }\r\n        setRentList(rl);\r\n\r\n        let bl = [];\r\n        const books = props.doc.book\r\n        for (const key in books)\r\n        {\r\n           const book = books[key];\r\n           const state = (key in rm) ? rm[key] : 0;\r\n           bl.push({code: book._id, name: book.title, state: state, num: book.num, author: book.author, claim: book.claim,\r\n                    regDate: book.registration_date,\r\n                    claim_num: book.claim_num, totalName: book.series, category: book.publisher, publish: book.publisher, isbn: book.isbn, deleted: book.deleted});\r\n        }\r\n        console.log(\"Load\");\r\n        console.log(bl.length);\r\n        setBookList(bl);\r\n\r\n        console.log(bookId);\r\n        if (bookId !== \"\")\r\n        {\r\n            console.log(\"Load history\");\r\n            loadHistory();\r\n        }\r\n    }\r\n\r\n    const selectId = async (code) => {\r\n        console.log(\"Prev \" + selectedRef.current);\r\n        if (searchResults.length === 1 || selectedRef.current === -1 || selectedRef.current !== code)\r\n        {\r\n            console.log(\"Select \" + code);\r\n            setSelectedId(code);\r\n            selectedRef.current = code;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + code);\r\n            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n        }\r\n    }\r\n\r\n    function setState(state)\r\n    {\r\n        console.log(\"Set state \" + state.toString());\r\n        needConfirmRef.current = true;\r\n        setNeedConfirm(true);\r\n        setBookState(state);\r\n        bookStateRef.current = state;\r\n        console.log(selectedId.toString() + needConfirmRef.current);\r\n    }\r\n\r\n    function setSearchState(state)\r\n    {\r\n        const stateStr = state.toString()\r\n        const value = document.getElementById(stateStr).checked;\r\n        console.log(\"Set Search state \" + stateStr + \" Value: \" + value);\r\n        if (stateStr === \"1023\")\r\n        {\r\n            document.getElementById(\"1023\").checked = value;\r\n            document.getElementById(\"0\").checked = value;\r\n            document.getElementById(\"1\").checked = value;\r\n            document.getElementById(\"3\").checked = value;\r\n            document.getElementById(\"4\").checked = value;\r\n            document.getElementById(\"5\").checked = value;\r\n            document.getElementById(\"6\").checked = value;\r\n            document.getElementById(\"7\").checked = value;\r\n            document.getElementById(\"8\").checked = value;\r\n        }\r\n        else\r\n        {\r\n            document.getElementById(stateStr).checked = value;\r\n        }\r\n\r\n        var filter = 0;\r\n        for (var i = 0 ; i < 9 ; i++)\r\n        {\r\n            const idx = i.toString();\r\n            const element = document.getElementById(idx);\r\n            if (element)\r\n                filter |= (element.checked) ? (1 << i) : 0;\r\n        }\r\n        setStateFilter(filter);\r\n        console.log(\"Filter: \" + filter.toString());\r\n    }\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n\r\n        const ipAddr = props.doc.serverInfo.localIp;\r\n        const portNum = props.doc.serverInfo.port;\r\n        if (ipAddr.length === 0 || portNum <= 0)\r\n            return;\r\n\r\n        const url = \"https://\" + ipAddr + \":\" +\r\n            portNum + \"/book\";\r\n        var obj = {};\r\n        obj[\"book\"] = selectedRef.current;\r\n        obj[\"state\"] = bookStateRef.current;\r\n        console.log(\"=======================\");\r\n        console.log(\"Change book state\");\r\n        await props.doc.requestPost(url, obj);\r\n\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n    }\r\n\r\n    const showHistoryEntry = (entry) => {\r\n        return (<tr key={entry[0]}><td key={entry[0] + \"x\"}>{entry[0]}</td><td>{entry[1]}</td></tr>);\r\n    }\r\n\r\n    const showEntry = (result, detail) => {\r\n        const hidden = (result.code !== selectedRef.current);\r\n        const entryId = (hidden) ? \"searchResult\" : \"selectedSearchResult\";\r\n        const flags = [false, false, false, false, false, false, false, false, false, false]\r\n        flags[result.state] = true;\r\n        if (result.state === 1 || result.state === 2 || result.state === 3)\r\n            flags[0] = true;\r\n//        if (!hidden)\r\n//        {\r\n//            console.log(detail);\r\n//            console.log(flags);\r\n//        }\r\n        const rentHistory = detail[2];\r\n        return (\r\n            <div key={result.code}>\r\n            <div id={entryId} onClick={async () => await selectId(result.code)}>\r\n                <table><tbody>\r\n                    <tr className=\"searchTr\">\r\n                        <td className=\"searchTitle\">{result.text}</td>\r\n                        <td className=\"searchRent\">{result.rent}</td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {!hidden &&\r\n            <div>\r\n                <table><tbody>\r\n                <tr key=\"row1\">\r\n                    <td>{result.author} </td>\r\n                    <td colSpan=\"2\" rowSpan=\"2\">{result.totalName + \" \"}<b>{result.name}</b>{\" \" + result.claim_num}</td>\r\n                </tr>\r\n                <tr key=\"row2\">\r\n                    <td>\r\n                        <Link to={\"/search/\"+result.code}>{result.code}</Link>\r\n                    </td>\r\n                </tr>\r\n                <tr key=\"row3\">\r\n                    <td>{result.publish}</td>\r\n                    <td colSpan={result.retDate.length > 0 ? \"1\":\"2\"}>{result.claim}</td>\r\n                    {result.retDate.length > 0 && <td>{result.retDate}</td> }\r\n                </tr>\r\n                </tbody></table>\r\n                <table className=\"rentHistory\" hidden={!historyAvailable.current}><tbody>\r\n                    <tr id=\"titles\"><td>{props.text.rentDate}</td><td>{props.text.returnDate}</td></tr>\r\n                    {rentHistory.map(entry => showHistoryEntry(entry))}\r\n                </tbody></table>\r\n                <div hidden={!props.doc.serverAvailable || !props.doc.admin}>\r\n                    <button className=\"bookStates\" id = \"0\" disabled={flags[0]} onClick={() => setState(0)}> {props.text.available} </button>\r\n                    <button className=\"bookStates\" id = \"4\" disabled={flags[4]} onClick={() => setState(4)}> {props.text.lost} </button>\r\n                    <button className=\"bookStates\" id = \"5\" disabled={flags[5]} onClick={() => setState(5)}> {props.text.damaged} </button>\r\n                    <button className=\"bookStates\" id = \"6\" disabled={flags[6]} onClick={() => setState(6)}> {props.text.given} </button>\r\n                    <button className=\"bookStates\" id = \"7\" disabled={flags[7]} onClick={() => setState(7)}> {props.text.notAvailable} </button>\r\n                    <button className=\"bookStates\" id = \"8\" disabled={flags[8]} onClick={() => setState(8)}> {props.text.deleted} </button>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirmRef.current}>\r\n                    <div id=\"bookName\"> {getBookState(props.text, bookStateRef.current)} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n            </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function showEntries(results, detail)\r\n    {\r\n        console.log(\"Redraw \" + needConfirmRef.current);\r\n        console.log(historyAvailable.current);\r\n        console.log(detail);\r\n        return results.map((result) => showEntry(result, detail))\r\n    }\r\n\r\n    function setPeriod(from, text)\r\n    {\r\n        if (from)\r\n            setFromId(text)\r\n        else\r\n            setToId(text)\r\n    }\r\n\r\n    function findBookLocally(keyword, bookList)\r\n    {\r\n        let results = [];\r\n        console.log(advancedSearch);\r\n        for (let i = 0 ; i < bookList.length ; i++) {\r\n            const row = bookList[i];\r\n            if (results.length >= MAX_SEARCH_ENTRY) break;\r\n\r\n            const text = keyword.toLowerCase();\r\n            if (text.length > 0 &&\r\n                (!row.name || !row.name.toString().toLowerCase().includes(text)) &&\r\n                (!row.totalName || !row.totalName.toString().toLowerCase().includes(text)) &&\r\n                (!row.author || !row.author.toString().toLowerCase().includes(text)) &&\r\n                row.code !== text && row.isbn !== text)\r\n                continue\r\n            if (row.deleted && row.deleted === \"Y\")\r\n                continue\r\n            console.log(row)\r\n\r\n            if (advancedSearch)\r\n            {\r\n                if (author.length > 0 && row.author && !row.author.toString().toLowerCase().includes(author.toLowerCase()))\r\n                    continue;\r\n\r\n                if (fromId.length > 0 && row.code < fromId)\r\n                    continue;\r\n\r\n                if (toId.length > 0 && row.code > toId)\r\n                    continue;\r\n\r\n                const regDate = row.regDate;\r\n\r\n                if (regDate < fromDate || regDate > toDate)\r\n                    continue;\r\n                console.log(row);\r\n                console.log(regDate);\r\n                console.log(regDate < fromDate);\r\n                console.log(regDate > toDate);\r\n\r\n                if (!((1<<row.state) & stateFilter))\r\n                    continue;\r\n            }\r\n            else if (text.length === 0)\r\n                continue;\r\n\r\n            let resultString = `${row.name} ${row.claim_num}`;\r\n            let retDate = \"\";\r\n            let state = \"0\";\r\n            for (const entry of rentList)\r\n            {\r\n                if (entry.code === row.code)\r\n                {\r\n                    state = entry.state;\r\n                    if (state === \"1\" || state === \"3\")\r\n                    {\r\n                        retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            let resultObject = {\r\n                index: i,\r\n                text: resultString,\r\n                name: row.name,\r\n                code: row.code.toString(),\r\n                rent: getBookState(props.text, state),\r\n                retDate: retDate,\r\n                regDate: row.regDate,\r\n                author: row.author,\r\n                totalName: row.totalName,\r\n                claim_num: row.claim_num,\r\n                publish: row.publish,\r\n                claim: row.claim,\r\n                state: parseInt(state),\r\n                isbn: row.isbn\r\n            };\r\n            results.push(resultObject);\r\n//            console.log(resultObject);\r\n        }\r\n        console.log(results.length);\r\n\r\n        return results;\r\n    }\r\n\r\n    function onChangeDate(date)\r\n    {\r\n        console.log(date);\r\n        const date1 = date[0]\r\n        const date2 = date[1]\r\n        const y1 = date1.getFullYear().toString();\r\n        const m1 = (date1.getMonth() + 1).toString().padStart(2, \"0\")\r\n        const d1 = date1.getDate().toString().padStart(2, \"0\");\r\n        const dateStr1 = y1 + \"-\" + m1 + \"-\" + d1;\r\n        console.log(dateStr1);\r\n        setFromDate(dateStr1);\r\n\r\n        const y2 = date2.getFullYear().toString();\r\n        const m2 = (date2.getMonth() + 1).toString().padStart(2, \"0\")\r\n        const d2 = date2.getDate().toString().padStart(2, \"0\");\r\n        const dateStr2 = y2 + \"-\" + m2 + \"-\" + d2;\r\n        console.log(dateStr2);\r\n        setToDate(dateStr2);\r\n    }\r\n\r\n    function searchEntry()\r\n    {\r\n        console.log(\"Search\");\r\n        console.log(fromId);\r\n        console.log(toId);\r\n        console.log(fromDate);\r\n        console.log(toDate);\r\n        let results = findBookLocally(inputText, bookList);\r\n        results.sort(compareBook);\r\n\r\n        let sr = results;\r\n        if (sr.length > 0)\r\n            setSearchResults(sr);\r\n        else\r\n            setSearchResults([]);\r\n        if (sr.length === 1)\r\n            selectedRef.current = sr[0].code;\r\n    }\r\n\r\n    function toggleAdvancedSearch()\r\n    {\r\n        setAdvancedSearch(!advancedSearch);\r\n    }\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <div id=\"title\">\r\n                <h2> {props.text.bookSearch} </h2>\r\n            </div>\r\n            <div id=\"searchContents\" hidden={bookId !== \"\"}>\r\n                <input id=\"searchInput\"\r\n                    placeholder={props.text.searchBook}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n                    <div hidden={!props.doc.admin}>\r\n                        <input type=\"checkbox\" id=\"advancedSearch\" checked={advancedSearch} onChange={() => toggleAdvancedSearch()}/>\r\n                        <label>\r\n                            {props.text.advSearch}\r\n                        </label>\r\n                    </div>\r\n                <div hidden={!advancedSearch}>\r\n                    <div>\r\n                    <label> {props.text.author} </label>\r\n                    <input type=\"text\" id=\"author\" onChange={(event) => {setAuthor(event.target.value)}} />\r\n                    </div>\r\n                    <div>\r\n                    <label> {props.text.bookCode} </label>\r\n                    <input type=\"text\" id=\"fromPeriod\" onChange={(event) => {setPeriod(true, event.target.value);}} />\r\n                    <label> ~  </label>\r\n                    <input type=\"text\" id=\"toPeriod\" onChange={(event) => {setPeriod(false, event.target.value);}} />\r\n                    </div>\r\n                    <div>\r\n                    <label> {props.text.registeredDate} </label>\r\n                    <Calendar onChange={onChangeDate} selectRange={true}/>\r\n                    </div>\r\n                    <div>\r\n                    <table><tbody>\r\n                        <tr key=\"stateName\" className=\"bookData\">\r\n                            <td className =\"stateName\">{props.text.all}</td>\r\n                            <td className =\"stateName\">{props.text.available}</td>\r\n                            <td className =\"stateName\">{props.text.checkedOut}</td>\r\n                            <td className =\"stateName\">{props.text.overDue}</td>\r\n                            <td className =\"stateName\">{props.text.lost}</td>\r\n                            <td className =\"stateName\">{props.text.damaged}</td>\r\n                            <td className =\"stateName\">{props.text.given}</td>\r\n                            <td className =\"stateName\">{props.text.notAvailable}</td>\r\n                            <td className =\"stateName\">{props.text.deleted}</td>\r\n                        </tr>\r\n                        <tr key=\"stateButton\" className=\"bookData\">\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"1023\" onChange={() => setSearchState(1023)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"0\" onChange={() => setSearchState(0)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"1\" onChange={() => setSearchState(1)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"3\" onChange={() => setSearchState(3)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"4\" onChange={() => setSearchState(4)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"5\" onChange={() => setSearchState(5)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"6\" onChange={() => setSearchState(6)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"7\" onChange={() => setSearchState(7)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"8\" onChange={() => setSearchState(8)}/>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                    </div>\r\n                    <div>\r\n                    <button id=\"searchEntry\" onClick={searchEntry}> {props.text.search} </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ListView keyValue={searchQuery} list={searchResults} detail={[selectedId, needConfirm, rentHistory]} showCallback={(entries, detail) => { return showEntries(entries, detail); }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, compareRent } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USER_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\n//import {USER_QUERY, HISTORY_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction CheckOutStatus(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [expireDate, setExpireDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOutStatus initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n\r\n            if (\"autoLogin\" in props.context.cookie)\r\n            {\r\n                const autoLogin = (props.context.cookie.autoLogin === \"true\") ? true : false;\r\n                setAutoLogin(autoLogin);\r\n            }\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            setExpireDate(date.toGMTString());\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.doc.logged]\r\n    );\r\n\r\n    useEffect(() => {\r\n            async function func() {\r\n                console.log(\"User data updated \");\r\n                await compare();\r\n            }\r\n            func();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n            let hist = [];\r\n            const rentLogs = historyData.rentLogs;\r\n//            const rentLogs = historyData.rentLog_tests;\r\n            for (let i = 0 ; i < rentLogs.length ; i++)\r\n            {\r\n                const entry = rentLogs[i];\r\n                if (entry.book_state !== \"1\" && entry.book_state !== 1)\r\n                    continue;\r\n                if (! (\"return_date\" in entry) || ! entry.return_date)\r\n                    continue;\r\n                console.log(entry);\r\n                const id = entry.book_id;\r\n                const title = (id in props.doc.book) ? props.doc.book[id].title : \"N/A\";\r\n                const date = entry.timestamp.split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                const retDate = entry.return_date;\r\n                const claim = (id in props.doc.book) ? props.doc.book[id].claim : \"N/A\";\r\n                hist.push({\"id\": id, \"title\": title, \"rentDate\": date, \"retDate\": retDate, \"claim\": claim});\r\n\r\n            }\r\n            hist.sort(compareRent);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.logged)\r\n        {\r\n            setState(State.LoggedIn);\r\n            const userId = props.doc.userInfo['_id'];\r\n            setUserId(userId);\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            await loadHistory();\r\n        }\r\n        else\r\n        {\r\n            setState(State.LoggedOut);\r\n            setUserId(\"\");\r\n            setPasswordText(\"\");\r\n        }\r\n\r\n        console.log(\"Set title \" + props.doc.logged)\r\n        if (props.doc.logged)\r\n        {\r\n            if (props.doc.adminMode)\r\n                setTitle(props.text.userSearch);\r\n            else\r\n                setTitle(props.text.checkOut);\r\n        }\r\n        else\r\n        {\r\n            setTitle(props.text.logIn);\r\n        }\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const claim = rent[\"claim\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const toggleAutoLogin = () => {\r\n        console.log(\"Toggle autoLogin\");\r\n        const cookieString = \"autoLogin=\" + (autoLogin ? \"false\":\"true\") + \"; expires=\" + expireDate + \";\";\r\n//        console.log(cookieString);\r\n        document.cookie = cookieString;\r\n        setAutoLogin(!autoLogin);\r\n    }\r\n\r\n    const showEntries = (result, retText) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{retText}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        setState(State.LoggingIn);\r\n        setUserId(userText.toUpperCase());\r\n        await loadUser();\r\n        await loadHistory();\r\n        console.log(\"Log In\");\r\n        await compare();\r\n    }\r\n\r\n    const compare = async () => {\r\n        if (!userData || state === State.LoggedOut)\r\n            return;\r\n\r\n        console.log(toast.isActive(loggingId));\r\n        const prop = toastProp;\r\n\r\n        let text;\r\n        if (props.context.checkLogIn(userData.user, passwordText))\r\n        {\r\n            props.doc.logIn(userData.user);\r\n\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            setState(State.LoggedIn);\r\n\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            document.cookie = \"user_id=\" + userId + \"; expires=\" + expireDate + \";\";\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.render = text;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = loggingId;\r\n        if (toast.isActive(loggingId))\r\n        {\r\n            console.log(\"update toast\");\r\n            toast.update(loggingId, prop);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"New toast\");\r\n            toast.info(text, prop);\r\n        }\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {title}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!(state !== State.LoggedIn)}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <input type=\"password\" id=\"searchPassword\"\r\n                    placeholder={props.text.pwHolder}\r\n                    value={passwordText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setPasswordText(event.target.value);\r\n                    }} />\r\n                <div id=\"autoLogin\">\r\n                    <input type=\"checkbox\" id=\"autoLoginButton\" checked={autoLogin} onChange={() => toggleAutoLogin()}/>\r\n                    <label>\r\n                            {props.text.autoLogin}\r\n                    </label>\r\n                </div>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={!(state === State.LoggedIn)}>\r\n                <div>\r\n                    { showEntries(searchResults, props.text.dueDate) }\r\n                </div>\r\n\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <ListView list={history} showCallback={(entries) => { return showEntries(entries, props.text.returnDate); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOutStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, loadingId, getUserState } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\n//import CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport ListView from \"../ListView\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2,\r\n    LoggingOut: 3\r\n}\r\n\r\nfunction CheckOut(props) {\r\n    const [userId, setUserId] = useState(\"\");\r\n\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [bookValue] = useDebounce(bookText, 500);\r\n    const [bookId, setBookId] = useState(\"\");\r\n\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n\r\n    const [barcode, setBarcode] = useState(\"\");\r\n\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n\r\n    const [rented, setRented] = useState([]);\r\n    const [userData, setUserData] = useState({});\r\n    const [bookData, setBookData] = useState({});\r\n    const [state, setState] = useState(State.LoggedOut);\r\n\r\n    const { id } = useParams();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOut initialize\");\r\n            const prefixList = document.getElementsByName(\"idPrefix\");\r\n            for (var i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                const prefix = prefixList[i].id\r\n                if (\"AB\" === prefix)\r\n                    prefixList[i].checked = true\r\n                else\r\n                    prefixList[i].checked = false\r\n\r\n            }\r\n            console.log(\"ID: \" + id);\r\n            if (id && id.length !== 0)\r\n            {\r\n//                setBarcode(id)\r\n                setUserId(id);\r\n                logIn(id);\r\n            }\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n//            console.log(props.doc.serverInfo);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            if (props.doc.admin)\r\n                return;\r\n            import(\"./PageServer.css\");\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                const response = await props.doc.requestGet(url, {});\r\n                const code = response.data.scan;\r\n                if (code) {\r\n                    console.log(code)\r\n                    console.log(state)\r\n                    setBarcode(code)\r\n                }\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!barcode)\r\n                return;\r\n            console.log(\"Updated barcode: \" + barcode);\r\n            console.log(\"state : \" + state);\r\n            if (state === State.LoggedIn)\r\n                setBookId(barcode);\r\n            else if (state === State.LoggedOut)\r\n                logIn(barcode);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [barcode]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            console.log(toast.isActive(loggingId));\r\n            const prop = toastProp;\r\n\r\n            let text;\r\n            let notify = false;\r\n            if (\"USER_CODE\" in userData && state !== State.LoggedIn)\r\n            {\r\n                console.log(\"Set state to LoggedIn from \" + state);\r\n                setState(State.LoggedIn);\r\n\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                text = props.text.logInSucceed;\r\n                notify = true;\r\n            }\r\n            else if (!(\"USER_CODE\" in userData))\r\n            {\r\n                console.log(\"Set state to LoggedOut from \" + state);\r\n\r\n                if (state === State.LoggingIn)\r\n                {\r\n                    prop.type = toast.TYPE.ERROR;\r\n                    text = props.text.logInFail;\r\n                    notify = true;\r\n                }\r\n                setState(State.LoggedOut);\r\n            }\r\n\r\n            if (notify)\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": prop.type})\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in bookData)\r\n            {\r\n                if (bookData._STATE === 0)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    setNeedConfirm(false);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n//                setBarcode(\"\")\r\n                setBookId(\"\");\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [bookData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            console.log(\"Notification \" + notifyRequest.text)\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//            if (\"id\" in notifyRequest)\r\n//                id = notifyRequest.id\r\n\r\n//            prop.toastId = id\r\n//            if (toast.isActive(id))\r\n//                toast.update(id, notifyRequest.text, prop);\r\n//            else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            if (state === State.LoggedIn)\r\n                return;\r\n\r\n            const prefixList = document.getElementsByName(\"idPrefix\");\r\n            var prefix = \"\"\r\n            for (var i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                if (prefixList[i].checked)\r\n                    prefix = prefixList[i].id\r\n                    console.log(\"Pressed [\" + i.toString() + \" \" + prefix + \"]\")\r\n\r\n            }\r\n            let _userId;\r\n            if (userValue[0] === \"A\" || userValue[0] === \"a\")\r\n                _userId = userValue;\r\n            else\r\n                _userId = prefix + userValue;\r\n//                setBarcode(_userId);\r\n            setUserId(_userId);\r\n\r\n        }, [state, userValue]\r\n    );\r\n*/\r\n\r\n    const getUserData = async (userText) => {\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/user?user=\" + userText;\r\n        const param = {\"user\": userText, \"data\":\"nothing\"};\r\n        const response = await props.doc.requestGet(url, param);\r\n        const user = response.data.return;\r\n\r\n        setUserData(user);\r\n        console.log(user);\r\n        setUserId(user.USER_CODE);\r\n    }\r\n\r\n    const logIn = async (inputId = undefined) => {\r\n        var userId;\r\n        var prefix = \"\";\r\n        var i;\r\n        const prefixList = document.getElementsByName(\"idPrefix\");\r\n        if (inputId)\r\n        {\r\n            if (inputId.length <= 2)\r\n                return;\r\n            prefix = inputId.substring(0, 2);\r\n            var found = false;\r\n            for (i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                if (prefix === prefixList[i].id)\r\n                {\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!found)\r\n                return;\r\n            userId = inputId;\r\n        }\r\n        else\r\n        {\r\n            const userValue = document.getElementById('userInput').value;\r\n            for (i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                if (prefixList[i].checked)\r\n                    prefix = prefixList[i].id\r\n                    console.log(\"Pressed [\" + i.toString() + \" \" + prefix + \"]\")\r\n\r\n            }\r\n            if (userValue[0] === \"A\" || userValue[0] === \"a\")\r\n                userId = userValue;\r\n            else\r\n                userId = prefix + userValue;\r\n        }\r\n        console.log(\"LOGIN\");\r\n        console.log(userId);\r\n        if (userId.length === 0)\r\n            return;\r\n        console.log(\"Set state to LoggingIn from \" + state );\r\n        setState(State.LoggingIn);\r\n        const _id = userId.toUpperCase();\r\n        getUserData(_id);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Finish\")\r\n        setUserData({});\r\n        setBookData({});\r\n//        setBarcode(\"\");\r\n        setUserId(\"\");\r\n        setBookId(\"\");\r\n        setRented([])\r\n        navigate(\"/\")\r\n    }\r\n\r\n/*\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n*/\r\n\r\n    useEffect(() => {\r\n        async function setBookValue() {\r\n            if (bookValue.length <= 0)\r\n                return;\r\n            var _bookId;\r\n            if (props.doc.admin)\r\n                _bookId = bookValue;\r\n            else\r\n                _bookId = \"HK\" + bookValue;\r\n            console.log(\"Search book1 \" + _bookId);\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(_bookId)), \"match\": true}};\r\n            const param = {\"book\": _bookId, \"match\": true};\r\n            const response = await props.doc.requestGet(url, param);\r\n            const book = response.data.return;\r\n            console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n            if ('books' in book && 'BOOKNAME' in book.books)\r\n            {\r\n                console.log(book.books)\r\n                setBookData(book.books)\r\n            }\r\n        }\r\n        setBookValue()\r\n    }, [bookValue, props.doc]);\r\n\r\n    useEffect(() => {\r\n        async function setBookId() {\r\n            console.log(\"Set bookId: \" + bookId);\r\n            if (bookId.length === 0)\r\n                return;\r\n            console.log(\"Search book2 \" + bookId);\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n            const param = {\"book\": bookId, \"match\": true};\r\n            const response = await props.doc.requestGet(url, param);\r\n            const book = response.data.return;\r\n            console.log(book)\r\n            if ('books' in book && 'BOOKNAME' in book.books)\r\n            {\r\n                setBookData(book.books)\r\n            }\r\n        }\r\n        setBookId();\r\n    }, [bookId, props.doc]);\r\n\r\n    useEffect(() => {\r\n        async function setUserId() {\r\n            console.log(\"Set userId: \" + userId);\r\n            if (!userId || userId.length === 0)\r\n                return;\r\n            if (userId.search(\"AA\") === 0 || userId.search(\"AB\") === 0 )\r\n            {\r\n                const prefixList = document.getElementsByName(\"idPrefix\");\r\n                const prefix = userId.substring(0, 2);\r\n                for (var i = 0 ; i < prefixList.length ; i++)\r\n                {\r\n                    const id = prefixList[i].id\r\n                    if (prefix === id)\r\n                        prefixList[i].checked = true\r\n                    else\r\n                        prefixList[i].checked = false\r\n\r\n                }\r\n            }\r\n        }\r\n    setUserId();\r\n    }, [userId]);\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(bookData);\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/checkOut\"\r\n        const param = {\r\n            book: bookData.BARCODE,\r\n            user: userId\r\n        };\r\n        const response = await props.doc.requestPost(url, param);\r\n        const ret = response.data.return\r\n        console.log(\"Rent confirmed\");\r\n        console.log(ret)\r\n\r\n        if (ret === \"SUCCESS\")\r\n        {\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.rentSucceed,\r\n                              \"type\": toast.TYPE.SUCCESS})\r\n            rented.push({\"id\": bookData.BARCODE, \"name\": bookData.BOOKNAME})\r\n            console.log(rented)\r\n            setRented(rented)\r\n        }\r\n        else\r\n        {\r\n            let text\r\n            if (ret in props.text)\r\n                text = props.text[ret];\r\n            else\r\n                text = props.text.NOT_AVAILABLE;\r\n            console.log(text)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": text,\r\n                              \"type\": toast.TYPE.ERROR})\r\n        }\r\n        setBookData({});\r\n//        setBarcode(\"\");\r\n        setBookId(\"\");\r\n        getUserData(userId);\r\n    }\r\n\r\n    function showEntry(index, rent)\r\n    {\r\n    /*\r\n        return (<React.Fragment key={index + \"Fragment\"}>\r\n                    <tr key={index}>\r\n                        <td className=\"bookCell\"> {rent.id} </td>\r\n                        <td colSpan=\"3\" className=\"bookCell\"> {rent.name} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    */\r\n        return (<div id=\"bookEntry\" key={rent.id}>\r\n                    <div id=\"bookItem\"> {rent.id} </div>\r\n                    <div id=\"bookItem\"> {rent.name} </div>\r\n                </div>);\r\n\r\n    }\r\n\r\n    function showBook(books)\r\n    {\r\n        return (<div id=\"bookList\">\r\n                    <div id=\"dueDate\">\r\n                    {props.text.dueDate} : {props.doc.dueDate}\r\n                    </div>\r\n                    {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                </div>);\r\n    }\r\n    /*\r\n                    <table><tbody>\r\n                        {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                    </tbody></table>\r\n    */\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setBookData({});\r\n//        setBarcode(\"\")\r\n        setBookId(\"\");\r\n    }\r\n\r\n    function setUserKeyDown(event)\r\n    {\r\n        if (event.key === \"Enter\")\r\n        {\r\n            console.log(event);\r\n            console.log(document.getElementById('userInput').value);\r\n            logIn();\r\n        }\r\n    }\r\n\r\n//            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn ? true : false }>\r\n//            <div id=\"checkOutResult\" hidden={true}>\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.checkOut}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={state === State.LoggedIn}>\r\n                <input type=\"radio\" id = \"AA\" name=\"idPrefix\"/>\r\n                <label htmlFor=\"AA\" className=\"idPrefix\" name=\"idPrefix\"> AA </label>\r\n                <input type=\"radio\" id = \"AB\" name=\"idPrefix\"/>\r\n                <label htmlFor=\"AB\" className=\"idPrefix\" name=\"idPrefix\"> AB </label>\r\n                <input type=\"text\" id=\"userInput\" pattern=\"[0-9]*\" inputMode=\"numeric\"\r\n                    placeholder={props.text.idHolder}\r\n                    onKeyDown={(event) => {\r\n                        setUserKeyDown(event);\r\n                    }}/>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn}>\r\n                {userData.USER_CODE && (\r\n                    <div id=\"userInfo\">\r\n                        <div id=\"userItem\">\r\n                            {userData.USER_CODE + \" : \" + userData.USER_NAME + props.text.nameSuffix}\r\n                        </div>\r\n                        <div id=\"userItem\"> {getUserState(props.text, userData.USER_STATE)} </div>\r\n                        <div id=\"userItem\"> {userData._RENT.length + \" \" + props.text.rentSuffix} </div>\r\n                    </div>\r\n                )}\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                    <label id=\"manualInput\">\r\n                        <div id=\"hkPrefix\">\r\n                        {props.text.numberOnly}\r\n                        </div>\r\n                        <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"bookInput\"\r\n                            placeholder={props.text.bookHolder}\r\n                            onInput={(event) => {\r\n                                setBookText(event.target.value);\r\n                            }} />\r\n                    </label>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmRent} </div>\r\n                    <div id=\"bookName\"> {bookData.AUTHOR + \":\"} </div>\r\n                    <div id=\"bookName\"> {bookData.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={async () => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                {rented.length > 0 &&\r\n                    <ListView list={rented} showCallback={(entry) => {return showBook(entry)}}/>\r\n                }\r\n            </div>\r\n            <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.finish} </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport ListView from \"../ListView\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Return(props) {\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 300);\r\n//    const [initialized, setInitialized] = useState(false);\r\n//    const [userId, setUserId] = useState(\"\");\r\n//    const [state, setState] = useState(State.LoggedOut);\r\n//    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n//                     { \"variables\": { \"_id\": userId } });\r\n//    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n//                     { \"variables\": { \"user_id\": userId } });\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n    const [returned, setReturned] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            props.doc.setCallback(undefined);\r\n            console.log(\"=======================================\");\r\n            console.log(\"Return initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            if (props.doc.admin)\r\n                return;\r\n            import(\"./PageServer.css\")\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr && ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                const response = await props.doc.requestGet(url, {});\r\n                const book = response.data.scan;\r\n                if (book) {\r\n                    console.log(book.search(\"HK\"))\r\n                    if (book.search(\"HK\") === 0) {\r\n                        console.log(barcode + \" -> \" + book)\r\n                        setBarcode(book)\r\n                    }\r\n                }\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n*/\r\n\r\n    useEffect(() => {\r\n        async function setBookId() {\r\n            if (bookText.length > 0)\r\n            {\r\n                var bookId;\r\n                if (props.doc.admin)\r\n                    bookId = bookText;\r\n                else\r\n                    bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const param = {\"book\": bookId, \"match\": true};\r\n                const response = await props.doc.requestGet(url, param);\r\n                const book = response.data.return;\r\n                if ('books' in book && 'BOOKNAME' in book.books)\r\n                {\r\n                    setScannedBook(book.books)\r\n                }\r\n            }\r\n        }\r\n        setBookId();\r\n    }, [searchQuery, props.doc, bookText]);\r\n\r\n    useEffect(() => {\r\n        async function setBarcode()  {\r\n            console.log(\"B\" + barcode);\r\n            if (barcode.length > 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n                const param = {\"book\": bookId, \"match\": true};\r\n                const response = await props.doc.requestGet(url, param);\r\n                const book = response.data.return;\r\n                console.log(book)\r\n                if ('books' in book && 'BOOKNAME' in book.books)\r\n                {\r\n                    setScannedBook(book.books)\r\n                }\r\n            }\r\n        }\r\n        setBarcode();\r\n    }, [barcode, props.doc]);\r\n\r\n/*\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n*/\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 1 || scannedBook._STATE === 3)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    console.log(\"Not rented\")\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.NOT_RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                    setBarcode(\"\")\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//           if (\"id\" in notifyRequest)\r\n//               id = notifyRequest.id\r\n\r\n//           prop.toastId = id\r\n //          if (toast.isActive(id))\r\n//               toast.update(id, notifyRequest.text, prop);\r\n//           else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Returned updated\");\r\n            console.log(returned);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            console.log(\"Update return list\");\r\n            const bookId = \"HK\" + bookText;\r\n            console.log(\"Search book1 \" + bookId);\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n            const param = {\"books\": returned};\r\n            props.doc.requestGet(url, param);\r\n        },\r\n        [returned, bookText, props.doc]\r\n    );\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/return\"\r\n        const param = {\r\n            book: scannedBook.BARCODE\r\n        }\r\n        const response = await props.doc.requestPost(url, param)\r\n        const ret = response.data.return;\r\n        console.log(ret);\r\n        if (ret === \"SUCCESS\")\r\n        {\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.returnSucceed,\r\n                              \"type\": toast.TYPE.SUCCESS})\r\n            returned.push({\"id\": scannedBook.BARCODE, \"name\": scannedBook.BOOKNAME})\r\n            console.log(returned)\r\n            setReturned(returned)\r\n        }\r\n        else\r\n        {\r\n            let text\r\n            if (ret in props.text)\r\n                text = props.text[ret];\r\n            else\r\n                text = props.text.NOT_AVAILABLE;\r\n            console.log(text)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": text,\r\n                              \"type\": toast.TYPE.ERROR})\r\n        }\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    function showEntry(index, rent)\r\n    {\r\n        return (<div id=\"bookEntry\" key={rent.id}>\r\n                    <div id=\"bookItem\"> {rent.id} </div>\r\n                    <div id=\"bookItem\"> {rent.name} </div>\r\n                </div>);\r\n    }\r\n\r\n    function showBook(books)\r\n    {\r\n        return (<div id=\"bookList\">\r\n                    {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                </div>);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Finish\")\r\n        navigate(\"/\")\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.return}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                <label id=\"barcodeScan\" hidden>\r\n                    <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                    <span>\r\n                    </span>\r\n                </label>\r\n                <label id=\"manualInput\">\r\n                    <div id=\"hkPrefix\">\r\n                        {props.text.numberOnly}\r\n                    </div>\r\n                    <input inputMode=\"numeric\" pattern=\"\\d*\" type=\"text\" id=\"searchInput\"\r\n                        placeholder={props.text.bookHolder}\r\n                        onInput={(event) => {\r\n                            setBookText(event.target.value);\r\n                        }} />\r\n                </label>\r\n                </div>\r\n                <div id=\"checkReturn\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmReturn} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\"} </div>\r\n                    <div id=\"bookName\"> {scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                {returned.length > 0 &&\r\n                    <ListView list={returned} showCallback={(entry) => {return showBook(entry)}}/>\r\n                }\r\n            </div>\r\n            <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.finish} </button>\r\n        </div>\r\n    );\r\n}\r\n//                    <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n\r\nexport default Return;\r\n","import { useEffect, useState } from \"react\";\nimport { toUtf8 } from \"./Util\";\nimport \"./UserInfo.css\";\n\nfunction UserInfo(props) {\n    const [needConfirm, setNeedConfirm] = useState(false);\n    const [disabled, setDisabled] = useState(true);\n    const [userInfo, setUserInfo] = useState({});\n\n    useEffect(function() {\n        console.log(\"User Info\");\n        console.log(props.info);\n        document.getElementById('userName').value = props.info.USER_NAME ? props.info.USER_NAME : \"\";\n        document.getElementById('phone').value = props.info.PHONE_NUMBER ? props.info.PHONE_NUMBER : \"\";\n        document.getElementById('email').value = props.info.EMAIL ? props.info.EMAIL : \"\";\n        document.getElementById('address').value = props.info.ADDRESS ? props.info.ADDRESS : \"\";\n        document.getElementById('notice_').value = props.info.NOTICE ? props.info.NOTICE : \"\";\n        document.getElementById('user_level').value = props.info.USER_LEVEL;\n        setUserInfo({\"USER_CODE\": props.info.USER_CODE});\n        setDisabled(true);\n\n    }, [props.info]);\n\n    function setProperty(index, value)\n    {\n        console.log(index);\n        console.log(value);\n        var info = userInfo;\n        switch (index)\n        {\n        case 0:\n            info.USER_NAME = value;\n            break;\n        case 1:\n            info.PHONE_NUMBER = value;\n            break;\n        case 2:\n            info.EMAIL = value;\n            break;\n        case 3:\n            info.ADDRESS = value;\n            break;\n        case 4:\n            info.USER_LEVEL = value;\n            break;\n        case 5:\n            info.NOTICE = value;\n            break;\n        default:\n            break;\n        }\n        const length = Object.keys(info).length;\n        console.log(length);\n//        if (length >= 1 && \"USER_LEVEL\" in info && info.USER_LEVEL >= 0 && info.USER_LEVEL <= 2)\n        if (length > 1)\n            setDisabled(false);\n        setUserInfo(info);\n    }\n\n    async function confirmAction()\n    {\n        console.log(\"Save modification\");\n        console.log(userInfo);\n        const ipAddr = props.doc.serverInfo.localIp;\n        const portNum = props.doc.serverInfo.port;\n        if (ipAddr.length === 0 || portNum <= 0)\n            return;\n\n        const url = \"https://\" + ipAddr + \":\" +\n            portNum + \"/user\";\n\n        var obj = {};\n        console.log(userInfo)\n        for (const key in userInfo)\n        {\n            obj[key] = btoa(toUtf8(userInfo[key]));\n        }\n        const response = await props.doc.requestPost(url, obj);\n        console.log(response);\n        props.refresh(response);\n        setNeedConfirm(false);\n    }\n\n    function cancelAction()\n    {\n        setNeedConfirm(false);\n    }\n\n    return (\n        <div>\n            <table><tbody>\n                <tr key=\"Name\">\n                    <td> {props.text.name} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"userName\" onChange={(event) => {setProperty(0, event.target.value);}} />\n                    </td>\n                </tr>\n                {\"REG_DATE\" in props.info &&\n                    <tr key=\"Register\">\n                        <td> {props.text.registeredDate} </td>\n                        <td colSpan=\"3\" className=\"data\">\n                            {props.info.REG_DATE}\n                        </td>\n                    </tr>\n                }\n                <tr key=\"Phone\">\n                    <td> {props.text.phone} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"phone\" onChange={(event) => {setProperty(1, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Email\">\n                    <td> {props.text.email} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"email\" onChange={(event) => {setProperty(2, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Address\">\n                    <td> {props.text.address} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"address\" onChange={(event) => {setProperty(3, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Notice\">\n                    <td> {props.text.notice_} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"notice_\" onChange={(event) => {setProperty(5, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Level\">\n                    <td> {props.text.level} </td>\n                    <td colSpan=\"3\" className=\"cell\">\n                        <select name=\"User Level\" id=\"user_level\" className=\"dropdown\" onChange={(event) => {setProperty(4, event.target.value);}}>\n                            <option value=\"0\"> {props.text.kid} </option>\n                            <option value=\"1\"> {props.text.adult} </option>\n                            <option value=\"2\"> {props.text.admin} </option>\n                        </select>\n                    </td>\n                </tr>\n            </tbody></table>\n           <button id=\"modify\" hidden={needConfirm} onClick={async () => setNeedConfirm(true)} disabled={disabled}> {props.text.save} </button>\n            <div id=\"checkModify\" hidden={!needConfirm}>\n                <div id=\"noticeMsg\"> {props.text.confirmSave} </div>\n                <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\n                <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\n            </div>\n        </div>\n    );\n}\nexport default UserInfo;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp, MAX_SEARCH_ENTRY, getUserState, toUtf8, compareUser } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { useNavigate, Link, Navigate, useParams } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport UserInfo from \"../UserInfo\";\r\n\r\n//var rentList = [];\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(userText, 300);\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n//    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n    const { id } = useParams();\r\n    const [rentList, setRentList] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n            {\r\n                return;\r\n            }\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"UserSearch initialize\");\r\n            console.log(\"User ID: \" + id);\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc(false);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.users;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n\r\n        if (notify)\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Set title \" + props.logged)\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    async function extend(key)\r\n    {\r\n        console.log(\"Extend \" + key);\r\n        const ipAddr = props.doc.serverInfo.localIp;\r\n        const portNum = props.doc.serverInfo.port;\r\n        if (ipAddr.length === 0 || portNum <= 0)\r\n            return;\r\n\r\n        const url = \"https://\" + ipAddr + \":\" +\r\n            portNum + \"/extend\";\r\n        var obj = {};\r\n        obj[\"book\"] = key\r\n\r\n        const ret = await props.doc.requestPost(url, obj);\r\n        console.log(\"Extended\")\r\n        console.log(ret)\r\n        selectId(selectedRef.current, true);\r\n        if (ret.data.return === \"SUCCESS\")\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.extend, prop);\r\n        }\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const extendCount = rent.extendCount;\r\n        const key = index.toString();\r\n//                        <td colSpan={props.doc.serverAvailable?\"3\":\"2\"} className=\"bookName\">{bookName}</td>\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan={props.doc.serverAvailable?\"2\":\"3\"} className=\"bookName\">{bookName}</td>\r\n                        {props.doc.serverAvailable &&\r\n                            <td className=\"bookName\"><button className=\"extend\" onClick={() => extend(id)}>{props.text.extend + \" (\" + extendCount.toString() + \")\"}</button></td>\r\n                        }\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const selectId = async (id, forceSelect = false) => {\r\n        const rent = await props.doc.getRent(id);\r\n        console.log(rent);\r\n        if (selectedRef.current === -1 || selectedRef.current !== id || forceSelect )\r\n        {\r\n            console.log(\"Select \" + id);\r\n//            setSelectedId(id);\r\n            selectedRef.current = id;\r\n            console.log(\"Set Rent List\");\r\n            console.log(rent)\r\n            setRentList(rent);\r\n//            rentList = rent;\r\n        }\r\n        else if (searchResults.length > 1)\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n//            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n            setRentList([]);\r\n//            rentList = [];\r\n        }\r\n    }\r\n\r\n    const showUser = (user, detail, index) => {\r\n        const key = index.toString();\r\n        return (\r\n                <div key={key}>\r\n                    <table><tbody>\r\n                        <tr key={user.id} className=\"searchTr\" onClick={async ()=> await selectId(user.id)}>\r\n                            <td className=\"bookData\">{user.id}</td>\r\n                            <td className=\"bookData\">{user.name}</td>\r\n                            <td className=\"bookData\">{user.state}</td>\r\n                            <td className=\"bookData\">{user.rent}</td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                        {user.id === selectedRef.current && showEntries(user, detail) }\r\n                </div>\r\n                );\r\n    }\r\n\r\n    const showUsers = (result, detail) => {\r\n        return (<div>\r\n                    {\r\n                        result.map((user, index) => {\r\n                            return showUser(user, detail, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 &&\r\n                        <table><tbody>\r\n                            <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                        </tbody></table>\r\n                    }\r\n                </div>);\r\n    }\r\n\r\n    const showEntries = (user, detail) => {\r\n        console.log(\"Detail\");\r\n        console.log(user);\r\n        return (<>\r\n                    {props.doc.serverAvailable &&\r\n                        <div>\r\n                        <UserInfo text={props.text} doc={props.doc} info={user} refresh={refresh}/>\r\n                        <button id=\"modify\" onClick={() => navigate(\"/checkOut/\" + user.USER_CODE)}> {props.text.checkOut} </button>\r\n                        </div>\r\n                    }\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        detail.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        detail.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </>);\r\n    }\r\n    useEffect(\r\n        () => {\r\n            async function findUsers(text) {\r\n                let results = [];\r\n\r\n//                for (let i = 0 ; i < userList.length ; i++) {\r\n                  for (const key in userList) {\r\n                    const row = userList[key];\r\n                    if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                    if ((row.name && row.name.toString().includes(text)) ||\r\n                        (row.id.toLowerCase() === text.toLowerCase()))\r\n                    {\r\n                        results.push(row);\r\n                    }\r\n                }\r\n                results.sort(compareUser);\r\n                console.log(results);\r\n                return results;\r\n            }\r\n            async function query() {\r\n                const input = userText.trim()\r\n                console.log(\"Query \" + input + \" \" + searchQuery)\r\n                if (input.length > 0 && searchQuery) {\r\n\r\n                    let sr;\r\n                    if (props.doc.serverAvailable)\r\n                    {\r\n                        console.log(\"from CLIB\")\r\n                        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/users\";\r\n                        const param = {\"user\": btoa(toUtf8(input))};\r\n                        const response = await props.doc.requestGet(url, param);\r\n                        const users = response.data.return.data;\r\n                        console.log(response.data.return);\r\n                        sr = [];\r\n                        if (users) {\r\n                            for (const entry of response.data.return.data)\r\n                            {\r\n                                console.log(entry);\r\n                                let user = entry;\r\n                                user.id = entry.USER_CODE;\r\n                                user.name = entry.USER_NAME;\r\n                                user.state = getUserState(props.text, entry.USER_STATE);\r\n                                user.rent = entry._RENT.length;\r\n                                sr.push(user);\r\n                            }\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log(\"from DB\")\r\n                        sr = await findUsers(searchQuery);\r\n                    }\r\n\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                       selectId(sr[0].id);\r\n                   else\r\n                       selectId(0);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n       [searchQuery, props, userList, queryRequest, userText]\r\n    );\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.userSearch}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onChange={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <div>\r\n                    <ListView keyValue={searchQuery} list={searchResults} detail={rentList} showCallback={(entries, detail) => { return showUsers(entries, detail); }}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getBookState, compareRent } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.users;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userList]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.serverAvailable)\r\n        {\r\n            let results = [];\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n            const param = {\"user\": \"*\", \"match\":false};\r\n//            console.log(obj);\r\n            const response = await props.doc.requestGet(url, param);\r\n//           console.log(response)\r\n//            if (!(\"books\" in response.data.return))\r\n//                return results;\r\n            const books = response.data.return.books;\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                const state = book._STATE;\r\n                let retDate = \"\";\r\n                if (state === 1 || state === 3 || state === \"1\" || state === \"3\")\r\n                {\r\n                    retDate = book.RETURN_DATE;\r\n                }\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: book.BOOKNAME,\r\n                    id: book.BARCODE,\r\n                    rent: getBookState(props.text, book.STATS.toString()),\r\n                    rentDate: book.LENT_DATE,\r\n                    retDate: retDate,\r\n                    author: book.AUTHOR,\r\n                    totalName: book.TOTAL_NAME,\r\n                    claim_num: book.CLAMENUM,\r\n                    publish: book.PUBLISH,\r\n                    claim: book.CLAIM,\r\n                    user: book.USER,\r\n                    userName: book.USER_NAME\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compareRent);\r\n            setRentList(results);\r\n        }\r\n        else\r\n        {\r\n\r\n            const rent = await props.doc.getRent();\r\n            console.log(\"Rent\");\r\n            console.log(rent);\r\n            rent.sort(compareRent);\r\n            for (const index in rent)\r\n            {\r\n                const userId = rent[index][\"user\"];\r\n                let userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                rent[index][\"userName\"] = userName;\r\n//                console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n            }\r\n            setRentList(rent);\r\n        }\r\n\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        const claim = rent[\"claim\"];\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"situation\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.situation}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue=\"\" list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { compareRent } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n//    const [initialized, setInitialized] = useState(false);\r\n    const [fromTime, setFromTime] = useState(\"\");\r\n    const [toTime, setToTime] = useState(\"\");\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [loadHistory, {loading: historyLoading, data: historyData, error: historyError }] = useLazyQuery(HISTORY_PERIOD_QUERY,\r\n            {\"variables\": { \"fromTime\" : fromTime, \"toTime\": toTime}});\r\n    const [userList, setUserList] = useState({});\r\n    const [yearValue, setYear] = useState(0);\r\n    const [monthValue, setMonth] = useState(0);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [searchQuery] = useDebounce(query, 300);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            var i;\r\n            var option;\r\n            var year = document.getElementById('year')\r\n            var month = document.getElementById('month')\r\n            for (i = 1; i <= 12 ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                month.add(option, i);\r\n            }\r\n            const thisYear = new Date().getFullYear();\r\n            const thisMonth = new Date().getMonth() + 1;\r\n            const fromYear = 2017;\r\n\r\n            for (i = fromYear ; i <= thisYear ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                year.add(option, i);\r\n            }\r\n\r\n            console.log(thisYear);\r\n            console.log(thisMonth);\r\n            setYear(thisYear);\r\n            setMonth(thisMonth);\r\n            document.getElementById('year').value = thisYear;\r\n            document.getElementById('month').value = thisMonth;\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n//                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.users;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"History update\")\r\n\r\n            if (!historyData)\r\n                return\r\n\r\n//            console.log(historyData.rentLog_tests)\r\n\r\n            const books = historyData.rentLogs;\r\n//            const books = historyData.rentLog_tests;\r\n            let results = [];\r\n            let retDate = \"\";\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const state = book.book_state;\r\n                if (state !== \"1\" && state !== 1)\r\n                    continue\r\n                if (!book.return_date || book.return_date.length === 0)\r\n                    continue\r\n//                console.log(book)\r\n                const bookId = book.book_id;\r\n                const userId = book.user_id;\r\n                var userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                var bookInfo;\r\n                if (bookId in props.doc.book)\r\n                {\r\n                    bookInfo = props.doc.book[bookId];\r\n                }\r\n                else\r\n                {\r\n                    bookInfo = {}\r\n                    bookInfo.author = \"\"\r\n                    bookInfo.totalName = \"\"\r\n                    bookInfo.claim_num = \"\"\r\n                    bookInfo.publish = \"\"\r\n                    bookInfo.title = \"\"\r\n                }\r\n                const resultString = `${bookInfo.title} ${bookInfo.claim_num}`;\r\n                retDate = book.return_date;\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: bookInfo.title,\r\n                    id: bookId,\r\n                    rentDate: book.timestamp,\r\n                    retDate: retDate,\r\n                    author: bookInfo.author,\r\n                    claim_num: bookInfo.claim_num,\r\n                    publish: bookInfo.publisher,\r\n                    claim: bookInfo.claim,\r\n                    user: userId,\r\n                    userName: userName\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compareRent);\r\n//            console.log(results);\r\n            setRentList(results);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, historyLoading, historyError]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        }, [userList]\r\n    );\r\n*/\r\n\r\n/*\r\n    async function updateDoc()\r\n    {\r\n        setInitialized(true);\r\n    }\r\n*/\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const claim = rent[\"claim\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookCell\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n    function setProperty(index, value)\r\n    {\r\n        console.log(index);\r\n        console.log(value);\r\n        switch (index)\r\n        {\r\n            case 0:\r\n                setYear(value);\r\n                break;\r\n            case 1:\r\n                setMonth(parseInt(value));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(function () {\r\n        setQuery(yearValue.toString() + \"-\" + monthValue.toString().padStart(2, \"0\"))\r\n\r\n    }, [yearValue, monthValue]\r\n    );\r\n\r\n    useEffect(function () {\r\n        async function search()\r\n        {\r\n            console.log(\"Search\")\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/history\";\r\n                const param = {\"period\": query};\r\n                const response = await props.doc.requestGet(url, param);\r\n                console.log(response);\r\n\r\n                const books = response.data.return.books;\r\n                let results = [];\r\n                let retDate = \"\";\r\n                for (let i = 0 ; i < books.length ; i++)\r\n                {\r\n                    const book = books[i];\r\n                    const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                    if (\"_RETURN_DATE\" in book)\r\n                    {\r\n                        retDate = book._RETURN_DATE;\r\n                    }\r\n                    let resultObject = {\r\n                        index: i,\r\n                        text: resultString,\r\n                        title: book.BOOKNAME,\r\n                        id: book.BARCODE,\r\n        //                rent: getBookState(props.text, book..toString()),\r\n                        rentDate: book.RENT_DATE,\r\n                        retDate: retDate,\r\n                        author: book.AUTHOR,\r\n                        totalName: book.TOTAL_NAME,\r\n                        claim_num: book.CLAMENUM,\r\n                        publish: book.PUBLISH,\r\n                        claim: book.CLAIM,\r\n                        user: book.USER,\r\n                        userName: book.USER_NAME\r\n                    };\r\n                    results.push(resultObject);\r\n                }\r\n                results.sort(compareRent);\r\n                setRentList(results);\r\n            }\r\n            else\r\n            {\r\n                var queryTo;\r\n                const nextMonth = monthValue + 1\r\n                queryTo = yearValue.toString() + \"-\" + nextMonth.toString().padStart(2, \"0\")\r\n                setFromTime(query)\r\n                setToTime(queryTo)\r\n                console.log(query)\r\n                console.log(queryTo)\r\n\r\n                try {\r\n                    await loadHistory();\r\n                }\r\n                catch (e)\r\n                {\r\n                    console.warn(e.name);\r\n                }\r\n\r\n    /*\r\n                for (const index in rent)\r\n                {\r\n                    const userId = rent[index][\"user\"];\r\n                    let userName;\r\n                    if (userList && userId in userList)\r\n                        userName = userList[userId].name;\r\n                    else\r\n                        userName = \"\"\r\n                    rent[index][\"userName\"] = userName;\r\n                    console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n                }\r\n                setRentList(rent);\r\n    */\r\n            }\r\n        }\r\n        search();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [searchQuery]\r\n    );\r\n\r\n    function movePrev()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month > 1)\r\n        {\r\n            month -= 1\r\n        }\r\n        else\r\n        {\r\n            year -= 1;\r\n            month = 12;\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    function moveNext()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month < 12)\r\n        {\r\n            month += 1\r\n        }\r\n        else\r\n        {\r\n            year += 1\r\n            month = 1\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.history}\r\n                </h2>\r\n            </div>\r\n            <div id=\"searchRange\">\r\n                <div className=\"page\" id = \"page\">\r\n                    <NavigateBeforeIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {movePrev();} }/>\r\n                </div>\r\n                <select name=\"year\" id=\"year\" className=\"dropdown\" onChange={(event) => {setProperty(0, event.target.value);}}/>\r\n                <select name=\"month\" id=\"month\" className=\"dropdown\" onChange={(event) => {setProperty(1, event.target.value);}}/>\r\n                    <div className=\"page\" id = \"page\">\r\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {moveNext();} }/>\r\n                    </div>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue={searchQuery} list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp } from \"../Util\";\r\nimport { Navigate } from 'react-router-dom'\r\nimport UserInfo from \"../UserInfo\";\r\n\r\nfunction NewMember(props) {\r\n//    const [userText, setUserText] = useState(\"\");\r\n    const [userInfo, setUserInfo] = useState({});\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n//    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n//    const [userList, setUserList] = useState({});\r\n//    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized || !props.doc.serverAvailable)\r\n            {\r\n                return;\r\n            }\r\n            import(\"./PageServer.css\");\r\n            console.log(\"=======================================\");\r\n            console.log(\"NewMember initialize\");\r\n            prepareNewMember();\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n*/\r\n\r\n    function prepareNewMember()\r\n    {\r\n        var info = {};\r\n        info.USER_CODE = \"\";\r\n        info.USER_NAME = \"\";\r\n        info.PHONE_NUMBER = \"\";\r\n        info.EMAIL = \"\";\r\n        info.ADDRESS = \"\";\r\n        info.NOTICE = \"\";\r\n        info.USER_LEVEL = -1;\r\n        setUserInfo(info);\r\n    }\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n*/\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n\r\n        const prop = toastProp;\r\n        var text\r\n        if (response.data.return === \"OK\")\r\n        {\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.regSuccess;\r\n            prepareNewMember()\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.regFail;\r\n        }\r\n        prop.autoClose = 3000;\r\n        toast.info(text, prop);\r\n    }\r\n    if (!props.doc.initialized || !props.doc.serverAvailable)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.newMember}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                {props.doc.serverAvailable &&\r\n                    <UserInfo text={props.text} doc={props.doc} info={userInfo} refresh={refresh}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewMember;\r\n","import { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        this.initialized = false;\r\n        this.bookReady = false;\r\n        this.rentReady = false;\r\n        this.userReady = false;\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        this.book = {};\r\n        this.rent = {};\r\n        this.logCallback = undefined;\r\n        this.admin = false;\r\n        this.dueDate = \"\";\r\n        this.serverInfo = {};\r\n        this.serverAvailable = false;\r\n        this.ipAddr = \"\"\r\n    }\r\n\r\n    async requestGet(url, param)\r\n    {\r\n        param.os = navigator.platform;\r\n        const obj = {\"params\": param};\r\n        console.log(\"Request GET : \" + url);\r\n//        console.log(obj);\r\n        const response = await axios.get(url, obj);\r\n        return response;\r\n    }\r\n\r\n    async requestPost(url, param)\r\n    {\r\n        console.log(\"Request POST: \" + url);\r\n        param.os = navigator.platform;\r\n//        console.log(param);\r\n        const response = await axios.post(url, param);\r\n\r\n        return response;\r\n    }\r\n\r\n    async updateIpAddr()\r\n    {\r\n//        const response = await axios.get(\"https://ipv4.seeip.org/jsonip\");\r\n        const response = await axios.get(\"https://api.ipify.org/?format=json\")\r\n        console.log(\"Get IP Address\");\r\n        console.log(response.data);\r\n        const ipAddr = response.data.ip;\r\n        console.log(\"IP addr updated \" + ipAddr)\r\n        this.ipAddr = ipAddr;\r\n        this.checkServerIp()\r\n    }\r\n\r\n    checkServerIp()\r\n    {\r\n        if (this.ipAddr.length === 0 || !this.serverInfo.globalIp)\r\n            return;\r\n        if (this.serverInfo.globalIp === this.ipAddr)\r\n        {\r\n            console.log(\"Server is accessible \" + this.serverInfo.localIp);\r\n            const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n            this.serverAvailable = true;\r\n            axios.get(query, {\"params\": {\"os\": navigator.platform, }})\r\n                .then( (response) => {\r\n                    console.log(\"Server connected\");\r\n                    console.log(response.data);\r\n                    this.admin = response.data.admin;\r\n                    this.dueDate = response.data.dueDate;\r\n                    this.initialized = true;\r\n                })\r\n                .catch(error => {\r\n                  const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n                  window.open(query);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    checkState() {\r\n        if (this.bookReady && this.rentReady) {\r\n            this.initialized = true;\r\n            toast.dismiss();\r\n            if (this.callback) {\r\n                this.callback();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setLogCallback(callback) {\r\n        this.logCallback = callback;\r\n    }\r\n\r\n    setRent(rent) {\r\n        this.rent = rent\r\n        this.rentReady = true;\r\n        this.checkState();\r\n        this.checkRent();\r\n    }\r\n\r\n    setServerInfo(serverInfo)\r\n    {\r\n        console.log(serverInfo)\r\n        this.serverInfo = serverInfo;\r\n        this.serverInfo = {}\r\n        this.serverInfo.globalIp = serverInfo.globalIp;\r\n\r\n        if (serverInfo.proxy)\r\n        {\r\n            this.serverInfo.localIp = \"libserver.hkmcclibrary.duckdns.org\";\r\n            this.serverInfo.port = 443;\r\n        }\r\n        else\r\n        {\r\n            this.serverInfo.localIp = serverInfo.localIp;\r\n            this.serverInfo.port = serverInfo.port;\r\n        }\r\n\r\n\r\n        console.log(this.serverInfo);\r\n        this.checkServerIp()\r\n    }\r\n\r\n    setBook(books) {\r\n        this.book = {};\r\n        for (let i = 0 ; i < books.length ; i++)\r\n        {\r\n            const book = books[i];\r\n            const id = book['_id'];\r\n            this.book[id] = {...book};\r\n            this.book[id].claim = book.claim.replace(/_/g, \" \");\r\n        }\r\n        this.bookReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setUser(users) {\r\n        this.user = {};\r\n        for (let i = 0 ; i < users.length ; i++)\r\n        {\r\n            const user = users[i];\r\n            const id = user.id;\r\n            this.user[id] = user;\r\n            this.user[id][\"rent\"] = 0;\r\n        }\r\n        this.userReady = true;\r\n        this.checkRent();\r\n    }\r\n\r\n    checkRent() {\r\n        if (!this.userReady || !this.rentReady)\r\n        {\r\n            console.log(\"Cannot check rent\");\r\n            return;\r\n        }\r\n//        console.log(this.rent);\r\n        for (let i = 0 ; i < this.rent.length ; i++)\r\n        {\r\n            const state = this.rent[i].state;\r\n\r\n//            console.log(state);\r\n            if (state !== \"1\" && state !== \"3\" && state !== 1 && state !== 3)\r\n                continue;\r\n\r\n            const userId = this.rent[i].user_id;\r\n//            console.log(this.rent[i]);\r\n//           console.log(userId);\r\n//           console.log(userId.length);\r\n            if (userId && userId.length > 0 && userId in this.user)\r\n                this.user[userId][\"rent\"] += 1;\r\n            else\r\n                this.user[userId][\"rent\"] = 1;\r\n        }\r\n        console.log(this.user);\r\n    }\r\n\r\n    logIn(userInfo) {\r\n        console.log(\"Logged in: \" + userInfo['_id']);\r\n        this.logged = true;\r\n        this.userInfo = userInfo;\r\n        if (userInfo['level'] === \"2\" ||\r\n            userInfo['level'] === 2)\r\n            this.admin = true;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n    }\r\n\r\n    logOut() {\r\n        console.log(\"Logged out\");\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        if (this.logCallback)\r\n            this.logCallback(false);\r\n    }\r\n\r\n    async getRent(userId = undefined) {\r\n        let ret = [];\r\n        if (this.serverAvailable) {\r\n            const url = \"https://\" + this.serverInfo.localIp + \":\" +\r\n                this.serverInfo.port + \"/book\";\r\n            const param = {\"user\": userId};\r\n            const result = await this.requestGet(url, param);\r\n            console.log(result);\r\n            if (\"books\" in result.data.return)\r\n            {\r\n                // BARCODE, BOOKNAME, LENT_DATE, RETURN_DATE, STATS\r\n                // id, title, rentDate, retData,  stat\r\n                for (const entry of result.data.return.books)\r\n                {\r\n                    console.log(entry);\r\n                    const book = {'id': entry.BARCODE, 'title': entry.BOOKNAME, 'claim': entry.CLAIM, 'rentDate': entry.LENT_DATE, 'retDate': entry.RETURN_DATE, 'stat': entry.STATS, 'extendCount': entry._EXTEND_COUNT}\r\n                    ret.push(book);\r\n                }\r\n//                ret = result.data.return.books;\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"Check \" + userId);\r\n            console.log(this.bookReady);\r\n            if (!this.bookReady)\r\n                return ret;\r\n    //        console.log(this.rent.length);\r\n            for (let i = 0 ; i < this.rent.length ; i++) {\r\n                const entry = this.rent[i];\r\n                if (userId !== undefined && entry.user_id !== userId)\r\n                    continue;\r\n    //            console.log(entry)\r\n                if (entry.state !== \"1\" && entry.state !== \"3\" && entry.state !== 1 && entry.state !== 3)\r\n                    continue;\r\n    //            console.log(entry);\r\n                const id = entry[\"book_id\"];\r\n                const book = this.book[id];\r\n    //            console.log(book)\r\n                let retEntry = {}\r\n                retEntry[\"id\"] = book._id\r\n                retEntry[\"title\"] = book.title\r\n                retEntry[\"rentDate\"] = entry.rent_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"retDate\"] = entry.return_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"claim\"] = book.claim\r\n                retEntry[\"user\"] = entry.user_id;\r\n                ret.push(retEntry)\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n\r\n    async openDoc() {\r\n        try {\r\n            this.initialized = true;\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.initialized;\r\n    }\r\n\r\n    setCallback(updateFunc)\r\n    {\r\n        console.log(\"Update function registered\");\r\n        this.callback = updateFunc;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","import config from \"./api/key\";\n\nconst NodeRSA = require('node-rsa');\n\nconst prk = new NodeRSA(config[\"privateKey\"]);\n\nclass Context {\n    constructor() {\n        console.log(\"Create Context\");\n\n        console.log(\"Cookies\");\n        const rawCookie = document.cookie;\n        this.cookie = rawCookie\n            .split(\";\")\n            .map(v => v.split(\"=\"))\n            .reduce((acc, v) => {\n                const key = v.shift().trim();\n                const value = v.join(\"=\").trim();\n                acc[decodeURIComponent(key)] = decodeURIComponent(value);\n                return acc;\n            }, {});\n    }\n\n    checkLogIn(user, passwordText) {\n        var matched = false;\n        var passwordTyped;\n        if (user && passwordText.length > 0) {\n            console.log(\"User data available\");\n            const emailDb = user[\"encrypted_email\"];\n            const phoneDb = user[\"encrypted_phone\"];\n\n            passwordTyped = prk.sign(passwordText, 'base64');\n            if (passwordText === emailDb ||\n                passwordText === phoneDb )\n            {\n                passwordTyped = passwordText;\n                matched = true;\n            }\n            else if (emailDb === passwordTyped)\n            {\n//                console.log(\"Email match\");\n                matched = true;\n            }\n            else\n            {\n                var numberString = \"\";\n                for (let i = 0 ; i < passwordText.length ; i++)\n                {\n                    if (!isNaN(passwordText[i]))\n                        numberString += passwordText[i];;\n                }\n                passwordTyped = prk.sign(numberString, 'base64');\n                if (passwordTyped === phoneDb)\n                {\n//                    console.log(\"Phone match\");\n                    matched = true;\n                }\n                else\n                {\n//                    console.log(\"Nothing matched\");\n                }\n            }\n\n//            console.log(\"toast available\");\n        }\n        if (matched)\n        {\n            const date = new Date();\n            const days=2;\n            date.setTime(date.getTime()+(days*24*60*60*1000));\n            const expireDate = date.toGMTString();\n            document.cookie = \"password=\" +  passwordTyped + \"; expires=\" + expireDate + \" ; SameSite=Lax ;\" ;\n        }\n        return matched\n    }\n}\n\nexport default Context;\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Dropdown.css'\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction DropDown(props) {\r\n\r\n    const [dropdown, setDropdown] = useState(false);\r\n\r\n    useEffect(\r\n        () => {\r\n            function close() {\r\n                console.log(\"Close\")\r\n                console.log(dropdown)\r\n                setDropdown(false);\r\n            };\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./DropdownServer.css\");\r\n            }\r\n\r\n            if (dropdown)\r\n            {\r\n                window.addEventListener(\"click\", close);\r\n            }\r\n\r\n            const menu = document.getElementById(\"dropdown-menu\");\r\n//            menu.hidden = !click;\r\n            if (!dropdown)\r\n            {\r\n               menu.classList.remove('is-show');\r\n            }\r\n            else\r\n            {\r\n               menu.classList.add('is-show');\r\n            }\r\n\r\n            return function removeListener() {\r\n                window.removeEventListener(\"click\", close);\r\n            }\r\n\r\n        }, [dropdown, props.doc.logged, props.doc.serverAvailable]\r\n    );\r\n\r\n    const toggleMenu = () => {\r\n        console.log(\"Click menu\")\r\n        setDropdown(!dropdown);\r\n        console.log(dropdown)\r\n    }\r\n\r\n    const logOut = () =>\r\n    {\r\n        props.doc.logOut();\r\n        document.cookie = \"user_id=\";\r\n        document.cookie = \"password=\";\r\n        document.cookie = \"autoLogin=false\";\r\n    }\r\n\r\n    return (<div>\r\n            <div className='menu' onClick={toggleMenu} >\r\n                <MenuIcon className=\"img\" fontSize=\"large\" sx={{ color: \"#ffffff\"}}/>\r\n            </div>\r\n            <div id='dropdown-menu' onClick={() => { setDropdown(false)}} className='dropdown-menu'>\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                    <div className='menu-items'>\r\n                        {props.doc.userInfo[\"_id\"] + \" : \" + props.doc.userInfo[\"name\"] + props.text.nameSuffix}\r\n                    </div>\r\n                    <hr className=\"hline\"/>\r\n                    </>\r\n                }\r\n                <Link className='menu-items' to=\"/\">\r\n                    {props.text.home}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/notice\">\r\n                    {props.text.notice}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/search\">\r\n                    {props.text.bookSearch}\r\n                </Link>\r\n                {props.doc.serverAvailable &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOut\">\r\n                            {props.text.checkOut}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/return\">\r\n                            {props.text.return}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\">\r\n                            {props.text.checkOutStatus}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {props.doc.admin &&\r\n                    <>\r\n                    <hr className=\"hline\"/>\r\n                    <Link className='menu-items' to=\"/userSearch\">\r\n                        {props.text.userSearch}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentalSituation\">\r\n                        {props.text.situation}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentHistory\">\r\n                        {props.text.history}\r\n                    </Link>\r\n                    </>\r\n                }\r\n                {props.doc.serverAvailable && props.doc.admin &&\r\n                    <Link className='menu-items' to=\"/newMember\">\r\n                        {props.text.newMember}\r\n                    </Link>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <hr className=\"hline\"/>\r\n                        <div className='menu-items'>\r\n                            {props.text.logOut}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && !props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\">\r\n                            {props.text.logIn}\r\n                        </Link>\r\n                    </>\r\n                }\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DropDown;\r\n","import React, { useState } from 'react';\r\nimport {isMobile} from \"react-device-detect\";\r\nimport \"./Navbar.css\";\r\nimport DropDown from \"./Dropdown\";\r\n\r\nfunction Navbar(props) {\r\n\r\nreturn (\r\n    <>\r\n        <div id=\"navbar\" className=\"navbar\">\r\n            <div className='title'>\r\n                {isMobile? (<h1>{props.text[\"titleShort\"]}</h1>) : (<h1>{props.text[\"titleLong\"]}</h1>)}\r\n            </div>\r\n            <DropDown text={props.text} doc={props.doc}/>\r\n        </div>\r\n    </>\r\n)\r\n}\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Notice from \"./pages/Notice\";\r\nimport Search from \"./pages/Search\";\r\nimport CheckOutStatus from \"./pages/CheckOutStatus\";\r\nimport CheckOut from \"./pages/CheckOut\";\r\nimport Return from \"./pages/Return\";\r\nimport UserSearch from \"./pages/UserSearch\";\r\nimport RentalSituation from \"./pages/RentalSituation\";\r\nimport RentHistory from \"./pages/RentHistory\";\r\nimport NewMember from \"./pages/NewMember\";\r\n//import Reader from \"./pages/Reader\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\nimport Context from \"./Context\";\r\nimport text from \"./api/text\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"./Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport Navbar from \"./Navbar\";\r\nimport {SERVER_QUERY} from \"./api/query.js\";\r\nimport {BOOK_QUERY, RENT_QUERY, USER_QUERY} from \"./api/query.js\";\r\n//import {BOOK_QUERY, RENT_QUERY, USER_QUERY} from \"./api/query_test.js\";\r\n\r\nconst doc = new Doc();\r\nconst context = new Context();\r\n\r\nconst textString = {};\r\nlet logMsg = \"\"\r\nfunction App() {\r\n\r\n//    const [checkOutStr, setCheckOutStr] = useState(\"\");\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [logged, setLogged] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const { loading: rentLoading, error: rentError, data: rentData } = useQuery(RENT_QUERY);\r\n    const { loading: serverLoading, error: serverError, data: serverData } = useQuery(SERVER_QUERY);\r\n    const [loadBook, { loading: bookLoading, error: bookError, data: bookData }] = useLazyQuery(BOOK_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY, { \"variables\": { \"_id\": userId } });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            console.log(\"Platform: \");\r\n            console.log(navigator.platform);\r\n            logMsg = logMsg + \"<p>Initialize app</p>\";\r\n            console.log(process.env.APP_NAME);\r\n            console.log(process.env.APP_VERSION);\r\n            const lang = navigator.languages;\r\n            console.log(lang);\r\n            let ts = {}\r\n            if (lang.length> 0 && (lang[0].toLowerCase().includes(\"kr\") || lang[0].toLowerCase().includes(\"ko\")))\r\n            {\r\n                ts = text.kr;\r\n            }\r\n            else\r\n            {\r\n                ts = text.en;\r\n            }\r\n            for (let key in ts)\r\n            {\r\n                textString[key] = ts[key];\r\n            }\r\n\r\n            await doc.updateIpAddr();\r\n\r\n            if (\"autoLogin\" in context.cookie &&  context.cookie.autoLogin === \"true\")\r\n            {\r\n                console.log(\"Auto Login: \" + context.cookie.user_id);\r\n                setUserId(context.cookie.user_id);\r\n                console.log(context.cookie.nothing);\r\n                loadUser();\r\n            }\r\n            setInitialized(true);\r\n        }\r\n        initialize();\r\n    }, [loadUser]);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data loaded\");\r\n            if (!userData)\r\n            {\r\n                return;\r\n            }\r\n\r\n//            console.log(\"Login check \" + context.cookie.password);\r\n            const user = userData.user\r\n//            const user = userData.user_test\r\n//            console.log(user);\r\n            if (context.cookie.password && context.checkLogIn(user, context.cookie.password))\r\n            {\r\n                console.log(\"Login suceeded\");\r\n                doc.logIn(user);\r\n            }\r\n\r\n\r\n\r\n        }, [userData]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Rent Query Updated\");\r\n            logMsg = logMsg + \"<p>Rent Query Updated \" + rentLoading + \" \" + rentError + \"</p>\";\r\n            console.log(rentLoading);\r\n            console.log(\"Rent Error\");\r\n            console.log(rentError);\r\n            if (rentData)\r\n            {\r\n                console.log(\"Rent available\");\r\n                logMsg = logMsg + \"<p>Rent available</p>\"\r\n//                console.log(rentData.rents)\r\n                doc.setRent(rentData.rents)\r\n//                doc.setRent(rentData.rent_tests)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [rentLoading, rentError, rentData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Book Query Updated\");\r\n            logMsg = logMsg + \"<p>Book Query Updated</p>\";\r\n            console.log(bookLoading)\r\n            console.log(bookError)\r\n            if (bookData)\r\n            {\r\n                console.log(\"Book available\")\r\n                logMsg = logMsg + \"<p>Book available</p>\";\r\n//                console.log(bookData.books)\r\n                doc.setBook(bookData.books)\r\n//                doc.setBook(bookData.book_tests)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [bookLoading, bookError, bookData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Server Query Updated\");\r\n            logMsg = logMsg + \"<p>Server Query Updated</p>\";\r\n\r\n            console.log(serverData);\r\n            console.log(initialized);\r\n            if (!serverData || !initialized)\r\n                return\r\n\r\n            console.log(\"Server info available\")\r\n            logMsg = logMsg + \"<p>Server info available</p>\";\r\n            console.log(serverData)\r\n            doc.setServerInfo(serverData.serverInfo)\r\n\r\n            if (!doc.serverAvailable)\r\n            {\r\n                console.log(\"Server is not available. Load books from cloud DB\");\r\n                loadBook();\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.LOADING;\r\n                prop.autoClose = false;\r\n                prop.toastId = loadingId;\r\n                toast.loading(textString.loading, prop);\r\n                doc.setLogCallback(updateLog);\r\n            }\r\n        }, [serverLoading, serverError, serverData, loadBook, initialized]\r\n    );\r\n\r\n    function notifyInit()\r\n    {\r\n        const prop = toastProp;\r\n        prop.type = toast.TYPE.SUCCESS;\r\n        prop.render = textString.succeededToOpen;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = \"\";\r\n        toast.info(textString.succeededToOpen, prop);\r\n    }\r\n\r\n    function updateLog(logged) {\r\n        console.log(\"==== Update logging state \" + doc.logged);\r\n//        console.log(doc.userInfo);\r\n        setLogged(doc.logged);\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n        <div className=\"App\">\r\n            <div>\r\n                <ToastContainer\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    limit={10}\r\n                />\r\n            </div>\r\n            <Navbar doc={doc} text={textString}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home doc={doc} text={textString}/>} />\r\n                <Route path=\"/notice\" element={<Notice doc={doc} text={textString} />} />\r\n                <Route path=\"/search/:id?\" element={<Search doc={doc} text={textString}/>} />\r\n                <Route path=\"/checkOutStatus\" element={<CheckOutStatus context={context} doc={doc} text={textString} logged={logged}/>} />\r\n                <Route path=\"/userSearch/:id?\" element={<UserSearch context={context} doc={doc} text={textString} />} />\r\n                <Route path=\"/checkOut/:id?\" element={<CheckOut context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/return\" element={<Return context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentalSituation\" element={<RentalSituation context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentHistory\" element={<RentHistory context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/newMember\" element={<NewMember context={context} doc={doc} text={textString}/>} />\r\n            </Routes>\r\n\r\n            <h3>\r\n                v {process.env.REACT_APP_VERSION}\r\n            </h3>\r\n        </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport * as Realm from \"realm-web\";\r\nimport {\r\n    ApolloClient,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    InMemoryCache,\r\n} from \"@apollo/client\";\r\n\r\nconst APP_ID = 'data-xaque';\r\nconst graphqlUri = `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\r\nconst app = new Realm.App(APP_ID);\r\n\r\n// Gets a valid Realm user access token to authenticate requests\r\nasync function getValidAccessToken() {\r\n    // Guarantee that there's a logged in user with a valid access token\r\n    if (!app.currentUser) {\r\n        // If no user is logged in, log in an anonymous user. The logged in user will have a valid\r\n        // access token.\r\n        await app.logIn(Realm.Credentials.anonymous());\r\n//        await app.logIn(apiKey);\r\n    } else {\r\n        // An already logged in user's access token might be stale. Tokens must be refreshed after\r\n        // 30 minutes. To guarantee that the token is valid, we refresh the user's access token.\r\n        await app.currentUser.refreshAccessToken();\r\n    }\r\n//    console.log(\"AccessToken: [\" + app.currentUser.accessToken + \"]\");\r\n\r\n    return app.currentUser.accessToken;\r\n}\r\n\r\n// Configure the ApolloClient to connect to your app's GraphQL endpoint\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\r\n        // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\r\n        // access token before sending the request.\r\n        fetch: async (uri, options) => {\r\n            const accessToken = await getValidAccessToken();\r\n            options.headers.Authorization = `Bearer ${accessToken}`;\r\n            return fetch(uri, options);\r\n        },\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}