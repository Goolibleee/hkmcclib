{"version":3,"sources":["Util.js","pages/Home.js","api/query.js","pages/Notice.js","pages/Search.js","pages/Reader.js","pages/CheckOutStatus.js","pages/CheckOut.js","pages/Return.js","pages/UserSearch.js","Doc.js","Context.js","Dropdown.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["SEARCH_PER_SCREEN","MAX_SEARCH_ENTRY","String","prototype","format","formatted","this","i","arguments","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","getUserState","text","state","normal","overDue","stopped","getBookState","available","checkedOut","notAvailable","toUtf8","unescape","encodeURIComponent","loadingId","loggingId","Home","props","useEffect","_initialize","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","console","log","doc","setCallback","stop","apply","initialize","_jsx","id","dangerouslySetInnerHTML","__html","homeText","BOOK_QUERY","gql","_templateObject","_taggedTemplateLiteral","RENT_QUERY","_templateObject2","USERS_QUERY","_templateObject3","USER_QUERY","_templateObject4","HISTORY_QUERY","_templateObject5","NOTICE_QUERY","_templateObject6","CONTENT_QUERY","_templateObject7","SERVER_QUERY","_templateObject8","Notice","_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useState3","_useState4","displayedCodes","setDisplayedCodes","_useState5","_useState6","pageNum","setPageNum","_useState7","_useState8","selectedId","setSelectedId","_useQuery","useQuery","noticeLoading","loading","noticeData","data","noticeError","error","_useLazyQuery","useLazyQuery","_useLazyQuery2","loadSelected","_useLazyQuery2$","selectedLoading","selectedData","selectedError","notices","toString","startIdx","count","Math","min","slice","showEntry","result","_jsxs","className","children","date","colSpan","onClick","_id","title","notice","content","map","NavigateBeforeIcon","fontSize","sx","color","NavigateNextIcon","initialized","Search","inputText","setInputText","_useDebounce","useDebounce","searchQuery","_useState9","_useState10","_useState11","_useState12","bookList","setBookList","_useState13","_useState14","rentList","setRentList","useParams","updateDoc","_updateDoc","_callee6","rl","rented","bl","books","key","book","_context6","rent","push","code","book_id","retDate","return_date","name","num","author","claim","claim_num","totalName","series","category","publisher","publish","isOpen","findBooks","_x","_findBooks","_callee2","results","url","obj","response","resultString","resultObject","_i","row","_resultString","_retDate","_state","_iterator","_step","_entry","_resultObject","_context2","serverAvailable","btoa","serverInfo","localIp","port","axios","get","sent","return","concat","BOOKNAME","CLAIMNUM","_STATE","returnDate","_RETURN","index","BARCODE","AUTHOR","TOTAL_NAME","CLAMENUM","PUBLISH","CLAIM","abrupt","includes","_createForOfIteratorHelper","s","n","done","entry","value","t0","e","f","finish","sort","a","b","_query","_callee3","sr","_context3","query","selectId","_ref","_callee4","_context4","_x2","bookSearch","placeholder","searchBook","onChange","event","target","hidden","entryId","_callee5","_context5","rowSpan","Reader","State","LoggedOut","LoggingIn","LoggedIn","CheckOutStatus","userText","setUserText","passwordText","setPasswordText","setInitialized","userId","setUserId","setState","history","setHistory","_useState15","_useState16","autoLogin","setAutoLogin","loadUser","userData","_useLazyQuery3","_useLazyQuery4","loadHistory","historyData","_useState17","_useState18","expireDate","setExpireDate","_useState19","_useState20","setTitle","_userId","logged","userInfo","getRent","adminMode","userSearch","checkOut","logIn","_autoLogin","context","cookie","Date","setTime","getTime","days","toGMTString","compare","rawHist","bookReady","rentReady","split","s1","s2","hist","j","showEntries","rentDate","bookName","React","Fragment","Link","to","showRented","noEntry","toUpperCase","toast","isActive","prop","checkLogIn","user","type","TYPE","SUCCESS","logInSucceed","document","ERROR","logInFail","render","toastId","update","info","idHolder","disabled","onInput","pwHolder","checked","cookieString","toggleAutoLogin","LoggingOut","CheckOut","bookText","setBookText","setUserData","scannedBook","setScannedBook","needConfirm","setNeedConfirm","notifyRequest","setNotifyRequest","notify","RENTED","getElementById","updateUser","JSON","stringify","_ref2","logOut","_ref3","imageCaptured","files","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","getBase64","then","img","method","mode","crossDomain","headers","withCredentials","credentials","image","INVALID_BOOK","bookId","USER_CODE","USER_NAME","nameSuffix","USER_STATE","_RENT","rentSuffix","CameraAltIcon","accept","capture","inputMode","pattern","bookHolder","confirmRent","ret","rentSucceed","NOT_AVAILABLE","confirmAction","Return","NOT_RENTED","confirmReturn","returnSucceed","userLoading","userListData","userError","userList","setUserList","setRented","_args6","succeededToOpen","list","users","level","setUser","getUser","_Fragment","findUsers","_findUsers","keys","t1","toLowerCase","admin","showUser","Doc","_classCallCheck","userReady","logCallback","ipAddr","_createClass","_updateIpAddr","ip","checkServerIp","globalIp","dismiss","callback","checkState","checkRent","user_id","retEntry","_openDoc","updateFunc","prk","require","config","Context","rawCookie","v","reduce","acc","shift","trim","join","decodeURIComponent","passwordTyped","matched","emailDb","encrypted_email","phoneDb","encrypted_phone","sign","numberString","isNaN","DropDown","dropdown","setDropdown","click","setClick","menu","classList","add","remove","home","checkOutStatus","Navbar","isMobile","maxWidth","style","width","MenuIcon","textString","logMsg","App","setLogged","rentLoading","rentError","rentData","_useQuery2","serverLoading","serverError","serverData","loadBook","bookLoading","bookError","bookData","notifyInit","updateLog","lang","ts","process","APP_NAME","APP_VERSION","navigator","languages","kr","en","updateIpAddr","nothing","password","setRent","rents","setBook","setServerInfo","LOADING","setLogCallback","Router","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","limit","Routes","Route","path","element","UserSearch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","APP_ID","graphqlUri","app","Realm","getValidAccessToken","_getValidAccessToken","currentUser","anonymous","refreshAccessToken","accessToken","client","ApolloClient","link","HttpLink","uri","fetch","_fetch","options","Authorization","_x3","_x4","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider"],"mappings":"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","file":"static/js/main.14ef8600.chunk.js","sourcesContent":["export const SEARCH_PER_SCREEN = 10;\r\nexport const MAX_SEARCH_ENTRY = 500;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n\r\nexport const getUserState = function(text, state) {\r\n    if (state == \"0\")\r\n        return text.normal;\r\n    else if (state == \"1\")\r\n        return text.overDue;\r\n    else if (state == \"2\")\r\n        return text.stopped;\r\n}\r\n\r\nexport const getBookState = function(text, state) {\r\n    if (state === \"0\")\r\n    {\r\n        return text.available;\r\n    }\r\n    else if (state === \"1\")\r\n    {\r\n        return text.checkedOut;\r\n    }\r\n    else if (state === \"3\")\r\n    {\r\n        return text.overDue;\r\n    }\r\n    else\r\n    {\r\n        return text.notAvailable;\r\n    }\r\n}\r\n\r\nexport const toUtf8 = function(text) {\r\n    return unescape(encodeURIComponent(text));\r\n};\r\n\r\nexport const fromUtf8 = function(text) {\r\n    return decodeURIComponent(escape(text));\r\n};\r\n\r\nexport const loadingId = \"custom-loading-id\";\r\nexport const loggingId = \"custom-logging-id\";\r\n","import React, { useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"./Home.css\";\r\nimport { toastProp } from \"../Util\";\r\n\r\nfunction Home(props) {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Home\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (<div id=\"home\" dangerouslySetInnerHTML={{__html:props.text.homeText}}></div>);\r\n}\r\n\r\nexport default Home;\r\n","import gql from \"graphql-tag\";\n\nexport const BOOK_QUERY = gql`\n    query AllBook{\n        books (sortBy: TITLE_ASC, limit:20000) {\n            _id\n            author\n            title\n            claim_num\n            num\n            series\n            category\n            claim\n            publisher\n            seqnum\n        }\n    }\n`;\n\nexport const RENT_QUERY = gql`\n    query AllRent{\n        rents (limit:20000) {\n            _id\n            book_id\n            user_id\n            rent_date\n            return_date\n            state\n        }\n    }\n`;\n\nexport const USERS_QUERY = gql`\n    query AllUser {\n        users (limit: 20000) {\n            _id\n            name\n            state\n            level\n        }\n    }`;\n\nexport const USER_QUERY = gql`\n    query FindUser($_id: String!){\n        user (query: {_id:$_id}) {\n            _id\n            name\n            state\n            level\n            encrypted_email\n            encrypted_phone\n        }\n    }`;\n\nexport const HISTORY_QUERY = gql`\n    query findLogs($user_id: String!){\n        rentLogs (query: {user_id: $user_id}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            user_id\n        }\n    }`;\n\nexport const NOTICE_QUERY = gql`\n    query GetNotices {\n        notices (sortBy: _ID_DESC, limit:20000) {\n            _id\n            date\n            title\n        }\n    }`;\n\nexport const CONTENT_QUERY = gql`\n    query GetContent ($_id: String!) {\n        notice (query: {_id: $_id}) {\n            _id\n            date\n            title\n            content\n        }\n    }`;\n\nexport const SERVER_QUERY = gql`\n    query GetServerInfo {\n        serverInfo {\n            _id\n            globalIp\n            localIp\n            port\n        }\n    }`;\n","import React, { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp } from \"../Util\";\r\nimport \"./Page.css\"\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { SEARCH_PER_SCREEN } from \"../Util\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport {NOTICE_QUERY, CONTENT_QUERY} from \"../api/query.js\";\r\n\r\nfunction Notice(props) {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(-1);\r\n    const { loading: noticeLoading, data: noticeData, error: noticeError } = useQuery(NOTICE_QUERY);\r\n    const [loadSelected, { loading: selectedLoading, data: selectedData, error: selectedError}] = useLazyQuery(CONTENT_QUERY,\r\n            {\"variables\": {\"_id\": selectedId}});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Notice\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Notice\");\r\n//            console.log(noticeData);\r\n//            console.log(noticeError);\r\n//            console.log(noticeLoading);\r\n            if (noticeData)\r\n            {\r\n                setSearchResults(noticeData.notices);\r\n            }\r\n        }, [noticeData, noticeError, noticeLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Content\");\r\n//            console.log(selectedData);\r\n//            console.log(selectedError);\r\n//            console.log(selectedLoading);\r\n            if (selectedData)\r\n            {\r\n//                setSearchResults(selectedData.content);\r\n            }\r\n        }, [selectedData, selectedError, selectedLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n            console.log(\"Page num \" + pageNum.toString() + \" \");\r\n            console.log(length);\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n//           console.log(displayedCodes);\r\n        }, [displayedCodes]\r\n    );\r\n\r\n    const selectEntry = (id) => {\r\n        console.log(\"selected \" + id.toString());\r\n        if (selectedId === id)\r\n        {\r\n            setSelectedId(-1);\r\n        }\r\n        else\r\n        {\r\n            setSelectedId(id);\r\n        }\r\n        loadSelected();\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n//        console.log(result);\r\n        return (\r\n                <tr className=\"\" key={result._id}>\r\n                    <td className=\"\"> {result.date} </td>\r\n                    <td className=\"noticeEntry\" colSpan=\"2\" onClick={() => selectEntry(result._id)}> {result.title}</td>\r\n                </tr>\r\n        );\r\n    }\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (searchResults.length > (pageNum + 1) * SEARCH_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div id=\"notice\">\r\n                <div id=\"title\">\r\n                    <h2>\r\n                        {props.text.notice}\r\n                    </h2>\r\n                </div>\r\n                {selectedId > 0 && selectedData &&\r\n                <div id=\"noticeContent\">\r\n                    <table className=\"content\"><tbody>\r\n                           {showEntry(selectedData.notice)}\r\n                        <tr>\r\n                            <td className=\"content\" colSpan=\"3\">\r\n                                {selectedData.notice.content}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                </div>\r\n                }\r\n                <div id=\"noticeList\">\r\n                    <table><tbody>\r\n                       {displayedCodes.length > 0 && displayedCodes.map((result) => showEntry(result))}\r\n                    </tbody></table>\r\n                </div>\r\n                {searchResults.length > SEARCH_PER_SCREEN && (\r\n                    <div id=\"pageControl\">\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={movePrev}/>\r\n                        </div>\r\n                        <div className=\"pageNum\" id=\"pageNum\">\r\n                            {pageNum+1}\r\n                        </div>\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateNextIcon fontSize=\"large\" sx={{color: (searchResults.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={moveNext}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default Notice;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp } from \"../Util\";\r\nimport { SEARCH_PER_SCREEN, MAX_SEARCH_ENTRY, getBookState, toUtf8 } from \"../Util\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nlet initialized = false;\r\n\r\nfunction Search(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(inputText, 50);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n\r\n    const [bookList, setBookList] = useState([]);\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"BOOK ID: \" + id);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setInputText(id);\r\n            }\r\n            else\r\n            {\r\n                setInputText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findBooks(text) {\r\n                let results = [];\r\n\r\n                if (props.doc.serverAvailable)\r\n                {\r\n                    console.log(toUtf8(text));\r\n                    console.log(btoa(toUtf8(text)));\r\n                    const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                        props.doc.serverInfo.port + \"/book\";\r\n                    const obj = {\"params\": {\"book\": btoa(toUtf8(text)), \"metch\":false}};\r\n                    console.log(obj);\r\n                    const response = await axios.get(url, obj);\r\n                    console.log(response)\r\n                    const books = response.data.return;\r\n                    let retDate = \"\";\r\n                    for (let i = 0 ; i < books.length ; i++)\r\n                    {\r\n                        const entry = {};\r\n                        const book = books[i];\r\n                        const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                        const state = book._STATE;\r\n                        if (state === 1 || state === 3)\r\n                        {\r\n                            retDate = props.text.returnDate + \" \" + book._RETURN;\r\n                        }\r\n                        let resultObject = {\r\n                            index: i,\r\n                            text: resultString,\r\n                            name: book.BOOKNAME,\r\n                            code: book.BARCODE,\r\n                            rent: getBookState(props.text, book._STATE.toString()),\r\n                            retDate: retDate,\r\n                            author: book.AUTHOR,\r\n                            totalName: book.TOTAL_NAME,\r\n                            claim_num: book.CLAMENUM,\r\n                            publish: book.PUBLISH,\r\n                            claim: book.CLAIM\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n\r\n                    for (let i = 0 ; i < bookList.length ; i++) {\r\n                        const row = bookList[i];\r\n                        if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                        if ((row.name && row.name.toString().includes(text)) ||\r\n                            (row.code === text))\r\n                        {\r\n                            let resultString = `${row.name} ${row.claim_num}`;\r\n                            let rent = props.text.available;\r\n                            let retDate = \"\";\r\n                            let state = \"0\";\r\n                            for (const entry of rentList)\r\n                            {\r\n                                if (entry.code === row.code)\r\n                                {\r\n                                    state = entry.state;\r\n                                    if (state === \"1\" || state === \"3\")\r\n                                    {\r\n                                        retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n    //                        if (rentList.includes(row.code))\r\n    //                            rent = props.text.checkedOut;\r\n    //                        else\r\n    //                            rent = props.text.available;\r\n                            let resultObject = {\r\n                                index: i,\r\n                                text: resultString,\r\n                                name: row.name,\r\n                                code: row.code.toString(),\r\n                                rent: getBookState(props.text, state),\r\n                                retDate: retDate,\r\n                                author: row.author,\r\n                                totalName: row.totalName,\r\n                                claim_num: row.claim_num,\r\n                                publish: row.publish,\r\n                                claim: row.claim\r\n                            };\r\n                            results.push(resultObject);\r\n                        }\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a['text'] > b['text']; });\r\n                return results;\r\n            }\r\n            async function query() {\r\n                if (searchQuery) {\r\n                    let sr = await findBooks(searchQuery);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        setSelectedId(sr[0].index);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n                setPageNum(0);\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, bookList, rentList, props]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n                console.log(\"Page num \" + pageNum.toString());\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        initialized = true;\r\n\r\n        let rl = [];\r\n        const rented = props.doc.rent;\r\n        for (let i = 0 ; i < rented.length; i++)\r\n        {\r\n           rl.push({code:rented[i].book_id, retDate:rented[i].return_date, state:rented[i].state});\r\n        }\r\n        setRentList(rl);\r\n\r\n        let bl = [];\r\n        const books = props.doc.book\r\n        for (const key in books)\r\n        {\r\n           const book = books[key];\r\n           bl.push({code: book._id, name: book.title, num: book.num, author: book.author, claim: book.claim,\r\n                    claim_num: book.claim_num, totalName: book.series, category: book.publisher, publish: book.publisher});\r\n        }\r\n        console.log(\"Load\");\r\n        console.log(books.length);\r\n        setBookList(bl);\r\n    }\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (searchResults.length > (pageNum + 1) * SEARCH_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n\r\n    const selectId = async (id) => {\r\n        if (selectedId === -1 || selectedId !== id)\r\n        {\r\n            console.log(\"Select \" + id);\r\n            setSelectedId(id);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n            setSelectedId(-1);\r\n        }\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n        const hidden = (result.index !== selectedId);\r\n        const entryId = (hidden) ? \"searchResult\" : \"selectedSearchResult\";\r\n        return (\r\n            <div key={result.code}>\r\n            <div id={entryId} onClick={async () => await selectId(result.index)}>\r\n                <table><tbody>\r\n                    <tr className=\"searchTr\">\r\n                        <td className=\"searchTitle\"> {result.text}</td>\r\n                        <td className=\"searchRent\"> {result.rent} </td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {!hidden &&\r\n            <div>\r\n                <table><tbody>\r\n                <tr>\r\n                    <td>{result.author} </td>\r\n                    <td colSpan=\"2\" rowSpan=\"2\">{result.totalName} <b>{result.name}</b> { result.claim_num} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.code} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.publish}</td>\r\n                    <td colSpan={result.retDate.length > 0 ? \"1\":\"2\"}>{result.claim} </td>\r\n                    {result.retDate.length > 0 && <td>{result.retDate}</td> }\r\n                </tr>\r\n                </tbody></table>\r\n            </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <div id=\"title\">\r\n                <h2> {props.text.bookSearch} </h2>\r\n            </div>\r\n            <div id=\"searchContents\">\r\n                <input id=\"searchInput\"\r\n                    placeholder={props.text.searchBook}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n\r\n                {displayedCodes.map((result) => showEntry(result))}\r\n            </div>\r\n            {searchResults.length > SEARCH_PER_SCREEN && (\r\n                <div id=\"pageControl\">\r\n                    <div className=\"page\" id = \"page\">\r\n                        <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={movePrev}/>\r\n                    </div>\r\n                    <div className=\"pageNum\" id=\"pageNum\">\r\n                        {pageNum+1}\r\n                    </div>\r\n                    <div className=\"page\" id = \"page\">\r\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: (searchResults.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={moveNext}/>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n//                        <NavigateBeforeIcon fontSize=\"large\" hidden={pageNum === 0 ? \"hidden\":\"\"} color=\"primary\" onClick={movePrev}/>\r\n//                        <NavigateBeforeIcon id=\"prevPage\" fontSize=\"large\" color=\"primary\" onClick={movePrev} />\r\n//                        {pageNum !== 0 ?\r\n//                         <button id=\"prevPage\" hidden onClick={movePrev}> &lt;&lt; </button> : null}\r\n\r\nexport default Search;\r\n","import React, { useEffect, useRef, useState } from \"react\";\nimport \"./Reader.css\";\nimport axios from \"axios\";\n\n\nfunction Reader(props) {\n    const videoRef = useRef();\n    const canvasRef = useRef();\n    const overlayRef = useRef();\n    const [result, setResult] = useState();\n    const [resolution, setResolution] = useState([0,0]);\n\n    useEffect(\n        function () {\n            if (result) {\n                props.onScan(result.data);\n                setResult(null);\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [result]\n    );\n\n    useEffect(function () {\n        let isMounted = true;\n        console.log(\"Set interval\");\n        const inter = setInterval(() => {\n            if (!isMounted)\n            {\n                console.log(\"Unmounted reader call\");\n                return;\n            }\n            requestAnimationFrame(tick);\n        }, 2000);\n        return () => {\n            console.log(\"Clear interval for reader\");\n            isMounted = false;\n            clearInterval(inter);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(\n        function () {\n            navigator.mediaDevices\n                .getUserMedia({ video: { facingMode: \"environment\", zoom: true, width:480, height:640 } })\n                .then(function (stream) {\n                    console.log(stream);\n                    console.log(\"TEST\");\n                    try {\n                        videoRef.current.srcObject = stream;\n                        videoRef.current.setAttribute(\"playsinline\", true); // required to tell iOS safari we don't want fullscreen\n                        videoRef.current.play();\n                        /*\n                        const [track] = stream.getVideoTracks();\n                        const capabilities = track.getCapabilities();\n                        const settings = track.getSettings();\n                        const imageWidth  = videoRef.current.videoWidth;\n                        const imageHeight = videoRef.current.videoHeight;\n                        setResolution([imageWidth, imageHeight]);\n                        console.log(\"Set resulution \" + imageWidth.toString() + \"x\" + imageHeight.toString());\n\n                        if (capabilities.focusDistance)\n                        {\n                            const text = document.getElementsById(\"text\").innerHtml(\"Change focus\");\n                            track.applyConstraints({advanced: [ {focusMode: \"auto\", focusDistance: capabilities.focusDistance.min}]});\n                        }\n                        else\n                        {\n                            const text = document.getElementsById(\"text\").innerHtml(\"Cannot change focus\");\n                        }\n                        */\n                    } catch {}\n                });\n            console.log(window.innerWidth.toString() + \"x\" + window.innerHeight.toString());\n        },\n        [videoRef]\n    );\n    useEffect(\n        function () {\n            var ctx = overlayRef.current.getContext(\"2d\");\n            const imageWidth  = videoRef.current.videoWidth;\n            const imageHeight = videoRef.current.videoHeight;\n            console.log(\"Resolution changed \" + imageWidth.toString() + \"x\" + imageHeight.toString());\n //           drawLine(ctx, { x: 20, y: 20, x1: 20, y1: 100 });\n\n            drawLine(ctx, { x: 0, y: imageHeight/2-75, x1: imageWidth, y1: imageHeight/2-75 }, { color: 'red', width:5 });\n            drawLine(ctx, { x: 0, y: imageHeight/2+75, x1: imageWidth, y1: imageHeight/2+75 }, { color: 'red', width:5 });\n            drawLine(ctx, { x: 0, y: imageHeight/2-75, x1: 0, y1: imageHeight/2+75 }, { color: 'red', width:5 });\n            drawLine(ctx, { x: imageWidth, y: imageHeight-75, x1: imageWidth, y1: imageHeight/2+75 }, { color: 'red', width:5 });\n\n//            drawLine(ctx, { x: 300, y: 250, x1: 260, y1: 70 }, { color: 'green', width: 5 });\n\n//            drawLine(ctx, { x: 70, y: 240, x1: 160, y1: 120 }, { color: 'blue' });\n\n            drawLine(ctx, { x: 0, y: 3, x1: imageWidth, y1: 3 }, { color: 'green', width: 5 });\n            drawLine(ctx, { x: 3, y: 0, x1: 3, y1: imageHeight }, { color: 'green', width: 5 });\n            drawLine(ctx, { x: 0, y: imageHeight-3, x1: imageWidth, y1: imageHeight-3 }, { color: 'green', width: 5 });\n            drawLine(ctx, { x: imageWidth-3, y: 0, x1: imageWidth-3, y1: imageHeight}, { color: 'green', width: 5 });\n\n        }, [resolution]\n    );\n    const drawLine = (context, info, style = {}) => {\n        const { x, y, x1, y1 } = info;\n        const { color = 'black', width = 1 } = style;\n\n        context.beginPath();\n        context.moveTo(x, y);\n        context.lineTo(x1, y1);\n        context.strokeStyle = color;\n        context.lineWidth = width;\n        context.stroke();\n    }\n\n/*\n    var sendBase64ToServer = function(base64) {\n        var httpPost = new XMLHttpRequest(),\n        path = \"http://127.0.0.1:8080/uploadImage\",\n        data = JSON.stringify({image: base64});\n        httpPost.onreadystatechange = function(err) {\n            if (httpPost.readyState == 4 && httpPost.status == 200){\n                console.log(httpPost.responseText);\n            } else {\n                console.log(err);\n            }\n        };\n        // Set the content type of the request to json since that's what's being sent\n        httpPost.setHeader('Content-Type', 'application/json');\n        httpPost.open(\"POST\", path, true);\n        httpPost.send(data);\n    };\n    var uploadImage = function(data, type){\n        sendBase64ToServer(data);\n    };\n*/\n    function capture() {\n        console.log(\"Capture\");\n        var canvas = canvasRef.current.getContext(\"2d\");\n        const imageWidth  = videoRef.current.videoWidth;\n        const imageHeight = videoRef.current.videoHeight;\n        canvasRef.current.width = imageWidth;\n        canvasRef.current.height = imageHeight;\n        canvas.drawImage(\n            videoRef.current,\n            0,\n            0,\n            canvasRef.current.width,\n            canvasRef.current.height\n        );\n        overlayRef.current.height = videoRef.current.videoHeight;\n        overlayRef.current.width = videoRef.current.videoWidth;\n        setResolution([imageWidth, imageHeight]);\n\n        const img = canvasRef.current.toDataURL('image/png');\n//        console.log(img);\n        axios({\n            method: \"post\",\n            mode: 'no-cors',\n            crossDomain: 'true',\n            url: \"https://10.0.0.68:8080/uploadImage\",\n//            url: \"https://localhost:8080/uploadImage\",\n            headers: {\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\n            },\n            withCredentials: false,\n            credentials: 'same-origin',\n            data: {\n                image: img\n            }\n        });\n    }\n\n    function tick() {\n\n\n//            console.log('tick');\n\n//            var videoElement = document.getElementById(\"video\")\n            console.log(videoRef.current.videoHeight.toString() + \"x\" + videoRef.current.videoWidth);\n            const imageWidth  = videoRef.current.videoWidth;\n            const imageHeight = videoRef.current.videoHeight;\n            canvasRef.current.height = imageWidth;\n            canvasRef.current.width = imageHeight;\n //          console.log(\"Resolution changed \" + imageWidth.toString() + \"x\" + imageHeight.toString());\n\n/*\n            if (image) {\n                const str = image.toDataURL();\n                console.log(str);\n            }\n*/\n//            uploadImage(image, \"image/png\");\n/*\n            axios({\n                method: \"post\",\n                mode: 'no-cors',\n                url: \"https://10.0.0.68:8080/uploadImage\",\n                headers: {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Content-Type\": \"application/json\",\n                    \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\n                },\n                withCredentials: true,\n                credentials: 'same-origin'\n            });\n*/\n//            console.log(image);\n\n            var ctx = canvasRef.current.getContext(\"2d\");\n            ctx.drawImage(\n                videoRef.current,\n                0,\n                0,\n                canvasRef.current.width,\n                canvasRef.current.height\n            );\n            /*\n            const str = canvasRef.toDataURL();\n            console.log(str);\n            var imageData = ctx.getImageData(\n                0,\n                0,\n                canvasRef.current.width,\n                canvasRef.current.height\n            );\n            BarcodeReader({\n                image: imageData,\n//                barcode: 'code-2of5',\n                barcode: 'coda-128',\n                options: {}\n            }).then(code => {\n                console.log('['+code+']');\n            }).catch(err => {\n                console.log(err);\n            })\n            */\n            /*\n            var code = jsQR(imageData.data, imageData.width, imageData.height, {\n                inversionAttempts: \"dontInvert\",\n            });\n            if (code) {\n                console.log(code.data);\n                setResult({ data: code.data, time: new Date() });\n            }\n            */\n            return;\n    }\n/*\n        <div>\n                <canvas id=\"canvas\" className=\"canvas\" ref={canvasRef} width={640} height={480}></canvas>\n                <Webcam id=\"webcam\" ref={webcamRef} screenshotFormat=\"image/png\" width={640} height={480}\n                    videoConstraints={videoConstraints}\n                />\n            <div>Test 2</div>\n        </div>\n*/\n\n    return (\n        <div>\n            <canvas id=\"canvas\" className=\"canvas\" ref={canvasRef} hidden/>\n            <video ref={videoRef}/>\n            <canvas id=\"overlay\" className=\"overlay\" ref={overlayRef}/>\n            <div id=\"text\">Test 0</div>\n            <button id=\"button\" type=\"button\" onClick={() => capture()}> Capture </button>\n        </div>\n    );\n}\n\nexport default Reader;\n","import React, { useEffect, useState } from \"react\";\r\nimport Reader from \"./Reader\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link } from 'react-router-dom'\r\nimport {USER_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction CheckOutStatus(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [expireDate, setExpireDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOutStatus initialize\");\r\n\r\n\r\n            if (\"autoLogin\" in props.context.cookie)\r\n            {\r\n                const autoLogin = (props.context.cookie.autoLogin === \"true\") ? true : false;\r\n                setAutoLogin(autoLogin);\r\n            }\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            setExpireDate(date.toGMTString());\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            compare();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.logged)\r\n        {\r\n            setState(State.LoggedIn);\r\n            const userId = props.doc.userInfo['_id'];\r\n            setUserId(userId);\r\n            setSearchResults(props.doc.getRent(userId));\r\n            await loadHistory();\r\n        }\r\n        else\r\n        {\r\n            setState(State.LoggedOut);\r\n            setUserId(\"\");\r\n            setPasswordText(\"\");\r\n        }\r\n\r\n        console.log(\"Set title \" + props.logged)\r\n        if (props.doc.logged)\r\n        {\r\n            if (props.doc.adminMode)\r\n                setTitle(props.text.userSearch);\r\n            else\r\n                setTitle(props.text.checkOut);\r\n        }\r\n        else\r\n        {\r\n            setTitle(props.text.logIn);\r\n        }\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const toggleAutoLogin = () => {\r\n        console.log(\"Toggle autoLogin\");\r\n        const cookieString = \"autoLogin=\" + (autoLogin ? \"false\":\"true\") + \"; expires=\" + expireDate + \";\";\r\n        console.log(cookieString);\r\n        document.cookie = cookieString;\r\n        setAutoLogin(!autoLogin);\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        setState(State.LoggingIn);\r\n        setUserId(userText.toUpperCase());\r\n        await loadUser();\r\n        await loadHistory();\r\n        console.log(\"Log In\");\r\n        compare();\r\n    }\r\n\r\n    const compare = () => {\r\n        if (!userData || state === State.LoggedOut)\r\n            return;\r\n\r\n        console.log(toast.isActive(loggingId));\r\n        const prop = toastProp;\r\n\r\n        let text;\r\n        if (props.context.checkLogIn(userData, passwordText))\r\n        {\r\n            props.doc.logIn(userData.user);\r\n\r\n            setSearchResults(props.doc.getRent(userId));\r\n            setState(State.LoggedIn);\r\n\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            document.cookie = \"user_id=\" + userId + \"; expires=\" + expireDate + \";\";\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.render = text;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = loggingId;\r\n        if (toast.isActive(loggingId))\r\n        {\r\n            console.log(\"update toast\");\r\n            toast.update(loggingId, prop);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"New toast\");\r\n            toast.info(text, prop);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {title}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={state === State.LoggedIn}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <input type=\"password\" id=\"searchPassword\"\r\n                    placeholder={props.text.pwHolder}\r\n                    value={passwordText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setPasswordText(event.target.value);\r\n                    }} />\r\n                <div id=\"autoLogin\">\r\n                    <input type=\"checkbox\" id=\"autoLoginButton\" checked={autoLogin} onChange={() => toggleAutoLogin()}/>\r\n                    <label>\r\n                            {props.text.autoLogin}\r\n                    </label>\r\n                </div>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn}>\r\n                <Link className='menu-items' to=\"/barcodeReader\">\r\n                    Scan\r\n                </Link>\r\n                <div>\r\n                    { showEntries(searchResults) }\r\n                </div>\r\n\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <div>\r\n                    { showEntries(history) }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOutStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Reader from \"./Reader\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, loadingId, getBookState, getUserState } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link } from 'react-router-dom'\r\nimport {USER_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2,\r\n    LoggingOut: 3\r\n}\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 50);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [userData, setUserData] = useState({});\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            updateDoc();\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOut initialize\");\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            console.log(toast.isActive(loggingId));\r\n            const prop = toastProp;\r\n\r\n            let text;\r\n            let notify = false;\r\n            if (\"USER_CODE\" in userData && state !== State.LoggedIn)\r\n            {\r\n                setState(State.LoggedIn);\r\n\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                text = props.text.logInSucceed;\r\n                notify = true;\r\n            }\r\n            else if (!(\"USER_CODE\" in userData))\r\n            {\r\n                setState(State.LoggedOut);\r\n\r\n                if (state === State.LoggingIn)\r\n                {\r\n                    prop.type = toast.TYPE.ERROR;\r\n                    text = props.text.logInFail;\r\n                    notify = true;\r\n                }\r\n            }\r\n\r\n            if (notify)\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": prop.type})\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE == 0)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! \"text\" in notifyRequest)\r\n                return\r\n\r\n            console.log(\"Notification\")\r\n            const prop = toastProp;\r\n            const text = notifyRequest.text\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//            if (\"id\" in notifyRequest)\r\n//                id = notifyRequest.id\r\n\r\n//            prop.toastId = id\r\n//            if (toast.isActive(id))\r\n//                toast.update(id, notifyRequest.text, prop);\r\n//            else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showBook = (book, index) => {\r\n        const id = book[\"BARCODE\"];\r\n        const state = getBookState(props.text, book[\"_STATE\"].toString());\r\n        const rentDate = book[\"_RENT\"];\r\n        const retDate = book[\"_RETURN\"];\r\n        const bookName = book[\"BOOKNAME\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td className=\"bookState\">{state}</td>\r\n                        <td colSpan=\"2\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n//                        result.map((rent, index) => {\r\n//                            return showBook(rent, index);\r\n//                        })\r\n                         \"BARCODE\" in result && showBook(result, result.BARCODE)\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    const updateUser = async (userText) => {\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/user?user=\" + userText;\r\n        const obj = {\"params\": {\"user\": userText, \"data\":\"nothing\"}};\r\n        console.log(obj);\r\n        const response = await axios.get(url, btoa(JSON.stringify(obj)));\r\n        const user = response.data.return;\r\n        setUserData(user);\r\n        console.log(user);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        console.log(\"LOGIN\");\r\n        console.log(userText);\r\n        if (userText.length == 0)\r\n            return;\r\n        setState(State.LoggingIn);\r\n        const id = userText.toUpperCase();\r\n        setUserId(id);\r\n        updateUser(id);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Log Out\");\r\n        setUserData({});\r\n        setScannedBook({});\r\n        setUserText(\"\");\r\n        document.getElementById('barcodeScan').value= null;\r\n    }\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            console.log(url)\r\n            getBase64(file).then(\r\n                img => {\r\n                    axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(response);\r\n                        console.log(book);\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                        }\r\n                        else\r\n                        {\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR})\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                const bookId = \"HK\" + bookText;\r\n                console.log(\"Search book \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n        document.getElementById('barcodeScan').value= null;\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/checkOut\"\r\n        axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE,\r\n                user: userId\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return\r\n            console.log(\"Rent confirmed\");\r\n            console.log(ret)\r\n\r\n            if (ret === \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.rentSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            updateUser(userId);\r\n        });\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        document.getElementById('barcodeScan').value= null;\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.checkOut}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={state === State.LoggedIn}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn}>\r\n                {userData.USER_CODE && (\r\n                    <div id=\"userInfo\">\r\n                        <div id=\"userItem\">\r\n                            {userData.USER_CODE + \" : \" + userData.USER_NAME + props.text.nameSuffix}\r\n                        </div>\r\n                        <div id=\"userItem\"> {getUserState(props.text, userData.USER_STATE)} </div>\r\n                        <div id=\"userItem\"> {userData._RENT.length + \" \" + props.text.rentSuffix} </div>\r\n                    </div>\r\n                )}\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                    <label id=\"barcodeScan\">\r\n                        <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                        <span>\r\n                        <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                        </span>\r\n                    </label>\r\n                    <label id=\"manualInput\">\r\n                        <div id=\"hkPrefix\">\r\n                        HK\r\n                        </div>\r\n                        <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n                            placeholder={props.text.bookHolder}\r\n                            onInput={(event) => {\r\n                                setBookText(event.target.value);\r\n                            }} />\r\n                    </label>\r\n                </div>\r\n                {needConfirm && (<div id=\"checkRent\">\r\n                    <div id=\"bookName\"> {props.text.confirmRent} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \": \" + scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> Confirm </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> Cancel </button>\r\n                </div>)}\r\n                <div>\r\n                    <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.logOut} </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Reader from \"./Reader\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId, toUtf8 } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link } from 'react-router-dom'\r\nimport {USER_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction Return(props) {\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 50);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [title, setTitle] = useState(\"\");\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            props.doc.setCallback(undefined);\r\n            console.log(\"=======================================\");\r\n            console.log(\"Return initialize\");\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        setInitialized(true);\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                const bookId = \"HK\" + bookText;\r\n                console.log(\"Search book \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery]\r\n    );\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            getBase64(file).then(\r\n                img => {\r\n                    const data = axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                        }\r\n                        else\r\n                        {\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR})\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE == 1 || scannedBook._STATE == 3)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    console.log(\"Not rented\")\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.NOT_RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! \"text\" in notifyRequest)\r\n                return\r\n\r\n            const prop = toastProp;\r\n            const text = notifyRequest.text\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n            let id = 0\r\n            if (\"id\" in notifyRequest)\r\n                id = notifyRequest.id\r\n\r\n            prop.toastId = id\r\n            if (toast.isActive(id))\r\n                toast.update(id, notifyRequest.text, prop);\r\n            else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/return\"\r\n        const data = axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return;\r\n            console.log(ret);\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.returnSucceed,\r\n                              \"type\": toast.TYPE.SUCCESS})\r\n        });\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.return}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                <label id=\"barcodeScan\">\r\n                    <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                    <span>\r\n                    <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                    </span>\r\n                </label>\r\n                <label id=\"manualInput\">\r\n                    <div id=\"hkPrefix\">\r\n                        HK\r\n                    </div>\r\n                    <input inputMode=\"numeric\" pattern=\"\\d*\" type=\"text\" id=\"searchInput\"\r\n                        placeholder={props.text.bookHolder}\r\n                        onInput={(event) => {\r\n                            setBookText(event.target.value);\r\n                        }} />\r\n                </label>\r\n                </div>\r\n                {needConfirm && (<div id=\"checkReturn\" >\r\n                    <div id=\"bookName\"> {props.text.confirmReturn} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\" + scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> Confirm </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> Cancel </button>\r\n                </div>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n//                    <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n\r\nexport default Return;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp, loggingId, SEARCH_PER_SCREEN, MAX_SEARCH_ENTRY, getUserState } from \"../Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { Link } from 'react-router-dom'\r\nimport {USER_QUERY, USERS_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(userText, 50);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [history, setHistory] = useState([]);\r\n    const {loading: userLoading, data: userListData, error: userError } = useQuery(USERS_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [userList, setUserList] = useState({});\r\n    const [title, setTitle] = useState(\"\");\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n    const [rented, setRented] = useState([]);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"UserSearch initialize\");\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc(false);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                const stateStr = {\"0\": props.text.normal, \"1\": props.text.overDue, \"2\": props.text.stopped};\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n\r\n        if (notify)\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Set title \" + props.logged)\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const selectId = async (id) => {\r\n        if (selectedId === -1 || selectedId !== id)\r\n        {\r\n            console.log(\"Select \" + id);\r\n            setSelectedId(id);\r\n            setRented(props.doc.getRent(searchResults[id].id));\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n            setSelectedId(-1);\r\n        }\r\n    }\r\n\r\n    const showUser = (user, index) => {\r\n        const key = index.toString();\r\n        return (\r\n                <div>\r\n                    <table><tbody>\r\n                        <tr key={key} className=\"searchTr\" onClick={async ()=> await selectId(index)}>\r\n                            <td className=\"bookData\">{user.id}</td>\r\n                            <td className=\"bookData\">{user.name}</td>\r\n                            <td className=\"bookData\">{user.state}</td>\r\n                            <td className=\"bookData\">{user.rent}</td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                        {index === selectedId && showEntries(rented) }\r\n                </div>\r\n                );\r\n    }\r\n\r\n    const showUsers = (result) => {\r\n        return (<div>\r\n                    {\r\n                        result.map((user, index) => {\r\n                            return showUser(user, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 &&\r\n                        <table><tbody>\r\n                            <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                        </tbody></table>\r\n                    }\r\n                </div>);\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </>);\r\n    }\r\n    useEffect(\r\n        () => {\r\n            async function findUsers(text) {\r\n                let results = [];\r\n\r\n//                for (let i = 0 ; i < userList.length ; i++) {\r\n                  for (const key in userList) {\r\n                    const row = userList[key];\r\n                    if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                    if ((row.name && row.name.toString().includes(text)) ||\r\n                        (row.id.toLowerCase() === text.toLowerCase()))\r\n                    {\r\n                        results.push(row);\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a['text'] > b['text']; });\r\n                return results;\r\n            }\r\n            async function query() {\r\n                if (searchQuery) {\r\n                    let sr = await findUsers(searchQuery);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        setSelectedId(sr[0].index);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n                setPageNum(0);\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, props]\r\n    );\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.userSearch}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onChange={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <div>\r\n                    { showUsers(searchResults) }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        this.initialized = false;\r\n        this.bookReady = false;\r\n        this.rentReady = false;\r\n        this.userReady = false;\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        this.book = {};\r\n        this.rent = {};\r\n        this.logCallback = undefined;\r\n        this.admin = false;\r\n        this.adminMode = false;\r\n        this.serverInfo = {};\r\n        this.serverAvailable = false;\r\n        this.ipAddr = \"\"\r\n    }\r\n\r\n    async updateIpAddr()\r\n    {\r\n        const response = await axios.get(\"https://api.ipify.org/?format=json\");\r\n        console.log(\"Get IP Address\");\r\n        console.log(response.data);\r\n        const ipAddr = response.data.ip;\r\n        console.log(\"IP addr updated \" + ipAddr)\r\n        this.ipAddr = ipAddr;\r\n        this.checkServerIp()\r\n    }\r\n\r\n    checkServerIp()\r\n    {\r\n        if (this.ipAddr.length == 0 || !this.serverInfo.globalIp)\r\n            return\r\n        if (this.serverInfo.globalIp === this.ipAddr)\r\n        {\r\n            console.log(\"Server is accessible \" + this.serverInfo.localIp);\r\n            this.serverAvailable = true;\r\n            const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n//            window.open(query);\r\n            axios.get(query).then( (response) => {\r\n                                console.log(\"Server connected\");\r\n                                console.log(response.data);\r\n                          });\r\n        }\r\n    }\r\n\r\n\r\n    checkState() {\r\n        if (this.bookReady && this.rentReady) {\r\n            this.initialized = true;\r\n            toast.dismiss();\r\n            if (this.callback) {\r\n                this.callback();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setLogCallback(callback) {\r\n        this.logCallback = callback;\r\n    }\r\n\r\n    setRent(rent) {\r\n        this.rent = rent\r\n        this.rentReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setServerInfo(serverInfo)\r\n    {\r\n        this.serverInfo = serverInfo;\r\n        console.log(this.serverInfo.globalIp);\r\n        this.checkServerIp()\r\n    }\r\n\r\n    setBook(books) {\r\n        this.book = {};\r\n        for (let i = 0 ; i < books.length ; i++)\r\n        {\r\n            const book = books[i];\r\n            const id = book['_id'];\r\n            this.book[id] = book;\r\n        }\r\n        this.bookReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setUser(users) {\r\n        this.user = {};\r\n        for (let i = 0 ; i < users.length ; i++)\r\n        {\r\n            const user = users[i];\r\n            const id = user.id;\r\n            this.user[id] = user;\r\n            this.user[id][\"rent\"] = 0;\r\n        }\r\n        this.checkRent();\r\n        this.userReady = true;\r\n    }\r\n\r\n    checkRent() {\r\n        if (!this.userReady || !this.rentReady)\r\n            return;\r\n        console.log(this.rent);\r\n        for (let i = 0 ; i < this.rent.length ; i++)\r\n        {\r\n            const state = this.rent[i].state;\r\n\r\n//            console.log(state);\r\n            if (state !== \"1\" && state !== \"3\")\r\n                continue;\r\n\r\n            const userId = this.rent[i].user_id;\r\n//            console.log(this.rent[i]);\r\n            console.log(userId);\r\n            console.log(userId.length);\r\n            if (userId && userId.length > 0 && userId in this.user)\r\n                this.user[userId][\"rent\"] += 1;\r\n            else\r\n                this.user[userId][\"rent\"] = 1;\r\n        }\r\n        console.log(this.user);\r\n    }\r\n\r\n    setAdminMode(mode) {\r\n        this.adminMode = mode;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n    }\r\n\r\n    logIn(userInfo) {\r\n        console.log(\"Logged in: \" + userInfo['_id']);\r\n        this.logged = true;\r\n        this.userInfo = userInfo;\r\n        if (userInfo['level'] === \"2\")\r\n            this.admin = true;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n    }\r\n\r\n    logOut() {\r\n        console.log(\"Logged out\");\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        if (this.logCallback)\r\n            this.logCallback(false);\r\n    }\r\n\r\n    getRent(userId) {\r\n        let ret = [];\r\n        console.log(\"Check \" + userId);\r\n        if (!this.bookReady)\r\n            return ret;\r\n//        console.log(this.rent.length);\r\n        for (let i = 0 ; i < this.rent.length ; i++) {\r\n            const entry = this.rent[i];\r\n            if (entry[\"user_id\"] !== userId)\r\n                continue;\r\n//            console.log(entry);\r\n            const id = entry[\"book_id\"];\r\n            const book = this.book[id];\r\n//            console.log(book)\r\n            let retEntry = {}\r\n            retEntry[\"id\"] = book[\"_id\"];\r\n            retEntry[\"title\"] = book[\"title\"];\r\n            retEntry[\"rentDate\"] = entry[\"rent_date\"].split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n            retEntry[\"retDate\"] = entry[\"return_date\"].split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n            ret.push(retEntry)\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n\r\n    async openDoc() {\r\n        try {\r\n            this.initialized = true;\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.initialized;\r\n    }\r\n\r\n    setCallback(updateFunc)\r\n    {\r\n        console.log(\"Update function registered\");\r\n        this.callback = updateFunc;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","import config from \"./api/key\";\n\nconst NodeRSA = require('node-rsa');\n\nconst prk = new NodeRSA(config[\"privateKey\"]);\n\nclass Context {\n    constructor() {\n        console.log(\"Create Context\");\n\n        console.log(\"Cookies\");\n        const rawCookie = document.cookie;\n        this.cookie = rawCookie\n            .split(\";\")\n            .map(v => v.split(\"=\"))\n            .reduce((acc, v) => {\n                const key = v.shift().trim();\n                const value = v.join(\"=\").trim();\n                acc[decodeURIComponent(key)] = decodeURIComponent(value);\n                return acc;\n            }, {});\n        console.log(this.cookie);\n    }\n\n    checkLogIn(userData, passwordText) {\n        var matched = false;\n        var passwordTyped;\n        if (userData.user && passwordText.length > 0) {\n            console.log(\"User data available\");\n            const emailDb = userData.user.encrypted_email;\n            const phoneDb = userData.user.encrypted_phone;\n\n            passwordTyped = prk.sign(passwordText, 'base64');\n            if (passwordText === emailDb ||\n                passwordText === phoneDb )\n            {\n                passwordTyped = passwordText;\n                matched = true;\n            }\n            else if (emailDb === passwordTyped)\n            {\n//                console.log(\"Email match\");\n                matched = true;\n            }\n            else\n            {\n                var numberString = \"\";\n                for (let i = 0 ; i < passwordText.length ; i++)\n                {\n                    if (!isNaN(passwordText[i]))\n                        numberString += passwordText[i];;\n                }\n                passwordTyped = prk.sign(numberString, 'base64');\n                if (passwordTyped === phoneDb)\n                {\n//                    console.log(\"Phone match\");\n                    matched = true;\n                }\n                else\n                {\n//                    console.log(\"Nothing matched\");\n                }\n            }\n\n//            console.log(\"toast available\");\n        }\n        if (matched)\n        {\n            const date = new Date();\n            const days=2;\n            date.setTime(date.getTime()+(days*24*60*60*1000));\n            const expireDate = date.toGMTString();\n            document.cookie = \"password=\" +  passwordTyped + \"; expires=\" + expireDate + \";\";\n        }\n        return matched\n    }\n}\n\nexport default Context;\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Dropdown.css'\r\n\r\nfunction DropDown(props) {\r\n\r\n    const [dropdown, setDropdown] = useState(false);\r\n    const [click, setClick] = useState(false)\r\n\r\n    useEffect(\r\n        () => {\r\n            if (dropdown !== props.dropdown)\r\n            {\r\n                console.log(\"User clicked\");\r\n                console.log(props.dropdown);\r\n                setClick(!click);\r\n                setDropdown(props.dropdown);\r\n            }\r\n            const menu = document.getElementById(\"dropdown-menu\");\r\n//            menu.hidden = !click;\r\n            if (!click)\r\n            {\r\n               menu.classList.remove('is-show');\r\n            }\r\n            else\r\n            {\r\n               menu.classList.add('is-show');\r\n            }\r\n\r\n        }, [props.dropdown, dropdown, click]\r\n    );\r\n\r\n    const logOut = () =>\r\n    {\r\n        setClick(false);\r\n        props.doc.logOut();\r\n        document.cookie = \"user_id=\";\r\n        document.cookie = \"password=\";\r\n        document.cookie = \"autoLogin=false\";\r\n    }\r\n\r\n    const changeMode = () =>\r\n    {\r\n        if (props.doc.admin === true)\r\n            props.doc.setAdminMode(!props.doc.adminMode);\r\n        else\r\n            props.doc.setAdminMode(false);\r\n    }\r\n\r\n    const returnBook = () =>\r\n    {\r\n        console.log(\"Return book\");\r\n        window.history.back()\r\n    }\r\n\r\n    return (\r\n            <div id='dropdown-menu' onClick={() => { setClick(!click)}} className='dropdown-menu'>\r\n                {!props.doc.serverAvailable && props.logged &&\r\n                    <div className='menu-items'>\r\n                        {props.doc.userInfo[\"_id\"] + \" : \" + props.doc.userInfo[\"name\"] + props.text.nameSuffix}\r\n                    </div>\r\n                }\r\n                <Link className='menu-items' to=\"/\" onClick={() => setClick(false)}>\r\n                    {props.text.home}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/notice\" onClick={() => setClick(false)}>\r\n                    {props.text.notice}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/search\" onClick={() => setClick(false)}>\r\n                    {props.text.bookSearch}\r\n                </Link>\r\n                {props.doc.serverAvailable &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOut\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOut}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/return\" onClick={() => setClick(false)}>\r\n                            {props.text.return}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && props.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOutStatus}\r\n                        </Link>\r\n                        {props.doc.admin &&\r\n                            <>\r\n                            <Link className='menu-items' to=\"/userSearch\" onClick={() => setClick(false)}>\r\n                                {props.text.userSearch}\r\n                            </Link>\r\n                            </>\r\n                        }\r\n                        <div className='menu-items' onClick={() => logOut()}>\r\n                            {props.text.logOut}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && !props.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.logIn}\r\n                        </Link>\r\n                    </>\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default DropDown;\r\n","import React, { useState } from 'react';\r\nimport {isMobile} from \"react-device-detect\";\r\nimport \"./Navbar.css\";\r\nimport DropDown from \"./Dropdown\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction Navbar(props) {\r\n    const [dropdown, setDropdown] = useState(false)\r\n\r\n    const onClick = () => {\r\n        const maxWidth = document.getElementById(\"navbar\").style.maxWidth;\r\n        console.log(\"maxWidth\");\r\n        console.log(maxWidth);\r\n        console.log(document.getElementById(\"navbar\").style.width);\r\n        setDropdown(!dropdown);\r\n    }\r\n\r\nreturn (\r\n    <>\r\n        <div id=\"navbar\" className=\"navbar\">\r\n            <div className='title'>\r\n                {isMobile? (<h1>{props.text[\"titleShort\"]}</h1>) : (<h1>{props.text[\"titleLong\"]}</h1>)}\r\n            </div>\r\n            <div className='menu' onClick={onClick} >\r\n                <MenuIcon className=\"img\" fontSize=\"large\" sx={{ color: \"#ffffff\"}}/>\r\n            </div>\r\n            <DropDown text={props.text} doc={props.doc} logged={props.logged} dropdown={dropdown}/>\r\n        </div>\r\n    </>\r\n)\r\n}\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Notice from \"./pages/Notice\";\r\nimport Search from \"./pages/Search\";\r\nimport CheckOutStatus from \"./pages/CheckOutStatus\";\r\nimport CheckOut from \"./pages/CheckOut\";\r\nimport Return from \"./pages/Return\";\r\nimport UserSearch from \"./pages/UserSearch\";\r\nimport Reader from \"./pages/Reader\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\nimport Context from \"./Context\";\r\nimport text from \"./api/text\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"./Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport Navbar from \"./Navbar\";\r\nimport {BOOK_QUERY, RENT_QUERY, USER_QUERY, SERVER_QUERY} from \"./api/query.js\";\r\n\r\nconst doc = new Doc();\r\nconst context = new Context();\r\n\r\nconst textString = {};\r\nlet logMsg = \"\"\r\nfunction App() {\r\n\r\n//    const [checkOutStr, setCheckOutStr] = useState(\"\");\r\n    const [logged, setLogged] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const { loading: rentLoading, error: rentError, data: rentData } = useQuery(RENT_QUERY);\r\n    const { loading: serverLoading, error: serverError, data: serverData } = useQuery(SERVER_QUERY);\r\n    const [loadBook, { loading: bookLoading, error: bookError, data: bookData }] = useLazyQuery(BOOK_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY, { \"variables\": { \"_id\": userId } });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            logMsg = logMsg + \"<p>Initialize app</p>\";\r\n            console.log(process.env.APP_NAME);\r\n            console.log(process.env.APP_VERSION);\r\n            const lang = navigator.languages;\r\n            console.log(lang);\r\n            let ts = {}\r\n            if (lang.length> 0 && (lang[0].toLowerCase().includes(\"kr\") || lang[0].toLowerCase().includes(\"ko\")))\r\n            {\r\n                ts = text.kr;\r\n            }\r\n            else\r\n            {\r\n                ts = text.en;\r\n            }\r\n            for (let key in ts)\r\n            {\r\n                textString[key] = ts[key];\r\n            }\r\n\r\n            await doc.updateIpAddr();\r\n\r\n            if (\"autoLogin\" in context.cookie &&  context.cookie.autoLogin === \"true\")\r\n            {\r\n                console.log(\"Auto Login: \" + context.cookie.user_id);\r\n                setUserId(context.cookie.user_id);\r\n                console.log(context.cookie.nothing);\r\n                loadUser();\r\n            }\r\n\r\n        }\r\n        initialize();\r\n    }, [loadUser]);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data loaded\");\r\n            if (!userData)\r\n            {\r\n                return;\r\n            }\r\n\r\n            console.log(\"Login check \" + context.cookie.password);\r\n            console.log(userData);\r\n            if (context.cookie.password && context.checkLogIn(userData, context.cookie.password))\r\n            {\r\n                console.log(\"Login suceeded\");\r\n                doc.logIn(userData.user);\r\n            }\r\n\r\n\r\n\r\n        }, [userData]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Rent Query Updated\");\r\n            logMsg = logMsg + \"<p>Rent Query Updated \" + rentLoading + \" \" + rentError + \"</p>\";\r\n            console.log(rentLoading);\r\n            console.log(rentError);\r\n            if (rentData)\r\n            {\r\n                console.log(\"Rent available\");\r\n                logMsg = logMsg + \"<p>Rent available</p>\"\r\n//                console.log(rentData.rents)\r\n                doc.setRent(rentData.rents)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [rentLoading, rentError, rentData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Book Query Updated\");\r\n            logMsg = logMsg + \"<p>Book Query Updated</p>\";\r\n            console.log(bookLoading)\r\n            console.log(bookError)\r\n            if (bookData)\r\n            {\r\n                console.log(\"Book available\")\r\n                logMsg = logMsg + \"<p>Book available</p>\";\r\n//                console.log(bookData.books)\r\n                doc.setBook(bookData.books)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [bookLoading, bookError, bookData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Server Query Updated\");\r\n            logMsg = logMsg + \"<p>Server Query Updated</p>\";\r\n            console.log(serverLoading)\r\n            console.log(serverError)\r\n            if (serverData)\r\n            {\r\n                console.log(\"Server info available\")\r\n                logMsg = logMsg + \"<p>Server info available</p>\";\r\n                console.log(serverData.serverInfo)\r\n                doc.setServerInfo(serverData.serverInfo)\r\n\r\n                if (!doc.serverAvailable)\r\n                {\r\n                    console.log(\"Server in not available. Load books from cloud DB\");\r\n                    loadBook();\r\n                    const prop = toastProp;\r\n                    prop.type = toast.TYPE.LOADING;\r\n                    prop.autoClose = false;\r\n                    prop.toastId = loadingId;\r\n                    toast.loading(textString.loading, prop);\r\n                    doc.setLogCallback(updateLog);\r\n                }\r\n            }\r\n        }, [serverLoading, serverError, serverData]\r\n    );\r\n\r\n    function notifyInit()\r\n    {\r\n        const prop = toastProp;\r\n        prop.type = toast.TYPE.SUCCESS;\r\n        prop.render = textString.succeededToOpen;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = \"\";\r\n        toast.info(textString.succeededToOpen, prop);\r\n    }\r\n\r\n    function updateLog(logged) {\r\n        console.log(\"==== Update logging state \" + doc.logged);\r\n        console.log(doc.userInfo);\r\n        setLogged(doc.logged);\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n        <div className=\"App\">\r\n            <div>\r\n                <ToastContainer\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    limit={10}\r\n                />\r\n            </div>\r\n            <Navbar doc={doc} text={textString} logged={logged}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home doc={doc} text={textString}/>} />\r\n                <Route path=\"/notice\" element={<Notice doc={doc} text={textString} />} />\r\n                <Route path=\"/search/:id?\" element={<Search doc={doc} text={textString}/>} />\r\n                <Route path=\"/checkOutStatus\" element={<CheckOutStatus context={context} doc={doc} text={textString} logged={logged}/>} />\r\n                <Route path=\"/userSearch\" element={<UserSearch context={context} doc={doc} text={textString} />} />\r\n                <Route path=\"/checkOut\" element={<CheckOut context={context} doc={doc} text={textString} logged={logged}/>} />\r\n                <Route path=\"/return\" element={<Return context={context} doc={doc} text={textString} logged={logged}/>} />\r\n            </Routes>\r\n\r\n            <h3>\r\n                v {process.env.REACT_APP_VERSION}\r\n            </h3>\r\n        </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport * as Realm from \"realm-web\";\r\nimport {\r\n    ApolloClient,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    InMemoryCache,\r\n} from \"@apollo/client\";\r\n\r\nconst APP_ID = 'data-xaque';\r\nconst graphqlUri = `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\r\nconst app = new Realm.App(APP_ID);\r\n\r\n// Gets a valid Realm user access token to authenticate requests\r\nasync function getValidAccessToken() {\r\n    // Guarantee that there's a logged in user with a valid access token\r\n    if (!app.currentUser) {\r\n        // If no user is logged in, log in an anonymous user. The logged in user will have a valid\r\n        // access token.\r\n        await app.logIn(Realm.Credentials.anonymous());\r\n//        await app.logIn(apiKey);\r\n    } else {\r\n        // An already logged in user's access token might be stale. Tokens must be refreshed after\r\n        // 30 minutes. To guarantee that the token is valid, we refresh the user's access token.\r\n        await app.currentUser.refreshAccessToken();\r\n    }\r\n//    console.log(\"AccessToken: [\" + app.currentUser.accessToken + \"]\");\r\n\r\n    return app.currentUser.accessToken;\r\n}\r\n\r\n// Configure the ApolloClient to connect to your app's GraphQL endpoint\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\r\n        // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\r\n        // access token before sending the request.\r\n        fetch: async (uri, options) => {\r\n            const accessToken = await getValidAccessToken();\r\n            options.headers.Authorization = `Bearer ${accessToken}`;\r\n            return fetch(uri, options);\r\n        },\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}