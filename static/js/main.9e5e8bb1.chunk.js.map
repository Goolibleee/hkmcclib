{"version":3,"sources":["pages/Home.js","Util.js","api/query.js","pages/Notice.js","ListView.js","pages/Search.js","pages/CheckOutStatus.js","pages/CheckOut.js","pages/Return.js","UserInfo.js","pages/UserSearch.js","pages/RentalSituation.js","pages/RentHistory.js","pages/NewMember.js","Doc.js","Context.js","Dropdown.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useEffect","_initialize","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","console","log","doc","setCallback","undefined","stop","apply","arguments","initialize","_jsx","id","dangerouslySetInnerHTML","__html","text","homeText","SEARCH_PER_SCREEN","MAX_SEARCH_ENTRY","String","prototype","format","formatted","this","i","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","getUserState","state","normal","overDue","stopped","getBookState","available","checkedOut","reserved","lost","damaged","given","notAvailable","deleted","compareRent","a1","a2","rentDate","title","toUtf8","unescape","encodeURIComponent","loadingId","loggingId","BOOK_QUERY","gql","_templateObject","_taggedTemplateLiteral","RENT_QUERY","_templateObject2","USERS_QUERY","_templateObject3","USER_QUERY","_templateObject4","HISTORY_QUERY","_templateObject5","HISTORY_PERIOD_QUERY","_templateObject6","NOTICE_QUERY","_templateObject7","CONTENT_QUERY","_templateObject8","SERVER_QUERY","_templateObject9","Notice","_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useState3","_useState4","displayedCodes","setDisplayedCodes","_useState5","_useState6","pageNum","setPageNum","_useState7","_useState8","selectedId","setSelectedId","_useQuery","useQuery","noticeLoading","loading","noticeData","data","noticeError","error","_useLazyQuery","useLazyQuery","_useLazyQuery2","loadSelected","_useLazyQuery2$","selectedLoading","selectedData","selectedError","notices","toString","startIdx","count","Math","min","slice","showEntry","result","_jsxs","className","children","date","colSpan","onClick","_id","notice","content","map","NavigateBeforeIcon","fontSize","sx","color","NavigateNextIcon","showCallback","ListView","itemList","setItemList","displayList","setDisplayList","list","keyValue","detail","initialized","Search","inputText","setInputText","_useDebounce","useDebounce","searchQuery","selectedRef","useRef","bookList","setBookList","_useState9","_useState10","rentList","setRentList","_useState11","_useState12","setBookState","bookStateRef","_useState13","_useState14","needConfirm","setNeedConfirm","needConfirmRef","_useState15","_useState16","queryRequest","toggleQueryRequest","useParams","updateDoc","_updateDoc","_callee6","rl","rented","bl","books","key","book","_context6","rent","push","code","book_id","retDate","return_date","name","num","author","claim","claim_num","totalName","series","category","publisher","publish","isOpen","findBooks","_x","_findBooks","_callee2","results","url","obj","response","resultString","resultObject","_i","row","_resultString","_retDate","_state","_iterator","_step","entry","_resultObject","_context2","serverAvailable","btoa","serverInfo","localIp","port","axios","get","sent","return","abrupt","concat","BOOKNAME","CLAIMNUM","_STATE","returnDate","_RETURN","index","BARCODE","AUTHOR","TOTAL_NAME","CLAMENUM","PUBLISH","CLAIM","includes","_createForOfIteratorHelper","s","n","done","value","t0","e","f","finish","parseInt","sort","a","b","_query","_callee3","sr","_context3","current","query","selectId","_ref","_callee4","_context4","_x2","setState","_confirmAction","_callee7","ipAddr","portNum","_context7","post","then","hidden","entryId","flags","_callee5","_context5","rowSpan","admin","disabled","confirmAction","confirm","cancel","bookSearch","placeholder","searchBook","onChange","event","target","entries","State","LoggedOut","LoggingIn","LoggedIn","CheckOutStatus","userText","setUserText","passwordText","setPasswordText","setInitialized","userId","setUserId","history","setHistory","autoLogin","setAutoLogin","loadUser","userData","_useLazyQuery3","_useLazyQuery4","loadHistory","historyData","_useState17","_useState18","expireDate","setExpireDate","_useState19","_useState20","setTitle","_userId","logged","userInfo","getRent","t1","adminMode","userSearch","checkOut","logIn","_autoLogin","context","cookie","Date","setTime","getTime","days","toGMTString","_func","compare","func","bookReady","rentReady","hist","rentLogs","book_state","return_data","split","showEntries","retText","bookName","React","Fragment","Link","to","showRented","noEntry","toUpperCase","_ref2","prop","toast","isActive","checkLogIn","user","type","TYPE","SUCCESS","logInSucceed","document","ERROR","logInFail","render","toastId","update","info","idHolder","onInput","pwHolder","checked","cookieString","toggleAutoLogin","dueDate","Navigate","LoggingOut","CheckOut","bookText","setBookText","setUserData","scannedBook","setScannedBook","notifyRequest","setNotifyRequest","barcode","setBarcode","interval","setInterval","scan","clearInterval","notify","RENTED","getElementById","dismiss","updateUser","JSON","stringify","_ref3","logOut","_ref4","imageCaptured","files","file","INFO","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","getBase64","img","method","mode","crossDomain","headers","withCredentials","credentials","image","succeededToOpen","INVALID_BOOK","bookId","USER_CODE","USER_NAME","nameSuffix","USER_STATE","_RENT","rentSuffix","CameraAltIcon","accept","capture","inputMode","pattern","bookHolder","confirmRent","ret","rentSucceed","NOT_AVAILABLE","Return","NOT_RENTED","confirmReturn","returnSucceed","UserInfo","setDisabled","setUserInfo","setProperty","PHONE_NUMBER","EMAIL","ADDRESS","USER_LEVEL","NOTICE","Object","keys","registeredDate","REG_DATE","phone","email","address","notice_","level","kid","adult","save","confirmSave","refresh","userLoading","userListData","userError","userList","setUserList","_args6","users","setUser","getUser","showUsers","showUser","_Fragment","findUsers","_findUsers","toLowerCase","input","trim","err","RentHistory","userName","RETURN_DATE","STATS","LENT_DATE","USER","situation","fromTime","setFromTime","toTime","setToTime","_useLazyQuery4$","historyLoading","historyError","yearValue","setYear","monthValue","setMonth","setQuery","option","year","month","thisYear","thisMonth","createElement","add","getFullYear","getMonth","bookInfo","user_id","timestamp","padStart","_search","queryTo","nextMonth","RENT_DATE","warn","search","movePrev","moveNext","NewMember","prepareNewMember","newMember","Doc","_classCallCheck","userReady","logCallback","_createClass","_updateIpAddr","ip","checkServerIp","_this","globalIp","timeout","catch","window","open","callback","checkState","checkRent","_getRent","_entry","_book","retEntry","_args2","rent_date","_openDoc","updateFunc","prk","require","config","Context","rawCookie","v","reduce","acc","shift","join","decodeURIComponent","passwordTyped","matched","emailDb","encrypted_email","phoneDb","encrypted_phone","sign","numberString","isNaN","DropDown","dropdown","setDropdown","click","setClick","menu","classList","remove","home","checkOutStatus","Navbar","isMobile","maxWidth","style","width","MenuIcon","textString","logMsg","App","setLogged","rentLoading","rentError","rentData","_useQuery2","serverLoading","serverError","serverData","loadBook","bookLoading","bookError","bookData","notifyInit","updateLog","lang","ts","process","APP_NAME","APP_VERSION","navigator","languages","kr","en","updateIpAddr","nothing","password","setRent","rents","setBook","setServerInfo","LOADING","setLogCallback","Router","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","limit","Routes","Route","path","element","UserSearch","RentalSituation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","APP_ID","graphqlUri","app","Realm","getValidAccessToken","_getValidAccessToken","currentUser","anonymous","refreshAccessToken","accessToken","client","ApolloClient","link","HttpLink","uri","fetch","_fetch","options","Authorization","_x3","_x4","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider"],"mappings":"+0RAgBeA,MAbf,SAAcC,GAUV,OATAC,qBAAU,WACmB,SAAAC,IAGxB,OAHwBA,EAAAC,YAAAC,cAAAC,MAAzB,SAAAC,IAAA,OAAAF,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACIC,QAAQC,IAAI,QACZZ,EAAMa,IAAIC,iBAAYC,GAAW,wBAAAP,EAAAQ,OAAA,GAAAV,EAAA,MACpCW,MAAA,KAAAC,UAAA,EAJkB,WACMhB,EAAAe,MAAC,KAADC,UAAA,CAIzBC,EAEJ,GAAG,IAEKC,cAAA,OAAKC,GAAG,OAAOC,wBAAyB,CAACC,OAAOvB,EAAMwB,KAAKC,WACvE,E,0BCdaC,EAAoB,GACpBC,EAAmB,IAYhCC,OAAOC,UAAUC,OAAS,WAEtB,IADA,IAAIC,EAAYC,KACPC,EAAI,EAAGA,EAAIf,UAAUgB,OAAQD,IAAK,CACvC,IAAIE,EAAS,IAAIC,OAAO,MAAMH,EAAE,MAAO,MACvCF,EAAYA,EAAUM,QAAQF,EAAQjB,UAAUe,GACpD,CACA,OAAOF,CACX,EAEO,I,kBAAMO,EAAY,CACrBC,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAU9B,GAGD+B,EAAe,SAAStB,EAAMuB,GACvC,MAAc,MAAVA,GAA2B,IAAVA,EACVvB,EAAKwB,OACG,MAAVD,GAA2B,IAAVA,EACfvB,EAAKyB,QACG,MAAVF,GAA2B,IAAVA,EACfvB,EAAK0B,aADX,CAET,EAEaC,EAAe,SAAS3B,EAAMuB,GAEvC,OADApC,QAAQC,IAAI,cAAgBmC,GACpBA,GAEJ,IAAK,IACL,KAAK,EACD,OAAOvB,EAAK4B,UAChB,IAAK,IACL,KAAK,EACD,OAAO5B,EAAK6B,WAChB,IAAK,IACL,KAAK,EACD,OAAO7B,EAAK8B,SAChB,IAAK,IACL,KAAK,EACD,OAAO9B,EAAKyB,QAChB,IAAK,IACL,KAAK,EACD,OAAOzB,EAAK+B,KAChB,IAAK,IACL,KAAK,EACD,OAAO/B,EAAKgC,QAChB,IAAK,IACL,KAAK,EACD,OAAOhC,EAAKiC,MAChB,IAAK,IACL,KAAK,EACL,QACI,OAAOjC,EAAKkC,aAChB,IAAK,IACL,KAAK,EACD,OAAOlC,EAAKmC,QAExB,EAEaC,EAAc,SAASC,EAAIC,GAEpC,OAAID,EAAGE,SAAWD,EAAGC,YAEZF,EAAGE,SAAWD,EAAGC,WAEnBF,EAAGG,MAAQF,EAAGE,KACzB,EAEaC,EAAS,SAASzC,GAC3B,OAAO0C,SAASC,mBAAmB3C,GACvC,EAMa4C,EAAY,oBACZC,EAAY,oB,kDC5FZC,EAAaC,YAAGC,MAAAC,YAAA,0SAiBhBC,EAAaH,YAAGI,MAAAF,YAAA,6MAahBG,EAAcL,YAAGM,MAAAJ,YAAA,wJAUjBK,EAAaP,YAAGQ,MAAAN,YAAA,qOAYhBO,EAAgBT,YAAGU,MAAAR,YAAA,oQAYnBS,EAAuBX,YAAGY,MAAAV,YAAA,iUAY1BW,EAAeb,YAAGc,MAAAZ,YAAA,2JASlBa,EAAgBf,YAAGgB,MAAAd,YAAA,oLAUnBe,EAAejB,YAAGkB,MAAAhB,YAAA,yJC0DhBiB,MAnJf,SAAgB1F,GACZ,IAAA2F,EAA0CC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/CI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GACtCI,EAA4CL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAAjDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,EAA8BT,mBAAS,GAAEU,EAAAR,YAAAO,EAAA,GAAlCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,EAAoCb,oBAAU,GAAEc,EAAAZ,YAAAW,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,EAAyEC,YAAS1B,GAAjE2B,EAAaF,EAAtBG,QAA8BC,EAAUJ,EAAhBK,KAAyBC,EAAWN,EAAlBO,MAClDC,EAA8FC,YAAahC,EACnG,CAAC,UAAa,CAAC,IAAOqB,KAAaY,EAAAzB,YAAAuB,EAAA,GADpCG,EAAYD,EAAA,GAAAE,EAAAF,EAAA,GAAaG,EAAeD,EAAxBT,QAAgCW,EAAYF,EAAlBP,KAA2BU,EAAaH,EAApBL,MAGrEnH,qBAAU,WACmB,SAAAC,IAGxB,OAHwBA,EAAAC,YAAAC,cAAAC,MAAzB,SAAAC,IAAA,OAAAF,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACIC,QAAQC,IAAI,UACZZ,EAAMa,IAAIC,iBAAYC,GAAW,wBAAAP,EAAAQ,OAAA,GAAAV,EAAA,MACpCW,MAAA,KAAAC,UAAA,EAJkB,WACMhB,EAAAe,MAAC,KAADC,UAAA,CAIzBC,EAEJ,GAAG,IAEHlB,qBACI,WACIU,QAAQC,IAAI,cAIRqG,GAEAjB,EAAiBiB,EAAWY,QAEpC,GAAG,CAACZ,EAAYE,EAAaJ,IAGjC9G,qBACI,WACIU,QAAQC,IAAI,cAQhB,GAAG,CAAC+G,EAAcC,EAAeF,IAGrCzH,qBACI,WACI,IAAMiC,EAAS6D,EAAc7D,OAG7B,GAFAvB,QAAQC,IAAI,YAAc2F,EAAQuB,WAAa,KAC/CnH,QAAQC,IAAIsB,GACRA,EAASR,EACb,CACI,IAAMqG,EAAWxB,EAAU7E,EACrBsG,EAAQC,KAAKC,IAAIxG,EAAmBQ,EAAS6F,GACnD3B,EAAkBL,EAAcoC,MAAMJ,EAASA,EAASC,GAC5D,MAGI5B,EAAkBL,GAClBS,EAAW,EAEnB,GAAG,CAACT,EAAeQ,IAGvBtG,qBACI,WACR,GACW,CAACkG,IAGR,IAaMiC,EAAY,SAACC,GAEf,OACQC,eAAA,MAAIC,UAAU,GAAEC,SAAA,CACZF,eAAA,MAAIC,UAAU,GAAEC,SAAA,CAAC,IAAEH,EAAOI,KAAK,OAC/BH,eAAA,MAAIC,UAAU,cAAcG,QAAQ,IAAIC,QAAS,kBAlB5CtH,EAkB8DgH,EAAOO,IAjBtFjI,QAAQC,IAAI,YAAcS,EAAGyG,YAGzBlB,EAFAD,IAAetF,GAEA,EAIDA,QAElBmG,IAVgB,IAACnG,CAkByE,EAACmH,SAAA,CAAC,IAAEH,EAAOrE,WAFvEqE,EAAOO,IAKzC,EAgBA,OACQN,eAAA,OAAKjH,GAAG,SAAQmH,SAAA,CACZpH,cAAA,OAAKC,GAAG,QAAOmH,SACXpH,cAAA,MAAAoH,SACKxI,EAAMwB,KAAKqH,WAGnBlC,EAAa,GAAKgB,GACnBvG,cAAA,OAAKC,GAAG,gBAAemH,SACnBpH,cAAA,SAAOmH,UAAU,UAASC,SAACF,eAAA,SAAAE,SAAA,CACnBJ,EAAUT,EAAakB,QAC3BzH,cAAA,MAAAoH,SACIpH,cAAA,MAAImH,UAAU,UAAUG,QAAQ,IAAGF,SAC9Bb,EAAakB,OAAOC,mBAMrC1H,cAAA,OAAKC,GAAG,aAAYmH,SAChBpH,cAAA,SAAAoH,SAAOpH,cAAA,SAAAoH,SACHrC,EAAejE,OAAS,GAAKiE,EAAe4C,KAAI,SAACV,GAAM,OAAKD,EAAUC,EAAO,UAGpFtC,EAAc7D,OAASR,GACpB4G,eAAA,OAAKjH,GAAG,cAAamH,SAAA,CACjBpH,cAAA,OAAKmH,UAAU,OAAOlH,GAAK,OAAMmH,SAC7BpH,cAAC4H,IAAkB,CAACC,SAAS,QAAQC,GAAI,CAACC,MAAoB,IAAZ5C,EAAiB,UAAU,WAAYoC,QAzCjH,WACQpC,EAAU,GAEVC,EAAWD,EAAU,EAE7B,MAsCoBnF,cAAA,OAAKmH,UAAU,UAAUlH,GAAG,UAASmH,SAChCjC,EAAQ,IAEbnF,cAAA,OAAKmH,UAAU,OAAOlH,GAAK,OAAMmH,SAC7BpH,cAACgI,IAAgB,CAACH,SAAS,QAAQC,GAAI,CAACC,MAAQpD,EAAc7D,SAAWqE,EAAU,GAAK7E,EAAqB,UAAU,WAAYiH,QAxC3J,WACQ5C,EAAc7D,QAAUqE,EAAU,GAAK7E,GAEvC8E,EAAWD,EAAU,EAE7B,WAyCJ,E,kCChJA,IAAI8C,EAJJ,WACI1I,QAAQC,IAAI,gBAChB,EAiFe0I,MA9Ef,SAAkBtJ,GACV,IAAA2F,EAAgCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArC4D,EAAQ1D,EAAA,GAAE2D,EAAW3D,EAAA,GAE5BI,EAA8BL,mBAAS,GAAEM,EAAAJ,YAAAG,EAAA,GAAlCM,EAAOL,EAAA,GAAEM,EAAUN,EAAA,GAC1BG,EAAsCT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAA3CoD,EAAWnD,EAAA,GAAEoD,EAAcpD,EAAA,GAuDtC,OArDArG,qBAAU,WACNU,QAAQC,IAAI,iBAChB,GAAG,IAEHX,qBAAU,WAENuJ,EAAYxJ,EAAM2J,KACtB,GAAG,CAAC3J,EAAM2J,OAEV1J,qBAAU,WACNuG,EAAW,EACf,GAAG,CAACxG,EAAM4J,WAEV3J,qBAAU,WACFD,EAAMqJ,eAINA,EAAerJ,EAAMqJ,aAE7B,GAAG,CAACrJ,EAAMqJ,eAEVpJ,qBAAU,WACN,IAAMiC,EAASqH,EAASrH,OAExB,GAAIA,EAASR,EACb,CACI,IAAMqG,EAAWxB,EAAU7E,EACrBsG,EAAQC,KAAKC,IAAIxG,EAAmBQ,EAAS6F,GACnD2B,EAAeH,EAASpB,MAAMJ,EAASA,EAASC,GACpD,MAGI0B,EAAeH,EAEvB,GAAG,CAACA,EAAUhD,IAmBV+B,eAAA,OAAKjH,GAAG,WAAUmH,SAAA,CACba,EAAaI,EAAazJ,EAAM6J,QAChCN,GAAYA,EAASrH,OAASR,GAC3B4G,eAAA,OAAKjH,GAAG,cAAamH,SAAA,CACjBpH,cAAA,OAAKmH,UAAU,OAAOlH,GAAK,OAAMmH,SAC7BpH,cAAC4H,IAAkB,CAACC,SAAS,QAAQC,GAAI,CAACC,MAAoB,IAAZ5C,EAAiB,UAAU,WAAYoC,QAAS,WArBlHhI,QAAQC,IAAI,QACR2F,EAAU,GAEVC,EAAWD,EAAU,EAkB2G,MAExHnF,cAAA,OAAKmH,UAAU,UAAUlH,GAAG,UAASmH,SAChCjC,EAAQ,IAEbnF,cAAA,OAAKmH,UAAU,OAAOlH,GAAK,OAAMmH,SAC7BpH,cAACgI,IAAgB,CAACH,SAAS,QAAQC,GAAI,CAACC,MAAQI,EAASrH,SAAWqE,EAAU,GAAK7E,EAAqB,UAAU,WAAYiH,QAAS,WAnBvJhI,QAAQC,IAAI,QACR2I,EAASrH,QAAUqE,EAAU,GAAK7E,GAElC8E,EAAWD,EAAU,EAgBgJ,WAMjL,EC/EIuD,IAAc,EAiUHC,OA/Tf,SAAgB/J,GACZ,IAAA2F,EAAkCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvCqE,EAASnE,EAAA,GAAEoE,EAAYpE,EAAA,GAC9BqE,EAAsBC,YAAYH,EAAW,KAAtCI,EAA0CtE,YAAAoE,EAAA,GAA/B,GAClBjE,EAA0CL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA/CF,EAAaG,EAAA,GAAEF,EAAgBE,EAAA,GACtCG,EAAoCT,mBAAS,GAAEU,EAAAR,YAAAO,EAAA,GAAxCM,EAAUL,EAAA,GAAEM,EAAaN,EAAA,GAC1B+D,EAAcC,iBAAO,KAE3B7D,EAAgCb,mBAAS,IAAGc,EAAAZ,YAAAW,EAAA,GAArC8D,EAAQ7D,EAAA,GAAE8D,EAAW9D,EAAA,GAC5B+D,EAAgC7E,mBAAS,IAAG8E,EAAA5E,YAAA2E,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAE5BG,EAAkCjF,mBAAS,GAAEkF,EAAAhF,YAAA+E,EAAA,GAA3BE,GAAFD,EAAA,GAAcA,EAAA,IACxBE,EAAeV,iBAAO,GAC5BW,EAAsCrF,oBAAS,GAAMsF,EAAApF,YAAAmF,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAC5BG,EAAiBf,kBAAO,GAE9BgB,EAA2C1F,oBAAS,GAAM2F,EAAAzF,YAAAwF,EAAA,GAAnDE,EAAYD,EAAA,GAAEE,EAAkBF,EAAA,GAE/BlK,EAAOqK,cAAPrK,GAyIN,SAEasK,IAAS,OAAAC,EAAA3K,MAAC,KAADC,UAAA,UAAA0K,IAwBvB,OAxBuBA,EAAAzL,YAAAC,cAAAC,MAAxB,SAAAwL,IAAA,IAAAC,EAAAC,EAAA9J,EAAA+J,EAAAC,EAAAC,EAAAC,EAAA,OAAA/L,cAAAG,MAAA,SAAA6L,GAAA,cAAAA,EAAA3L,KAAA2L,EAAA1L,MAAA,OAOI,IALAC,QAAQC,IAAI,mBAAqBkJ,IACjCA,IAAc,EAEVgC,EAAK,GACHC,EAAS/L,EAAMa,IAAIwL,KAChBpK,EAAI,EAAIA,EAAI8J,EAAO7J,OAAQD,IAEjC6J,EAAGQ,KAAK,CAACC,KAAKR,EAAO9J,GAAGuK,QAASC,QAAQV,EAAO9J,GAAGyK,YAAa3J,MAAMgJ,EAAO9J,GAAGc,QAMnF,IAAWmJ,KAJXtB,EAAYkB,GAERE,EAAK,GACHC,EAAQjM,EAAMa,IAAIsL,KAGfA,EAAOF,EAAMC,GACnBF,EAAGM,KAAK,CAACC,KAAMJ,EAAKvD,IAAK+D,KAAMR,EAAKnI,MAAO4I,IAAKT,EAAKS,IAAKC,OAAQV,EAAKU,OAAQC,MAAOX,EAAKW,MAClFC,UAAWZ,EAAKY,UAAWC,UAAWb,EAAKc,OAAQC,SAAUf,EAAKgB,UAAWC,QAASjB,EAAKgB,YAEvGxM,QAAQC,IAAI,QACZD,QAAQC,IAAIqL,EAAM/J,QAClBsI,EAAYwB,GAAI,yBAAAI,EAAApL,OAAA,GAAA6K,EAAA,MACnB5K,MAAA,KAAAC,UAAA,CAjKDjB,qBAAU,WACmB,SAAAC,IAMxB,OANwBA,EAAAC,YAAAC,cAAAC,MAAzB,SAAAC,IAAA,OAAAF,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACQV,EAAMa,IAAIwM,SACV1B,IAEA3L,EAAMa,IAAIC,YAAY6K,GAC1BhL,QAAQC,IAAI,YAAcS,GAAI,wBAAAb,EAAAQ,OAAA,GAAAV,EAAA,MACjCW,MAAA,KAAAC,UAAA,EAPkB,WACMhB,EAAAe,MAAC,KAADC,UAAA,CAOzBC,EAEJ,GAAG,IAEHlB,qBACI,WACIU,QAAQC,IAAI,eAAiBS,GAGzB4I,EAFA5I,GAMa,GAErB,GAAG,CAACA,IAGRpB,qBACI,WAAO,SACYqN,EAASC,GAAA,OAAAC,EAAAvM,MAAC,KAADC,UAAA,UAAAsM,IAyFvB,OAzFuBA,EAAArN,YAAAC,cAAAC,MAAxB,SAAAoN,EAAyBjM,GAAI,IAAAkM,EAAAC,EAAAC,EAAAC,EAAA5B,EAAAQ,EAAAxK,EAAAkK,EAAA2B,EAAA/K,EAAAgL,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAApO,cAAAG,MAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,OACR,GAAbgN,EAAU,IAEV1N,EAAMa,IAAI6N,gBAAgB,CAADD,EAAA/N,KAAA,SASR,OAPjBC,QAAQC,IAAIqD,EAAOzC,IACnBb,QAAQC,IAAI+N,KAAK1K,EAAOzC,KAClBmM,EAAM,WAAa3N,EAAMa,IAAI+N,WAAWC,QAAU,IACpD7O,EAAMa,IAAI+N,WAAWE,KAAO,QAC1BlB,EAAM,CAAC,OAAU,CAAC,KAAQe,KAAK1K,EAAOzC,IAAQ,OAAQ,IAC5Db,QAAQC,IAAI,2BACZD,QAAQC,IAAI,qBACZD,QAAQC,IAAIgN,GAAKa,EAAA/N,KAAA,GACMqO,IAAMC,IAAIrB,EAAKC,GAAK,KAAD,GACrB,GADfC,EAAQY,EAAAQ,KACdtO,QAAQC,IAAIiN,GACN,UAAWA,EAAS3G,KAAKgI,OAAO,CAADT,EAAA/N,KAAA,gBAAA+N,EAAAU,OAAA,SAC1BzB,GAAO,QAGlB,IAFMzB,EAAQ4B,EAAS3G,KAAKgI,OAAOjD,MAC/BQ,EAAU,GACLxK,EAAI,EAAIA,EAAIgK,EAAM/J,OAASD,IAE1BkK,EAAOF,EAAMhK,GACb6L,EAAY,GAAAsB,OAAMjD,EAAKkD,SAAQ,KAAAD,OAAIjD,EAAKmD,UAEhC,KADRvM,EAAQoJ,EAAKoD,SACU,IAAVxM,IAEf0J,EAAUzM,EAAMwB,KAAKgO,WAAa,IAAMrD,EAAKsD,SAE7C1B,EAAe,CACf2B,MAAOzN,EACPT,KAAMsM,EACNnB,KAAMR,EAAKkD,SACX9C,KAAMJ,EAAKwD,QACXtD,KAAMlJ,EAAanD,EAAMwB,KAAM2K,EAAKoD,OAAOzH,YAC3C2E,QAASA,EACTI,OAAQV,EAAKyD,OACb5C,UAAWb,EAAK0D,WAChB9C,UAAWZ,EAAK2D,SAChB1C,QAASjB,EAAK4D,QACdjD,MAAOX,EAAK6D,MACZjN,MAAOoJ,EAAKoD,QAEhB7B,EAAQpB,KAAKyB,GAChBU,EAAA/N,KAAA,iBAKQuB,EAAI,EAAC,aAAGA,EAAIsI,EAASrI,QAAM,CAAAuM,EAAA/N,KAAA,SACR,GAAlBuN,EAAM1D,EAAStI,KACjByL,EAAQxL,QAAUP,GAAgB,CAAA8M,EAAA/N,KAAA,gBAAA+N,EAAAU,OAAA,yBACjClB,EAAItB,MAAQsB,EAAItB,KAAK7E,WAAWmI,SAASzO,IACzCyM,EAAI1B,OAAS/K,GAAK,CAAAiN,EAAA/N,KAAA,SAEfoN,EAAY,GAAAsB,OAAMnB,EAAItB,KAAI,KAAAyC,OAAInB,EAAIlB,WAClCN,EAAU,GACV1J,EAAQ,IAAGsL,EAAA6B,YACKvF,GAAQ8D,EAAAhO,KAAA,GAAA4N,EAAA8B,IAAA,YAAA7B,EAAAD,EAAA+B,KAAAC,KAAC,CAAD5B,EAAA/N,KAAA,SAAZ,IAAL6N,EAAKD,EAAAgC,OAEF/D,OAAS0B,EAAI1B,KAAI,CAAAkC,EAAA/N,KAAA,SAMtB,MAHa,OADdqC,EAAQwL,EAAMxL,QACiB,MAAVA,IAEjB0J,EAAUzM,EAAMwB,KAAKgO,WAAa,IAAMjB,EAAM9B,SACjDgC,EAAAU,OAAA,oBAAAV,EAAA/N,KAAA,iBAAA+N,EAAA/N,KAAA,iBAAA+N,EAAAhO,KAAA,GAAAgO,EAAA8B,GAAA9B,EAAA,UAAAJ,EAAAmC,EAAA/B,EAAA8B,IAAA,eAAA9B,EAAAhO,KAAA,GAAA4N,EAAAoC,IAAAhC,EAAAiC,OAAA,YAIL3C,EAAe,CACf2B,MAAOzN,EACPT,KAAMsM,EACNnB,KAAMsB,EAAItB,KACVJ,KAAM0B,EAAI1B,KAAKzE,WACfuE,KAAMlJ,EAAanD,EAAMwB,KAAMuB,GAC/B0J,QAASA,EACTI,OAAQoB,EAAIpB,OACZG,UAAWiB,EAAIjB,UACfD,UAAWkB,EAAIlB,UACfK,QAASa,EAAIb,QACbN,MAAOmB,EAAInB,MACX/J,MAAO4N,SAAS5N,IAEpB2K,EAAQpB,KAAKyB,GAAc,QAnCI9L,IAAGwM,EAAA/N,KAAA,iBAuCgB,OAA9DgN,EAAQkD,MAAK,SAASC,EAAEC,GAAK,OAAOD,EAAQ,KAAIC,EAAQ,IAAG,IAAGrC,EAAAU,OAAA,SACvDzB,GAAO,yBAAAe,EAAAzN,OAAA,GAAAyM,EAAA,2BACjBxM,MAAA,KAAAC,UAAA,CACmB,SAAA6P,IAanB,OAbmBA,EAAA5Q,YAAAC,cAAAC,MAApB,SAAA2Q,IAAA,IAAAC,EAAA,OAAA7Q,cAAAG,MAAA,SAAA2Q,GAAA,cAAAA,EAAAzQ,KAAAyQ,EAAAxQ,MAAA,OAC2B,GAAvBC,QAAQC,IAAI,YACRwJ,EAAY,CAAD8G,EAAAxQ,KAAA,eAAAwQ,EAAAxQ,KAAA,EACI4M,EAAUlD,GAAa,KAAD,GAAjC6G,EAAEC,EAAAjC,MACC/M,OAAS,EACZ8D,EAAiBiL,GAEjBjL,EAAiB,IACH,IAAdiL,EAAG/O,SACHmI,EAAY8G,QAAUF,EAAG,GAAG1E,MAAK2E,EAAAxQ,KAAA,gBAErCsF,EAAiB,IAAI,yBAAAkL,EAAAlQ,OAAA,GAAAgQ,EAAA,MAE5B/P,MAAA,KAAAC,UAAA,EAdA,WACmB6P,EAAA9P,MAAC,KAADC,UAAA,CAcpBkQ,EACJ,GACA,CAAChH,EAAaG,EAAUI,EAAU3K,EAAOwL,IA6B7C,IAAM6F,EAAQ,eAAAC,EAAAnR,YAAAC,cAAAC,MAAG,SAAAkR,EAAOhF,GAAI,OAAAnM,cAAAG,MAAA,SAAAiR,GAAA,cAAAA,EAAA/Q,KAAA+Q,EAAA9Q,MAAA,OACxBC,QAAQC,IAAI,QAAUyJ,EAAY8G,UACL,IAAzB9G,EAAY8G,SAAkB9G,EAAY8G,UAAY5E,GAEtD5L,QAAQC,IAAI,UAAY2L,GACxB3F,EAAc2F,GACdlC,EAAY8G,QAAU5E,IAItB5L,QAAQC,IAAI,YAAc2L,GAC1B3F,GAAe,GACfyD,EAAY8G,SAAW,GAC1B,wBAAAK,EAAAxQ,OAAA,GAAAuQ,EAAA,KACJ,gBAdaE,GAAA,OAAAH,EAAArQ,MAAA,KAAAC,UAAA,KAgBd,SAASwQ,GAAS3O,GAEdpC,QAAQC,IAAI,aAAemC,EAAM+E,YACjCuD,EAAe8F,SAAU,EACzB/F,GAAe,GACfL,EAAahI,GACbiI,EAAamG,QAAUpO,EACvBpC,QAAQC,IAAI+F,EAAWmB,WAAauD,EAAe8F,QACvD,CAE4B,SAAAQ,KAwB3B,OAxB2BA,GAAAxR,YAAAC,cAAAC,MAA5B,SAAAuR,IAAA,IAAAC,EAAAC,EAAAnE,EAAAC,EAAA,OAAAxN,cAAAG,MAAA,SAAAwR,GAAA,cAAAA,EAAAtR,KAAAsR,EAAArR,MAAA,OAO8C,GAL1CC,QAAQC,IAAI,aACZyK,EAAe8F,SAAU,EACzB/F,GAAe,GAETyG,EAAS7R,EAAMa,IAAI+N,WAAWC,QAC9BiD,EAAU9R,EAAMa,IAAI+N,WAAWE,OACf,IAAlB+C,EAAO3P,QAAgB4P,GAAW,GAAC,CAAAC,EAAArR,KAAA,eAAAqR,EAAA5C,OAAA,iBAUtB,OAPXxB,EAAM,WAAakE,EAAS,IAC9BC,EAAU,SACVlE,EAAM,CAAC,GACD,KAAIvD,EAAY8G,QAC1BvD,EAAW,MAAI5C,EAAamG,QAC5BxQ,QAAQC,IAAI,2BACZD,QAAQC,IAAI,qBACZD,QAAQC,IAAIgN,GAAKmE,EAAArR,KAAA,GACXqO,IAAMiD,KAAKrE,EAAKC,GAAKqE,MAAM,SAAApE,GAC7BlN,QAAQC,IAAIiN,EAChB,IAAG,KAAD,GAEFpC,GAAoBD,GAAc,yBAAAuG,EAAA/Q,OAAA,GAAA4Q,EAAA,MACrC3Q,MAAA,KAAAC,UAAA,CASD,IAAMkH,GAAY,SAACC,GACf,IAAM6J,EAAU7J,EAAOkE,OAASlC,EAAY8G,QACtCgB,EAAWD,EAAU,eAAiB,uBACtCE,EAAQ,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAM9E,OALAA,EAAM/J,EAAOtF,QAAS,EACD,IAAjBsF,EAAOtF,OAAgC,IAAjBsF,EAAOtF,OAAgC,IAAjBsF,EAAOtF,QACnDqP,EAAM,IAAK,GACVF,GACDvR,QAAQC,IAAIwR,GAEZ9J,eAAA,OAAAE,SAAA,CACApH,cAAA,OAAKC,GAAI8Q,EAASxJ,QAAOxI,YAAAC,cAAAC,MAAE,SAAAgS,IAAA,OAAAjS,cAAAG,MAAA,SAAA+R,GAAA,cAAAA,EAAA7R,KAAA6R,EAAA5R,MAAA,cAAA4R,EAAA5R,KAAA,EAAkB2Q,EAAShJ,EAAOkE,MAAK,cAAA+F,EAAAnD,OAAA,SAAAmD,EAAArD,MAAA,wBAAAqD,EAAAtR,OAAA,GAAAqR,EAAA,KAAC7J,SAC/DpH,cAAA,SAAAoH,SAAOpH,cAAA,SAAAoH,SACHF,eAAA,MAAIC,UAAU,WAAUC,SAAA,CACpBF,eAAA,MAAIC,UAAU,cAAaC,SAAA,CAAC,IAAEH,EAAO7G,QACrC8G,eAAA,MAAIC,UAAU,aAAYC,SAAA,CAAC,IAAEH,EAAOgE,KAAK,iBAInD6F,GACF5J,eAAA,OAAAE,SAAA,CACIpH,cAAA,SAAAoH,SAAOF,eAAA,SAAAE,SAAA,CACPF,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAKH,EAAOwE,OAAO,OACnBvE,eAAA,MAAII,QAAQ,IAAI6J,QAAQ,IAAG/J,SAAA,CAAEH,EAAO2E,UAAU,IAAC5L,cAAA,KAAAoH,SAAIH,EAAOsE,OAAS,IAAGtE,EAAO0E,UAAU,UAE3F3L,cAAA,MAAAoH,SACIF,eAAA,MAAAE,SAAA,CAAKH,EAAOkE,KAAK,SAErBjE,eAAA,MAAAE,SAAA,CACIpH,cAAA,MAAAoH,SAAKH,EAAO+E,UACZ9E,eAAA,MAAII,QAASL,EAAOoE,QAAQvK,OAAS,EAAI,IAAI,IAAIsG,SAAA,CAAEH,EAAOyE,MAAM,OAC/DzE,EAAOoE,QAAQvK,OAAS,GAAKd,cAAA,MAAAoH,SAAKH,EAAOoE,kBAG9CnE,eAAA,OAAK4J,QAASlS,EAAMa,IAAI6N,kBAAoB1O,EAAMa,IAAI2R,MAAMhK,SAAA,CACxDF,eAAA,UAAQC,UAAU,aAAalH,GAAK,IAAIoR,SAAUL,EAAM,GAAIzJ,QAAS,kBAAM+I,GAAS,EAAE,EAAClJ,SAAA,CAAC,IAAExI,EAAMwB,KAAK4B,UAAU,OAC/GkF,eAAA,UAAQC,UAAU,aAAalH,GAAK,IAAIoR,SAAUL,EAAM,GAAIzJ,QAAS,kBAAM+I,GAAS,EAAE,EAAClJ,SAAA,CAAC,IAAExI,EAAMwB,KAAK+B,KAAK,OAC1G+E,eAAA,UAAQC,UAAU,aAAalH,GAAK,IAAIoR,SAAUL,EAAM,GAAIzJ,QAAS,kBAAM+I,GAAS,EAAE,EAAClJ,SAAA,CAAC,IAAExI,EAAMwB,KAAKgC,QAAQ,OAC7G8E,eAAA,UAAQC,UAAU,aAAalH,GAAK,IAAIoR,SAAUL,EAAM,GAAIzJ,QAAS,kBAAM+I,GAAS,EAAE,EAAClJ,SAAA,CAAC,IAAExI,EAAMwB,KAAKiC,MAAM,OAC3G6E,eAAA,UAAQC,UAAU,aAAalH,GAAK,IAAIoR,SAAUL,EAAM,GAAIzJ,QAAS,kBAAM+I,GAAS,EAAE,EAAClJ,SAAA,CAAC,IAAExI,EAAMwB,KAAKkC,aAAa,OAClH4E,eAAA,UAAQC,UAAU,aAAalH,GAAK,IAAIoR,SAAUL,EAAM,GAAIzJ,QAAS,kBAAM+I,GAAS,EAAE,EAAClJ,SAAA,CAAC,IAAExI,EAAMwB,KAAKmC,QAAQ,UAEjH2E,eAAA,OAAKjH,GAAG,YAAY6Q,QAAS7G,EAAe8F,QAAQ3I,SAAA,CAChDF,eAAA,OAAKjH,GAAG,WAAUmH,SAAA,CAAC,IAAErF,EAAanD,EAAMwB,KAAMwJ,EAAamG,SAAS,OACpE7I,eAAA,UAAQjH,GAAG,UAAUsH,QAAS,kBAhF7C,WAE2B,OAAAgJ,GAAA1Q,MAAC,KAADC,UAAA,CA8EwBwR,EAAe,EAAClK,SAAA,CAAC,IAAExI,EAAMwB,KAAKmR,QAAQ,OAC1ErK,eAAA,UAAQjH,GAAG,SAASsH,QAAS,kBAnDzChI,QAAQC,IAAI,aACZyK,EAAe8F,SAAU,OACzB/F,GAAe,EAiD8C,EAAC5C,SAAA,CAAC,IAAExI,EAAMwB,KAAKoR,OAAO,eApCrEvK,EAAOkE,KA0CzB,EAQA,OACIjE,eAAA,OAAKjH,GAAG,SAAQmH,SAAA,CACZpH,cAAA,OAAKC,GAAG,QAAOmH,SACXF,eAAA,MAAAE,SAAA,CAAI,IAAExI,EAAMwB,KAAKqR,WAAW,SAEhCzR,cAAA,OAAKC,GAAG,iBAAgBmH,SACpBpH,cAAA,SAAOC,GAAG,cACNyR,YAAa9S,EAAMwB,KAAKuR,WACxBzC,MAAOtG,EACPgJ,SAAU,SAACC,GACPhJ,EAAagJ,EAAMC,OAAO5C,MAC9B,MAERlP,cAACkI,EAAQ,CAACM,SAAUQ,EAAaT,KAAM5D,EAAe8D,OAAQlD,EAAawE,EAAa9B,aAAc,SAAC8J,EAAStJ,GAAa,OAnBhH6D,EAmBmIyF,EAjBpJxS,QAAQC,IAAI,UAAYyK,EAAe8F,SAChCzD,EAAQ3E,KAAI,SAACV,GAAM,OAAKD,GAAUC,EAAO,IAHpD,IAAqBqF,CAmB6I,MAGtK,E,kBC9TM0F,GAAQ,CACVC,UAAW,EACXC,UAAW,EACXC,SAAW,GA6QAC,OA1Qf,SAAwBxT,GACpB,IAAA2F,EAAgCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArC8N,EAAQ5N,EAAA,GAAE6N,EAAW7N,EAAA,GAC5BI,EAAwCL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA7C0N,EAAYzN,EAAA,GAAE0N,EAAe1N,EAAA,GACpCG,EAA0CT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAA/CN,EAAaO,EAAA,GAAEN,EAAgBM,EAAA,GACtCG,EAAsCb,oBAAS,GAAMc,EAAAZ,YAAAW,EAAA,GAA9CqD,EAAWpD,EAAA,GAAEmN,EAAcnN,EAAA,GAClC+D,EAA4B7E,mBAAS,IAAG8E,EAAA5E,YAAA2E,EAAA,GAAjCqJ,EAAMpJ,EAAA,GAAEqJ,EAASrJ,EAAA,GACxBG,EAA0BjF,mBAASwN,GAAMC,WAAUvI,EAAAhF,YAAA+E,EAAA,GAA5C9H,EAAK+H,EAAA,GAAE4G,EAAQ5G,EAAA,GACtBG,EAA8BrF,mBAAS,IAAGsF,EAAApF,YAAAmF,EAAA,GAAnC+I,EAAO9I,EAAA,GAAE+I,EAAU/I,EAAA,GAC1BI,EAAkC1F,oBAAS,GAAM2F,EAAAzF,YAAAwF,EAAA,GAA1C4I,EAAS3I,EAAA,GAAE4I,EAAY5I,EAAA,GAC9BlE,EAAuCC,YAAaxC,EACnC,CAAE,UAAa,CAAE,IAAOgP,KAAWvM,EAAAzB,YAAAuB,EAAA,GAD7C+M,EAAQ7M,EAAA,GAAU8M,EAAQ9M,EAAA,GAAdL,KAEnBoN,EAA6ChN,YAAatC,EACzC,CAAE,UAAa,CAAE,QAAW8O,KAAWS,EAAAzO,YAAAwO,EAAA,GADjDE,EAAWD,EAAA,GAAUE,GAAWF,EAAA,GAAjBrN,KAEtBwN,GAAoC9O,mBAAS,IAAG+O,GAAA7O,YAAA4O,GAAA,GAAzCE,GAAUD,GAAA,GAAEE,GAAaF,GAAA,GAChCG,GAA0BlP,mBAAS,IAAGmP,GAAAjP,YAAAgP,GAAA,GAA/B9Q,GAAK+Q,GAAA,GAAEC,GAAQD,GAAA,GA2EpB,SAEapJ,KAAS,OAAAC,GAAA3K,MAAC,KAADC,UAAA,UAAA0K,KAgCvB,OAhCuBA,GAAAzL,YAAAC,cAAAC,MAAxB,SAAAwL,IAAA,IAAAoJ,EAAA,OAAA7U,cAAAG,MAAA,SAAA6L,GAAA,cAAAA,EAAA3L,KAAA2L,EAAA1L,MAAA,OAEkD,GAA9CC,QAAQC,IAAI,mBAAqBkJ,IAC7B9J,EAAMa,IAAIqU,OAAO,CAAD9I,EAAA1L,KAAA,SAKA,OAHhBgR,EAAS0B,GAAMG,UACTO,EAAS9T,EAAMa,IAAIsU,SAAc,IACvCpB,EAAUD,GAAQ1H,EAAAmE,GAClBvK,EAAgBoG,EAAA1L,KAAA,EAAOV,EAAMa,IAAIuU,QAAQtB,GAAO,cAAA1H,EAAAiJ,GAAAjJ,EAAA6C,MAAA,EAAA7C,EAAAmE,IAAAnE,EAAAiJ,IAAAjJ,EAAA1L,KAAA,GAC1C8T,IAAc,KAAD,GAAApI,EAAA1L,KAAA,iBAInBgR,EAAS0B,GAAMC,WACfU,EAAU,IACVH,EAAgB,IAAI,QAGxBjT,QAAQC,IAAI,aAAeZ,EAAMa,IAAIqU,QACjClV,EAAMa,IAAIqU,OAENlV,EAAMa,IAAIyU,UACVN,GAAShV,EAAMwB,KAAK+T,YAEpBP,GAAShV,EAAMwB,KAAKgU,UAIxBR,GAAShV,EAAMwB,KAAKiU,OAExB9U,QAAQC,IAAI,QACZiT,GAAe,GAAM,yBAAAzH,EAAApL,OAAA,GAAA6K,EAAA,MACxB5K,MAAA,KAAAC,UAAA,CA3GDjB,qBAAU,WACmB,SAAAC,IAmBxB,OAnBwBA,EAAAC,YAAAC,cAAAC,MAAzB,SAAAC,IAAA,IAAAoV,EAAAjN,EAAA,OAAArI,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACSV,EAAMa,IAAIiJ,YAAY,CAADtJ,EAAAE,KAAA,eAAAF,EAAA2O,OAAA,iBAGtBnP,EAAMa,IAAIwM,UACV1B,KACJhL,QAAQC,IAAI,2CACZD,QAAQC,IAAI,6BAGR,cAAeZ,EAAM2V,QAAQC,SAEvB1B,EAAgD,SAAnClU,EAAM2V,QAAQC,OAAO1B,UACxCC,EAAaD,IAEXzL,EAAO,IAAIoN,KACN,EACXpN,EAAKqN,QAAQrN,EAAKsN,UAAWC,QAC7BnB,GAAcpM,EAAKwN,eAAe,yBAAAzV,EAAAQ,OAAA,GAAAV,EAAA,MACrCW,MAAA,KAAAC,UAAA,EApBkB,WACMhB,EAAAe,MAAC,KAADC,UAAA,CAqBzBC,EAEJ,GAAG,IAEHlB,qBACI,WACIU,QAAQC,IAAI,sBACZ+K,IACJ,GAEA,CAAC3L,EAAMa,IAAIqU,SAGfjV,qBAAU,WACiB,SAAAiW,IAGlB,OAHkBA,EAAA/V,YAAAC,cAAAC,MAAnB,SAAAoN,IAAA,OAAArN,cAAAG,MAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,OACsC,OAAlCC,QAAQC,IAAI,sBAAsB6N,EAAA/N,KAAA,EAC5ByV,KAAU,KAAD,mBAAA1H,EAAAzN,OAAA,GAAAyM,EAAA,MAClBxM,MAAA,KAAAC,UAAA,EAJQ,WACUgV,EAAAjV,MAAC,KAADC,UAAA,CAInBkV,EACJ,GAEA,CAAC/B,IAGLpU,qBACI,WACI,GAAKwU,IAAgBzU,EAAMa,IAAIwV,WAAcrW,EAAMa,IAAIyV,UAAvD,CAEA3V,QAAQC,IAAI,oBACZD,QAAQC,IAAI6T,IAEZ,IADA,IAAI8B,EAAO,GACFtU,EAAI,EAAIA,EAAIwS,GAAY+B,SAAStU,OAASD,IACnD,CACI,IAAMsM,EAAQkG,GAAY+B,SAASvU,GACnC,GAAyB,MAArBsM,EAAMkI,aAEH,gBAAiBlI,GAAYA,EAAMmI,aAA1C,CAEA,IAAMrV,EAAKkN,EAAe,QACpBvK,EAAQhE,EAAMa,IAAIsL,KAAK9K,GAAW,MAClCoH,EAAO8F,EAAiB,UAAEoI,MAAM,KAAK,GAAGtU,QAAQ,IAAK,IAAK,GAAGA,QAAQ,IAAK,KAC1EoK,EAAU8B,EAAMmI,YACtBH,EAAKjK,KAAK,CAAC,GAAMjL,EAAI,MAAS2C,EAAO,SAAYyE,EAAM,QAAWgE,GALtD,CAOhB,CACA8J,EAAK3F,KAAKhN,GACVjD,QAAQC,IAAI,eACZqT,EAAWsC,EApBD,CAqBd,GAEA,CAAC9B,GAAazU,EAAMa,IAAIwV,UAAWrW,EAAMa,IAAIyV,YAqCjD,IA4BMM,GAAc,SAACvO,EAAQwO,GACzB,OAAQzV,cAAA,OAAAoH,SACIpH,cAAA,SAAAoH,SAAOF,eAAA,SAAAE,SAAA,CACPF,eAAA,MAAAE,SAAA,CACIpH,cAAA,MAAIC,GAAG,KAAImH,SAAExI,EAAMwB,KAAKH,KACxBD,cAAA,MAAIC,GAAG,WAAUmH,SAAExI,EAAMwB,KAAKuC,WAC9B3C,cAAA,MAAIC,GAAG,aAAYmH,SAAEqO,MAHjB,MAMJxO,EAAOU,KAAI,SAACsD,EAAMqD,GACd,OAtCL,SAACrD,EAAMqD,GACtB,IAAMrO,EAAKgL,EAAS,GACdtI,EAAWsI,EAAe,SAC1BI,EAAUJ,EAAc,QACxByK,EAAWzK,EAAY,MACvBH,EAAMwD,EAAM5H,WAClB,OAAQQ,eAACyO,IAAMC,SAAQ,CAAAxO,SAAA,CACXF,eAAA,MAAcC,UAAU,WAAUC,SAAA,CAC9BpH,cAAA,MAAImH,UAAU,WAAUC,SAACpH,cAAC6V,KAAI,CAACC,GAAI,WAAW7V,EAAGmH,SAAEnH,MACnDD,cAAA,MAAImH,UAAU,WAAUC,SAAEzE,IAC1B3C,cAAA,MAAImH,UAAU,WAAUC,SAAEiE,MAHrBP,GAKT9K,cAAA,MAAwBmH,UAAU,WAAUC,SACxCpH,cAAA,MAAIsH,QAAQ,IAAIH,UAAU,WAAUC,SAAEsO,KADjC5K,EAAM,WANEA,EAAM,WAWvC,CAqB+BiL,CAAW9K,EAAMqD,EAC5B,IAGkB,IAAlBrH,EAAOnG,QAAgBd,cAAA,MAAAoH,SAAepH,cAAA,MAAIsH,QAAQ,IAAGF,SAAExI,EAAMwB,KAAK4V,WAAnC,cAInD,EAEM3B,GAAK,eAAAnE,EAAAnR,YAAAC,cAAAC,MAAG,SAAA2Q,IAAA,OAAA5Q,cAAAG,MAAA,SAAA2Q,GAAA,cAAAA,EAAAzQ,KAAAyQ,EAAAxQ,MAAA,OAEwB,OADlCgR,EAAS0B,GAAME,WACfS,EAAUN,EAAS4D,eAAenG,EAAAxQ,KAAA,EAC5B0T,IAAW,KAAD,SAAAlD,EAAAxQ,KAAA,EACV8T,IAAc,KAAD,EACG,OAAtB7T,QAAQC,IAAI,UAAUsQ,EAAAxQ,KAAA,EAChByV,KAAU,KAAD,mBAAAjF,EAAAlQ,OAAA,GAAAgQ,EAAA,KAClB,kBAPU,OAAAM,EAAArQ,MAAA,KAAAC,UAAA,KASLiV,GAAO,eAAAmB,EAAAnX,YAAAC,cAAAC,MAAG,SAAAkR,IAAA,IAAAgG,EAAA/V,EAAA,OAAApB,cAAAG,MAAA,SAAAiR,GAAA,cAAAA,EAAA/Q,KAAA+Q,EAAA9Q,MAAA,UACP2T,GAAYtR,IAAUqQ,GAAMC,UAAS,CAAA7B,EAAA9Q,KAAA,eAAA8Q,EAAArC,OAAA,iBAInB,GADvBxO,QAAQC,IAAI4W,KAAMC,SAASpT,IACrBkT,EAAOjV,GAGTtC,EAAM2V,QAAQ+B,WAAWrD,EAAUV,GAAc,CAADnC,EAAA9Q,KAAA,SAIhC,OAFhBV,EAAMa,IAAI4U,MAAMpB,EAASsD,MAAMnG,EAAAjB,GAE/BvK,EAAgBwL,EAAA9Q,KAAA,EAAOV,EAAMa,IAAIuU,QAAQtB,GAAO,OAAAtC,EAAA6D,GAAA7D,EAAAvC,MAAA,EAAAuC,EAAAjB,IAAAiB,EAAA6D,IAChD3D,EAAS0B,GAAMG,UAEfgE,EAAKK,KAAOJ,KAAMK,KAAKC,QACvBtW,EAAOxB,EAAMwB,KAAKuW,aAClBC,SAASpC,OAAS,WAAa9B,EAAS,aAAec,GAAa,IAAIpD,EAAA9Q,KAAA,iBAIxE6W,EAAKK,KAAOJ,KAAMK,KAAKI,MACvBzW,EAAOxB,EAAMwB,KAAK0W,UAAU,QAEhCX,EAAKY,OAAS3W,EACd+V,EAAK/U,UAAY,IACjB+U,EAAKa,QAAU/T,EACXmT,KAAMC,SAASpT,IAEf1D,QAAQC,IAAI,gBACZ4W,KAAMa,OAAOhU,EAAWkT,KAIxB5W,QAAQC,IAAI,aACZ4W,KAAMc,KAAK9W,EAAM+V,IACpB,yBAAA/F,EAAAxQ,OAAA,GAAAuQ,EAAA,KACJ,kBArCY,OAAA+F,EAAArW,MAAA,KAAAC,UAAA,KAuCb,OAAKlB,EAAMa,IAAIiJ,YAIXxB,eAAA,OAAKjH,GAAG,WAAUmH,SAAA,CACdpH,cAAA,OAAKC,GAAG,QAAOmH,SACXpH,cAAA,MAAAoH,SACKxE,OAGTsE,eAAA,OAAKjH,GAAG,gBAAgB6Q,SAAUnP,IAAUqQ,GAAMG,UAAU/K,SAAA,CACxDpH,cAAA,SAAOwW,KAAK,OAAOvW,GAAG,cAClByR,YAAa9S,EAAMwB,KAAK+W,SACxBjI,MAAOmD,EACPhB,UAAW3I,EACX0O,QAAS,SAACvF,GACNS,EAAYT,EAAMC,OAAO5C,MAC7B,IACJlP,cAAA,SAAOwW,KAAK,WAAWvW,GAAG,iBACtByR,YAAa9S,EAAMwB,KAAKiX,SACxBnI,MAAOqD,EACPlB,UAAW3I,EACX0O,QAAS,SAACvF,GACNW,EAAgBX,EAAMC,OAAO5C,MACjC,IACJhI,eAAA,OAAKjH,GAAG,YAAWmH,SAAA,CACfpH,cAAA,SAAOwW,KAAK,WAAWvW,GAAG,kBAAkBqX,QAASxE,EAAWlB,SAAU,kBAtGlE,WACpBrS,QAAQC,IAAI,oBACZ,IAAM+X,EAAe,cAAgBzE,EAAY,QAAQ,QAAU,aAAeU,GAAa,IAC/FjU,QAAQC,IAAI+X,GACZX,SAASpC,OAAS+C,EAClBxE,GAAcD,EAClB,CAgGgG0E,EAAiB,IACjGxX,cAAA,SAAAoH,SACSxI,EAAMwB,KAAK0S,eAGzB5L,eAAA,UAAQjH,GAAG,QAAQsH,QAAOxI,YAAAC,cAAAC,MAAE,SAAAgS,IAAA,OAAAjS,cAAAG,MAAA,SAAA+R,GAAA,cAAAA,EAAA7R,KAAA6R,EAAA5R,MAAA,cAAA4R,EAAAnD,OAAA,SAAYsG,MAAO,wBAAAnD,EAAAtR,OAAA,GAAAqR,EAAA,KAAC7J,SAAA,CAAC,IAAExI,EAAMwB,KAAKiU,MAAM,UAEvEnN,eAAA,OAAKjH,GAAG,iBAAiB6Q,SAAUnP,IAAUqQ,GAAMG,UAAU/K,SAAA,CACzDpH,cAAA,OAAAoH,SACMoO,GAAY7Q,EAAe/F,EAAMwB,KAAKqX,WAG5CzX,cAAA,OAAKC,GAAG,OAAMmH,SAAExI,EAAMwB,KAAKwS,UAC3B5S,cAACkI,EAAQ,CAACK,KAAMqK,EAAS3K,aAAc,SAAC8J,GAAc,OAAOyD,GAAYzD,EAASnT,EAAMwB,KAAKgO,WAAa,UAtC3GpO,cAAC0X,IAAQ,CAAC5B,GAAG,KA0C5B,E,qBC/QM9D,GAAQ,CACVC,UAAW,EACXC,UAAW,EACXC,SAAW,EACXwF,WAAY,GAmaDC,OAhaf,SAAkBhZ,GACd,IAAA2F,EAAgCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArC8N,EAAQ5N,EAAA,GAAE6N,EAAW7N,EAAA,GAC5BI,EAAgCL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAArCgT,EAAQ/S,EAAA,GAAEgT,EAAWhT,EAAA,GAC5BgE,EAAsBC,YAAY8O,EAAU,KAArC7O,EAAyCtE,YAAAoE,EAAA,GAA9B,GAClB7D,EAA4BT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAAjCyN,EAAMxN,EAAA,GAAEyN,EAASzN,EAAA,GACxBG,EAA0Bb,mBAASwN,GAAMC,WAAU3M,EAAAZ,YAAAW,EAAA,GAA5C1D,EAAK2D,EAAA,GAAEgL,EAAQhL,EAAA,GACtB+D,EAAgC7E,mBAAS,CAAC,GAAE8E,EAAA5E,YAAA2E,EAAA,GAArC4J,EAAQ3J,EAAA,GAAEyO,EAAWzO,EAAA,GAC5BG,EAAsCjF,mBAAS,CAAC,GAAEkF,EAAAhF,YAAA+E,EAAA,GAA3CuO,EAAWtO,EAAA,GAAEuO,EAAcvO,EAAA,GAClCG,EAAsCrF,oBAAS,GAAMsF,EAAApF,YAAAmF,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCI,EAA0C1F,mBAAS,CAAC,GAAE2F,EAAAzF,YAAAwF,EAAA,GAA/CgO,EAAa/N,EAAA,GAAEgO,EAAgBhO,EAAA,GACtCmJ,EAA8B9O,mBAAS,IAAG+O,EAAA7O,YAAA4O,EAAA,GAAnC8E,EAAO7E,EAAA,GAAE8E,EAAU9E,EAAA,GAE1B1U,qBAAU,WACmB,SAAAC,IAGxB,OAHwBA,EAAAC,YAAAC,cAAAC,MAAzB,SAAAoN,IAAA,OAAArN,cAAAG,MAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,OACIC,QAAQC,IAAI,2CACZD,QAAQC,IAAI,uBAAuB,wBAAA6N,EAAAzN,OAAA,GAAAyM,EAAA,MACtCxM,MAAA,KAAAC,UAAA,CAED,IAAMwY,EAAWC,YAAWxZ,YAAAC,cAAAC,MAAC,SAAAC,IAAA,IAAAuR,EAAAC,EAAAnE,EAAA,OAAAvN,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAEnB,YAAaV,EAAMa,IAAI+N,YAAiB,SAAU5O,EAAMa,IAAI+N,WAAW,CAAApO,EAAAE,KAAA,eAAAF,EAAA2O,OAAA,iBAEvE0C,EAAS7R,EAAMa,IAAI+N,WAAWC,QAC9BiD,EAAU9R,EAAMa,IAAI+N,WAAWE,KACjC+C,EAAO3P,OAAS,GAAK4P,EAAU,IAEzBnE,EAAM,WAAakE,EAAS,IAC9BC,EAAU,eACd/C,IAAMC,IAAIrB,GAAKsE,MAAM,SAAApE,GACb,IAAM1B,EAAO0B,EAAS3G,KAAK0S,KACvBzN,IACAxL,QAAQC,IAAIuL,GACZsN,EAAWtN,GAEnB,KAEP,wBAAA3L,EAAAQ,OAAA,GAAAV,EAAA,KACF,KAGH,OA5BmB,WACMJ,EAAAe,MAAC,KAADC,UAAA,CA0BzBC,GACO,kBAAM0Y,cAAcH,EAAU,CAEzC,GAAG,IAEHzZ,qBACI,WACIU,QAAQC,IAAI,sBACZD,QAAQC,IAAI4W,KAAMC,SAASpT,IAC3B,IAEI7C,EAFE+V,EAAOjV,EAGTwX,GAAS,EACT,cAAezF,GAAYtR,IAAUqQ,GAAMG,UAE3C7B,EAAS0B,GAAMG,UAEfgE,EAAKK,KAAOJ,KAAMK,KAAKC,QACvBtW,EAAOxB,EAAMwB,KAAKuW,aAClB+B,GAAS,GAEF,cAAezF,IAEtB3C,EAAS0B,GAAMC,WAEXtQ,IAAUqQ,GAAME,YAEhBiE,EAAKK,KAAOJ,KAAMK,KAAKI,MACvBzW,EAAOxB,EAAMwB,KAAK0W,UAClB4B,GAAS,IAIbA,GAEAP,EAAiB,CAAC,GAAMnV,EACN,KAAQ5C,EACR,KAAQ+V,EAAKK,MAEvC,GAEA,CAACvD,IAGLpU,qBACI,WACIU,QAAQC,IAAI,iBACR,YAAawY,EAEc,IAAvBA,EAAY7J,OAEZnE,GAAe,IAIfmO,EAAiB,CAAC,GAAMnV,EACN,KAAQpE,EAAMwB,KAAKuY,OACnB,KAAQvC,KAAMK,KAAKI,QACrCD,SAASgC,eAAe,eAAe1J,MAAO,KAC9ClF,GAAe,KAKnBA,GAAe,GACfqO,EAAW,IAEnB,GAEA,CAACL,IAGLnZ,qBACI,WACI,GAAO,SAAUqZ,EAAjB,CAGA9B,KAAMyC,UACNtZ,QAAQC,IAAI,gBAAkB0Y,EAAc9X,MAC5C,IAAM+V,EAAOjV,EACbiV,EAAKK,KAAO0B,EAAc1B,KAC1BL,EAAK/U,UAAY,IASbgV,KAAMc,KAAKgB,EAAc9X,KAAM+V,EAfzB,CAiBd,GACA,CAAC+B,IAGLrZ,qBACI,WACQ8C,IAAUqQ,GAAMG,UAChBkG,EAAWhG,EACnB,GAAG,CAAC1Q,EAAO0Q,IAGf,IAAMyG,EAAU,eAAA5C,EAAAnX,YAAAC,cAAAC,MAAG,SAAA2Q,EAAOyC,GAAQ,IAAA9F,EAAAC,EAAAC,EAAA8J,EAAA,OAAAvX,cAAAG,MAAA,SAAA2Q,GAAA,cAAAA,EAAAzQ,KAAAyQ,EAAAxQ,MAAA,OAGb,OAFXiN,EAAM,WAAa3N,EAAMa,IAAI+N,WAAWC,QAAU,IAAM7O,EAAMa,IAAI+N,WAAWE,KAAO,cAAgB2E,EACpG7F,EAAM,CAAC,OAAU,CAAC,KAAQ6F,EAAU,KAAO,YACjD9S,QAAQC,IAAIgN,GAAKsD,EAAAxQ,KAAA,EACMqO,IAAMC,IAAIrB,EAAKgB,KAAKwL,KAAKC,UAAUxM,KAAO,KAAD,EAA1DC,EAAQqD,EAAAjC,KACR0I,EAAO9J,EAAS3G,KAAKgI,OAC3BiK,EAAYxB,GACZhX,QAAQC,IAAI+W,GAAM,wBAAAzG,EAAAlQ,OAAA,GAAAgQ,EAAA,KACrB,gBARezD,GAAA,OAAA+J,EAAArW,MAAA,KAAAC,UAAA,KAUVuU,EAAK,eAAA4E,EAAAla,YAAAC,cAAAC,MAAG,SAAAkR,IAAA,IAAAlQ,EAAA,OAAAjB,cAAAG,MAAA,SAAAiR,GAAA,cAAAA,EAAA/Q,KAAA+Q,EAAA9Q,MAAA,OAEY,GADtBC,QAAQC,IAAI,SACZD,QAAQC,IAAI6S,GACY,IAApBA,EAASvR,OAAY,CAAAsP,EAAA9Q,KAAA,eAAA8Q,EAAArC,OAAA,iBAEzBuC,EAAS0B,GAAME,WACTjS,EAAKoS,EAAS4D,cACpBtD,EAAU1S,GACV6Y,EAAW7Y,GAAI,wBAAAmQ,EAAAxQ,OAAA,GAAAuQ,EAAA,KAClB,kBATU,OAAA8I,EAAApZ,MAAA,KAAAC,UAAA,KAWLoZ,EAAM,eAAAC,EAAApa,YAAAC,cAAAC,MAAG,SAAAgS,IAAA,OAAAjS,cAAAG,MAAA,SAAA+R,GAAA,cAAAA,EAAA7R,KAAA6R,EAAA5R,MAAA,OACXC,QAAQC,IAAI,WACZuY,EAAY,CAAC,GACbzF,EAAY,IACZ2F,EAAe,CAAC,GAChBI,EAAW,IACXzB,SAASgC,eAAe,eAAe1J,MAAO,KAAK,wBAAAgC,EAAAtR,OAAA,GAAAqR,EAAA,KACtD,kBAPW,OAAAkI,EAAAtZ,MAAA,KAAAC,UAAA,KAkBZ,SAASsZ,EAAchK,GAGnB,GADA7P,QAAQC,IAAI,kBACR4P,EAAE0C,OAAOuH,OAASjK,EAAE0C,OAAOuH,MAAMvY,OAAS,EAC9C,CACI,IAAMwY,EAAOlK,EAAE0C,OAAOuH,MAAM,GAC5B9Z,QAAQC,IAAI8Z,GACZ/Z,QAAQC,IAAI8Z,EAAK9C,MAEjB,IAAMjK,EAAM,WAAa3N,EAAMa,IAAI+N,WAAWC,QAAU,IAAM7O,EAAMa,IAAI+N,WAAWE,KAAO,eAC1FnO,QAAQC,IAAI+M,GACZ4L,EAAiB,CAAC,GAAMnV,EACN,KAAQpE,EAAMwB,KAAKwF,QACnB,KAAQwQ,KAAMK,KAAK8C,OAtB7C,SAAmBD,GACf,OAAO,IAAIE,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcP,GACrBK,EAAOG,OAAS,kBAAML,EAAQE,EAAO1S,OAAQ,EAC7C0S,EAAOI,QAAU,SAAA/T,GAAK,OAAI0T,EAAO1T,EAAO,CAC5C,GACJ,CAgBQgU,CAAUV,GAAMzI,MACZ,SAAAoJ,GACItM,YAAM,CACFuM,OAAQ,OACRC,KAAM,UACNC,YAAa,OACb7N,IAAKA,EACL8N,QAAS,CACL,8BAA+B,IAC/B,eAAgB,mBAChB,+BAAgC,mCAEpCC,iBAAiB,EACjBC,YAAa,cACbzU,KAAM,CACF0U,MAAOP,KAEZpJ,MAAM,SAAApE,GACL,IAAM1B,EAAO0B,EAAS3G,KAAKgI,OAC3BvO,QAAQC,IAAIiN,GACZlN,QAAQC,IAAIuL,GACR,aAAcA,GAEdkN,EAAelN,GACfoN,EAAiB,CAAC,GAAMnV,EACN,KAAQpE,EAAMwB,KAAKqa,gBACnB,KAAQrE,KAAMK,KAAKC,YAIrCnX,QAAQC,IAAI,UACZ2Y,EAAiB,CAAC,GAAMnV,EACN,KAAQpE,EAAMwB,KAAKsa,aACnB,KAAQtE,KAAMK,KAAKI,QACrCoB,EAAe,CAAC,GAChBI,EAAW,IAEnB,GACJ,GAER,CACJ,CA4HA,OA1HAxZ,qBACI,WACI,GAAIgZ,EAAS/W,OAAS,EACtB,CACI,IAAM6Z,EAAS,KAAO9C,EACtBtY,QAAQC,IAAI,gBAAkBmb,GAC9B,IAAMpO,EAAM,WAAa3N,EAAMa,IAAI+N,WAAWC,QAAU,IACpD7O,EAAMa,IAAI+N,WAAWE,KAAO,QAE1BlB,EAAM,CAAC,OAAU,CAAC,KAAQmO,EAAQ,OAAS,IACjDpb,QAAQC,IAAIgN,GACZmB,IAAMC,IAAIrB,EAAKC,GAAKqE,MAAM,SAAApE,GAClB,IAAM1B,EAAO0B,EAAS3G,KAAKgI,OAC3BvO,QAAQC,IAAIuL,GAER,UAAWA,GAAQ,aAAcA,EAAKF,QAEtCtL,QAAQC,IAAIuL,EAAKF,OACjBoN,EAAelN,EAAKF,OAE5B,GAER,CACJ,GACA,CAAC7B,EAAa6O,EAAUjZ,EAAMa,MAGlCZ,qBACI,WAEI,GADAU,QAAQC,IAAI,YAAc4Y,GACH,IAAnBA,EAAQtX,OAEZ,GAAIa,IAAUqQ,GAAMG,SAEhBG,EAAY8F,OAGhB,CACI,IAAMuC,EAASvC,EACf7Y,QAAQC,IAAI,gBAAkBmb,GAC9B,IAAMpO,EAAM,WAAa3N,EAAMa,IAAI+N,WAAWC,QAAU,IACpD7O,EAAMa,IAAI+N,WAAWE,KAAO,QAE1BlB,EAAM,CAAC,OAAU,CAAC,KAAQmO,EAAQ,OAAS,IACjDpb,QAAQC,IAAIgN,GACZmB,IAAMC,IAAIrB,EAAKC,GAAKqE,MAAM,SAAApE,GAClB,IAAM1B,EAAO0B,EAAS3G,KAAKgI,OAC3BvO,QAAQC,IAAIuL,GACR,UAAWA,GAAQ,aAAcA,EAAKF,OAEtCoN,EAAelN,EAAKF,MAE5B,GAER,CACJ,GACA,CAACuN,EAASxZ,EAAMa,IAAKkC,IAmErBuF,eAAA,OAAKjH,GAAG,WAAUmH,SAAA,CACdpH,cAAA,OAAKC,GAAG,QAAOmH,SACXpH,cAAA,MAAAoH,SACKxI,EAAMwB,KAAKgU,aAGpBlN,eAAA,OAAKjH,GAAG,gBAAgB6Q,OAAQnP,IAAUqQ,GAAMG,SAAS/K,SAAA,CACrDpH,cAAA,SAAOwW,KAAK,OAAOvW,GAAG,cAClByR,YAAa9S,EAAMwB,KAAK+W,SACxBjI,MAAOmD,EACP+E,QAAS,SAACvF,GACNS,EAAYT,EAAMC,OAAO5C,MAC7B,IACLhI,eAAA,UAAQjH,GAAG,QAAQsH,QAAOxI,YAAAC,cAAAC,MAAE,SAAAwL,IAAA,OAAAzL,cAAAG,MAAA,SAAA6L,GAAA,cAAAA,EAAA3L,KAAA2L,EAAA1L,MAAA,cAAA0L,EAAA+C,OAAA,SAAYsG,KAAO,wBAAArJ,EAAApL,OAAA,GAAA6K,EAAA,KAACrD,SAAA,CAAC,IAAExI,EAAMwB,KAAKiU,MAAM,UAEvEnN,eAAA,OAAKjH,GAAG,iBAAiB6Q,OAAQnP,IAAUqQ,GAAMG,SAAS/K,SAAA,CACrD6L,EAAS2H,WACN1T,eAAA,OAAKjH,GAAG,WAAUmH,SAAA,CACdpH,cAAA,OAAKC,GAAG,WAAUmH,SACb6L,EAAS2H,UAAY,MAAQ3H,EAAS4H,UAAYjc,EAAMwB,KAAK0a,aAElE5T,eAAA,OAAKjH,GAAG,WAAUmH,SAAA,CAAC,IAAE1F,EAAa9C,EAAMwB,KAAM6S,EAAS8H,YAAY,OACnE7T,eAAA,OAAKjH,GAAG,WAAUmH,SAAA,CAAC,IAAE6L,EAAS+H,MAAMla,OAAS,IAAMlC,EAAMwB,KAAK6a,WAAW,UAGjF/T,eAAA,OAAKjH,GAAG,YAAY6Q,OAAQ/G,EAAY3C,SAAA,CACpCF,eAAA,SAAOjH,GAAG,cAAc6Q,QAAM,EAAA1J,SAAA,CAC1BpH,cAACkb,KAAa,CAACrT,SAAS,QAAQC,GAAI,CAACC,MAAO,aAC5C/H,cAAA,QAAAoH,SACApH,cAAA,SAAOwW,KAAK,OAAOvW,GAAG,mBAAmBkb,OAAO,UAAUC,QAAQ,cAAcxJ,SAAU,SAACxC,GAAC,OAAKgK,EAAchK,EAAE,SAGrHlI,eAAA,SAAOjH,GAAG,cAAamH,SAAA,CACnBpH,cAAA,OAAKC,GAAG,WAAW6Q,QAAM,EAAA1J,SAAC,OAG1BpH,cAAA,SAAOqb,UAAU,UAAUC,QAAQ,SAAS9E,KAAK,OAAOvW,GAAG,cACvDyR,YAAa9S,EAAMwB,KAAKmb,WACxBnE,QAAS,SAACvF,GACNiG,EAAYjG,EAAMC,OAAO5C,MAC7B,UAGZhI,eAAA,OAAKjH,GAAG,YAAY6Q,QAAS/G,EAAY3C,SAAA,CACrCF,eAAA,OAAKjH,GAAG,WAAUmH,SAAA,CAAC,IAAExI,EAAMwB,KAAKob,YAAY,OAC5CtU,eAAA,OAAKjH,GAAG,WAAUmH,SAAA,CAAC,IAAE4Q,EAAYxJ,OAAS,KAAOwJ,EAAY/J,SAAS,OACtE/G,eAAA,UAAQjH,GAAG,UAAUsH,QAAS,kBA9G9C,WAEIhI,QAAQC,IAAI,aACZwK,GAAe,GACfzK,QAAQC,IAAIwY,GACZpB,SAASgC,eAAe,eAAe1J,MAAO,KAC9C,IAAM3C,EAAM,WAAa3N,EAAMa,IAAI+N,WAAWC,QAAU,IAAM7O,EAAMa,IAAI+N,WAAWE,KAAO,YAC1FC,YAAM,CACFuM,OAAQ,OACRC,KAAM,UACNC,YAAa,OACb7N,IAAKA,EACL8N,QAAS,CACL,8BAA+B,IAC/B,eAAgB,mBAChB,+BAAgC,mCAEpCC,iBAAiB,EACjBC,YAAa,cACbzU,KAAM,CACFiF,KAAMiN,EAAYzJ,QAClBgI,KAAM7D,KAEX7B,MAAM,SAAApE,GACL,IAYQrM,EAZFqb,EAAMhP,EAAS3G,KAAKgI,OAC1BvO,QAAQC,IAAI,kBACZD,QAAQC,IAAIic,GAEA,YAARA,EAEAtD,EAAiB,CAAC,GAAMnV,EACN,KAAQpE,EAAMwB,KAAKsb,YACnB,KAAQtF,KAAMK,KAAKC,WAMjCtW,EADAqb,KAAO7c,EAAMwB,KACNxB,EAAMwB,KAAKqb,GAEX7c,EAAMwB,KAAKub,cACtBpc,QAAQC,IAAIY,GACZ+X,EAAiB,CAAC,GAAMnV,EACN,KAAQ5C,EACR,KAAQgW,KAAMK,KAAKI,SAEzCoB,EAAe,CAAC,GAChBI,EAAW,IACXS,EAAWpG,EACf,GACJ,CA4DoDpB,EAAe,EAAClK,SAAA,CAAC,IAAExI,EAAMwB,KAAKmR,QAAQ,OAC1ErK,eAAA,UAAQjH,GAAG,SAASsH,QAAS,kBAzDzChI,QAAQC,IAAI,aACZwK,GAAe,GACf4M,SAASgC,eAAe,eAAe1J,MAAO,KAC9C+I,EAAe,CAAC,QAChBI,EAAW,GAqDkD,EAACjR,SAAA,CAAC,IAAExI,EAAMwB,KAAKoR,OAAO,UAE3EtK,eAAA,UAAQjH,GAAG,eAAesH,QAAS,kBAAM2R,GAAQ,EAAC9R,SAAA,CAAC,IAAExI,EAAMwB,KAAK8Y,OAAO,YAIvF,ECpEe0C,OAjWf,SAAgBhd,GACZ,IAAA2F,EAAgCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArCsT,EAAQpT,EAAA,GAAEqT,EAAWrT,EAAA,GAC5BqE,EAAsBC,YAAY8O,EAAU,KAArC7O,EAAyCtE,YAAAoE,EAAA,GAA9B,GAQlBjE,EAAsCL,mBAAS,CAAC,GAAEM,EAAAJ,YAAAG,EAAA,GAA3CmT,EAAWlT,EAAA,GAAEmT,EAAcnT,EAAA,GAClCG,EAAsCT,oBAAS,GAAMU,EAAAR,YAAAO,EAAA,GAA9C8E,EAAW7E,EAAA,GAAE8E,EAAc9E,EAAA,GAClCG,EAA0Cb,mBAAS,CAAC,GAAEc,EAAAZ,YAAAW,EAAA,GAA/C6S,EAAa5S,EAAA,GAAE6S,EAAgB7S,EAAA,GACtC+D,EAA8B7E,mBAAS,IAAG8E,EAAA5E,YAAA2E,EAAA,GAAnC+O,EAAO9O,EAAA,GAAE+O,EAAU/O,EAAA,GA4I1B,SAAS8P,EAAchK,GAGnB,GADA7P,QAAQC,IAAI,kBACR4P,EAAE0C,OAAOuH,OAASjK,EAAE0C,OAAOuH,MAAMvY,OAAS,EAC9C,CACI,IAAMwY,EAAOlK,EAAE0C,OAAOuH,MAAM,GAC5B9Z,QAAQC,IAAI8Z,GACZ/Z,QAAQC,IAAI8Z,EAAK9C,MAEjB,IAAMjK,EAAM,WAAa3N,EAAMa,IAAI+N,WAAWC,QAAU,IAAM7O,EAAMa,IAAI+N,WAAWE,KAAO,eAC1FyK,EAAiB,CAAC,GAAMnV,EACN,KAAQpE,EAAMwB,KAAKwF,QACnB,KAAQwQ,KAAMK,KAAK8C,OArB7C,SAAmBD,GACf,OAAO,IAAIE,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcP,GACrBK,EAAOG,OAAS,kBAAML,EAAQE,EAAO1S,OAAQ,EAC7C0S,EAAOI,QAAU,SAAA/T,GAAK,OAAI0T,EAAO1T,EAAO,CAC5C,GACJ,CAeQgU,CAAUV,GAAMzI,MACZ,SAAAoJ,GACItM,YAAM,CACFuM,OAAQ,OACRC,KAAM,UACNC,YAAa,OACb7N,IAAKA,EACL8N,QAAS,CACL,8BAA+B,IAC/B,eAAgB,mBAChB,+BAAgC,mCAEpCC,iBAAiB,EACjBC,YAAa,cACbzU,KAAM,CACF0U,MAAOP,KAEZpJ,MAAM,SAAApE,GACL,IAAM1B,EAAO0B,EAAS3G,KAAKgI,OAC3BvO,QAAQC,IAAIuL,GACR,aAAcA,GAEdkN,EAAelN,GACfoN,EAAiB,CAAC,GAAMnV,EACN,KAAQpE,EAAMwB,KAAKqa,gBACnB,KAAQrE,KAAMK,KAAKC,YAIrCyB,EAAiB,CAAC,GAAMnV,EACN,KAAQpE,EAAMwB,KAAKsa,aACnB,KAAQtE,KAAMK,KAAKI,QACrCoB,EAAe,CAAC,GAChBI,EAAW,IAEnB,GACJ,GAER,CACJ,CA8GA,OA5SAxZ,qBAAU,WACmB,SAAAC,IAIxB,OAJwBA,EAAAC,YAAAC,cAAAC,MAAzB,SAAAoN,IAAA,OAAArN,cAAAG,MAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,OACIV,EAAMa,IAAIC,iBAAYC,GACtBJ,QAAQC,IAAI,2CACZD,QAAQC,IAAI,qBAAqB,wBAAA6N,EAAAzN,OAAA,GAAAyM,EAAA,MACpCxM,MAAA,KAAAC,UAAA,CAED,IAAMwY,EAAWC,YAAWxZ,YAAAC,cAAAC,MAAC,SAAAC,IAAA,IAAAuR,EAAAC,EAAAnE,EAAA,OAAAvN,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACnB,YAAaV,EAAMa,IAAI+N,YAAiB,SAAU5O,EAAMa,IAAI+N,WAAW,CAAApO,EAAAE,KAAA,eAAAF,EAAA2O,OAAA,iBAEvE0C,EAAS7R,EAAMa,IAAI+N,WAAWC,QAC9BiD,EAAU9R,EAAMa,IAAI+N,WAAWE,KACjC+C,GAAUA,EAAO3P,OAAS,GAAK4P,EAAU,IAEnCnE,EAAM,WAAakE,EAAS,IAC9BC,EAAU,eACd/C,IAAMC,IAAIrB,GAAKsE,MAAM,SAAApE,GACb,IAAM1B,EAAO0B,EAAS3G,KAAK0S,KACvBzN,IACAxL,QAAQC,IAAI4Y,EAAU,OAASrN,GAC/BsN,EAAWtN,GAEnB,KAEP,wBAAA3L,EAAAQ,OAAA,GAAAV,EAAA,KACF,KAGH,OA5BmB,WACMJ,EAAAe,MAAC,KAADC,UAAA,CA0BzBC,GACO,kBAAM0Y,cAAcH,EAAU,CAEzC,GAAG,IA8CHzZ,qBACI,WACI,GAAIgZ,EAAS/W,OAAS,EACtB,CACI,IAAM6Z,EAAS,KAAO9C,EACtBtY,QAAQC,IAAI,gBAAkBmb,GAC9B,IAAMpO,EAAM,WAAa3N,EAAMa,IAAI+N,WAAWC,QAAU,IACpD7O,EAAMa,IAAI+N,WAAWE,KAAO,QAE1BlB,EAAM,CAAC,OAAU,CAAC,KAAQmO,EAAQ,OAAS,IACjDpb,QAAQC,IAAIgN,GACZmB,IAAMC,IAAIrB,EAAKC,GAAKqE,MAAM,SAAApE,GAClB,IAAM1B,EAAO0B,EAAS3G,KAAKgI,OAC3BvO,QAAQC,IAAIuL,GAER,UAAWA,GAAQ,aAAcA,EAAKF,OAEtCoN,EAAelN,EAAKF,MAE5B,GAER,CACJ,GACA,CAAC7B,EAAa6O,EAAUjZ,EAAMa,MAGlCZ,qBACI,WAEI,GADAU,QAAQC,IAAI,IAAM4Y,GACdA,EAAQtX,OAAS,EACrB,CACI,IAAM6Z,EAASvC,EACf7Y,QAAQC,IAAI,gBAAkBmb,GAC9B,IAAMpO,EAAM,WAAa3N,EAAMa,IAAI+N,WAAWC,QAAU,IACpD7O,EAAMa,IAAI+N,WAAWE,KAAO,QAE1BlB,EAAM,CAAC,OAAU,CAAC,KAAQmO,EAAQ,OAAS,IACjDpb,QAAQC,IAAIgN,GACZmB,IAAMC,IAAIrB,EAAKC,GAAKqE,MAAM,SAAApE,GAClB,IAAM1B,EAAO0B,EAAS3G,KAAKgI,OAC3BvO,QAAQC,IAAIuL,GAER,UAAWA,GAAQ,aAAcA,EAAKF,OAEtCoN,EAAelN,EAAKF,MAE5B,GAER,CACJ,GACA,CAACuN,EAASxZ,EAAMa,MAkEpBZ,qBACI,WACIU,QAAQC,IAAI,iBACR,YAAawY,EAEc,IAAvBA,EAAY7J,QAAuC,IAAvB6J,EAAY7J,OAExCnE,GAAe,IAIfzK,QAAQC,IAAI,cACZ2Y,EAAiB,CAAC,GAAMnV,EACN,KAAQpE,EAAMwB,KAAKyb,WACnB,KAAQzF,KAAMK,KAAKI,QACrCD,SAASgC,eAAe,eAAe1J,MAAO,KAC9ClF,GAAe,GACfqO,EAAW,KAKfrO,GAAe,EAEvB,GAEA,CAACgO,IAGLnZ,qBACI,WACI,GAAO,SAAUqZ,EAAjB,CAGA9B,KAAMyC,UACN,IAAM1C,EAAOjV,EACbiV,EAAKK,KAAO0B,EAAc1B,KAC1BL,EAAK/U,UAAY,IASbgV,KAAMc,KAAKgB,EAAc9X,KAAM+V,EAdzB,CAgBd,GACA,CAAC+B,IA4DDhR,eAAA,OAAKjH,GAAG,WAAUmH,SAAA,CACdpH,cAAA,OAAKC,GAAG,QAAOmH,SACXpH,cAAA,MAAAoH,SACKxI,EAAMwB,KAAK0N,WAGpB5G,eAAA,OAAKjH,GAAG,iBAAgBmH,SAAA,CACpBF,eAAA,OAAKjH,GAAG,YAAY6Q,OAAQ/G,EAAY3C,SAAA,CACxCF,eAAA,SAAOjH,GAAG,cAAc6Q,QAAM,EAAA1J,SAAA,CAC1BpH,cAACkb,KAAa,CAACrT,SAAS,QAAQC,GAAI,CAACC,MAAO,aAC5C/H,cAAA,QAAAoH,SACApH,cAAA,SAAOwW,KAAK,OAAOvW,GAAG,mBAAmBkb,OAAO,UAAUC,QAAQ,cAAcxJ,SAAU,SAACxC,GAAC,OAAKgK,EAAchK,EAAE,SAGrHlI,eAAA,SAAOjH,GAAG,cAAamH,SAAA,CACnBpH,cAAA,OAAKC,GAAG,WAAW6Q,QAAM,EAAA1J,SAAC,OAG1BpH,cAAA,SAAOqb,UAAU,UAAUC,QAAQ,OAAM9E,KAAK,OAAOvW,GAAG,cACpDyR,YAAa9S,EAAMwB,KAAKmb,WACxBnE,QAAS,SAACvF,GACNiG,EAAYjG,EAAMC,OAAO5C,MAC7B,UAGRhI,eAAA,OAAKjH,GAAG,cAAc6Q,QAAS/G,EAAY3C,SAAA,CACvCF,eAAA,OAAKjH,GAAG,WAAUmH,SAAA,CAAC,IAAExI,EAAMwB,KAAK0b,cAAc,OAC9C5U,eAAA,OAAKjH,GAAG,WAAUmH,SAAA,CAAC,IAAE4Q,EAAYxJ,OAAS,IAAMwJ,EAAY/J,SAAS,OACrE/G,eAAA,UAAQjH,GAAG,UAAUsH,QAAS,kBArF9C,WAEIhI,QAAQC,IAAI,aACZwK,GAAe,GACfzK,QAAQC,IAAIwY,GAEZ,IAAMzL,EAAM,WAAa3N,EAAMa,IAAI+N,WAAWC,QAAU,IAAM7O,EAAMa,IAAI+N,WAAWE,KAAO,UAC1FC,YAAM,CACFuM,OAAQ,OACRC,KAAM,UACNC,YAAa,OACb7N,IAAKA,EACL8N,QAAS,CACL,8BAA+B,IAC/B,eAAgB,mBAChB,+BAAgC,mCAEpCC,iBAAiB,EACjBC,YAAa,cACbzU,KAAM,CACFiF,KAAMiN,EAAYzJ,WAEvBsC,MAAM,SAAApE,GACL,IAUQrM,EAVFqb,EAAMhP,EAAS3G,KAAKgI,OAC1BvO,QAAQC,IAAIic,GACA,YAARA,EAEAtD,EAAiB,CAAC,GAAMnV,EACN,KAAQpE,EAAMwB,KAAK2b,cACnB,KAAQ3F,KAAMK,KAAKC,WAMjCtW,EADAqb,KAAO7c,EAAMwB,KACNxB,EAAMwB,KAAKqb,GAEX7c,EAAMwB,KAAKub,cACtBpc,QAAQC,IAAIY,GACZ+X,EAAiB,CAAC,GAAMnV,EACN,KAAQ5C,EACR,KAAQgW,KAAMK,KAAKI,SAEzCoB,EAAe,CAAC,GAChBI,EAAW,GACf,GACJ,CAuCoD/G,EAAe,EAAClK,SAAA,CAAC,IAAExI,EAAMwB,KAAKmR,QAAQ,OAC1ErK,eAAA,UAAQjH,GAAG,SAASsH,QAAS,kBApCzChI,QAAQC,IAAI,aACZwK,GAAe,GACfiO,EAAe,CAAC,QAChBI,EAAW,GAiCkD,EAACjR,SAAA,CAAC,IAAExI,EAAMwB,KAAKoR,OAAO,eAK3F,E,OChNewK,OAjJf,SAAkBpd,GACd,IAAA2F,EAAsCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA9CwF,EAAWtF,EAAA,GAAEuF,EAAcvF,EAAA,GAClCI,EAAgCL,oBAAS,GAAKM,EAAAJ,YAAAG,EAAA,GAAvCwM,EAAQvM,EAAA,GAAEmX,EAAWnX,EAAA,GAC5BG,EAAgCT,mBAAS,CAAC,GAAEU,EAAAR,YAAAO,EAAA,GAArC8O,EAAQ7O,EAAA,GAAEgX,EAAWhX,EAAA,GAgB5B,SAASiX,EAAY7N,EAAOY,GAExB3P,QAAQC,IAAI8O,GACZ/O,QAAQC,IAAI0P,GACZ,IAAIgI,EAAOnD,EACX,OAAQzF,GAER,KAAK,EACD4I,EAAK2D,UAAY3L,EACjB,MACJ,KAAK,EACDgI,EAAKkF,aAAelN,EACpB,MACJ,KAAK,EACDgI,EAAKmF,MAAQnN,EACb,MACJ,KAAK,EACDgI,EAAKoF,QAAUpN,EACf,MACJ,KAAK,EACDgI,EAAKqF,WAAarN,EAClB,MACJ,KAAK,EACDgI,EAAKsF,OAAStN,EAKlB,IAAMpO,EAAS2b,OAAOC,KAAKxF,GAAMpW,OACjCvB,QAAQC,IAAIsB,GAERA,EAAS,GACTmb,GAAY,GAChBC,EAAYhF,EAChB,CA+BA,OA/EArY,qBAAU,WACNU,QAAQC,IAAI,aACZD,QAAQC,IAAIZ,EAAMsY,MAClBN,SAASgC,eAAe,YAAY1J,MAAQtQ,EAAMsY,KAAK2D,UACvDjE,SAASgC,eAAe,SAAS1J,MAAQtQ,EAAMsY,KAAKkF,aACpDxF,SAASgC,eAAe,SAAS1J,MAAQtQ,EAAMsY,KAAKmF,MACpDzF,SAASgC,eAAe,WAAW1J,MAAQtQ,EAAMsY,KAAKoF,QACtD1F,SAASgC,eAAe,WAAW1J,MAAQtQ,EAAMsY,KAAKsF,OACtD5F,SAASgC,eAAe,cAAc1J,MAAQtQ,EAAMsY,KAAKqF,WACzDL,EAAY,CAAC,UAAatd,EAAMsY,KAAK0D,YACrCqB,GAAY,EAEhB,GAAG,CAACrd,EAAMsY,OAoENhQ,eAAA,OAAAE,SAAA,CACIpH,cAAA,SAAAoH,SAAOF,eAAA,SAAAE,SAAA,CACHF,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAI,IAAExI,EAAMwB,KAAKmL,KAAK,OACtBvL,cAAA,MAAIsH,QAAQ,IAAGF,SACXpH,cAAA,SAAOwW,KAAK,OAAOrP,UAAU,QAAQlH,GAAG,WAAW2R,SAAU,SAACC,GAAWsK,EAAY,EAAGtK,EAAMC,OAAO5C,MAAO,QAH5G,QAMP,aAActQ,EAAMsY,MACjBhQ,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAI,IAAExI,EAAMwB,KAAKuc,eAAe,OAChC3c,cAAA,MAAIsH,QAAQ,IAAIH,UAAU,OAAMC,SAC3BxI,EAAMsY,KAAK0F,aAHZ,YAOZ1V,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAI,IAAExI,EAAMwB,KAAKyc,MAAM,OACvB7c,cAAA,MAAIsH,QAAQ,IAAGF,SACXpH,cAAA,SAAOwW,KAAK,OAAOrP,UAAU,QAAQlH,GAAG,QAAQ2R,SAAU,SAACC,GAAWsK,EAAY,EAAGtK,EAAMC,OAAO5C,MAAO,QAHzG,SAMRhI,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAI,IAAExI,EAAMwB,KAAK0c,MAAM,OACvB9c,cAAA,MAAIsH,QAAQ,IAAGF,SACXpH,cAAA,SAAOwW,KAAK,OAAOrP,UAAU,QAAQlH,GAAG,QAAQ2R,SAAU,SAACC,GAAWsK,EAAY,EAAGtK,EAAMC,OAAO5C,MAAO,QAHzG,SAMRhI,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAI,IAAExI,EAAMwB,KAAK2c,QAAQ,OACzB/c,cAAA,MAAIsH,QAAQ,IAAGF,SACXpH,cAAA,SAAOwW,KAAK,OAAOrP,UAAU,QAAQlH,GAAG,UAAU2R,SAAU,SAACC,GAAWsK,EAAY,EAAGtK,EAAMC,OAAO5C,MAAO,QAH3G,WAMRhI,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAI,IAAExI,EAAMwB,KAAK4c,QAAQ,OACzBhd,cAAA,MAAIsH,QAAQ,IAAGF,SACXpH,cAAA,SAAOwW,KAAK,OAAOrP,UAAU,QAAQlH,GAAG,UAAU2R,SAAU,SAACC,GAAWsK,EAAY,EAAGtK,EAAMC,OAAO5C,MAAO,QAH3G,UAMRhI,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAI,IAAExI,EAAMwB,KAAK6c,MAAM,OACvBjd,cAAA,MAAIsH,QAAQ,IAAIH,UAAU,OAAMC,SAC5BF,eAAA,UAAQqE,KAAK,aAAatL,GAAG,aAAakH,UAAU,WAAWyK,SAAU,SAACC,GAAWsK,EAAY,EAAGtK,EAAMC,OAAO5C,MAAO,EAAE9H,SAAA,CACtHF,eAAA,UAAQgI,MAAM,IAAG9H,SAAA,CAAC,IAAExI,EAAMwB,KAAK8c,IAAI,OACnChW,eAAA,UAAQgI,MAAM,IAAG9H,SAAA,CAAC,IAAExI,EAAMwB,KAAK+c,MAAM,OACrCjW,eAAA,UAAQgI,MAAM,IAAG9H,SAAA,CAAC,IAAExI,EAAMwB,KAAKgR,MAAM,cANzC,cAWblK,eAAA,UAAQjH,GAAG,SAAS6Q,OAAQ/G,EAAaxC,QAAOxI,YAAAC,cAAAC,MAAE,SAAAC,IAAA,OAAAF,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAA2O,OAAA,SAAY/D,GAAe,IAAK,wBAAA5K,EAAAQ,OAAA,GAAAV,EAAA,KAAEmS,SAAUA,EAASjK,SAAA,CAAC,IAAExI,EAAMwB,KAAKgd,KAAK,OACzHlW,eAAA,OAAKjH,GAAG,cAAc6Q,QAAS/G,EAAY3C,SAAA,CACvCF,eAAA,OAAKjH,GAAG,YAAWmH,SAAA,CAAC,IAAExI,EAAMwB,KAAKid,YAAY,OAC7CnW,eAAA,UAAQjH,GAAG,UAAUsH,QAAS,kBApF1C,WAEIhI,QAAQC,IAAI,qBACZD,QAAQC,IAAIuU,GACZ,IAAMtD,EAAS7R,EAAMa,IAAI+N,WAAWC,QAC9BiD,EAAU9R,EAAMa,IAAI+N,WAAWE,KACrC,KAAsB,IAAlB+C,EAAO3P,QAAgB4P,GAAW,GAAtC,CAGA,IAAMnE,EAAM,WAAakE,EAAS,IAC9BC,EAAU,QAEVlE,EAAM,CAAC,EACX,IAAK,IAAM1B,KAAOiJ,EAEdvH,EAAI1B,GAAOyC,KAAK1K,EAAOkR,EAASjJ,KAEpC6C,IAAMiD,KAAKrE,EAAKC,GAAKqE,MAAM,SAAApE,GACvBlN,QAAQC,IAAIiN,GACZ7N,EAAM0e,QAAQ7Q,EAClB,IACAzC,GAAe,EAdL,CAed,CA8DgDsH,EAAe,EAAClK,SAAA,CAAC,IAAExI,EAAMwB,KAAKmR,QAAQ,OAC1ErK,eAAA,UAAQjH,GAAG,SAASsH,QAAS,WA3DrCyC,GAAe,EA2D0C,EAAC5C,SAAA,CAAC,IAAExI,EAAMwB,KAAKoR,OAAO,YAIvF,EC2KeoG,OAlTf,SAAkBhZ,GACd,IAAA2F,EAAgCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArC8N,EAAQ5N,EAAA,GAAE6N,EAAW7N,EAAA,GAC5BqE,EAAsBC,YAAYsJ,EAAU,KAArCrJ,EAAyCtE,YAAAoE,EAAA,GAA9B,GAClBjE,EAA2CL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAAnDuF,EAAYtF,EAAA,GAAEuF,EAAkBvF,EAAA,GACvCG,EAA0CT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAA/CN,EAAaO,EAAA,GAAEN,EAAgBM,EAAA,GACtCG,EAAsCb,oBAAS,GAAMc,EAAAZ,YAAAW,EAAA,GAA9CqD,EAAWpD,EAAA,GAAEmN,EAAcnN,EAAA,GAClCW,EAAkFC,YAAa1C,GAAY2C,EAAAzB,YAAAuB,EAAA,GAApG+M,EAAQ7M,EAAA,GAAAE,EAAAF,EAAA,GAAYoX,EAAWlX,EAApBT,QAA4B4X,EAAYnX,EAAlBP,KAA2B2X,EAASpX,EAAhBL,MAC5DqD,EAAgC7E,mBAAS,CAAC,GAAE8E,EAAA5E,YAAA2E,EAAA,GAArCqU,EAAQpU,EAAA,GAAEqU,EAAWrU,EAAA,GAEtBL,EAAcC,iBAAO,KACnBjJ,EAAOqK,cAAPrK,GACRwJ,EAAgCjF,mBAAS,IAAGkF,EAAAhF,YAAA+E,EAAA,GAArCF,EAAQG,EAAA,GAAEF,EAAWE,EAAA,GAwE1B,SAEaa,IAAS,OAAAC,GAAA3K,MAAC,KAADC,UAAA,UAAA0K,KAgBvB,OAhBuBA,GAAAzL,YAAAC,cAAAC,MAAxB,SAAAwL,IAAA,IAAAiO,EAAAvC,EAAAyH,EAAA9d,UAAA,OAAAd,cAAAG,MAAA,SAAA6L,GAAA,cAAAA,EAAA3L,KAAA2L,EAAA1L,MAAA,OAAyBoZ,IAAMkF,EAAA9c,OAAA,QAAAnB,IAAAie,EAAA,KAAAA,EAAA,GAE3Bre,QAAQC,IAAI,mBAAqBkJ,GAE7BgQ,KAEMvC,EAAOjV,GACRsV,KAAOJ,KAAMK,KAAKC,QACvBP,EAAKY,OAASnY,EAAMwB,KAAKqa,gBACzBtE,EAAK/U,UAAY,IACjB+U,EAAKa,QAAU,GACfZ,KAAMc,KAAKtY,EAAMwB,KAAKqa,gBAAiBtE,IAE3C5W,QAAQC,IAAI,aAAeZ,EAAMkV,QACjCvU,QAAQC,IAAI,QACZiT,GAAe,GAAM,wBAAAzH,EAAApL,OAAA,GAAA6K,EAAA,KACxBD,GAAA3K,MAAA,KAAAC,UAAA,CAED,SAASwd,GAAQ7Q,GAEblN,QAAQC,IAAI,gBAAkB4K,GAC9B7K,QAAQC,IAAIiN,GACZpC,GAAoBD,EACxB,CA/FAvL,qBAAU,WACmB,SAAAC,IAkBxB,OAlBwBA,EAAAC,YAAAC,cAAAC,MAAzB,SAAAC,IAAA,OAAAF,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACSV,EAAMa,IAAIiJ,YAAY,CAADtJ,EAAAE,KAAA,eAAAF,EAAA2O,OAAA,iBAItBnP,EAAMa,IAAIwM,SACV1B,GAAU,GAEV3L,EAAMa,IAAIC,YAAY6K,GAC1BhL,QAAQC,IAAI,2CACZD,QAAQC,IAAI,yBACZD,QAAQC,IAAI,YAAcS,GAErBrB,EAAMa,IAAI6N,kBAEX/N,QAAQC,IAAI,cACZwT,KACH,wBAAA5T,EAAAQ,OAAA,GAAAV,EAAA,MACJW,MAAA,KAAAC,UAAA,EAnBkB,WACMhB,EAAAe,MAAC,KAADC,UAAA,CAoBzBC,EAEJ,GAAG,IAEHlB,qBACI,WACIU,QAAQC,IAAI,eAAiBS,GAGzBqS,EAFArS,GAMY,GAEpB,GAAG,CAACA,IAGRpB,qBACI,WACIU,QAAQC,IAAI,sBACZ+K,GAAU,EACd,GAEA,CAAC3L,EAAMkV,SAGXjV,qBACI,WAII,GAHAU,QAAQC,IAAI,oBACZD,QAAQC,IAAIie,GACZle,QAAQC,IAAI+d,GACRC,EACJ,CACI,IAAIjV,EAAO,GACXhJ,QAAQC,IAAI,uBACZ,IAAK,IAAIqB,EAAI,EAAGA,EAAI2c,EAAaK,MAAM/c,OAAQD,IAC/C,CACI,IAAM0V,EAAOiH,EAAaK,MAAMhd,GAC1BsM,EAAQ,CAAC,GAAMoJ,EAAK/O,IAAK,KAAQ+O,EAAKhL,KAAM,MAASgL,EAAK0G,MAAO,MAASvb,EAAa9C,EAAMwB,KAAMmW,EAAK5U,QAC9G4G,EAAK2C,KAAKiC,EACd,CACA5N,QAAQC,IAAI+I,GACZ3J,EAAMa,IAAIqe,QAAQvV,GAClBhJ,QAAQC,IAAIZ,EAAMa,IAAIse,WACtBJ,EAAY/e,EAAMa,IAAIse,UAC1B,CACJ,GACA,CAACP,EAAcD,EAAaE,EAAW7e,IA4B3C,IAmBMqR,GAAQ,eAAAC,EAAAnR,YAAAC,cAAAC,MAAG,SAAAoN,EAAOpM,GAAE,IAAAgL,EAAA,OAAAjM,cAAAG,MAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,cAAA+N,EAAA/N,KAAA,EACHV,EAAMa,IAAIuU,QAAQ/T,GAAI,KAAD,EAAlCgL,EAAIoC,EAAAQ,KACVtO,QAAQC,IAAIyL,IACiB,IAAzBhC,EAAY8G,SAAkB9G,EAAY8G,UAAY9P,GAEtDV,QAAQC,IAAI,UAAYS,GAExBgJ,EAAY8G,QAAU9P,EACtBV,QAAQC,IAAI,iBACZD,QAAQC,IAAIyL,GACZzB,EAAYyB,IAGPtG,EAAc7D,OAAS,IAE5BvB,QAAQC,IAAI,YAAcS,GAE1BgJ,EAAY8G,SAAW,EACvBvG,EAAY,KAEf,wBAAA6D,EAAAzN,OAAA,GAAAyM,EAAA,KACJ,gBArBaF,GAAA,OAAA+D,EAAArQ,MAAA,KAAAC,UAAA,KAwCRke,GAAY,SAAC/W,EAAQwB,GACvB,OAAQvB,eAAA,OAAAE,SAAA,CAEQH,EAAOU,KAAI,SAAC4O,EAAMjI,GACd,OArBP,SAACiI,EAAM9N,EAAQ6F,GAC5B,IAAMxD,EAAMwD,EAAM5H,WAClB,OACQQ,eAAA,OAAAE,SAAA,CACIpH,cAAA,SAAAoH,SAAOpH,cAAA,SAAAoH,SACHF,eAAA,MAAkBC,UAAU,WAAWI,QAAOxI,YAAAC,cAAAC,MAAE,SAAA2Q,IAAA,OAAA5Q,cAAAG,MAAA,SAAA2Q,GAAA,cAAAA,EAAAzQ,KAAAyQ,EAAAxQ,MAAA,cAAAwQ,EAAAxQ,KAAA,EAAiB2Q,GAASsG,EAAKtW,IAAG,cAAA6P,EAAA/B,OAAA,SAAA+B,EAAAjC,MAAA,wBAAAiC,EAAAlQ,OAAA,GAAAgQ,EAAA,KAACxI,SAAA,CAC/EpH,cAAA,MAAImH,UAAU,WAAUC,SAAEmP,EAAKtW,KAC/BD,cAAA,MAAImH,UAAU,WAAUC,SAAEmP,EAAKhL,OAC/BvL,cAAA,MAAImH,UAAU,WAAUC,SAAEmP,EAAK5U,QAC/B3B,cAAA,MAAImH,UAAU,WAAUC,SAAEmP,EAAKtL,SAJ1BsL,EAAKtW,QAObsW,EAAKtW,KAAOgJ,EAAY8G,SAAWyF,GAAYe,EAAM9N,KATpDqC,EAYtB,CAM+BmT,CAAS1H,EAAM9N,EAAQ6F,EAClC,IAGkB,IAAlBrH,EAAOnG,QACPd,cAAA,SAAAoH,SAAOpH,cAAA,SAAAoH,SACHpH,cAAA,MAAAoH,SAAepH,cAAA,MAAIsH,QAAQ,IAAGF,SAAExI,EAAMwB,KAAK4V,WAAnC,cAIhC,EAEMR,GAAc,SAACe,EAAM9N,GAGvB,OAFAlJ,QAAQC,IAAI,UACZD,QAAQC,IAAI+W,GACJrP,eAAAgX,WAAA,CAAA9W,SAAA,CACKxI,EAAMa,IAAI6N,iBACPtN,cAACgc,GAAQ,CAAC5b,KAAMxB,EAAMwB,KAAMX,IAAKb,EAAMa,IAAKyX,KAAMX,EAAM+G,QAASA,KAErEtd,cAAA,SAAAoH,SAAOF,eAAA,SAAAE,SAAA,CACPF,eAAA,MAAAE,SAAA,CACIpH,cAAA,MAAIC,GAAG,KAAImH,SAAExI,EAAMwB,KAAKH,KACxBD,cAAA,MAAIC,GAAG,WAAUmH,SAAExI,EAAMwB,KAAKuC,WAC9B3C,cAAA,MAAIC,GAAG,aAAYmH,SAAExI,EAAMwB,KAAKgO,eAH5B,MAMJ3F,EAAOd,KAAI,SAACsD,EAAMqD,GACd,OA1FL,SAACrD,EAAMqD,GACtB,IAAMrO,EAAKgL,EAAS,GACdtI,EAAWsI,EAAe,SAC1BI,EAAUJ,EAAc,QACxByK,EAAWzK,EAAY,MACvBH,EAAMwD,EAAM5H,WAClB,OAAQQ,eAACyO,IAAMC,SAAQ,CAAAxO,SAAA,CACXF,eAAA,MAAcC,UAAU,WAAUC,SAAA,CAC9BpH,cAAA,MAAImH,UAAU,WAAUC,SAACpH,cAAC6V,KAAI,CAACC,GAAI,WAAW7V,EAAGmH,SAAEnH,MACnDD,cAAA,MAAImH,UAAU,WAAUC,SAAEzE,IAC1B3C,cAAA,MAAImH,UAAU,WAAUC,SAAEiE,MAHrBP,GAKT9K,cAAA,MAAwBmH,UAAU,WAAUC,SACxCpH,cAAA,MAAIsH,QAAQ,IAAIH,UAAU,WAAUC,SAAEsO,KADjC5K,EAAM,WANEA,EAAM,WAWvC,CAyE+BiL,CAAW9K,EAAMqD,EAC5B,IAGkB,IAAlB7F,EAAO3H,QAAgBd,cAAA,MAAAoH,SAAepH,cAAA,MAAIsH,QAAQ,IAAGF,SAAExI,EAAMwB,KAAK4V,WAAnC,eAInD,EAyEA,OAxEAnX,qBACI,WAAO,SACYsf,EAAS9N,GAAA,OAAA+N,EAAAve,MAAC,KAADC,UAAA,UAAAse,IAgBvB,OAhBuBA,EAAArf,YAAAC,cAAAC,MAAxB,SAAAkR,EAAyB/P,GAAI,IAAAkM,EAAAxB,EAAA+B,EAAA,OAAA7N,cAAAG,MAAA,SAAAiR,GAAA,cAAAA,EAAA/Q,KAAA+Q,EAAA9Q,MAAA,OACrBgN,EAAU,GAE9B8D,EAAAjB,GAAAnQ,cAAA0d,KACoCgB,GAAQ,WAAAtN,EAAA6D,GAAA7D,EAAAjB,MAAAF,KAAC,CAADmB,EAAA9Q,KAAA,SACE,GADjBwL,EAAGsF,EAAA6D,GAAA/E,MACNrC,EAAM6Q,EAAS5S,KACjBwB,EAAQxL,QAAUP,GAAgB,CAAA6P,EAAA9Q,KAAA,eAAA8Q,EAAArC,OAAA,oBACjClB,EAAItB,MAAQsB,EAAItB,KAAK7E,WAAWmI,SAASzO,IACzCyM,EAAI5M,GAAGoe,gBAAkBje,EAAKie,gBAE/B/R,EAAQpB,KAAK2B,GAChBuD,EAAA9Q,KAAA,gBAGgB,OADrBgN,EAAQkD,MAAK,SAASC,EAAEC,GAAK,OAAOD,EAAElE,KAAOmE,EAAEnE,IAAM,IACrDhM,QAAQC,IAAI8M,GAAS8D,EAAArC,OAAA,SACdzB,GAAO,yBAAA8D,EAAAxQ,OAAA,GAAAuQ,EAAA,MACjBtQ,MAAA,KAAAC,UAAA,CACmB,SAAA6P,IA8CnB,OA9CmBA,EAAA5Q,YAAAC,cAAAC,MAApB,SAAAgS,IAAA,IAAAqN,EAAAzO,EAAAtD,EAAAC,EAAAC,EAAAoR,EAAA5Q,EAAAC,EAAAC,EAAAoJ,EAAA,OAAAvX,cAAAG,MAAA,SAAA+R,GAAA,cAAAA,EAAA7R,KAAA6R,EAAA5R,MAAA,OAEqD,GAD3Cgf,EAAQjM,EAASkM,OACvBhf,QAAQC,IAAI,SAAW8e,EAAQ,IAAMtV,KACjCsV,EAAMxd,OAAS,GAAKkI,GAAW,CAAAkI,EAAA5R,KAAA,aAG3BV,EAAMa,IAAI6N,gBAAgB,CAAD4D,EAAA5R,KAAA,SAKR,OAHjBC,QAAQC,IAAI,aACN+M,EAAM,WAAa3N,EAAMa,IAAI+N,WAAWC,QAAU,IAAM7O,EAAMa,IAAI+N,WAAWE,KAAO,SACpFlB,EAAM,CAAC,OAAU,CAAC,KAAQe,KAAK1K,EAAOyb,MAC5C/e,QAAQC,IAAIgN,GAAK0E,EAAA5R,KAAA,GACMqO,IAAMC,IAAIrB,EAAKC,GAAK,KAAD,GAI1C,GAJMC,EAAQyE,EAAArD,KACRgQ,EAAQpR,EAAS3G,KAAKgI,OAAOhI,KACnCvG,QAAQC,IAAIiN,EAAS3G,KAAKgI,QAC1B+B,EAAK,GACDgO,EAAO,CAAA5Q,EAAA6B,YACarC,EAAS3G,KAAKgI,OAAOhI,MAAI,IAA7C,IAAAmH,EAAA8B,MAAA7B,EAAAD,EAAA+B,KAAAC,MAAW9B,EAAKD,EAAAgC,MAEZ3P,QAAQC,IAAI2N,IACRoJ,EAAOpJ,GACNlN,GAAKkN,EAAMyN,UAChBrE,EAAKhL,KAAO4B,EAAM0N,UAClBtE,EAAK5U,MAAQD,EAAa9C,EAAMwB,KAAM+M,EAAM4N,YAC5CxE,EAAKtL,KAAOkC,EAAM6N,MAAMla,OACxB+O,EAAG3E,KAAKqL,EACX,OAAAiI,GAAAvR,EAAAmC,EAAAoP,EAAA,SAAAvR,EAAAoC,GAAA,CACL,CAAC6B,EAAA5R,KAAA,iBAIqB,OAAtBC,QAAQC,IAAI,WAAU0R,EAAA5R,KAAA,GACX6e,EAAUnV,GAAa,KAAD,GAAjC6G,EAAEqB,EAAArD,KAAA,QAGFgC,EAAG/O,OAAS,EACZ8D,EAAiBiL,GAEjBjL,EAAiB,IACH,IAAdiL,EAAG/O,OACJmP,GAASJ,EAAG,GAAG5P,IAEfgQ,GAAS,GAAGiB,EAAA5R,KAAA,iBAEfsF,EAAiB,IAAI,yBAAAsM,EAAAtR,OAAA,GAAAqR,EAAA,MAE5BpR,MAAA,KAAAC,UAAA,EA/CA,WACmB6P,EAAA9P,MAAC,KAADC,UAAA,CA+CpBkQ,EACJ,GAED,CAAChH,EAAapK,EAAO8e,EAAUtT,EAAciI,IAG3CzT,EAAMa,IAAIiJ,YAIXxB,eAAA,OAAKjH,GAAG,WAAUmH,SAAA,CACdpH,cAAA,OAAKC,GAAG,QAAOmH,SACXpH,cAAA,MAAAoH,SACKxI,EAAMwB,KAAK+T,eAGpBjN,eAAA,OAAKjH,GAAG,gBAAgB6Q,QAASlS,EAAMa,IAAI2R,MAAMhK,SAAA,CAC7CpH,cAAA,SAAOwW,KAAK,OAAOvW,GAAG,cAClByR,YAAa9S,EAAMwB,KAAK+W,SACxBjI,MAAOmD,EACPT,SAAU,SAACC,GACPS,EAAYT,EAAMC,OAAO5C,MAC7B,IACJlP,cAAA,OAAAoH,SACIpH,cAACkI,EAAQ,CAACM,SAAUQ,EAAaT,KAAM5D,EAAe8D,OAAQc,EAAUtB,aAAc,SAAC8J,EAAStJ,GAAa,OAAOuV,GAAUjM,EAAStJ,EAAS,YAjBrJzI,cAAC0X,IAAQ,CAAC5B,GAAG,KAsB5B,ECzGe2I,OA3Mf,SAAqB7f,GACjB,IAAA2F,EAAgCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArCgF,EAAQ9E,EAAA,GAAE+E,EAAW/E,EAAA,GAC5BI,EAAsCL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAA9C6D,EAAW5D,EAAA,GAAE2N,EAAc3N,EAAA,GAClCmB,EAAkFC,YAAa1C,GAAY2C,EAAAzB,YAAAuB,EAAA,GAApG+M,EAAQ7M,EAAA,GAAAE,EAAAF,EAAA,GAAYoX,EAAWlX,EAApBT,QAA4B4X,EAAYnX,EAAlBP,KAA2B2X,EAASpX,EAAhBL,MAC5Df,EAAgCT,mBAAS,CAAC,GAAEU,EAAAR,YAAAO,EAAA,GAArCyY,EAAQxY,EAAA,GAAEyY,EAAWzY,EAAA,GAoD5B,SAAS6P,EAAQtS,EAAIC,GAEjB,OAAOD,EAAGE,SAAWD,EAAGC,QAC5B,CAAC,SAEc4H,IAAS,OAAAC,EAAA3K,MAAC,KAADC,UAAA,UAAA0K,IAqEvB,OArEuBA,EAAAzL,YAAAC,cAAAC,MAAxB,SAAAoN,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA5B,EAAAQ,EAAAxK,EAAAkK,EAAA2B,EAAA/K,EAAAgL,EAAA1B,EAAAqD,EAAAoE,EAAAgM,EAAA,OAAA1f,cAAAG,MAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,OAEkD,GAA9CC,QAAQC,IAAI,mBAAqBkJ,IAC7B9J,EAAMa,IAAI6N,gBAAgB,CAADD,EAAA/N,KAAA,SAMrC,OAJgBgN,EAAU,GACRC,EAAM,WAAa3N,EAAMa,IAAI+N,WAAWC,QAAU,IACpD7O,EAAMa,IAAI+N,WAAWE,KAAO,QAC1BlB,EAAM,CAAC,OAAU,CAAC,KAAQ,IAAK,OAAQ,IACzDa,EAAA/N,KAAA,EACmCqO,IAAMC,IAAIrB,EAAKC,GAAK,KAAD,EAM1C,IANMC,EAAQY,EAAAQ,KAIRhD,EAAQ4B,EAAS3G,KAAKgI,OAAOjD,MAC/BQ,EAAU,GACLxK,EAAI,EAAIA,EAAIgK,EAAM/J,OAASD,IAE1BkK,EAAOF,EAAMhK,GACb6L,EAAY,GAAAsB,OAAMjD,EAAKkD,SAAQ,KAAAD,OAAIjD,EAAKmD,UAEhC,KADRvM,EAAQoJ,EAAKoD,SACU,IAAVxM,IAEf0J,EAAUN,EAAK4T,aAEfhS,EAAe,CACf2B,MAAOzN,EACPT,KAAMsM,EACN9J,MAAOmI,EAAKkD,SACZhO,GAAI8K,EAAKwD,QACTtD,KAAMlJ,EAAanD,EAAMwB,KAAM2K,EAAK6T,MAAMlY,YAC1C/D,SAAUoI,EAAK8T,UACfxT,QAASA,EACTI,OAAQV,EAAKyD,OACb5C,UAAWb,EAAK0D,WAChB9C,UAAWZ,EAAK2D,SAChB1C,QAASjB,EAAK4D,QACdjD,MAAOX,EAAK6D,MACZ2H,KAAMxL,EAAK+T,KACXJ,SAAU3T,EAAK8P,WAEnBvO,EAAQpB,KAAKyB,GAEjBL,EAAQkD,KAAKuF,GACbvL,EAAY8C,GAASe,EAAA/N,KAAA,wBAAA+N,EAAA/N,KAAA,GAKFV,EAAMa,IAAIuU,UAAU,KAAD,GAItC,IAAW1F,KAJLrD,EAAIoC,EAAAQ,KACVtO,QAAQC,IAAI,QACZD,QAAQC,IAAIyL,GACZA,EAAKuE,KAAKuF,GACU9J,EAEVyH,EAASzH,EAAKqD,GAAa,KAC7BoQ,OAAQ,EAERA,EADAhB,GAAYhL,KAAUgL,EACXA,EAAShL,GAAQnH,KAEjB,GACfN,EAAKqD,GAAiB,SAAIoQ,EAG9BlV,EAAYyB,GAAM,QAGtB1L,QAAQC,IAAI,QACZiT,GAAe,GAAM,yBAAApF,EAAAzN,OAAA,GAAAyM,EAAA,MACxBxM,MAAA,KAAAC,UAAA,CA5HDjB,qBAAU,WACmB,SAAAC,IAaxB,OAbwBA,EAAAC,YAAAC,cAAAC,MAAzB,SAAAC,IAAA,OAAAF,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACIC,QAAQC,IAAI,2CACZD,QAAQC,IAAI,0BAERZ,EAAMa,IAAI6N,gBAEV/C,KAIAhL,QAAQC,IAAI,cACZwT,KACH,wBAAA5T,EAAAQ,OAAA,GAAAV,EAAA,MACJW,MAAA,KAAAC,UAAA,EAdkB,WACMhB,EAAAe,MAAC,KAADC,UAAA,CAezBC,EAEJ,GAAG,IAEHlB,qBACI,WAII,GAHAU,QAAQC,IAAI,oBACZD,QAAQC,IAAIie,GACZle,QAAQC,IAAI+d,GACRC,EACJ,CACI,IAAIjV,EAAO,GACXhJ,QAAQC,IAAI,uBACZ,IAAK,IAAIqB,EAAI,EAAGA,EAAI2c,EAAaK,MAAM/c,OAAQD,IAC/C,CACI,IAAM0V,EAAOiH,EAAaK,MAAMhd,GAC1BsM,EAAQ,CAAC,GAAMoJ,EAAK/O,IAAK,KAAQ+O,EAAKhL,KAAM,MAASgL,EAAK0G,MAAO,MAASvb,EAAa9C,EAAMwB,KAAMmW,EAAK5U,QAC9G4G,EAAK2C,KAAKiC,EACd,CACAvO,EAAMa,IAAIqe,QAAQvV,GAClBoV,EAAY/e,EAAMa,IAAIse,UAC1B,CACJ,GACA,CAACP,EAAcD,EAAaE,EAAW7e,EAAMa,IAAKb,EAAMwB,OAG5DvB,qBACI,WACI0L,GACJ,GAEA,CAACmT,IA+EL,IAgCMlI,EAAc,SAACvO,GACjB,OAAQjH,cAAA,OAAAoH,SACIpH,cAAA,SAAAoH,SAAOF,eAAA,SAAAE,SAAA,CACPF,eAAA,MAAAE,SAAA,CACIpH,cAAA,MAAIC,GAAG,KAAImH,SAAExI,EAAMwB,KAAKH,KACxBD,cAAA,MAAIC,GAAG,WAAUmH,SAAExI,EAAMwB,KAAKuC,WAC9B3C,cAAA,MAAIC,GAAG,aAAYmH,SAAExI,EAAMwB,KAAKqX,YAH5B,MAMJxQ,GACAA,EAAOU,KAAI,SAACsD,EAAMqD,GACd,OA3CL,SAACrD,EAAMqD,GACtB,IAAMrO,EAAKgL,EAAS,GACdtI,EAAWsI,EAAe,SAC1BI,EAAUJ,EAAc,QACxByK,EAAWzK,EAAY,MACvByH,EAASzH,EAAW,KACpByT,EAAWzT,EAAe,SAC1BH,EAAMwD,EAAM5H,WAQlB,OAAQQ,eAACyO,IAAMC,SAAQ,CAAAxO,SAAA,CACXF,eAAA,MAAcC,UAAU,UAASC,SAAA,CAC7BpH,cAAA,MAAImH,UAAU,WAAUC,SAACpH,cAAC6V,KAAI,CAACC,GAAI,WAAW7V,EAAGmH,SAAEnH,MACnDD,cAAA,MAAImH,UAAU,WAAUC,SAAEzE,IAC1B3C,cAAA,MAAImH,UAAU,WAAUC,SAAEiE,MAHrBP,GAKT9K,cAAA,MAAwBmH,UAAU,UAASC,SACvCpH,cAAA,MAAIsH,QAAQ,IAAIH,UAAU,WAAUC,SAAEsO,KADjC5K,EAAM,SAGf5D,eAAA,MAAyBC,UAAU,aAAYC,SAAA,CAC3CpH,cAAA,MAAImH,UAAU,WAAUC,SAACF,eAAC2O,KAAI,CAACC,GAAI,eAAepD,EAAOtL,SAAA,CAAC,IAAEsL,EAAO,SACnExL,eAAA,MAAII,QAAQ,IAAIH,UAAU,WAAUC,SAAA,CAAC,IAAEsX,EAAS,SAF3C5T,EAAM,YATEA,EAAM,WAevC,CAa+BiL,CAAW9K,EAAMqD,EAC5B,IAGArH,GAA4B,IAAlBA,EAAOnG,QAAgBd,cAAA,MAAAoH,SAAepH,cAAA,MAAIsH,QAAQ,IAAGF,SAAExI,EAAMwB,KAAK4V,WAAnC,cAI7D,EAEA,OAAKpX,EAAMa,IAAIiJ,YAIXxB,eAAA,OAAKjH,GAAG,YAAWmH,SAAA,CACfpH,cAAA,OAAKC,GAAG,QAAOmH,SACXpH,cAAA,MAAAoH,SACKxI,EAAMwB,KAAK2e,cAGpB/e,cAAA,OAAKC,GAAG,iBAAgBmH,SACpBpH,cAACkI,EAAQ,CAACM,SAAS,GAAGD,KAAMgB,EAAUtB,aAAc,SAAC8J,GAAc,OAAOyD,EAAYzD,EAAU,SAVjG/R,cAAC0X,IAAQ,CAAC5B,GAAG,KAe5B,ECiOe2I,OAvaf,SAAqB7f,GACjB,IAAA2F,EAAgCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArCgF,EAAQ9E,EAAA,GAAE+E,EAAW/E,EAAA,GAE5BI,EAAgCL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAArCma,EAAQla,EAAA,GAAEma,EAAWna,EAAA,GAC5BG,EAA4BT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAAjCia,EAAMha,EAAA,GAAEia,EAASja,EAAA,GACxBe,EAAkFC,YAAa1C,GAAY2C,EAAAzB,YAAAuB,EAAA,GAApG+M,EAAQ7M,EAAA,GAAAE,EAAAF,EAAA,GAAYoX,EAAWlX,EAApBT,QAA4B4X,EAAYnX,EAAlBP,KAA2B2X,EAASpX,EAAhBL,MAC5DkN,EAA0FhN,YAAapC,EAC/F,CAAC,UAAa,CAAE,SAAakb,EAAU,OAAUE,KAAS/L,EAAAzO,YAAAwO,EAAA,GAD3DE,EAAWD,EAAA,GAAAiM,EAAAjM,EAAA,GAAYkM,EAAcD,EAAvBxZ,QAA+ByN,EAAW+L,EAAjBtZ,KAA0BwZ,EAAYF,EAAnBpZ,MAEjEX,EAAgCb,mBAAS,CAAC,GAAEc,EAAAZ,YAAAW,EAAA,GAArCqY,EAAQpY,EAAA,GAAEqY,EAAWrY,EAAA,GAC5B+D,EAA6B7E,mBAAS,GAAE8E,EAAA5E,YAAA2E,EAAA,GAAjCkW,EAASjW,EAAA,GAAEkW,EAAOlW,EAAA,GACzBG,EAA+BjF,mBAAS,GAAEkF,EAAAhF,YAAA+E,EAAA,GAAnCgW,GAAU/V,EAAA,GAAEgW,GAAQhW,EAAA,GAC3BG,GAA0BrF,mBAAS,IAAGsF,GAAApF,YAAAmF,GAAA,GAA/BmG,GAAKlG,GAAA,GAAE6V,GAAQ7V,GAAA,GACtBhB,GAAsBC,YAAYiH,GAAO,KAAlChH,GAAsCtE,YAAAoE,GAAA,GAA3B,GAuJlB,SAASiM,GAAQtS,EAAIC,GAEjB,OAAID,EAAGE,SAAWD,EAAGC,YAEZF,EAAGE,SAAWD,EAAGC,WAEnBF,EAAGG,MAAQF,EAAGE,KACzB,CA5JA/D,qBAAU,WACmB,SAAAC,IA4CxB,OA5CwBA,EAAAC,YAAAC,cAAAC,MAAzB,SAAAC,IAAA,IAAA2B,EAAA+e,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAhhB,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAE0C,GADtCC,QAAQC,IAAI,2CACZD,QAAQC,IAAI,0BAEPZ,EAAMa,IAAIiJ,YAAY,CAADtJ,EAAAE,KAAA,eAAAF,EAAA2O,OAAA,iBAO1B,IAFI8R,EAAOjJ,SAASgC,eAAe,QAC/BkH,EAAQlJ,SAASgC,eAAe,SAC/B/X,EAAI,EAAGA,GAAK,GAAKA,KAElB+e,EAAShJ,SAASqJ,cAAc,WACzB7f,KAAOS,EAAE6F,WAChBoZ,EAAMI,IAAIN,EAAQ/e,GAMtB,IAJMkf,GAAW,IAAItL,MAAO0L,cACtBH,GAAY,IAAIvL,MAAO2L,WAAa,EACzB,KAEZvf,EAFY,KAEGA,GAAKkf,EAAWlf,KAEhC+e,EAAShJ,SAASqJ,cAAc,WACzB7f,KAAOS,EAAE6F,WAChBmZ,EAAKK,IAAIN,EAAQ/e,GAGrBtB,QAAQC,IAAIugB,GACZxgB,QAAQC,IAAIwgB,GACZR,EAAQO,GACRL,GAASM,GACTpJ,SAASgC,eAAe,QAAQ1J,MAAQ6Q,EACxCnJ,SAASgC,eAAe,SAAS1J,MAAQ8Q,EAErCphB,EAAMa,IAAI6N,kBAMV/N,QAAQC,IAAI,cACZwT,KACH,yBAAA5T,EAAAQ,OAAA,GAAAV,EAAA,MACJW,MAAA,KAAAC,UAAA,EA7CkB,WACMhB,EAAAe,MAAC,KAADC,UAAA,CA8CzBC,EAEJ,GAAG,IAEHlB,qBACI,WAII,GAHAU,QAAQC,IAAI,oBACZD,QAAQC,IAAIie,GACZle,QAAQC,IAAI+d,GACRC,EACJ,CACI,IAAIjV,EAAO,GACXhJ,QAAQC,IAAI,uBACZ,IAAK,IAAIqB,EAAI,EAAGA,EAAI2c,EAAaK,MAAM/c,OAAQD,IAC/C,CACI,IAAM0V,EAAOiH,EAAaK,MAAMhd,GAC1BsM,EAAQ,CAAC,GAAMoJ,EAAK/O,IAAK,KAAQ+O,EAAKhL,KAAM,MAASgL,EAAK0G,MAAO,MAASvb,EAAa9C,EAAMwB,KAAMmW,EAAK5U,QAC9G4G,EAAK2C,KAAKiC,EACd,CACAvO,EAAMa,IAAIqe,QAAQvV,GAClBoV,EAAY/e,EAAMa,IAAIse,UAC1B,CACJ,GACA,CAACP,EAAcD,EAAaE,EAAW7e,EAAMa,IAAKb,EAAMwB,OAG5DvB,qBACI,WAGI,GAFAU,QAAQC,IAAI,kBAEP6T,EAAL,CAQA,IAHA,IAAMxI,EAAQwI,EAAY+B,SACtB9I,EAAU,GACVjB,EAAU,GACLxK,EAAI,EAAIA,EAAIgK,EAAM/J,OAASD,IACpC,CACI,IAAMkK,EAAOF,EAAMhK,GAEnB,GAAc,MADAkK,EAAKsK,aAGdtK,EAAKuK,aAA2C,IAA5BvK,EAAKuK,YAAYxU,QAA1C,CAGA,IAEI4d,EAKA2B,EAPE1F,EAAS5P,EAAKK,QACdsH,EAAS3H,EAAKuV,QAGhB5B,EADAhB,GAAYhL,KAAUgL,EACXA,EAAShL,GAAQnH,KAEjB,GAEXoP,KAAU/b,EAAMa,IAAIsL,KAEpBsV,EAAWzhB,EAAMa,IAAIsL,KAAK4P,KAI1B0F,EAAW,CAAC,GACH5U,OAAS,GAClB4U,EAASzU,UAAY,GACrByU,EAAS1U,UAAY,GACrB0U,EAASrU,QAAU,GACnBqU,EAASzd,MAAQ,IAErB,IAAM8J,EAAY,GAAAsB,OAAMqS,EAASzd,MAAK,KAAAoL,OAAIqS,EAAS1U,WACnDN,EAAUN,EAAKuK,YACf,IAAI3I,EAAe,CACf2B,MAAOzN,EACPT,KAAMsM,EACN9J,MAAOyd,EAASzd,MAChB3C,GAAI0a,EACJhY,SAAUoI,EAAKwV,UACflV,QAASA,EACTI,OAAQ4U,EAAS5U,OACjBE,UAAW0U,EAAS1U,UACpBK,QAASqU,EAAStU,UAClBL,MAAO2U,EAAS3U,MAChB6K,KAAM7D,EACNgM,SAAUA,GAEdpS,EAAQpB,KAAKyB,EAvCD,CAwChB,CACAL,EAAQkD,KAAKhN,GAEbgH,EAAY8C,EAzDF,CA0Dd,GAEA,CAAC+G,EAAagM,EAAgBC,IA2BlC,IAgCM9J,GAAc,SAACvO,GACjB,OAAQjH,cAAA,OAAAoH,SACIpH,cAAA,SAAAoH,SAAOF,eAAA,SAAAE,SAAA,CACPF,eAAA,MAAAE,SAAA,CACIpH,cAAA,MAAIC,GAAG,KAAImH,SAAExI,EAAMwB,KAAKH,KACxBD,cAAA,MAAIC,GAAG,WAAUmH,SAAExI,EAAMwB,KAAKuC,WAC9B3C,cAAA,MAAIC,GAAG,aAAYmH,SAAExI,EAAMwB,KAAKgO,eAH5B,MAMJnH,GACAA,EAAOU,KAAI,SAACsD,EAAMqD,GACd,OA3CL,SAACrD,EAAMqD,GACtB,IAAMrO,EAAKgL,EAAS,GACdtI,EAAWsI,EAAe,SAC1BI,EAAUJ,EAAc,QACxByK,EAAWzK,EAAY,MACvByH,EAASzH,EAAW,KACpByT,EAAWzT,EAAe,SAC1BH,EAAMwD,EAAM5H,WAQlB,OAAQQ,eAACyO,IAAMC,SAAQ,CAAAxO,SAAA,CACXF,eAAA,MAAcC,UAAU,UAASC,SAAA,CAC7BpH,cAAA,MAAImH,UAAU,WAAUC,SAACpH,cAAC6V,KAAI,CAACC,GAAI,WAAW7V,EAAGmH,SAAEnH,MACnDD,cAAA,MAAImH,UAAU,WAAUC,SAAEzE,IAC1B3C,cAAA,MAAImH,UAAU,WAAUC,SAAEiE,MAHrBP,GAKT9K,cAAA,MAAwBmH,UAAU,UAASC,SACvCpH,cAAA,MAAIsH,QAAQ,IAAIH,UAAU,WAAUC,SAAEsO,KADjC5K,EAAM,SAGf5D,eAAA,MAAyBC,UAAU,aAAYC,SAAA,CAC3CpH,cAAA,MAAImH,UAAU,WAAUC,SAACF,eAAC2O,KAAI,CAACC,GAAI,eAAepD,EAAOtL,SAAA,CAAC,IAAEsL,EAAO,SACnExL,eAAA,MAAII,QAAQ,IAAIH,UAAU,WAAUC,SAAA,CAAC,IAAEsX,EAAS,SAF3C5T,EAAM,YATEA,EAAM,WAevC,CAa+BiL,CAAW9K,EAAMqD,EAC5B,IAGArH,GAA4B,IAAlBA,EAAOnG,QAAgBd,cAAA,MAAAoH,SAAepH,cAAA,MAAIsH,QAAQ,IAAGF,SAAExI,EAAMwB,KAAK4V,WAAnC,cAI7D,EACA,SAASmG,GAAY7N,EAAOY,GAIxB,OAFA3P,QAAQC,IAAI8O,GACZ/O,QAAQC,IAAI0P,GACJZ,GAEJ,KAAK,EACDkR,EAAQtQ,GACR,MACJ,KAAK,EACDwQ,GAASnQ,SAASL,IAK9B,CAsJA,OApJArQ,qBAAU,WACN8gB,GAASJ,EAAU7Y,WAAa,IAAM+Y,GAAW/Y,WAAW8Z,SAAS,EAAG,KAE5E,GAAG,CAACjB,EAAWE,KAGf5gB,qBAAU,WACe,SAAA4hB,IA8EpB,OA9EoBA,EAAA1hB,YAAAC,cAAAC,MAArB,SAAAoN,IAAA,IAAAE,EAAAC,EAAAC,EAAA5B,EAAAyB,EAAAjB,EAAAxK,EAAAkK,EAAA2B,EAAAC,EAAA+T,EAAAC,EAAA,OAAA3hB,cAAAG,MAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,OAEyB,GAArBC,QAAQC,IAAI,WAERZ,EAAMa,IAAI6N,gBAAgB,CAADD,EAAA/N,KAAA,SAKR,OAHXiN,EAAM,WAAa3N,EAAMa,IAAI+N,WAAWC,QAAU,IACpD7O,EAAMa,IAAI+N,WAAWE,KAAO,WAC1BlB,EAAM,CAAC,OAAU,CAAC,OAAUwD,KAClCzQ,QAAQC,IAAIgN,GAAKa,EAAA/N,KAAA,EACMqO,IAAMC,IAAIrB,EAAKC,GAAK,KAAD,EAM1C,IANMC,EAAQY,EAAAQ,KACdtO,QAAQC,IAAIiN,GAEN5B,EAAQ4B,EAAS3G,KAAKgI,OAAOjD,MAC/ByB,EAAU,GACVjB,EAAU,GACLxK,EAAI,EAAIA,EAAIgK,EAAM/J,OAASD,IAE1BkK,EAAOF,EAAMhK,GACb6L,EAAY,GAAAsB,OAAMjD,EAAKkD,SAAQ,KAAAD,OAAIjD,EAAKmD,UAC1C,gBAAiBnD,IAEjBM,EAAUN,EAAK4T,aAEfhS,EAAe,CACf2B,MAAOzN,EACPT,KAAMsM,EACN9J,MAAOmI,EAAKkD,SACZhO,GAAI8K,EAAKwD,QAET5L,SAAUoI,EAAK6V,UACfvV,QAASA,EACTI,OAAQV,EAAKyD,OACb5C,UAAWb,EAAK0D,WAChB9C,UAAWZ,EAAK2D,SAChB1C,QAASjB,EAAK4D,QACdjD,MAAOX,EAAK6D,MACZ2H,KAAMxL,EAAK+T,KACXJ,SAAU3T,EAAK8P,WAEnBvO,EAAQpB,KAAKyB,GAEjBL,EAAQkD,KAAKuF,IACbvL,EAAY8C,GAASe,EAAA/N,KAAA,iBAUD,OALdqhB,EAAYlB,GAAa,EAC/BiB,EAAUnB,EAAU7Y,WAAa,IAAMia,EAAUja,WAAW8Z,SAAS,EAAG,KACxEvB,EAAYjP,IACZmP,EAAUuB,GACVnhB,QAAQC,IAAIwQ,IACZzQ,QAAQC,IAAIkhB,GAAQrT,EAAAhO,KAAA,GAAAgO,EAAA/N,KAAA,GAGV8T,IAAc,KAAD,GAAA/F,EAAA/N,KAAA,iBAAA+N,EAAAhO,KAAA,GAAAgO,EAAA8B,GAAA9B,EAAA,UAInB9N,QAAQshB,KAAKxT,EAAA8B,GAAE5D,MAAM,yBAAA8B,EAAAzN,OAAA,GAAAyM,EAAA,qBAkBhCxM,MAAA,KAAAC,UAAA,EA/EkB,WACE2gB,EAAA5gB,MAAC,KAADC,UAAA,CA+ErBghB,EACA,GAEA,CAAC9X,KA2DApK,EAAMa,IAAIiJ,YAIXxB,eAAA,OAAKjH,GAAG,WAAUmH,SAAA,CACdpH,cAAA,OAAKC,GAAG,QAAOmH,SACXpH,cAAA,MAAAoH,SACKxI,EAAMwB,KAAKwS,YAGpB1L,eAAA,OAAKjH,GAAG,cAAamH,SAAA,CACjBpH,cAAA,OAAKmH,UAAU,OAAOlH,GAAK,OAAMmH,SAC7BpH,cAAC4H,IAAkB,CAACC,SAAS,QAAQC,GAAI,CAACC,MAAO,WAAYR,QAAS,YApEtF,WAEI,IAAIsY,EAAON,EACPO,EAAQL,GACQ,kBAATI,IACPA,EAAOtQ,SAASsQ,IACC,kBAAVC,IACPA,EAAQvQ,SAASuQ,IAErBvgB,QAAQC,IAAIqgB,GACZtgB,QAAQC,IAAIsgB,GACZvgB,QAAQC,WAAWqgB,GACnBtgB,QAAQC,WAAWsgB,GACfA,EAAQ,EAERA,GAAS,GAITD,GAAQ,EACRC,EAAQ,IAEZN,EAAQK,GACRH,GAASI,GACTlJ,SAASgC,eAAe,QAAQ1J,MAAQ2Q,EACxCjJ,SAASgC,eAAe,SAAS1J,MAAQ4Q,CAC7C,CA0C6FiB,EAAW,MAE5F/gB,cAAA,UAAQuL,KAAK,OAAOtL,GAAG,OAAOkH,UAAU,WAAWyK,SAAU,SAACC,GAAWsK,GAAY,EAAGtK,EAAMC,OAAO5C,MAAO,IAC5GlP,cAAA,UAAQuL,KAAK,QAAQtL,GAAG,QAAQkH,UAAU,WAAWyK,SAAU,SAACC,GAAWsK,GAAY,EAAGtK,EAAMC,OAAO5C,MAAO,IAC1GlP,cAAA,OAAKmH,UAAU,OAAOlH,GAAK,OAAMmH,SAC7BpH,cAACgI,IAAgB,CAACH,SAAS,QAAQC,GAAI,CAACC,MAAO,WAAYR,QAAS,YA7CxF,WAEI,IAAIsY,EAAON,EACPO,EAAQL,GACQ,kBAATI,IACPA,EAAOtQ,SAASsQ,IACC,kBAAVC,IACPA,EAAQvQ,SAASuQ,IACrBvgB,QAAQC,IAAIqgB,GACZtgB,QAAQC,IAAIsgB,GACZvgB,QAAQC,WAAWqgB,GACnBtgB,QAAQC,WAAWsgB,GACfA,EAAQ,GAERA,GAAS,GAITD,GAAQ,EACRC,EAAQ,GAEZN,EAAQK,GACRH,GAASI,GAETlJ,SAASgC,eAAe,QAAQ1J,MAAQ2Q,EACxCjJ,SAASgC,eAAe,SAAS1J,MAAQ4Q,CAC7C,CAmB+FkB,EAAW,SAGlGhhB,cAAA,OAAKC,GAAG,iBAAgBmH,SACpBpH,cAACkI,EAAQ,CAACM,SAAUQ,GAAaT,KAAMgB,EAAUtB,aAAc,SAAC8J,GAAc,OAAOyD,GAAYzD,EAAU,SApB5G/R,cAAC0X,IAAQ,CAAC5B,GAAG,KAwB5B,EClTemL,OAvHf,SAAmBriB,GAEf,IAAA2F,EAAgCC,mBAAS,CAAC,GAAEC,EAAAC,YAAAH,EAAA,GAArCwP,EAAQtP,EAAA,GAAEyX,EAAWzX,EAAA,GAC5BI,EAA2CL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAAnDuF,EAAYtF,EAAA,GAAEuF,EAAkBvF,EAAA,GAoCvC,SAASoc,IAEL,IAAIhK,EAAO,CACXA,UAAiB,GACjBA,UAAiB,GACjBA,aAAoB,GACpBA,MAAa,GACbA,QAAe,GACfA,OAAc,GACdA,YAAmB,GACnBgF,EAAYhF,EAChB,CAkDA,OA5FArY,qBAAU,WACmB,SAAAC,IAQxB,OARwBA,EAAAC,YAAAC,cAAAC,MAAzB,SAAAC,IAAA,OAAAF,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACSV,EAAMa,IAAIiJ,aAAgB9J,EAAMa,IAAI6N,gBAAe,CAAAlO,EAAAE,KAAA,eAAAF,EAAA2O,OAAA,iBAIxDxO,QAAQC,IAAI,2CACZD,QAAQC,IAAI,wBACZ0hB,IAAmB,wBAAA9hB,EAAAQ,OAAA,GAAAV,EAAA,MACtBW,MAAA,KAAAC,UAAA,EATkB,WACMhB,EAAAe,MAAC,KAADC,UAAA,CAUzBC,EAEJ,GAAG,IA+EEnB,EAAMa,IAAIiJ,aAAgB9J,EAAMa,IAAI6N,gBAIrCpG,eAAA,OAAKjH,GAAG,WAAUmH,SAAA,CACdpH,cAAA,OAAKC,GAAG,QAAOmH,SACXpH,cAAA,MAAAoH,SACKxI,EAAMwB,KAAK+gB,cAGpBnhB,cAAA,OAAKC,GAAG,gBAAgB6Q,QAASlS,EAAMa,IAAI2R,MAAMhK,SAC5CxI,EAAMa,IAAI6N,iBACPtN,cAACgc,GAAQ,CAAC5b,KAAMxB,EAAMwB,KAAMX,IAAKb,EAAMa,IAAKyX,KAAMnD,EAAUuJ,QAlC5E,SAAiB7Q,GAEblN,QAAQC,IAAI,gBAAkB4K,GAC9B7K,QAAQC,IAAIiN,GACZpC,GAAoBD,GAEpB,IACIhK,EADE+V,EAAOjV,EAEgB,OAAzBuL,EAAS3G,KAAKgI,QAEdqI,EAAKK,KAAOJ,KAAMK,KAAKC,QACvBtW,EAAOxB,EAAMwB,KAAKuW,aAClBuK,MAIA/K,EAAKK,KAAOJ,KAAMK,KAAKI,MACvBzW,EAAOxB,EAAMwB,KAAK0W,WAEtBX,EAAK/U,UAAY,IACjBgV,KAAMc,KAAK9W,EAAM+V,EACrB,SAEWnW,cAAC0X,IAAQ,CAAC5B,GAAG,KAgB5B,E,2BC3HMsL,GAAG,WACL,SAAAA,IAAcC,aAAA,KAAAD,GACV7hB,QAAQC,IAAI,oBACZoB,KAAK8H,aAAc,EACnB9H,KAAKqU,WAAY,EACjBrU,KAAKsU,WAAY,EACjBtU,KAAK0gB,WAAY,EACjB1gB,KAAKkT,QAAS,EACdlT,KAAKmT,SAAW,CAAC,EACjBnT,KAAKmK,KAAO,CAAC,EACbnK,KAAKqK,KAAO,CAAC,EACbrK,KAAK2gB,iBAAc5hB,EACnBiB,KAAKwQ,OAAQ,EACbxQ,KAAK4M,WAAa,CAAC,EACnB5M,KAAK0M,iBAAkB,EACvB1M,KAAK6P,OAAS,EAClB,CAoNC,OApNA+Q,aAAAJ,EAAA,EAAAtW,IAAA,eAAAoE,MAAA,eAAAuS,EAAA1iB,YAAAC,cAAAC,MAED,SAAAC,IAAA,IAAAuN,EAAAgE,EAAA,OAAAzR,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAG2BqO,IAAMC,IAAI,sCAAqC,OAAhEnB,EAAQrN,EAAAyO,KACdtO,QAAQC,IAAI,kBACZD,QAAQC,IAAIiN,EAAS3G,MACf2K,EAAShE,EAAS3G,KAAK4b,GAC7BniB,QAAQC,IAAI,mBAAqBiR,GACjC7P,KAAK6P,OAASA,EACd7P,KAAK+gB,gBAAe,wBAAAviB,EAAAQ,OAAA,GAAAV,EAAA,UACvB,yBAAAuiB,EAAA5hB,MAAA,KAAAC,UAAA,EAZA,IAYA,CAAAgL,IAAA,gBAAAoE,MAED,WACC,IAAD0S,EAAA,KACI,GAA2B,IAAvBhhB,KAAK6P,OAAO3P,QAAiBF,KAAK4M,WAAWqU,UAE7CjhB,KAAK4M,WAAWqU,WAAajhB,KAAK6P,OACtC,CACIlR,QAAQC,IAAI,wBAA0BoB,KAAK4M,WAAWC,SACtD,IAAMuC,EAAQ,WAAapP,KAAK4M,WAAWC,QAAU,IAAM7M,KAAK4M,WAAWE,KAAO,SAClF9M,KAAK0M,iBAAkB,EACvBK,IAAMC,IAAIoC,EAAO,CAAC8R,QAAS,MACtBjR,MAAM,SAACpE,GACJlN,QAAQC,IAAI,oBACZD,QAAQC,IAAIiN,EAAS3G,MACrB8b,EAAKxQ,MAAQ3E,EAAS3G,KAAKsL,MAC3BwQ,EAAKlZ,aAAc,CACvB,IACCqZ,OAAM,SAAA/b,GACL,IAAMgK,EAAQ,WAAa4R,EAAKpU,WAAWC,QAAU,IAAMmU,EAAKpU,WAAWE,KAAO,SAClFsU,OAAOC,KAAKjS,EACd,GACR,CACJ,GAAC,CAAAlF,IAAA,aAAAoE,MAGD,WACQtO,KAAKqU,WAAarU,KAAKsU,YACvBtU,KAAK8H,aAAc,EACnB0N,KAAMyC,UACFjY,KAAKshB,UACLthB,KAAKshB,WAIjB,GAAC,CAAApX,IAAA,iBAAAoE,MAED,SAAegT,GACXthB,KAAK2gB,YAAcW,CACvB,GAAC,CAAApX,IAAA,UAAAoE,MAED,SAAQjE,GACJrK,KAAKqK,KAAOA,EACZrK,KAAKsU,WAAY,EACjBtU,KAAKuhB,aACLvhB,KAAKwhB,WACT,GAAC,CAAAtX,IAAA,gBAAAoE,MAED,SAAc1B,GAEV5M,KAAK4M,WAAaA,EAClBjO,QAAQC,IAAIoB,KAAK4M,WAAWqU,UAC5BjhB,KAAK+gB,eACT,GAAC,CAAA7W,IAAA,UAAAoE,MAED,SAAQrE,GACJjK,KAAKmK,KAAO,CAAC,EACb,IAAK,IAAIlK,EAAI,EAAIA,EAAIgK,EAAM/J,OAASD,IACpC,CACI,IAAMkK,EAAOF,EAAMhK,GACbZ,EAAK8K,EAAU,IACrBnK,KAAKmK,KAAK9K,GAAM8K,CACpB,CACAnK,KAAKqU,WAAY,EACjBrU,KAAKuhB,YACT,GAAC,CAAArX,IAAA,UAAAoE,MAED,SAAQ2O,GACJjd,KAAK2V,KAAO,CAAC,EACb,IAAK,IAAI1V,EAAI,EAAIA,EAAIgd,EAAM/c,OAASD,IACpC,CACI,IAAM0V,EAAOsH,EAAMhd,GACbZ,EAAKsW,EAAKtW,GAChBW,KAAK2V,KAAKtW,GAAMsW,EAChB3V,KAAK2V,KAAKtW,GAAU,KAAI,CAC5B,CACAW,KAAK0gB,WAAY,EACjB1gB,KAAKwhB,WACT,GAAC,CAAAtX,IAAA,YAAAoE,MAED,WACI,GAAKtO,KAAK0gB,WAAc1gB,KAAKsU,UAA7B,CAMA,IAAK,IAAIrU,EAAI,EAAIA,EAAID,KAAKqK,KAAKnK,OAASD,IACxC,CACI,IAAMc,EAAQf,KAAKqK,KAAKpK,GAAGc,MAG3B,GAAc,MAAVA,GAA2B,MAAVA,EAArB,CAGA,IAAM+Q,EAAS9R,KAAKqK,KAAKpK,GAAGyf,QAIxB5N,GAAUA,EAAO5R,OAAS,GAAK4R,KAAU9R,KAAK2V,KAC9C3V,KAAK2V,KAAK7D,GAAc,MAAK,EAE7B9R,KAAK2V,KAAK7D,GAAc,KAAI,CATpB,CAUhB,CACAnT,QAAQC,IAAIoB,KAAK2V,KAnBjB,MAFIhX,QAAQC,IAAI,oBAsBpB,GAAC,CAAAsL,IAAA,QAAAoE,MAED,SAAM6E,GACFxU,QAAQC,IAAI,cAAgBuU,EAAc,KAC1CnT,KAAKkT,QAAS,EACdlT,KAAKmT,SAAWA,EACU,MAAtBA,EAAgB,QAChBnT,KAAKwQ,OAAQ,GACbxQ,KAAK2gB,aACL3gB,KAAK2gB,aAAY,EACzB,GAAC,CAAAzW,IAAA,SAAAoE,MAED,WACI3P,QAAQC,IAAI,cACZoB,KAAKkT,QAAS,EACdlT,KAAKmT,SAAW,CAAC,EACbnT,KAAK2gB,aACL3gB,KAAK2gB,aAAY,EACzB,GAAC,CAAAzW,IAAA,UAAAoE,MAAA,eAAAmT,EAAAtjB,YAAAC,cAAAC,MAED,SAAAoN,IAAA,IAAAqG,EAAA+I,EAAAlP,EAAAC,EAAAvF,EAAAgG,EAAAC,EAAAC,EAAApC,EAAAlK,EAAAyhB,EAAAriB,EAAAsiB,EAAAC,EAAAC,EAAA3iB,UAAA,OAAAd,cAAAG,MAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,OACiB,GADHoT,EAAM+P,EAAA3hB,OAAA,QAAAnB,IAAA8iB,EAAA,GAAAA,EAAA,QAAG9iB,EACf8b,EAAM,IACN7a,KAAK0M,gBAAgB,CAADD,EAAA/N,KAAA,SAIH,OAHXiN,EAAM,WAAa3L,KAAK4M,WAAWC,QAAU,IAC/C7M,KAAK4M,WAAWE,KAAO,QACrBlB,EAAM,CAAC,OAAU,CAAC,KAAQkG,IAChCnT,QAAQC,IAAIgN,GAAKa,EAAA/N,KAAA,EACIqO,IAAMC,IAAIrB,EAAKC,GAAK,KAAD,EAExC,GAFMvF,EAAMoG,EAAAQ,KACZtO,QAAQC,IAAIyH,GACR,UAAWA,EAAOnB,KAAKgI,OAC3B,CAEIb,EAAA6B,YACoB7H,EAAOnB,KAAKgI,OAAOjD,OAAK,IAA5C,IAAAoC,EAAA8B,MAAA7B,EAAAD,EAAA+B,KAAAC,MAAW9B,EAAKD,EAAAgC,MAEZ3P,QAAQC,IAAI2N,GACNpC,EAAO,CAAC,GAAMoC,EAAMoB,QAAS,MAASpB,EAAMc,SAAU,SAAYd,EAAM0R,UAAW,QAAW1R,EAAMwR,YAAa,KAAQxR,EAAMyR,OACrInD,EAAIvQ,KAAKH,EAE7B,OAAAyT,GAAAvR,EAAAmC,EAAAoP,EAAA,SAAAvR,EAAAoC,GAAA,CACY,CAAChC,EAAA/N,KAAA,iBAI2B,GAD5BC,QAAQC,IAAI,SAAWkT,GACvBnT,QAAQC,IAAIoB,KAAKqU,WACZrU,KAAKqU,UAAU,CAAD5H,EAAA/N,KAAA,gBAAA+N,EAAAU,OAAA,SACR0N,GAAG,QAEL5a,EAAI,EAAC,aAAGA,EAAID,KAAKqK,KAAKnK,QAAM,CAAAuM,EAAA/N,KAAA,SACN,GAArB6N,EAAQvM,KAAKqK,KAAKpK,QACTlB,IAAX+S,GAAwBvF,EAAMmT,UAAY5N,EAAM,CAAArF,EAAA/N,KAAA,gBAAA+N,EAAAU,OAAA,0BAGhC,MAAhBZ,EAAMxL,OAAiC,MAAhBwL,EAAMxL,MAAa,CAAA0L,EAAA/N,KAAA,gBAAA+N,EAAAU,OAAA,uBAGxC9N,EAAKkN,EAAe,QACpBpC,EAAOnK,KAAKmK,KAAK9K,IAEnBuiB,EAAW,CAAC,GACH,GAAIzX,EAAKvD,IACtBgb,EAAgB,MAAIzX,EAAKnI,MACzB4f,EAAmB,SAAIrV,EAAMuV,UAAUnN,MAAM,KAAK,GAAGtU,QAAQ,IAAI,IAAI,GAAGA,QAAQ,IAAK,KACrFuhB,EAAkB,QAAIrV,EAAM7B,YAAYiK,MAAM,KAAK,GAAGtU,QAAQ,IAAI,IAAI,GAAGA,QAAQ,IAAK,KACtFuhB,EAAe,KAAIrV,EAAMmT,QACzB7E,EAAIvQ,KAAKsX,GAAS,QAjBkB3hB,IAAGwM,EAAA/N,KAAA,wBAAA+N,EAAAU,OAAA,SAoBxC0N,GAAG,yBAAApO,EAAAzN,OAAA,GAAAyM,EAAA,UACb,yBAAAgW,EAAAxiB,MAAA,KAAAC,UAAA,EAnDA,IAmDA,CAAAgL,IAAA,UAAAoE,MAED,WACI,OAAOtO,KAAK2V,IAChB,GAAC,CAAAzL,IAAA,UAAAoE,MAAA,eAAAyT,EAAA5jB,YAAAC,cAAAC,MAED,SAAA2Q,IAAA,OAAA5Q,cAAAG,MAAA,SAAA2Q,GAAA,cAAAA,EAAAzQ,KAAAyQ,EAAAxQ,MAAA,OAAAwQ,EAAAzQ,KAAA,EAEQuB,KAAK8H,aAAc,EAAKoH,EAAAxQ,KAAA,eAIL,OAJKwQ,EAAAzQ,KAAA,EAAAyQ,EAAAX,GAAAW,EAAA,SAIxBvQ,QAAQC,IAAGsQ,EAAAX,IAAQW,EAAA/B,OAAA,UACZ,GAAK,cAAA+B,EAAA/B,OAAA,UAET,GAAI,wBAAA+B,EAAAlQ,OAAA,GAAAgQ,EAAA,kBACd,yBAAA+S,EAAA9iB,MAAA,KAAAC,UAAA,EAZA,IAYA,CAAAgL,IAAA,SAAAoE,MAED,WACI,OAAOtO,KAAK8H,WAChB,GAAC,CAAAoC,IAAA,cAAAoE,MAED,SAAY0T,GAERrjB,QAAQC,IAAI,8BACZoB,KAAKshB,SAAWU,CACpB,KAACxB,CAAA,CApOI,GAuOMA,M,UCtOTyB,GAAM,IAFIC,EAAQ,KAEZ,CAAYC,GAAmB,YA0E5BC,GAxEF,WACT,SAAAA,IAAc3B,aAAA,KAAA2B,GACVzjB,QAAQC,IAAI,kBAEZD,QAAQC,IAAI,WACZ,IAAMyjB,EAAYrM,SAASpC,OAC3B5T,KAAK4T,OAASyO,EACT1N,MAAM,KACN5N,KAAI,SAAAub,GAAC,OAAIA,EAAE3N,MAAM,IAAI,IACrB4N,QAAO,SAACC,EAAKF,GACV,IAAMpY,EAAMoY,EAAEG,QAAQ9E,OAChBrP,EAAQgU,EAAEI,KAAK,KAAK/E,OAE1B,OADA6E,EAAIG,mBAAmBzY,IAAQyY,mBAAmBrU,GAC3CkU,CACX,GAAG,CAAC,GACR7jB,QAAQC,IAAIoB,KAAK4T,OACrB,CAqDC,OArDAgN,aAAAwB,EAAA,EAAAlY,IAAA,aAAAoE,MAED,SAAW+D,EAAUV,GACjB,IACIiR,EADAC,GAAU,EAEd,GAAIxQ,EAASsD,MAAQhE,EAAazR,OAAS,EAAG,CAC1CvB,QAAQC,IAAI,uBACZ,IAAMkkB,EAAUzQ,EAASsD,KAAKoN,gBACxBC,EAAU3Q,EAASsD,KAAKsN,gBAG9B,GADAL,EAAgBX,GAAIiB,KAAKvR,EAAc,UACnCA,IAAiBmR,GACjBnR,IAAiBqR,EAEjBJ,EAAgBjR,EAChBkR,GAAU,OAET,GAAIC,IAAYF,EAGjBC,GAAU,MAGd,CAEI,IADA,IAAIM,EAAe,GACVljB,EAAI,EAAIA,EAAI0R,EAAazR,OAASD,IAElCmjB,MAAMzR,EAAa1R,MACpBkjB,GAAgBxR,EAAa1R,KAErC2iB,EAAgBX,GAAIiB,KAAKC,EAAc,aACjBH,IAGlBH,GAAU,EAMlB,CAGJ,CACA,GAAIA,EACJ,CACI,IAAMpc,EAAO,IAAIoN,KAEjBpN,EAAKqN,QAAQrN,EAAKsN,UAAWC,QAC7B,IAAMpB,EAAanM,EAAKwN,cACxB+B,SAASpC,OAAS,YAAegP,EAAgB,aAAehQ,EAAa,mBACjF,CACA,OAAOiQ,CACX,KAACT,CAAA,CArEQ,G,kCC6GEiB,OA/Gf,SAAkBrlB,GAEd,IAAA2F,EAAgCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAxC2f,EAAQzf,EAAA,GAAE0f,EAAW1f,EAAA,GAC5BI,EAA0BL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAAlCuf,EAAKtf,EAAA,GAAEuf,EAAQvf,EAAA,GAkCtB,OAhCAjG,qBACI,WACQqlB,IAAatlB,EAAMslB,WAEnB3kB,QAAQC,IAAI,gBAAkBZ,EAAMa,IAAIqU,QACxCvU,QAAQC,IAAIZ,EAAMslB,UAClBG,GAAUD,GACVD,EAAYvlB,EAAMslB,WAEtB,IAAMI,EAAO1N,SAASgC,eAAe,iBAEhCwL,EAMFE,EAAKC,UAAUrE,IAAI,WAJnBoE,EAAKC,UAAUC,OAAO,UAO7B,GAAG,CAAC5lB,EAAMslB,SAAUA,EAAUE,EAAOxlB,EAAMa,IAAIqU,SAa3C5M,eAAA,OAAKjH,GAAG,gBAAgBsH,QAAS,WAAQ8c,GAAUD,EAAM,EAAGjd,UAAU,gBAAeC,SAAA,EAC/ExI,EAAMa,IAAI6N,iBAAmB1O,EAAMa,IAAIqU,QACrC5M,eAAAgX,WAAA,CAAA9W,SAAA,CACApH,cAAA,OAAKmH,UAAU,aAAYC,SACtBxI,EAAMa,IAAIsU,SAAc,IAAI,MAAQnV,EAAMa,IAAIsU,SAAe,KAAInV,EAAMwB,KAAK0a,aAEjF9a,cAAA,MAAImH,UAAU,aAGlBnH,cAAC6V,KAAI,CAAC1O,UAAU,aAAa2O,GAAG,IAAIvO,QAAS,kBAAM8c,GAAS,EAAM,EAACjd,SAC9DxI,EAAMwB,KAAKqkB,OAEhBzkB,cAAC6V,KAAI,CAAC1O,UAAU,aAAa2O,GAAG,UAAUvO,QAAS,kBAAM8c,GAAS,EAAM,EAACjd,SACpExI,EAAMwB,KAAKqH,SAEhBzH,cAAC6V,KAAI,CAAC1O,UAAU,aAAa2O,GAAG,UAAUvO,QAAS,kBAAM8c,GAAS,EAAM,EAACjd,SACpExI,EAAMwB,KAAKqR,aAEf7S,EAAMa,IAAI6N,iBACPpG,eAAAgX,WAAA,CAAA9W,SAAA,CACIpH,cAAC6V,KAAI,CAAC1O,UAAU,aAAa2O,GAAG,YAAYvO,QAAS,kBAAM8c,GAAS,EAAM,EAACjd,SACtExI,EAAMwB,KAAKgU,WAEhBpU,cAAC6V,KAAI,CAAC1O,UAAU,aAAa2O,GAAG,UAAUvO,QAAS,kBAAM8c,GAAS,EAAM,EAACjd,SACpExI,EAAMwB,KAAK0N,aAItBlP,EAAMa,IAAI6N,iBAAmB1O,EAAMa,IAAIqU,QACrC9T,cAAAke,WAAA,CAAA9W,SACIpH,cAAC6V,KAAI,CAAC1O,UAAU,aAAa2O,GAAG,kBAAkBvO,QAAS,kBAAM8c,GAAS,EAAM,EAACjd,SAC5ExI,EAAMwB,KAAKskB,mBAIvB9lB,EAAMa,IAAI2R,OACPlK,eAAAgX,WAAA,CAAA9W,SAAA,CACApH,cAAA,MAAImH,UAAU,UACdnH,cAAC6V,KAAI,CAAC1O,UAAU,aAAa2O,GAAG,cAAcvO,QAAS,kBAAM8c,GAAS,EAAM,EAACjd,SACxExI,EAAMwB,KAAK+T,aAEhBnU,cAAC6V,KAAI,CAAC1O,UAAU,aAAa2O,GAAG,mBAAmBvO,QAAS,kBAAM8c,GAAS,EAAM,EAACjd,SAC7ExI,EAAMwB,KAAK2e,YAEhB/e,cAAC6V,KAAI,CAAC1O,UAAU,aAAa2O,GAAG,eAAevO,QAAS,kBAAM8c,GAAS,EAAM,EAACjd,SACzExI,EAAMwB,KAAKwS,aAInBhU,EAAMa,IAAI6N,iBAAmB1O,EAAMa,IAAI2R,OACpCpR,cAAC6V,KAAI,CAAC1O,UAAU,aAAa2O,GAAG,aAAavO,QAAS,kBAAM8c,GAAS,EAAM,EAACjd,SACvExI,EAAMwB,KAAK+gB,aAGlBviB,EAAMa,IAAI6N,iBAAmB1O,EAAMa,IAAIqU,QACrC5M,eAAAgX,WAAA,CAAA9W,SAAA,CACIpH,cAAA,MAAImH,UAAU,UACdnH,cAAA,OAAKmH,UAAU,aAAaI,QAAS,kBAjErD8c,GAAS,GACTzlB,EAAMa,IAAIyZ,SACVtC,SAASpC,OAAS,WAClBoC,SAASpC,OAAS,iBAClBoC,SAASpC,OAAS,kBA6DiD,EAACpN,SAC/CxI,EAAMwB,KAAK8Y,aAItBta,EAAMa,IAAI6N,kBAAoB1O,EAAMa,IAAIqU,QACtC9T,cAAAke,WAAA,CAAA9W,SACIpH,cAAC6V,KAAI,CAAC1O,UAAU,aAAa2O,GAAG,kBAAkBvO,QAAS,kBAAM8c,GAAS,EAAM,EAACjd,SAC5ExI,EAAMwB,KAAKiU,YAMxC,E,qBClFesQ,OAzBf,SAAgB/lB,GACZ,IAAA2F,EAAgCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAxC2f,EAAQzf,EAAA,GAAE0f,EAAW1f,EAAA,GAUhC,OACIzE,cAAAke,WAAA,CAAA9W,SACIF,eAAA,OAAKjH,GAAG,SAASkH,UAAU,SAAQC,SAAA,CAC/BpH,cAAA,OAAKmH,UAAU,QAAOC,SACjBwd,YAAW5kB,cAAA,MAAAoH,SAAKxI,EAAMwB,KAAiB,aAAYJ,cAAA,MAAAoH,SAAKxI,EAAMwB,KAAgB,cAEnFJ,cAAA,OAAKmH,UAAU,OAAOI,QAdd,WACZ,IAAMsd,EAAWjO,SAASgC,eAAe,UAAUkM,MAAMD,SACzDtlB,QAAQC,IAAI,YACZD,QAAQC,IAAIqlB,GACZtlB,QAAQC,IAAIoX,SAASgC,eAAe,UAAUkM,MAAMC,OACpDZ,GAAaD,EACjB,EAQ+C9c,SACnCpH,cAACglB,KAAQ,CAAC7d,UAAU,MAAMU,SAAS,QAAQC,GAAI,CAAEC,MAAO,eAE5D/H,cAACikB,GAAQ,CAAC7jB,KAAMxB,EAAMwB,KAAMX,IAAKb,EAAMa,IAAKykB,SAAUA,QAIlE,ECFMzkB,GAAM,IAAI2hB,GACV7M,GAAU,IAAIyO,GAEdiC,GAAa,CAAC,EAChBC,GAAS,GA0LEC,OAzLf,WAGI,IAAA5gB,EAAsCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA9CmE,EAAWjE,EAAA,GAAEgO,EAAchO,EAAA,GAClCI,EAA4BL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAApCiP,EAAMhP,EAAA,GAAEsgB,EAAStgB,EAAA,GACxBG,EAA4BT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAAjCyN,EAAMxN,EAAA,GAAEyN,EAASzN,EAAA,GACxBO,EAAmEC,YAASpC,GAA3D+hB,EAAW5f,EAApBG,QAA6B0f,EAAS7f,EAAhBO,MAAwBuf,EAAQ9f,EAAdK,KAChD0f,EAAyE9f,YAAStB,GAAjEqhB,EAAaD,EAAtB5f,QAA+B8f,EAAWF,EAAlBxf,MAA0B2f,EAAUH,EAAhB1f,KACpDG,EAA+EC,YAAahD,GAAWiD,EAAAzB,YAAAuB,EAAA,GAAhG2f,EAAQzf,EAAA,GAAAE,EAAAF,EAAA,GAAa0f,EAAWxf,EAApBT,QAA6BkgB,EAASzf,EAAhBL,MAAwB+f,EAAQ1f,EAAdP,KAC3DoN,EAAuChN,YAAaxC,EAAY,CAAE,UAAa,CAAE,IAAOgP,KAAWS,EAAAzO,YAAAwO,EAAA,GAA5FF,EAAQG,EAAA,GAAUF,EAAQE,EAAA,GAAdrN,KA2HnB,SAASkgB,IAEL,IAAM7P,EAAOjV,EACbiV,EAAKK,KAAOJ,KAAMK,KAAKC,QACvBP,EAAKY,OAASkO,GAAWxK,gBACzBtE,EAAK/U,UAAY,IACjB+U,EAAKa,QAAU,GACfZ,KAAMc,KAAK+N,GAAWxK,gBAAiBtE,EAC3C,CAEA,SAAS8P,EAAUnS,GACfvU,QAAQC,IAAI,6BAA+BC,GAAIqU,QAC/CvU,QAAQC,IAAIC,GAAIsU,UAChBqR,EAAU3lB,GAAIqU,OAClB,CAEA,OAzIAjV,qBAAU,WACmB,SAAAC,IA+BxB,OA/BwBA,EAAAC,YAAAC,cAAAC,MAAzB,SAAAC,IAAA,IAAAgnB,EAAAC,EAAArb,EAAA,OAAA9L,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAgBI,IAASwL,KAfTvL,QAAQC,IAAI,kBACZ0lB,IAAkB,wBAClB3lB,QAAQC,IAAI4mB,+LAAYC,UACxB9mB,QAAQC,IAAI4mB,+LAAYE,aAClBJ,EAAOK,UAAUC,UACvBjnB,QAAQC,IAAI0mB,GACRC,EAAK,CAAC,EAGNA,EAFAD,EAAKplB,OAAQ,IAAMolB,EAAK,GAAG7H,cAAcxP,SAAS,OAASqX,EAAK,GAAG7H,cAAcxP,SAAS,OAErFzO,GAAKqmB,GAILrmB,GAAKsmB,GAIVzB,GAAWna,GAAOqb,EAAGrb,GACxB,OAAA1L,EAAAE,KAAA,GAEKG,GAAIknB,eAAe,KAAD,GAEpB,cAAepS,GAAQC,QAAwC,SAA7BD,GAAQC,OAAO1B,YAEjDvT,QAAQC,IAAI,eAAiB+U,GAAQC,OAAO8L,SAC5C3N,EAAU4B,GAAQC,OAAO8L,SACzB/gB,QAAQC,IAAI+U,GAAQC,OAAOoS,SAC3B5T,KAEJP,GAAe,GAAM,yBAAArT,EAAAQ,OAAA,GAAAV,EAAA,MACxBW,MAAA,KAAAC,UAAA,EAhCkB,WACMhB,EAAAe,MAAC,KAADC,UAAA,CAgCzBC,EACJ,GAAG,CAACiT,IAEJnU,qBACI,WACIU,QAAQC,IAAI,oBACPyT,IAKL1T,QAAQC,IAAI,eAAiB+U,GAAQC,OAAOqS,UAC5CtnB,QAAQC,IAAIyT,GACRsB,GAAQC,OAAOqS,UAAYtS,GAAQ+B,WAAWrD,EAAUsB,GAAQC,OAAOqS,YAEvEtnB,QAAQC,IAAI,kBACZC,GAAI4U,MAAMpB,EAASsD,OAK3B,GAAG,CAACtD,IAERpU,qBACI,WACIU,QAAQC,IAAI,sBACZ0lB,GAASA,GAAS,yBAA2BG,EAAc,IAAMC,EAAY,OAC7E/lB,QAAQC,IAAI6lB,GACZ9lB,QAAQC,IAAI8lB,GACRC,IAEAhmB,QAAQC,IAAI,kBACZ0lB,IAAkB,wBAElBzlB,GAAIqnB,QAAQvB,EAASwB,OACjBtnB,GAAIiJ,aACJsd,IAEZ,GAAG,CAACX,EAAaC,EAAWC,IAGhC1mB,qBACI,WACIU,QAAQC,IAAI,sBACZ0lB,IAAkB,4BAClB3lB,QAAQC,IAAIqmB,GACZtmB,QAAQC,IAAIsmB,GACRC,IAEAxmB,QAAQC,IAAI,kBACZ0lB,IAAkB,wBAElBzlB,GAAIunB,QAAQjB,EAASlb,OACjBpL,GAAIiJ,aACJsd,IAEZ,GAAG,CAACH,EAAaC,EAAWC,IAGhClnB,qBACI,WAMI,GALAU,QAAQC,IAAI,wBACZ0lB,IAAkB,8BAElB3lB,QAAQC,IAAImmB,GACZpmB,QAAQC,IAAIkJ,GACPid,GAAejd,IAGpBnJ,QAAQC,IAAI,yBACZ0lB,IAAkB,+BAClB3lB,QAAQC,IAAImmB,EAAWnY,YACvB/N,GAAIwnB,cAActB,EAAWnY,aAExB/N,GAAI6N,iBACT,CACI/N,QAAQC,IAAI,qDACZomB,IACA,IAAMzP,EAAOjV,EACbiV,EAAKK,KAAOJ,KAAMK,KAAKyQ,QACvB/Q,EAAK/U,WAAY,EACjB+U,EAAKa,QAAUhU,EACfoT,KAAMxQ,QAAQqf,GAAWrf,QAASuQ,GAClC1W,GAAI0nB,eAAelB,EACvB,CACJ,GAAG,CAACR,EAAeC,EAAaC,EAAYC,EAAUld,IAoB1D1I,cAAConB,KAAM,CAAAhgB,SACHF,eAAA,OAAKC,UAAU,MAAKC,SAAA,CAChBpH,cAAA,OAAAoH,SACIpH,cAACqnB,KAAc,CACXC,aAAW,EACXhmB,cAAY,EACZimB,KAAK,EACL/lB,WAAS,EACTD,cAAY,EACZimB,kBAAkB,EAClBC,WAAYC,KACZC,MAAO,OAGf3nB,cAAC2kB,GAAM,CAACllB,IAAKA,GAAKW,KAAM6kB,KACxB/d,eAAC0gB,IAAM,CAAAxgB,SAAA,CACHpH,cAAC6nB,IAAK,CAACC,KAAK,IAAIC,QAAS/nB,cAACrB,EAAI,CAACc,IAAKA,GAAKW,KAAM6kB,OAC/CjlB,cAAC6nB,IAAK,CAACC,KAAK,UAAUC,QAAS/nB,cAACsE,EAAM,CAAC7E,IAAKA,GAAKW,KAAM6kB,OACvDjlB,cAAC6nB,IAAK,CAACC,KAAK,eAAeC,QAAS/nB,cAAC2I,GAAM,CAAClJ,IAAKA,GAAKW,KAAM6kB,OAC5DjlB,cAAC6nB,IAAK,CAACC,KAAK,kBAAkBC,QAAS/nB,cAACoS,GAAc,CAACmC,QAASA,GAAS9U,IAAKA,GAAKW,KAAM6kB,GAAYnR,OAAQA,MAC7G9T,cAAC6nB,IAAK,CAACC,KAAK,mBAAmBC,QAAS/nB,cAACgoB,GAAU,CAACzT,QAASA,GAAS9U,IAAKA,GAAKW,KAAM6kB,OACtFjlB,cAAC6nB,IAAK,CAACC,KAAK,YAAYC,QAAS/nB,cAAC4X,GAAQ,CAACrD,QAASA,GAAS9U,IAAKA,GAAKW,KAAM6kB,OAC7EjlB,cAAC6nB,IAAK,CAACC,KAAK,UAAUC,QAAS/nB,cAAC4b,GAAM,CAACrH,QAASA,GAAS9U,IAAKA,GAAKW,KAAM6kB,OACzEjlB,cAAC6nB,IAAK,CAACC,KAAK,mBAAmBC,QAAS/nB,cAACioB,GAAe,CAAC1T,QAASA,GAAS9U,IAAKA,GAAKW,KAAM6kB,OAC3FjlB,cAAC6nB,IAAK,CAACC,KAAK,eAAeC,QAAS/nB,cAACye,GAAW,CAAClK,QAASA,GAAS9U,IAAKA,GAAKW,KAAM6kB,OACnFjlB,cAAC6nB,IAAK,CAACC,KAAK,aAAaC,QAAS/nB,cAACihB,GAAS,CAAC1M,QAASA,GAAS9U,IAAKA,GAAKW,KAAM6kB,UAGnF/d,eAAA,MAAAE,SAAA,CAAI,KACGgf,eAKnB,EC5Me8B,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvX,MAAK,SAAAX,GAAkD,IAA/CmY,EAAMnY,EAANmY,OAAQC,EAAMpY,EAANoY,OAAQC,EAAMrY,EAANqY,OAAQC,EAAMtY,EAANsY,OAAQC,EAAOvY,EAAPuY,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACV,GAEJ,E,kDCIMO,GAAS,aACTC,GAAU,iDAAA3a,OAAoD0a,GAAM,YACpEE,GAAM,IAAIC,KAAUH,IAE1B,SACeI,KAAmB,OAAAC,GAAAlpB,MAAC,KAADC,UAAA,CAiBlC,SAAAipB,KAFC,OAEDA,GAAAhqB,YAAAC,cAAAC,MAjBA,SAAAoN,IAAA,OAAArN,cAAAG,MAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,UAESspB,GAAII,YAAY,CAAD3b,EAAA/N,KAAA,eAAA+N,EAAA/N,KAAA,EAGVspB,GAAIvU,MAAMwU,KAAkBI,aAAa,KAAD,EAAA5b,EAAA/N,KAAA,sBAAA+N,EAAA/N,KAAA,EAKxCspB,GAAII,YAAYE,qBAAqB,KAAD,SAAA7b,EAAAU,OAAA,SAIvC6a,GAAII,YAAYG,aAAW,wBAAA9b,EAAAzN,OAAA,GAAAyM,EAAA,MACrCxM,MAAA,KAAAC,UAAA,CAGD,IAAMspB,GAAS,IAAIC,KAAa,CAC5BC,KAAM,IAAIC,KAAS,CACfC,IAAKb,GAILc,MAAM,SAADC,GAAA,SAAAD,EAAAtd,EAAAkE,GAAA,OAAAqZ,EAAA7pB,MAAA,KAAAC,UAAA,QAAA2pB,EAAA/iB,SAAA,kBAAAgjB,EAAAhjB,UAAA,EAAA+iB,CAAA,CAAC,CAAD,eAAAvZ,EAAAnR,YAAAC,cAAAC,MAAE,SAAAC,EAAOsqB,EAAKG,GAAO,IAAAR,EAAA,OAAAnqB,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACIwpB,KAAsB,KAAD,EACS,OADlDK,EAAW/pB,EAAAyO,KACjB8b,EAAQtP,QAAQuP,cAAa,UAAA5b,OAAamb,GAAc/pB,EAAA2O,OAAA,SACjD0b,MAAMD,EAAKG,IAAQ,wBAAAvqB,EAAAQ,OAAA,GAAAV,EAAA,KAC7B,gBAAA2qB,EAAAC,GAAA,OAAA5Z,EAAArQ,MAAA,KAAAC,UAAA,EAJI,MAMTiqB,MAAO,IAAIC,OAGfC,IAASlT,OACP/W,cAAC2V,IAAMuU,WAAU,CAAA9iB,SACfpH,cAACmqB,KAAc,CAACf,OAAQA,GAAOhiB,SAC7BpH,cAACmlB,GAAG,QAGRvO,SAASgC,eAAe,SAM1BsP,I","file":"static/js/main.9e5e8bb1.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./Home.css\";\r\n\r\nfunction Home(props) {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Home\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (<div id=\"home\" dangerouslySetInnerHTML={{__html:props.text.homeText}}></div>);\r\n}\r\n\r\nexport default Home;\r\n","export const SEARCH_PER_SCREEN = 10;\r\nexport const MAX_SEARCH_ENTRY = 500;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n\r\nexport const getUserState = function(text, state) {\r\n    if (state === \"0\" || state === 0)\r\n        return text.normal;\r\n    else if (state === \"1\" || state === 1)\r\n        return text.overDue;\r\n    else if (state === \"2\" || state === 2)\r\n        return text.stopped;\r\n}\r\n\r\nexport const getBookState = function(text, state) {\r\n    console.log(\"Book state \" + state);\r\n    switch (state)\r\n    {\r\n        case \"0\":\r\n        case 0:\r\n            return text.available;\r\n        case \"1\":\r\n        case 1:\r\n            return text.checkedOut;\r\n        case \"2\":\r\n        case 2:\r\n            return text.reserved;\r\n        case \"3\":\r\n        case 3:\r\n            return text.overDue;\r\n        case \"4\":\r\n        case 4:\r\n            return text.lost;\r\n        case \"5\":\r\n        case 5:\r\n            return text.damaged;\r\n        case \"6\":\r\n        case 6:\r\n            return text.given;\r\n        case \"7\":\r\n        case 7:\r\n        default:\r\n            return text.notAvailable;\r\n        case \"8\":\r\n        case 8:\r\n            return text.deleted;\r\n    }\r\n}\r\n\r\nexport const compareRent = function(a1, a2)\r\n{\r\n    if (a1.rentDate > a2.rentDate)\r\n        return true;\r\n    else if (a1.rentDate < a2.rentDate)\r\n        return false;\r\n    return a1.title > a2.title;\r\n}\r\n\r\nexport const toUtf8 = function(text) {\r\n    return unescape(encodeURIComponent(text));\r\n};\r\n\r\nexport const fromUtf8 = function(text) {\r\n    return decodeURIComponent(escape(text));\r\n};\r\n\r\nexport const loadingId = \"custom-loading-id\";\r\nexport const loggingId = \"custom-logging-id\";\r\n","import gql from \"graphql-tag\";\n\nexport const BOOK_QUERY = gql`\n    query AllBook{\n        books (sortBy: TITLE_ASC, limit:20000) {\n            _id\n            author\n            title\n            claim_num\n            num\n            series\n            category\n            claim\n            publisher\n            seqnum\n        }\n    }\n`;\n\nexport const RENT_QUERY = gql`\n    query AllRent{\n        rents (limit:20000) {\n            _id\n            book_id\n            user_id\n            rent_date\n            return_date\n            state\n        }\n    }\n`;\n\nexport const USERS_QUERY = gql`\n    query AllUser {\n        users (limit: 20000) {\n            _id\n            name\n            state\n            level\n        }\n    }`;\n\nexport const USER_QUERY = gql`\n    query FindUser($_id: String!){\n        user (query: {_id:$_id}) {\n            _id\n            name\n            state\n            level\n            encrypted_email\n            encrypted_phone\n        }\n    }`;\n\nexport const HISTORY_QUERY = gql`\n    query findLogs($user_id: String!){\n        rentLogs (limit: 20000, query: {user_id: $user_id}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_data\n            user_id\n        }\n    }`;\n\nexport const HISTORY_PERIOD_QUERY = gql`\n    query findLogs ($fromTime: String!, $toTime: String!) {\n        rentLogs(limit: 20000, query: {AND: [{timestamp_gte: $fromTime}, {timestamp_lt: $toTime}]}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_data\n            user_id\n        }\n    }`;\n\nexport const NOTICE_QUERY = gql`\n    query GetNotices {\n        notices (sortBy: _ID_DESC, limit:20000) {\n            _id\n            date\n            title\n        }\n    }`;\n\nexport const CONTENT_QUERY = gql`\n    query GetContent ($_id: String!) {\n        notice (query: {_id: $_id}) {\n            _id\n            date\n            title\n            content\n        }\n    }`;\n\nexport const SERVER_QUERY = gql`\n    query GetServerInfo {\n        serverInfo {\n            _id\n            globalIp\n            localIp\n            port\n        }\n    }`;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { SEARCH_PER_SCREEN } from \"../Util\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport {NOTICE_QUERY, CONTENT_QUERY} from \"../api/query.js\";\r\n\r\nfunction Notice(props) {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(-1);\r\n    const { loading: noticeLoading, data: noticeData, error: noticeError } = useQuery(NOTICE_QUERY);\r\n    const [loadSelected, { loading: selectedLoading, data: selectedData, error: selectedError}] = useLazyQuery(CONTENT_QUERY,\r\n            {\"variables\": {\"_id\": selectedId}});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Notice\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Notice\");\r\n//            console.log(noticeData);\r\n//            console.log(noticeError);\r\n//            console.log(noticeLoading);\r\n            if (noticeData)\r\n            {\r\n                setSearchResults(noticeData.notices);\r\n            }\r\n        }, [noticeData, noticeError, noticeLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Content\");\r\n//            console.log(selectedData);\r\n//            console.log(selectedError);\r\n//            console.log(selectedLoading);\r\n            if (selectedData)\r\n            {\r\n//                setSearchResults(selectedData.content);\r\n            }\r\n        }, [selectedData, selectedError, selectedLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n            console.log(\"Page num \" + pageNum.toString() + \" \");\r\n            console.log(length);\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n//           console.log(displayedCodes);\r\n        }, [displayedCodes]\r\n    );\r\n\r\n    const selectEntry = (id) => {\r\n        console.log(\"selected \" + id.toString());\r\n        if (selectedId === id)\r\n        {\r\n            setSelectedId(-1);\r\n        }\r\n        else\r\n        {\r\n            setSelectedId(id);\r\n        }\r\n        loadSelected();\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n//        console.log(result);\r\n        return (\r\n                <tr className=\"\" key={result._id}>\r\n                    <td className=\"\"> {result.date} </td>\r\n                    <td className=\"noticeEntry\" colSpan=\"2\" onClick={() => selectEntry(result._id)}> {result.title}</td>\r\n                </tr>\r\n        );\r\n    }\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (searchResults.length > (pageNum + 1) * SEARCH_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div id=\"notice\">\r\n                <div id=\"title\">\r\n                    <h2>\r\n                        {props.text.notice}\r\n                    </h2>\r\n                </div>\r\n                {selectedId > 0 && selectedData &&\r\n                <div id=\"noticeContent\">\r\n                    <table className=\"content\"><tbody>\r\n                           {showEntry(selectedData.notice)}\r\n                        <tr>\r\n                            <td className=\"content\" colSpan=\"3\">\r\n                                {selectedData.notice.content}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                </div>\r\n                }\r\n                <div id=\"noticeList\">\r\n                    <table><tbody>\r\n                       {displayedCodes.length > 0 && displayedCodes.map((result) => showEntry(result))}\r\n                    </tbody></table>\r\n                </div>\r\n                {searchResults.length > SEARCH_PER_SCREEN && (\r\n                    <div id=\"pageControl\">\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={movePrev}/>\r\n                        </div>\r\n                        <div className=\"pageNum\" id=\"pageNum\">\r\n                            {pageNum+1}\r\n                        </div>\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateNextIcon fontSize=\"large\" sx={{color: (searchResults.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={moveNext}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default Notice;\r\n","import { useEffect, useState } from \"react\";\nimport { SEARCH_PER_SCREEN } from \"./Util\";\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\n\nfunction doNothing() {\n    console.log(\"Do nothing...\");\n}\n\nvar showCallback = doNothing;\nfunction ListView(props) {\n        const [itemList, setItemList] = useState([]);\n//        const [showCallback, setShowCallback] = useState(doNothing);\n        const [pageNum, setPageNum] = useState(0);\n        const [displayList, setDisplayList] = useState([]);\n\n    useEffect(function () {\n        console.log(\"Init List View\");\n    }, []);\n\n    useEffect(function () {\n//        console.log(\"Set Item List\");\n        setItemList(props.list);\n    }, [props.list]);\n\n    useEffect(function () {\n        setPageNum(0);\n    }, [props.keyValue]);\n\n    useEffect(function () {\n        if (props.showCallback)\n        {\n//            console.log(\"Set show callback\");\n //           setShowCallback(props.showCallback);\n            showCallback = props.showCallback;\n        }\n    }, [props.showCallback]);\n\n    useEffect(function () {\n        const length = itemList.length;\n //       console.log(\"Page num \" + pageNum.toString());\n        if (length > SEARCH_PER_SCREEN)\n        {\n            const startIdx = pageNum * SEARCH_PER_SCREEN;\n            const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\n            setDisplayList(itemList.slice(startIdx,startIdx+count));\n        }\n        else\n        {\n            setDisplayList(itemList)\n        }\n    }, [itemList, pageNum]);\n\n    function movePrev() {\n        console.log(\"Prev\");\n        if (pageNum > 0)\n        {\n            setPageNum(pageNum - 1);\n        }\n    }\n\n    function moveNext() {\n        console.log(\"Next\");\n        if (itemList.length > (pageNum + 1) * SEARCH_PER_SCREEN)\n        {\n            setPageNum(pageNum + 1);\n        }\n    }\n\n    return (\n        <div id=\"listView\">\n            {showCallback(displayList, props.detail)}\n            {itemList && itemList.length > SEARCH_PER_SCREEN && (\n                <div id=\"pageControl\">\n                    <div className=\"page\" id = \"page\">\n                        <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={() => {movePrev();} }/>\n                    </div>\n                    <div className=\"pageNum\" id=\"pageNum\">\n                        {pageNum+1}\n                    </div>\n                    <div className=\"page\" id = \"page\">\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: (itemList.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={() => {moveNext();} }/>\n                    </div>\n                </div>)\n            }\n        </div>\n    );\n}\nexport default ListView;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { MAX_SEARCH_ENTRY, getBookState, toUtf8 } from \"../Util\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ListView from \"../ListView\";\r\n\r\nlet initialized = false;\r\n\r\nfunction Search(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(inputText, 300);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n\r\n    const [bookList, setBookList] = useState([]);\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    const [bookState, setBookState] = useState(0);\r\n    const bookStateRef = useRef(0);\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const needConfirmRef = useRef(false);\r\n\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"BOOK ID: \" + id);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setInputText(id);\r\n            }\r\n            else\r\n            {\r\n                setInputText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findBooks(text) {\r\n                let results = [];\r\n\r\n                if (props.doc.serverAvailable)\r\n                {\r\n                    console.log(toUtf8(text));\r\n                    console.log(btoa(toUtf8(text)));\r\n                    const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                        props.doc.serverInfo.port + \"/book\";\r\n                    const obj = {\"params\": {\"book\": btoa(toUtf8(text)), \"match\":false}};\r\n                    console.log(\"=======================\");\r\n                    console.log(\"Request book list\");\r\n                    console.log(obj);\r\n                    const response = await axios.get(url, obj);\r\n                    console.log(response)\r\n                    if (!(\"books\" in response.data.return))\r\n                        return results;\r\n                    const books = response.data.return.books;\r\n                    let retDate = \"\";\r\n                    for (let i = 0 ; i < books.length ; i++)\r\n                    {\r\n                        const book = books[i];\r\n                        const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                        const state = book._STATE;\r\n                        if (state === 1 || state === 3)\r\n                        {\r\n                            retDate = props.text.returnDate + \" \" + book._RETURN;\r\n                        }\r\n                        let resultObject = {\r\n                            index: i,\r\n                            text: resultString,\r\n                            name: book.BOOKNAME,\r\n                            code: book.BARCODE,\r\n                            rent: getBookState(props.text, book._STATE.toString()),\r\n                            retDate: retDate,\r\n                            author: book.AUTHOR,\r\n                            totalName: book.TOTAL_NAME,\r\n                            claim_num: book.CLAMENUM,\r\n                            publish: book.PUBLISH,\r\n                            claim: book.CLAIM,\r\n                            state: book._STATE\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n\r\n                    for (let i = 0 ; i < bookList.length ; i++) {\r\n                        const row = bookList[i];\r\n                        if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                        if ((row.name && row.name.toString().includes(text)) ||\r\n                            (row.code === text))\r\n                        {\r\n                            let resultString = `${row.name} ${row.claim_num}`;\r\n                            let retDate = \"\";\r\n                            let state = \"0\";\r\n                            for (const entry of rentList)\r\n                            {\r\n                                if (entry.code === row.code)\r\n                                {\r\n                                    state = entry.state;\r\n                                    if (state === \"1\" || state === \"3\")\r\n                                    {\r\n                                        retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                            let resultObject = {\r\n                                index: i,\r\n                                text: resultString,\r\n                                name: row.name,\r\n                                code: row.code.toString(),\r\n                                rent: getBookState(props.text, state),\r\n                                retDate: retDate,\r\n                                author: row.author,\r\n                                totalName: row.totalName,\r\n                                claim_num: row.claim_num,\r\n                                publish: row.publish,\r\n                                claim: row.claim,\r\n                                state: parseInt(state)\r\n                            };\r\n                            results.push(resultObject);\r\n                        }\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a['text'] > b['text']; });\r\n                return results;\r\n            }\r\n            async function query() {\r\n                console.log(\"Refresh\");\r\n                if (searchQuery) {\r\n                    let sr = await findBooks(searchQuery);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        selectedRef.current = sr[0].code;\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, bookList, rentList, props, queryRequest]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        initialized = true;\r\n\r\n        let rl = [];\r\n        const rented = props.doc.rent;\r\n        for (let i = 0 ; i < rented.length; i++)\r\n        {\r\n           rl.push({code:rented[i].book_id, retDate:rented[i].return_date, state:rented[i].state});\r\n        }\r\n        setRentList(rl);\r\n\r\n        let bl = [];\r\n        const books = props.doc.book\r\n        for (const key in books)\r\n        {\r\n           const book = books[key];\r\n           bl.push({code: book._id, name: book.title, num: book.num, author: book.author, claim: book.claim,\r\n                    claim_num: book.claim_num, totalName: book.series, category: book.publisher, publish: book.publisher});\r\n        }\r\n        console.log(\"Load\");\r\n        console.log(books.length);\r\n        setBookList(bl);\r\n    }\r\n\r\n    const selectId = async (code) => {\r\n        console.log(\"Prev \" + selectedRef.current);\r\n        if (selectedRef.current === -1 || selectedRef.current !== code)\r\n        {\r\n            console.log(\"Select \" + code);\r\n            setSelectedId(code);\r\n            selectedRef.current = code;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + code);\r\n            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n        }\r\n    }\r\n\r\n    function setState(state)\r\n    {\r\n        console.log(\"Set state \" + state.toString());\r\n        needConfirmRef.current = true;\r\n        setNeedConfirm(true);\r\n        setBookState(state);\r\n        bookStateRef.current = state;\r\n        console.log(selectedId.toString() + needConfirmRef.current);\r\n    }\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n\r\n        const ipAddr = props.doc.serverInfo.localIp;\r\n        const portNum = props.doc.serverInfo.port;\r\n        if (ipAddr.length === 0 || portNum <= 0)\r\n            return;\r\n\r\n        const url = \"https://\" + ipAddr + \":\" +\r\n            portNum + \"/book\";\r\n        var obj = {};\r\n        obj[\"book\"] = selectedRef.current;\r\n        obj[\"state\"] = bookStateRef.current;\r\n        console.log(\"=======================\");\r\n        console.log(\"Change book state\");\r\n        console.log(obj);\r\n        await axios.post(url, obj).then( response => {\r\n            console.log(response);\r\n        });\r\n\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n        const hidden = (result.code !== selectedRef.current);\r\n        const entryId = (hidden) ? \"searchResult\" : \"selectedSearchResult\";\r\n        const flags = [false, false, false, false, false, false, false, false, false, false]\r\n        flags[result.state] = true;\r\n        if (result.state === 1 || result.state === 2 || result.state === 3)\r\n            flags[0] = true;\r\n        if (!hidden)\r\n            console.log(flags)\r\n        return (\r\n            <div key={result.code}>\r\n            <div id={entryId} onClick={async () => await selectId(result.code)}>\r\n                <table><tbody>\r\n                    <tr className=\"searchTr\">\r\n                        <td className=\"searchTitle\"> {result.text}</td>\r\n                        <td className=\"searchRent\"> {result.rent} </td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {!hidden &&\r\n            <div>\r\n                <table><tbody>\r\n                <tr>\r\n                    <td>{result.author} </td>\r\n                    <td colSpan=\"2\" rowSpan=\"2\">{result.totalName} <b>{result.name}</b> { result.claim_num} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.code} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.publish}</td>\r\n                    <td colSpan={result.retDate.length > 0 ? \"1\":\"2\"}>{result.claim} </td>\r\n                    {result.retDate.length > 0 && <td>{result.retDate}</td> }\r\n                </tr>\r\n                </tbody></table>\r\n                <div hidden={!props.doc.serverAvailable || !props.doc.admin}>\r\n                    <button className=\"bookStates\" id = \"0\" disabled={flags[0]} onClick={() => setState(0)}> {props.text.available} </button>\r\n                    <button className=\"bookStates\" id = \"4\" disabled={flags[4]} onClick={() => setState(4)}> {props.text.lost} </button>\r\n                    <button className=\"bookStates\" id = \"5\" disabled={flags[5]} onClick={() => setState(5)}> {props.text.damaged} </button>\r\n                    <button className=\"bookStates\" id = \"6\" disabled={flags[6]} onClick={() => setState(6)}> {props.text.given} </button>\r\n                    <button className=\"bookStates\" id = \"7\" disabled={flags[7]} onClick={() => setState(7)}> {props.text.notAvailable} </button>\r\n                    <button className=\"bookStates\" id = \"8\" disabled={flags[8]} onClick={() => setState(8)}> {props.text.deleted} </button>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirmRef.current}>\r\n                    <div id=\"bookName\"> {getBookState(props.text, bookStateRef.current)} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n            </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function showEntries(results)\r\n    {\r\n        console.log(\"Redraw \" + needConfirmRef.current);\r\n        return results.map((result) => showEntry(result))\r\n    }\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <div id=\"title\">\r\n                <h2> {props.text.bookSearch} </h2>\r\n            </div>\r\n            <div id=\"searchContents\">\r\n                <input id=\"searchInput\"\r\n                    placeholder={props.text.searchBook}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n            </div>\r\n            <ListView keyValue={searchQuery} list={searchResults} detail={selectedId + needConfirm} showCallback={(entries, detail) => { return showEntries(entries); }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, compareRent } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USER_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction CheckOutStatus(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [expireDate, setExpireDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOutStatus initialize\");\r\n\r\n\r\n            if (\"autoLogin\" in props.context.cookie)\r\n            {\r\n                const autoLogin = (props.context.cookie.autoLogin === \"true\") ? true : false;\r\n                setAutoLogin(autoLogin);\r\n            }\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            setExpireDate(date.toGMTString());\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.doc.logged]\r\n    );\r\n\r\n    useEffect(() => {\r\n            async function func() {\r\n                console.log(\"User data updated \");\r\n                await compare();\r\n            }\r\n            func();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n            console.log(historyData);\r\n            let hist = [];\r\n            for (let i = 0 ; i < historyData.rentLogs.length ; i++)\r\n            {\r\n                const entry = historyData.rentLogs[i];\r\n                if (entry.book_state !== \"1\")\r\n                    continue;\r\n                if (! (\"return_data\" in entry) || ! entry.return_data)\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const title = props.doc.book[id][\"title\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                const retDate = entry.return_data;\r\n                hist.push({\"id\": id, \"title\": title, \"rentDate\": date, \"retDate\": retDate});\r\n\r\n            }\r\n            hist.sort(compareRent);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.logged)\r\n        {\r\n            setState(State.LoggedIn);\r\n            const userId = props.doc.userInfo['_id'];\r\n            setUserId(userId);\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            await loadHistory();\r\n        }\r\n        else\r\n        {\r\n            setState(State.LoggedOut);\r\n            setUserId(\"\");\r\n            setPasswordText(\"\");\r\n        }\r\n\r\n        console.log(\"Set title \" + props.doc.logged)\r\n        if (props.doc.logged)\r\n        {\r\n            if (props.doc.adminMode)\r\n                setTitle(props.text.userSearch);\r\n            else\r\n                setTitle(props.text.checkOut);\r\n        }\r\n        else\r\n        {\r\n            setTitle(props.text.logIn);\r\n        }\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const toggleAutoLogin = () => {\r\n        console.log(\"Toggle autoLogin\");\r\n        const cookieString = \"autoLogin=\" + (autoLogin ? \"false\":\"true\") + \"; expires=\" + expireDate + \";\";\r\n        console.log(cookieString);\r\n        document.cookie = cookieString;\r\n        setAutoLogin(!autoLogin);\r\n    }\r\n\r\n    const showEntries = (result, retText) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{retText}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        setState(State.LoggingIn);\r\n        setUserId(userText.toUpperCase());\r\n        await loadUser();\r\n        await loadHistory();\r\n        console.log(\"Log In\");\r\n        await compare();\r\n    }\r\n\r\n    const compare = async () => {\r\n        if (!userData || state === State.LoggedOut)\r\n            return;\r\n\r\n        console.log(toast.isActive(loggingId));\r\n        const prop = toastProp;\r\n\r\n        let text;\r\n        if (props.context.checkLogIn(userData, passwordText))\r\n        {\r\n            props.doc.logIn(userData.user);\r\n\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            setState(State.LoggedIn);\r\n\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            document.cookie = \"user_id=\" + userId + \"; expires=\" + expireDate + \";\";\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.render = text;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = loggingId;\r\n        if (toast.isActive(loggingId))\r\n        {\r\n            console.log(\"update toast\");\r\n            toast.update(loggingId, prop);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"New toast\");\r\n            toast.info(text, prop);\r\n        }\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {title}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!(state !== State.LoggedIn)}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <input type=\"password\" id=\"searchPassword\"\r\n                    placeholder={props.text.pwHolder}\r\n                    value={passwordText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setPasswordText(event.target.value);\r\n                    }} />\r\n                <div id=\"autoLogin\">\r\n                    <input type=\"checkbox\" id=\"autoLoginButton\" checked={autoLogin} onChange={() => toggleAutoLogin()}/>\r\n                    <label>\r\n                            {props.text.autoLogin}\r\n                    </label>\r\n                </div>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={!(state === State.LoggedIn)}>\r\n                <div>\r\n                    { showEntries(searchResults, props.text.dueDate) }\r\n                </div>\r\n\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <ListView list={history} showCallback={(entries) => { return showEntries(entries, props.text.returnDate); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOutStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, loadingId, getUserState } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2,\r\n    LoggingOut: 3\r\n}\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 300);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [userData, setUserData] = useState({});\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOut initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n//            console.log(props.doc.serverInfo);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                axios.get(url).then( response => {\r\n                        const book = response.data.scan;\r\n                        if (book) {\r\n                            console.log(book)\r\n                            setBarcode(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            console.log(toast.isActive(loggingId));\r\n            const prop = toastProp;\r\n\r\n            let text;\r\n            let notify = false;\r\n            if (\"USER_CODE\" in userData && state !== State.LoggedIn)\r\n            {\r\n                setState(State.LoggedIn);\r\n\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                text = props.text.logInSucceed;\r\n                notify = true;\r\n            }\r\n            else if (!(\"USER_CODE\" in userData))\r\n            {\r\n                setState(State.LoggedOut);\r\n\r\n                if (state === State.LoggingIn)\r\n                {\r\n                    prop.type = toast.TYPE.ERROR;\r\n                    text = props.text.logInFail;\r\n                    notify = true;\r\n                }\r\n            }\r\n\r\n            if (notify)\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": prop.type})\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 0)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n                setBarcode(\"\")\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            console.log(\"Notification \" + notifyRequest.text)\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//            if (\"id\" in notifyRequest)\r\n//                id = notifyRequest.id\r\n\r\n//            prop.toastId = id\r\n//            if (toast.isActive(id))\r\n//                toast.update(id, notifyRequest.text, prop);\r\n//            else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (state !== State.LoggedIn)\r\n                setBarcode(userText);\r\n        }, [state, userText]\r\n    );\r\n\r\n    const updateUser = async (userText) => {\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/user?user=\" + userText;\r\n        const obj = {\"params\": {\"user\": userText, \"data\":\"nothing\"}};\r\n        console.log(obj);\r\n        const response = await axios.get(url, btoa(JSON.stringify(obj)));\r\n        const user = response.data.return;\r\n        setUserData(user);\r\n        console.log(user);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        console.log(\"LOGIN\");\r\n        console.log(userText);\r\n        if (userText.length === 0)\r\n            return;\r\n        setState(State.LoggingIn);\r\n        const id = userText.toUpperCase();\r\n        setUserId(id);\r\n        updateUser(id);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Log Out\");\r\n        setUserData({});\r\n        setUserText(\"\");\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n        document.getElementById('barcodeScan').value= null;\r\n    }\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            console.log(url)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.loading,\r\n                              \"type\": toast.TYPE.INFO})\r\n            getBase64(file).then(\r\n                img => {\r\n                    axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(response);\r\n                        console.log(book);\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.succeededToOpen,\r\n                                              \"type\": toast.TYPE.SUCCESS});\r\n                        }\r\n                        else\r\n                        {\r\n                            console.log(\"Failed\");\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR});\r\n                            setScannedBook({});\r\n                            setBarcode(\"\")\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                const bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            console.log(book.books)\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery, bookText, props.doc]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Barcode: \" + barcode);\r\n            if (barcode.length === 0)\r\n                return;\r\n            if (state !== State.LoggedIn)\r\n            {\r\n                setUserText(barcode);\r\n            }\r\n            else\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [barcode, props.doc, state]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n        document.getElementById('barcodeScan').value= null;\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/checkOut\"\r\n        axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE,\r\n                user: userId\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return\r\n            console.log(\"Rent confirmed\");\r\n            console.log(ret)\r\n\r\n            if (ret === \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.rentSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            setScannedBook({});\r\n            setBarcode(\"\")\r\n            updateUser(userId);\r\n        });\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        document.getElementById('barcodeScan').value= null;\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n//            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn ? true : false }>\r\n//            <div id=\"checkOutResult\" hidden={true}>\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.checkOut}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={state === State.LoggedIn}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn}>\r\n                {userData.USER_CODE && (\r\n                    <div id=\"userInfo\">\r\n                        <div id=\"userItem\">\r\n                            {userData.USER_CODE + \" : \" + userData.USER_NAME + props.text.nameSuffix}\r\n                        </div>\r\n                        <div id=\"userItem\"> {getUserState(props.text, userData.USER_STATE)} </div>\r\n                        <div id=\"userItem\"> {userData._RENT.length + \" \" + props.text.rentSuffix} </div>\r\n                    </div>\r\n                )}\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                    <label id=\"barcodeScan\" hidden>\r\n                        <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                        <span>\r\n                        <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                        </span>\r\n                    </label>\r\n                    <label id=\"manualInput\">\r\n                        <div id=\"hkPrefix\" hidden>\r\n                        HK\r\n                        </div>\r\n                        <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n                            placeholder={props.text.bookHolder}\r\n                            onInput={(event) => {\r\n                                setBookText(event.target.value);\r\n                            }} />\r\n                    </label>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmRent} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \": \" + scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.logOut} </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\n\r\nfunction Return(props) {\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 300);\r\n//    const [initialized, setInitialized] = useState(false);\r\n//    const [userId, setUserId] = useState(\"\");\r\n//    const [state, setState] = useState(State.LoggedOut);\r\n//    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n//                     { \"variables\": { \"_id\": userId } });\r\n//    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n//                     { \"variables\": { \"user_id\": userId } });\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            props.doc.setCallback(undefined);\r\n            console.log(\"=======================================\");\r\n            console.log(\"Return initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr && ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                axios.get(url).then( response => {\r\n                        const book = response.data.scan;\r\n                        if (book) {\r\n                            console.log(barcode + \" -> \" + book)\r\n                            setBarcode(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n*/\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                const bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery, bookText, props.doc]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"B\" + barcode);\r\n            if (barcode.length > 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [barcode, props.doc]\r\n    );\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.loading,\r\n                              \"type\": toast.TYPE.INFO})\r\n            getBase64(file).then(\r\n                img => {\r\n                    axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.succeededToOpen,\r\n                                              \"type\": toast.TYPE.SUCCESS});\r\n                        }\r\n                        else\r\n                        {\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR})\r\n                            setScannedBook({})\r\n                            setBarcode(\"\")\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 1 || scannedBook._STATE === 3)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    console.log(\"Not rented\")\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.NOT_RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                    setBarcode(\"\")\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//           if (\"id\" in notifyRequest)\r\n//               id = notifyRequest.id\r\n\r\n//           prop.toastId = id\r\n //          if (toast.isActive(id))\r\n//               toast.update(id, notifyRequest.text, prop);\r\n//           else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/return\"\r\n        axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return;\r\n            console.log(ret);\r\n            if (ret === \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.returnSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            setScannedBook({});\r\n            setBarcode(\"\")\r\n        });\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.return}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                <label id=\"barcodeScan\" hidden>\r\n                    <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                    <span>\r\n                    <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                    </span>\r\n                </label>\r\n                <label id=\"manualInput\">\r\n                    <div id=\"hkPrefix\" hidden>\r\n                        HK\r\n                    </div>\r\n                    <input inputMode=\"numeric\" pattern=\"\\d*\" type=\"text\" id=\"searchInput\"\r\n                        placeholder={props.text.bookHolder}\r\n                        onInput={(event) => {\r\n                            setBookText(event.target.value);\r\n                        }} />\r\n                </label>\r\n                </div>\r\n                <div id=\"checkReturn\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmReturn} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\" + scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n//                    <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n\r\nexport default Return;\r\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toUtf8 } from \"./Util\";\nimport \"./UserInfo.css\";\n\nfunction UserInfo(props) {\n    const [needConfirm, setNeedConfirm] = useState(false);\n    const [disabled, setDisabled] = useState(true);\n    const [userInfo, setUserInfo] = useState({});\n\n    useEffect(function() {\n        console.log(\"User Info\");\n        console.log(props.info);\n        document.getElementById('userName').value = props.info.USER_NAME;\n        document.getElementById('phone').value = props.info.PHONE_NUMBER;\n        document.getElementById('email').value = props.info.EMAIL;\n        document.getElementById('address').value = props.info.ADDRESS;\n        document.getElementById('notice_').value = props.info.NOTICE;\n        document.getElementById('user_level').value = props.info.USER_LEVEL;\n        setUserInfo({\"USER_CODE\": props.info.USER_CODE});\n        setDisabled(true);\n\n    }, [props.info]);\n\n    function setProperty(index, value)\n    {\n        console.log(index);\n        console.log(value);\n        var info = userInfo;\n        switch (index)\n        {\n        case 0:\n            info.USER_NAME = value;\n            break;\n        case 1:\n            info.PHONE_NUMBER = value;\n            break;\n        case 2:\n            info.EMAIL = value;\n            break;\n        case 3:\n            info.ADDRESS = value;\n            break;\n        case 4:\n            info.USER_LEVEL = value;\n            break;\n        case 5:\n            info.NOTICE = value;\n            break;\n        default:\n            break;\n        }\n        const length = Object.keys(info).length;\n        console.log(length);\n//        if (length >= 1 && \"USER_LEVEL\" in info && info.USER_LEVEL >= 0 && info.USER_LEVEL <= 2)\n        if (length > 1)\n            setDisabled(false);\n        setUserInfo(info);\n    }\n\n    function confirmAction()\n    {\n        console.log(\"Save modification\");\n        console.log(userInfo);\n        const ipAddr = props.doc.serverInfo.localIp;\n        const portNum = props.doc.serverInfo.port;\n        if (ipAddr.length === 0 || portNum <= 0)\n            return;\n\n        const url = \"https://\" + ipAddr + \":\" +\n            portNum + \"/user\";\n\n        var obj = {};\n        for (const key in userInfo)\n        {\n            obj[key] = btoa(toUtf8(userInfo[key]));\n        }\n        axios.post(url, obj).then( response => {\n            console.log(response);\n            props.refresh(response);\n        });\n        setNeedConfirm(false);\n    }\n\n    function cancelAction()\n    {\n        setNeedConfirm(false);\n    }\n\n    return (\n        <div>\n            <table><tbody>\n                <tr key=\"Name\">\n                    <td> {props.text.name} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"userName\" onChange={(event) => {setProperty(0, event.target.value);}} />\n                    </td>\n                </tr>\n                {\"REG_DATE\" in props.info &&\n                    <tr key=\"Register\">\n                        <td> {props.text.registeredDate} </td>\n                        <td colSpan=\"3\" className=\"data\">\n                            {props.info.REG_DATE}\n                        </td>\n                    </tr>\n                }\n                <tr key=\"Phone\">\n                    <td> {props.text.phone} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"phone\" onChange={(event) => {setProperty(1, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Email\">\n                    <td> {props.text.email} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"email\" onChange={(event) => {setProperty(2, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Address\">\n                    <td> {props.text.address} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"address\" onChange={(event) => {setProperty(3, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Notice\">\n                    <td> {props.text.notice_} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"notice_\" onChange={(event) => {setProperty(5, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Level\">\n                    <td> {props.text.level} </td>\n                    <td colSpan=\"3\" className=\"cell\">\n                        <select name=\"User Level\" id=\"user_level\" className=\"dropdown\" onChange={(event) => {setProperty(4, event.target.value);}}>\n                            <option value=\"0\"> {props.text.kid} </option>\n                            <option value=\"1\"> {props.text.adult} </option>\n                            <option value=\"2\"> {props.text.admin} </option>\n                        </select>\n                    </td>\n                </tr>\n            </tbody></table>\n           <button id=\"modify\" hidden={needConfirm} onClick={async () => setNeedConfirm(true)} disabled={disabled}> {props.text.save} </button>\n            <div id=\"checkModify\" hidden={!needConfirm}>\n                <div id=\"noticeMsg\"> {props.text.confirmSave} </div>\n                <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\n                <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\n            </div>\n        </div>\n    );\n}\nexport default UserInfo;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp, MAX_SEARCH_ENTRY, getUserState, toUtf8 } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate, useParams } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\nimport UserInfo from \"../UserInfo\";\r\nimport axios from \"axios\";\r\n\r\n//var rentList = [];\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(userText, 300);\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n//    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n    const { id } = useParams();\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n            {\r\n                return;\r\n            }\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"UserSearch initialize\");\r\n            console.log(\"User ID: \" + id);\r\n\r\n            if (!props.doc.serverAvailable)\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc(false);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n\r\n        if (notify)\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Set title \" + props.logged)\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const selectId = async (id) => {\r\n        const rent = await props.doc.getRent(id);\r\n        console.log(rent);\r\n        if (selectedRef.current === -1 || selectedRef.current !== id)\r\n        {\r\n            console.log(\"Select \" + id);\r\n//            setSelectedId(id);\r\n            selectedRef.current = id;\r\n            console.log(\"Set Rent List\");\r\n            console.log(rent)\r\n            setRentList(rent);\r\n//            rentList = rent;\r\n        }\r\n        else if (searchResults.length > 1)\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n//            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n            setRentList([]);\r\n//            rentList = [];\r\n        }\r\n    }\r\n\r\n    const showUser = (user, detail, index) => {\r\n        const key = index.toString();\r\n        return (\r\n                <div key={key}>\r\n                    <table><tbody>\r\n                        <tr key={user.id} className=\"searchTr\" onClick={async ()=> await selectId(user.id)}>\r\n                            <td className=\"bookData\">{user.id}</td>\r\n                            <td className=\"bookData\">{user.name}</td>\r\n                            <td className=\"bookData\">{user.state}</td>\r\n                            <td className=\"bookData\">{user.rent}</td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                        {user.id === selectedRef.current && showEntries(user, detail) }\r\n                </div>\r\n                );\r\n    }\r\n\r\n    const showUsers = (result, detail) => {\r\n        return (<div>\r\n                    {\r\n                        result.map((user, index) => {\r\n                            return showUser(user, detail, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 &&\r\n                        <table><tbody>\r\n                            <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                        </tbody></table>\r\n                    }\r\n                </div>);\r\n    }\r\n\r\n    const showEntries = (user, detail) => {\r\n        console.log(\"Detail\");\r\n        console.log(user);\r\n        return (<>\r\n                    {props.doc.serverAvailable &&\r\n                        <UserInfo text={props.text} doc={props.doc} info={user} refresh={refresh}/>\r\n                    }\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        detail.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        detail.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </>);\r\n    }\r\n    useEffect(\r\n        () => {\r\n            async function findUsers(text) {\r\n                let results = [];\r\n\r\n//                for (let i = 0 ; i < userList.length ; i++) {\r\n                  for (const key in userList) {\r\n                    const row = userList[key];\r\n                    if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                    if ((row.name && row.name.toString().includes(text)) ||\r\n                        (row.id.toLowerCase() === text.toLowerCase()))\r\n                    {\r\n                        results.push(row);\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a.name > b.name; });\r\n                console.log(results);\r\n                return results;\r\n            }\r\n            async function query() {\r\n                const input = userText.trim()\r\n                console.log(\"Query \" + input + \" \" + searchQuery)\r\n                if (input.length > 0 && searchQuery) {\r\n\r\n                    let sr;\r\n                    if (props.doc.serverAvailable)\r\n                    {\r\n                        console.log(\"from CLIB\")\r\n                        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/users\";\r\n                        const obj = {\"params\": {\"user\": btoa(toUtf8(input))}};\r\n                        console.log(obj);\r\n                        const response = await axios.get(url, obj);\r\n                        const users = response.data.return.data;\r\n                        console.log(response.data.return);\r\n                        sr = [];\r\n                        if (users) {\r\n                            for (const entry of response.data.return.data)\r\n                            {\r\n                                console.log(entry);\r\n                                let user = entry;\r\n                                user.id = entry.USER_CODE;\r\n                                user.name = entry.USER_NAME;\r\n                                user.state = getUserState(props.text, entry.USER_STATE);\r\n                                user.rent = entry._RENT.length;\r\n                                sr.push(user);\r\n                            }\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log(\"from DB\")\r\n                        sr = await findUsers(searchQuery);\r\n                    }\r\n\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                       selectId(sr[0].id);\r\n                   else\r\n                       selectId(0);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n       [searchQuery, props, userList, queryRequest, userText]\r\n    );\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.userSearch}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onChange={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <div>\r\n                    <ListView keyValue={searchQuery} list={searchResults} detail={rentList} showCallback={(entries, detail) => { return showUsers(entries, detail); }}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getBookState } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\nimport axios from \"axios\";\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userList]\r\n    );\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        return a1.rentDate > a2.rentDate;\r\n    }\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.serverAvailable)\r\n        {\r\n            let results = [];\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n            const obj = {\"params\": {\"user\": \"*\", \"match\":false}};\r\n//            console.log(obj);\r\n            const response = await axios.get(url, obj);\r\n//           console.log(response)\r\n//            if (!(\"books\" in response.data.return))\r\n//                return results;\r\n            const books = response.data.return.books;\r\n            let retDate = \"\";\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                const state = book._STATE;\r\n                if (state === 1 || state === 3)\r\n                {\r\n                    retDate = book.RETURN_DATE;\r\n                }\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: book.BOOKNAME,\r\n                    id: book.BARCODE,\r\n                    rent: getBookState(props.text, book.STATS.toString()),\r\n                    rentDate: book.LENT_DATE,\r\n                    retDate: retDate,\r\n                    author: book.AUTHOR,\r\n                    totalName: book.TOTAL_NAME,\r\n                    claim_num: book.CLAMENUM,\r\n                    publish: book.PUBLISH,\r\n                    claim: book.CLAIM,\r\n                    user: book.USER,\r\n                    userName: book.USER_NAME\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compare);\r\n            setRentList(results);\r\n        }\r\n        else\r\n        {\r\n\r\n            const rent = await props.doc.getRent();\r\n            console.log(\"Rent\");\r\n            console.log(rent);\r\n            rent.sort(compare);\r\n            for (const index in rent)\r\n            {\r\n                const userId = rent[index][\"user\"];\r\n                let userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                rent[index][\"userName\"] = userName;\r\n//                console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n            }\r\n            setRentList(rent);\r\n        }\r\n\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td colSpan=\"3\" className=\"bookCell\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"situation\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.situation}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue=\"\" list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { compareRent } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\nimport axios from \"axios\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n//    const [initialized, setInitialized] = useState(false);\r\n    const [fromTime, setFromTime] = useState(\"\");\r\n    const [toTime, setToTime] = useState(\"\");\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [loadHistory, {loading: historyLoading, data: historyData, error: historyError }] = useLazyQuery(HISTORY_PERIOD_QUERY,\r\n            {\"variables\": { \"fromTime\" : fromTime, \"toTime\": toTime}});\r\n    const [userList, setUserList] = useState({});\r\n    const [yearValue, setYear] = useState(0);\r\n    const [monthValue, setMonth] = useState(0);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [searchQuery] = useDebounce(query, 300);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            var i;\r\n            var option;\r\n            var year = document.getElementById('year')\r\n            var month = document.getElementById('month')\r\n            for (i = 1; i <= 12 ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                month.add(option, i);\r\n            }\r\n            const thisYear = new Date().getFullYear();\r\n            const thisMonth = new Date().getMonth() + 1;\r\n            const fromYear = 2017;\r\n\r\n            for (i = fromYear ; i <= thisYear ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                year.add(option, i);\r\n            }\r\n\r\n            console.log(thisYear);\r\n            console.log(thisMonth);\r\n            setYear(thisYear);\r\n            setMonth(thisMonth);\r\n            document.getElementById('year').value = thisYear;\r\n            document.getElementById('month').value = thisMonth;\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n//                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"History update\")\r\n\r\n            if (!historyData)\r\n                return\r\n\r\n//            console.log(historyData.rentLogs)\r\n\r\n            const books = historyData.rentLogs;\r\n            let results = [];\r\n            let retDate = \"\";\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const state = book.book_state;\r\n                if (state !== \"1\")\r\n                    continue\r\n                if (!book.return_data || book.return_data.length === 0)\r\n                    continue\r\n//                console.log(book)\r\n                const bookId = book.book_id;\r\n                const userId = book.user_id;\r\n                var userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                var bookInfo;\r\n                if (bookId in props.doc.book)\r\n                {\r\n                    bookInfo = props.doc.book[bookId];\r\n                }\r\n                else\r\n                {\r\n                    bookInfo = {}\r\n                    bookInfo.author = \"\"\r\n                    bookInfo.totalName = \"\"\r\n                    bookInfo.claim_num = \"\"\r\n                    bookInfo.publish = \"\"\r\n                    bookInfo.title = \"\"\r\n                }\r\n                const resultString = `${bookInfo.title} ${bookInfo.claim_num}`;\r\n                retDate = book.return_data;\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: bookInfo.title,\r\n                    id: bookId,\r\n                    rentDate: book.timestamp,\r\n                    retDate: retDate,\r\n                    author: bookInfo.author,\r\n                    claim_num: bookInfo.claim_num,\r\n                    publish: bookInfo.publisher,\r\n                    claim: bookInfo.claim,\r\n                    user: userId,\r\n                    userName: userName\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compareRent);\r\n//            console.log(results);\r\n            setRentList(results);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, historyLoading, historyError]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        }, [userList]\r\n    );\r\n*/\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        if (a1.rentDate > a2.rentDate)\r\n            return true;\r\n        else if (a1.rentDate < a2.rentDate)\r\n            return false;\r\n        return a1.title > a2.title;\r\n    }\r\n\r\n/*\r\n    async function updateDoc()\r\n    {\r\n        setInitialized(true);\r\n    }\r\n*/\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td colSpan=\"3\" className=\"bookCell\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n    function setProperty(index, value)\r\n    {\r\n        console.log(index);\r\n        console.log(value);\r\n        switch (index)\r\n        {\r\n            case 0:\r\n                setYear(value);\r\n                break;\r\n            case 1:\r\n                setMonth(parseInt(value));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(function () {\r\n        setQuery(yearValue.toString() + \"-\" + monthValue.toString().padStart(2, \"0\"))\r\n\r\n    }, [yearValue, monthValue]\r\n    );\r\n\r\n    useEffect(function () {\r\n        async function search()\r\n        {\r\n            console.log(\"Search\")\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/history\";\r\n                const obj = {\"params\": {\"period\": query}};\r\n                console.log(obj);\r\n                const response = await axios.get(url, obj);\r\n                console.log(response);\r\n\r\n                const books = response.data.return.books;\r\n                let results = [];\r\n                let retDate = \"\";\r\n                for (let i = 0 ; i < books.length ; i++)\r\n                {\r\n                    const book = books[i];\r\n                    const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                    if (\"RETURN_DATE\" in book)\r\n                    {\r\n                        retDate = book.RETURN_DATE;\r\n                    }\r\n                    let resultObject = {\r\n                        index: i,\r\n                        text: resultString,\r\n                        title: book.BOOKNAME,\r\n                        id: book.BARCODE,\r\n        //                rent: getBookState(props.text, book..toString()),\r\n                        rentDate: book.RENT_DATE,\r\n                        retDate: retDate,\r\n                        author: book.AUTHOR,\r\n                        totalName: book.TOTAL_NAME,\r\n                        claim_num: book.CLAMENUM,\r\n                        publish: book.PUBLISH,\r\n                        claim: book.CLAIM,\r\n                        user: book.USER,\r\n                        userName: book.USER_NAME\r\n                    };\r\n                    results.push(resultObject);\r\n                }\r\n                results.sort(compare);\r\n                setRentList(results);\r\n            }\r\n            else\r\n            {\r\n                var queryTo;\r\n                const nextMonth = monthValue + 1\r\n                queryTo = yearValue.toString() + \"-\" + nextMonth.toString().padStart(2, \"0\")\r\n                setFromTime(query)\r\n                setToTime(queryTo)\r\n                console.log(query)\r\n                console.log(queryTo)\r\n\r\n                try {\r\n                    await loadHistory();\r\n                }\r\n                catch (e)\r\n                {\r\n                    console.warn(e.name);\r\n                }\r\n\r\n    /*\r\n                for (const index in rent)\r\n                {\r\n                    const userId = rent[index][\"user\"];\r\n                    let userName;\r\n                    if (userList && userId in userList)\r\n                        userName = userList[userId].name;\r\n                    else\r\n                        userName = \"\"\r\n                    rent[index][\"userName\"] = userName;\r\n                    console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n                }\r\n                setRentList(rent);\r\n    */\r\n            }\r\n        }\r\n        search();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [searchQuery]\r\n    );\r\n\r\n    function movePrev()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month > 1)\r\n        {\r\n            month -= 1\r\n        }\r\n        else\r\n        {\r\n            year -= 1;\r\n            month = 12;\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    function moveNext()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month < 12)\r\n        {\r\n            month += 1\r\n        }\r\n        else\r\n        {\r\n            year += 1\r\n            month = 1\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.history}\r\n                </h2>\r\n            </div>\r\n            <div id=\"searchRange\">\r\n                <div className=\"page\" id = \"page\">\r\n                    <NavigateBeforeIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {movePrev();} }/>\r\n                </div>\r\n                <select name=\"year\" id=\"year\" className=\"dropdown\" onChange={(event) => {setProperty(0, event.target.value);}}/>\r\n                <select name=\"month\" id=\"month\" className=\"dropdown\" onChange={(event) => {setProperty(1, event.target.value);}}/>\r\n                    <div className=\"page\" id = \"page\">\r\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {moveNext();} }/>\r\n                    </div>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue={searchQuery} list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp } from \"../Util\";\r\n//import { useLazyQuery } from \"@apollo/client\";\r\nimport { Navigate } from 'react-router-dom'\r\n//import {USERS_QUERY} from \"../api/query.js\";\r\nimport UserInfo from \"../UserInfo\";\r\n\r\nfunction NewMember(props) {\r\n//    const [userText, setUserText] = useState(\"\");\r\n    const [userInfo, setUserInfo] = useState({});\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n//    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n//    const [userList, setUserList] = useState({});\r\n//    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized || !props.doc.serverAvailable)\r\n            {\r\n                return;\r\n            }\r\n            console.log(\"=======================================\");\r\n            console.log(\"NewMember initialize\");\r\n            prepareNewMember();\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n*/\r\n\r\n    function prepareNewMember()\r\n    {\r\n        var info = {};\r\n        info.USER_CODE = \"\";\r\n        info.USER_NAME = \"\";\r\n        info.PHONE_NUMBER = \"\";\r\n        info.EMAIL = \"\";\r\n        info.ADDRESS = \"\";\r\n        info.NOTICE = \"\";\r\n        info.USER_LEVEL = -1;\r\n        setUserInfo(info);\r\n    }\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n*/\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n\r\n        const prop = toastProp;\r\n        var text\r\n        if (response.data.return === \"OK\")\r\n        {\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            prepareNewMember()\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.autoClose = 3000;\r\n        toast.info(text, prop);\r\n    }\r\n    if (!props.doc.initialized || !props.doc.serverAvailable)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.newMember}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                {props.doc.serverAvailable &&\r\n                    <UserInfo text={props.text} doc={props.doc} info={userInfo} refresh={refresh}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewMember;\r\n","import { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        this.initialized = false;\r\n        this.bookReady = false;\r\n        this.rentReady = false;\r\n        this.userReady = false;\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        this.book = {};\r\n        this.rent = {};\r\n        this.logCallback = undefined;\r\n        this.admin = false;\r\n        this.serverInfo = {};\r\n        this.serverAvailable = false;\r\n        this.ipAddr = \"\"\r\n    }\r\n\r\n    async updateIpAddr()\r\n    {\r\n//        const response = await axios.get(\"https://ipv4.seeip.org/jsonip\");\r\n        const response = await axios.get(\"https://api.ipify.org/?format=json\")\r\n        console.log(\"Get IP Address\");\r\n        console.log(response.data);\r\n        const ipAddr = response.data.ip;\r\n        console.log(\"IP addr updated \" + ipAddr)\r\n        this.ipAddr = ipAddr;\r\n        this.checkServerIp()\r\n    }\r\n\r\n    checkServerIp()\r\n    {\r\n        if (this.ipAddr.length === 0 || !this.serverInfo.globalIp)\r\n            return;\r\n        if (this.serverInfo.globalIp === this.ipAddr)\r\n        {\r\n            console.log(\"Server is accessible \" + this.serverInfo.localIp);\r\n            const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n            this.serverAvailable = true;\r\n            axios.get(query, {timeout: 1000})\r\n                .then( (response) => {\r\n                    console.log(\"Server connected\");\r\n                    console.log(response.data);\r\n                    this.admin = response.data.admin;\r\n                    this.initialized = true;\r\n                })\r\n                .catch(error => {\r\n                  const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n                  window.open(query);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    checkState() {\r\n        if (this.bookReady && this.rentReady) {\r\n            this.initialized = true;\r\n            toast.dismiss();\r\n            if (this.callback) {\r\n                this.callback();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setLogCallback(callback) {\r\n        this.logCallback = callback;\r\n    }\r\n\r\n    setRent(rent) {\r\n        this.rent = rent\r\n        this.rentReady = true;\r\n        this.checkState();\r\n        this.checkRent();\r\n    }\r\n\r\n    setServerInfo(serverInfo)\r\n    {\r\n        this.serverInfo = serverInfo;\r\n        console.log(this.serverInfo.globalIp);\r\n        this.checkServerIp()\r\n    }\r\n\r\n    setBook(books) {\r\n        this.book = {};\r\n        for (let i = 0 ; i < books.length ; i++)\r\n        {\r\n            const book = books[i];\r\n            const id = book['_id'];\r\n            this.book[id] = book;\r\n        }\r\n        this.bookReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setUser(users) {\r\n        this.user = {};\r\n        for (let i = 0 ; i < users.length ; i++)\r\n        {\r\n            const user = users[i];\r\n            const id = user.id;\r\n            this.user[id] = user;\r\n            this.user[id][\"rent\"] = 0;\r\n        }\r\n        this.userReady = true;\r\n        this.checkRent();\r\n    }\r\n\r\n    checkRent() {\r\n        if (!this.userReady || !this.rentReady)\r\n        {\r\n            console.log(\"Cannot check rent\");\r\n            return;\r\n        }\r\n//        console.log(this.rent);\r\n        for (let i = 0 ; i < this.rent.length ; i++)\r\n        {\r\n            const state = this.rent[i].state;\r\n\r\n//            console.log(state);\r\n            if (state !== \"1\" && state !== \"3\")\r\n                continue;\r\n\r\n            const userId = this.rent[i].user_id;\r\n//            console.log(this.rent[i]);\r\n//           console.log(userId);\r\n//           console.log(userId.length);\r\n            if (userId && userId.length > 0 && userId in this.user)\r\n                this.user[userId][\"rent\"] += 1;\r\n            else\r\n                this.user[userId][\"rent\"] = 1;\r\n        }\r\n        console.log(this.user);\r\n    }\r\n\r\n    logIn(userInfo) {\r\n        console.log(\"Logged in: \" + userInfo['_id']);\r\n        this.logged = true;\r\n        this.userInfo = userInfo;\r\n        if (userInfo['level'] === \"2\")\r\n            this.admin = true;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n    }\r\n\r\n    logOut() {\r\n        console.log(\"Logged out\");\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        if (this.logCallback)\r\n            this.logCallback(false);\r\n    }\r\n\r\n    async getRent(userId = undefined) {\r\n        let ret = [];\r\n        if (this.serverAvailable) {\r\n            const url = \"https://\" + this.serverInfo.localIp + \":\" +\r\n                this.serverInfo.port + \"/book\";\r\n            const obj = {\"params\": {\"user\": userId}};\r\n            console.log(obj);\r\n            const result = await axios.get(url, obj);\r\n            console.log(result);\r\n            if (\"books\" in result.data.return)\r\n            {\r\n                // BARCODE, BOOKNAME, LENT_DATE, RETURN_DATE, STATS\r\n                // id, title, rentDate, retData,  stat\r\n                for (const entry of result.data.return.books)\r\n                {\r\n                    console.log(entry);\r\n                    const book = {'id': entry.BARCODE, 'title': entry.BOOKNAME, 'rentDate': entry.LENT_DATE, 'retDate': entry.RETURN_DATE, 'stat': entry.STATS}\r\n                    ret.push(book);\r\n                }\r\n//                ret = result.data.return.books;\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"Check \" + userId);\r\n            console.log(this.bookReady);\r\n            if (!this.bookReady)\r\n                return ret;\r\n    //        console.log(this.rent.length);\r\n            for (let i = 0 ; i < this.rent.length ; i++) {\r\n                const entry = this.rent[i];\r\n                if (userId !== undefined && entry.user_id !== userId)\r\n                    continue;\r\n    //            console.log(entry)\r\n                if (entry.state !== \"1\" && entry.state !== \"3\")\r\n                    continue;\r\n    //            console.log(entry);\r\n                const id = entry[\"book_id\"];\r\n                const book = this.book[id];\r\n    //            console.log(book)\r\n                let retEntry = {}\r\n                retEntry[\"id\"] = book._id\r\n                retEntry[\"title\"] = book.title\r\n                retEntry[\"rentDate\"] = entry.rent_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"retDate\"] = entry.return_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"user\"] = entry.user_id;\r\n                ret.push(retEntry)\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n\r\n    async openDoc() {\r\n        try {\r\n            this.initialized = true;\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.initialized;\r\n    }\r\n\r\n    setCallback(updateFunc)\r\n    {\r\n        console.log(\"Update function registered\");\r\n        this.callback = updateFunc;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","import config from \"./api/key\";\n\nconst NodeRSA = require('node-rsa');\n\nconst prk = new NodeRSA(config[\"privateKey\"]);\n\nclass Context {\n    constructor() {\n        console.log(\"Create Context\");\n\n        console.log(\"Cookies\");\n        const rawCookie = document.cookie;\n        this.cookie = rawCookie\n            .split(\";\")\n            .map(v => v.split(\"=\"))\n            .reduce((acc, v) => {\n                const key = v.shift().trim();\n                const value = v.join(\"=\").trim();\n                acc[decodeURIComponent(key)] = decodeURIComponent(value);\n                return acc;\n            }, {});\n        console.log(this.cookie);\n    }\n\n    checkLogIn(userData, passwordText) {\n        var matched = false;\n        var passwordTyped;\n        if (userData.user && passwordText.length > 0) {\n            console.log(\"User data available\");\n            const emailDb = userData.user.encrypted_email;\n            const phoneDb = userData.user.encrypted_phone;\n\n            passwordTyped = prk.sign(passwordText, 'base64');\n            if (passwordText === emailDb ||\n                passwordText === phoneDb )\n            {\n                passwordTyped = passwordText;\n                matched = true;\n            }\n            else if (emailDb === passwordTyped)\n            {\n//                console.log(\"Email match\");\n                matched = true;\n            }\n            else\n            {\n                var numberString = \"\";\n                for (let i = 0 ; i < passwordText.length ; i++)\n                {\n                    if (!isNaN(passwordText[i]))\n                        numberString += passwordText[i];;\n                }\n                passwordTyped = prk.sign(numberString, 'base64');\n                if (passwordTyped === phoneDb)\n                {\n//                    console.log(\"Phone match\");\n                    matched = true;\n                }\n                else\n                {\n//                    console.log(\"Nothing matched\");\n                }\n            }\n\n//            console.log(\"toast available\");\n        }\n        if (matched)\n        {\n            const date = new Date();\n            const days=2;\n            date.setTime(date.getTime()+(days*24*60*60*1000));\n            const expireDate = date.toGMTString();\n            document.cookie = \"password=\" +  passwordTyped + \"; expires=\" + expireDate + \" ; SameSite=Lax ;\" ;\n        }\n        return matched\n    }\n}\n\nexport default Context;\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Dropdown.css'\r\n\r\nfunction DropDown(props) {\r\n\r\n    const [dropdown, setDropdown] = useState(false);\r\n    const [click, setClick] = useState(false)\r\n\r\n    useEffect(\r\n        () => {\r\n            if (dropdown !== props.dropdown)\r\n            {\r\n                console.log(\"User clicked \" + props.doc.logged);\r\n                console.log(props.dropdown);\r\n                setClick(!click);\r\n                setDropdown(props.dropdown);\r\n            }\r\n            const menu = document.getElementById(\"dropdown-menu\");\r\n//            menu.hidden = !click;\r\n            if (!click)\r\n            {\r\n               menu.classList.remove('is-show');\r\n            }\r\n            else\r\n            {\r\n               menu.classList.add('is-show');\r\n            }\r\n\r\n        }, [props.dropdown, dropdown, click, props.doc.logged]\r\n    );\r\n\r\n    const logOut = () =>\r\n    {\r\n        setClick(false);\r\n        props.doc.logOut();\r\n        document.cookie = \"user_id=\";\r\n        document.cookie = \"password=\";\r\n        document.cookie = \"autoLogin=false\";\r\n    }\r\n\r\n    return (\r\n            <div id='dropdown-menu' onClick={() => { setClick(!click)}} className='dropdown-menu'>\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                    <div className='menu-items'>\r\n                        {props.doc.userInfo[\"_id\"] + \" : \" + props.doc.userInfo[\"name\"] + props.text.nameSuffix}\r\n                    </div>\r\n                    <hr className=\"hline\"/>\r\n                    </>\r\n                }\r\n                <Link className='menu-items' to=\"/\" onClick={() => setClick(false)}>\r\n                    {props.text.home}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/notice\" onClick={() => setClick(false)}>\r\n                    {props.text.notice}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/search\" onClick={() => setClick(false)}>\r\n                    {props.text.bookSearch}\r\n                </Link>\r\n                {props.doc.serverAvailable &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOut\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOut}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/return\" onClick={() => setClick(false)}>\r\n                            {props.text.return}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOutStatus}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {props.doc.admin &&\r\n                    <>\r\n                    <hr className=\"hline\"/>\r\n                    <Link className='menu-items' to=\"/userSearch\" onClick={() => setClick(false)}>\r\n                        {props.text.userSearch}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentalSituation\" onClick={() => setClick(false)}>\r\n                        {props.text.situation}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentHistory\" onClick={() => setClick(false)}>\r\n                        {props.text.history}\r\n                    </Link>\r\n                    </>\r\n                }\r\n                {props.doc.serverAvailable && props.doc.admin &&\r\n                    <Link className='menu-items' to=\"/newMember\" onClick={() => setClick(false)}>\r\n                        {props.text.newMember}\r\n                    </Link>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <hr className=\"hline\"/>\r\n                        <div className='menu-items' onClick={() => logOut()}>\r\n                            {props.text.logOut}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && !props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.logIn}\r\n                        </Link>\r\n                    </>\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default DropDown;\r\n","import React, { useState } from 'react';\r\nimport {isMobile} from \"react-device-detect\";\r\nimport \"./Navbar.css\";\r\nimport DropDown from \"./Dropdown\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction Navbar(props) {\r\n    const [dropdown, setDropdown] = useState(false)\r\n\r\n    const onClick = () => {\r\n        const maxWidth = document.getElementById(\"navbar\").style.maxWidth;\r\n        console.log(\"maxWidth\");\r\n        console.log(maxWidth);\r\n        console.log(document.getElementById(\"navbar\").style.width);\r\n        setDropdown(!dropdown);\r\n    }\r\n\r\nreturn (\r\n    <>\r\n        <div id=\"navbar\" className=\"navbar\">\r\n            <div className='title'>\r\n                {isMobile? (<h1>{props.text[\"titleShort\"]}</h1>) : (<h1>{props.text[\"titleLong\"]}</h1>)}\r\n            </div>\r\n            <div className='menu' onClick={onClick} >\r\n                <MenuIcon className=\"img\" fontSize=\"large\" sx={{ color: \"#ffffff\"}}/>\r\n            </div>\r\n            <DropDown text={props.text} doc={props.doc} dropdown={dropdown}/>\r\n        </div>\r\n    </>\r\n)\r\n}\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Notice from \"./pages/Notice\";\r\nimport Search from \"./pages/Search\";\r\nimport CheckOutStatus from \"./pages/CheckOutStatus\";\r\nimport CheckOut from \"./pages/CheckOut\";\r\nimport Return from \"./pages/Return\";\r\nimport UserSearch from \"./pages/UserSearch\";\r\nimport RentalSituation from \"./pages/RentalSituation\";\r\nimport RentHistory from \"./pages/RentHistory\";\r\nimport NewMember from \"./pages/NewMember\";\r\n//import Reader from \"./pages/Reader\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\nimport Context from \"./Context\";\r\nimport text from \"./api/text\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"./Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport Navbar from \"./Navbar\";\r\nimport {BOOK_QUERY, RENT_QUERY, USER_QUERY, SERVER_QUERY} from \"./api/query.js\";\r\n\r\nconst doc = new Doc();\r\nconst context = new Context();\r\n\r\nconst textString = {};\r\nlet logMsg = \"\"\r\nfunction App() {\r\n\r\n//    const [checkOutStr, setCheckOutStr] = useState(\"\");\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [logged, setLogged] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const { loading: rentLoading, error: rentError, data: rentData } = useQuery(RENT_QUERY);\r\n    const { loading: serverLoading, error: serverError, data: serverData } = useQuery(SERVER_QUERY);\r\n    const [loadBook, { loading: bookLoading, error: bookError, data: bookData }] = useLazyQuery(BOOK_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY, { \"variables\": { \"_id\": userId } });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            logMsg = logMsg + \"<p>Initialize app</p>\";\r\n            console.log(process.env.APP_NAME);\r\n            console.log(process.env.APP_VERSION);\r\n            const lang = navigator.languages;\r\n            console.log(lang);\r\n            let ts = {}\r\n            if (lang.length> 0 && (lang[0].toLowerCase().includes(\"kr\") || lang[0].toLowerCase().includes(\"ko\")))\r\n            {\r\n                ts = text.kr;\r\n            }\r\n            else\r\n            {\r\n                ts = text.en;\r\n            }\r\n            for (let key in ts)\r\n            {\r\n                textString[key] = ts[key];\r\n            }\r\n\r\n            await doc.updateIpAddr();\r\n\r\n            if (\"autoLogin\" in context.cookie &&  context.cookie.autoLogin === \"true\")\r\n            {\r\n                console.log(\"Auto Login: \" + context.cookie.user_id);\r\n                setUserId(context.cookie.user_id);\r\n                console.log(context.cookie.nothing);\r\n                loadUser();\r\n            }\r\n            setInitialized(true);\r\n        }\r\n        initialize();\r\n    }, [loadUser]);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data loaded\");\r\n            if (!userData)\r\n            {\r\n                return;\r\n            }\r\n\r\n            console.log(\"Login check \" + context.cookie.password);\r\n            console.log(userData);\r\n            if (context.cookie.password && context.checkLogIn(userData, context.cookie.password))\r\n            {\r\n                console.log(\"Login suceeded\");\r\n                doc.logIn(userData.user);\r\n            }\r\n\r\n\r\n\r\n        }, [userData]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Rent Query Updated\");\r\n            logMsg = logMsg + \"<p>Rent Query Updated \" + rentLoading + \" \" + rentError + \"</p>\";\r\n            console.log(rentLoading);\r\n            console.log(rentError);\r\n            if (rentData)\r\n            {\r\n                console.log(\"Rent available\");\r\n                logMsg = logMsg + \"<p>Rent available</p>\"\r\n//                console.log(rentData.rents)\r\n                doc.setRent(rentData.rents)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [rentLoading, rentError, rentData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Book Query Updated\");\r\n            logMsg = logMsg + \"<p>Book Query Updated</p>\";\r\n            console.log(bookLoading)\r\n            console.log(bookError)\r\n            if (bookData)\r\n            {\r\n                console.log(\"Book available\")\r\n                logMsg = logMsg + \"<p>Book available</p>\";\r\n//                console.log(bookData.books)\r\n                doc.setBook(bookData.books)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [bookLoading, bookError, bookData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Server Query Updated\");\r\n            logMsg = logMsg + \"<p>Server Query Updated</p>\";\r\n\r\n            console.log(serverData);\r\n            console.log(initialized);\r\n            if (!serverData || !initialized)\r\n                return\r\n\r\n            console.log(\"Server info available\")\r\n            logMsg = logMsg + \"<p>Server info available</p>\";\r\n            console.log(serverData.serverInfo)\r\n            doc.setServerInfo(serverData.serverInfo)\r\n\r\n            if (!doc.serverAvailable)\r\n            {\r\n                console.log(\"Server is not available. Load books from cloud DB\");\r\n                loadBook();\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.LOADING;\r\n                prop.autoClose = false;\r\n                prop.toastId = loadingId;\r\n                toast.loading(textString.loading, prop);\r\n                doc.setLogCallback(updateLog);\r\n            }\r\n        }, [serverLoading, serverError, serverData, loadBook, initialized]\r\n    );\r\n\r\n    function notifyInit()\r\n    {\r\n        const prop = toastProp;\r\n        prop.type = toast.TYPE.SUCCESS;\r\n        prop.render = textString.succeededToOpen;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = \"\";\r\n        toast.info(textString.succeededToOpen, prop);\r\n    }\r\n\r\n    function updateLog(logged) {\r\n        console.log(\"==== Update logging state \" + doc.logged);\r\n        console.log(doc.userInfo);\r\n        setLogged(doc.logged);\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n        <div className=\"App\">\r\n            <div>\r\n                <ToastContainer\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    limit={10}\r\n                />\r\n            </div>\r\n            <Navbar doc={doc} text={textString}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home doc={doc} text={textString}/>} />\r\n                <Route path=\"/notice\" element={<Notice doc={doc} text={textString} />} />\r\n                <Route path=\"/search/:id?\" element={<Search doc={doc} text={textString}/>} />\r\n                <Route path=\"/checkOutStatus\" element={<CheckOutStatus context={context} doc={doc} text={textString} logged={logged}/>} />\r\n                <Route path=\"/userSearch/:id?\" element={<UserSearch context={context} doc={doc} text={textString} />} />\r\n                <Route path=\"/checkOut\" element={<CheckOut context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/return\" element={<Return context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentalSituation\" element={<RentalSituation context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentHistory\" element={<RentHistory context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/newMember\" element={<NewMember context={context} doc={doc} text={textString}/>} />\r\n            </Routes>\r\n\r\n            <h3>\r\n                v {process.env.REACT_APP_VERSION}\r\n            </h3>\r\n        </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport * as Realm from \"realm-web\";\r\nimport {\r\n    ApolloClient,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    InMemoryCache,\r\n} from \"@apollo/client\";\r\n\r\nconst APP_ID = 'data-xaque';\r\nconst graphqlUri = `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\r\nconst app = new Realm.App(APP_ID);\r\n\r\n// Gets a valid Realm user access token to authenticate requests\r\nasync function getValidAccessToken() {\r\n    // Guarantee that there's a logged in user with a valid access token\r\n    if (!app.currentUser) {\r\n        // If no user is logged in, log in an anonymous user. The logged in user will have a valid\r\n        // access token.\r\n        await app.logIn(Realm.Credentials.anonymous());\r\n//        await app.logIn(apiKey);\r\n    } else {\r\n        // An already logged in user's access token might be stale. Tokens must be refreshed after\r\n        // 30 minutes. To guarantee that the token is valid, we refresh the user's access token.\r\n        await app.currentUser.refreshAccessToken();\r\n    }\r\n//    console.log(\"AccessToken: [\" + app.currentUser.accessToken + \"]\");\r\n\r\n    return app.currentUser.accessToken;\r\n}\r\n\r\n// Configure the ApolloClient to connect to your app's GraphQL endpoint\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\r\n        // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\r\n        // access token before sending the request.\r\n        fetch: async (uri, options) => {\r\n            const accessToken = await getValidAccessToken();\r\n            options.headers.Authorization = `Bearer ${accessToken}`;\r\n            return fetch(uri, options);\r\n        },\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}