{"version":3,"sources":["Util.js","pages/Home.js","api/query.js","pages/Notice.js","ListView.js","pages/Search.js","pages/Reader.js","pages/CheckOutStatus.js","pages/CheckOut.js","pages/Return.js","pages/UserSearch.js","pages/RentHistory.js","Doc.js","Context.js","Dropdown.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["SEARCH_PER_SCREEN","MAX_SEARCH_ENTRY","String","prototype","format","formatted","this","i","arguments","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","getUserState","text","state","normal","overDue","stopped","getBookState","available","checkedOut","notAvailable","toUtf8","unescape","encodeURIComponent","loadingId","loggingId","Home","props","useEffect","_initialize","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","console","log","doc","setCallback","stop","apply","initialize","_jsx","id","dangerouslySetInnerHTML","__html","homeText","BOOK_QUERY","gql","_templateObject","_taggedTemplateLiteral","RENT_QUERY","_templateObject2","USERS_QUERY","_templateObject3","USER_QUERY","_templateObject4","HISTORY_QUERY","_templateObject5","NOTICE_QUERY","_templateObject6","CONTENT_QUERY","_templateObject7","SERVER_QUERY","_templateObject8","Notice","_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useState3","_useState4","displayedCodes","setDisplayedCodes","_useState5","_useState6","pageNum","setPageNum","_useState7","_useState8","selectedId","setSelectedId","_useQuery","useQuery","noticeLoading","loading","noticeData","data","noticeError","error","_useLazyQuery","useLazyQuery","_useLazyQuery2","loadSelected","_useLazyQuery2$","selectedLoading","selectedData","selectedError","notices","toString","startIdx","count","Math","min","slice","showEntry","result","_jsxs","className","children","date","colSpan","onClick","_id","title","notice","content","map","NavigateBeforeIcon","fontSize","sx","color","NavigateNextIcon","showCallback","ListView","itemList","setItemList","displayList","setDisplayList","list","initialized","Search","inputText","setInputText","_useDebounce","useDebounce","searchQuery","selectedRef","useRef","_useState9","_useState10","bookList","setBookList","_useState11","_useState12","rentList","setRentList","useParams","updateDoc","_updateDoc","_callee6","rl","rented","bl","books","key","book","_context6","rent","push","code","book_id","retDate","return_date","name","num","author","claim","claim_num","totalName","series","category","publisher","publish","isOpen","findBooks","_x","_findBooks","_callee2","results","url","obj","response","resultString","resultObject","_i","row","_resultString","_retDate","_state","_iterator","_step","_entry","_resultObject","_context2","serverAvailable","btoa","serverInfo","localIp","port","axios","get","sent","return","concat","BOOKNAME","CLAIMNUM","_STATE","returnDate","_RETURN","index","BARCODE","AUTHOR","TOTAL_NAME","CLAMENUM","PUBLISH","CLAIM","abrupt","includes","_createForOfIteratorHelper","s","n","done","entry","value","t0","e","f","finish","sort","a","b","_query","_callee3","sr","_context3","current","query","selectId","_ref","_callee4","_context4","_x2","hidden","entryId","_callee5","_context5","rowSpan","bookSearch","placeholder","searchBook","onChange","event","target","entries","Reader","State","LoggedOut","LoggingIn","LoggedIn","CheckOutStatus","userText","setUserText","passwordText","setPasswordText","setInitialized","userId","setUserId","setState","_useState13","_useState14","history","setHistory","_useState15","_useState16","autoLogin","setAutoLogin","loadUser","userData","_useLazyQuery3","_useLazyQuery4","loadHistory","historyData","_useState17","_useState18","expireDate","setExpireDate","_useState19","_useState20","setTitle","_userId","logged","userInfo","getRent","adminMode","userSearch","checkOut","logIn","_autoLogin","context","cookie","Date","setTime","getTime","days","toGMTString","compare","rawHist","bookReady","rentReady","split","s1","s2","hist","j","showEntries","rentDate","bookName","React","Fragment","Link","to","showRented","noEntry","toUpperCase","toast","isActive","prop","checkLogIn","user","type","TYPE","SUCCESS","logInSucceed","document","ERROR","logInFail","render","toastId","update","info","idHolder","disabled","onInput","pwHolder","checked","cookieString","toggleAutoLogin","LoggingOut","CheckOut","bookText","setBookText","setUserData","scannedBook","setScannedBook","needConfirm","setNeedConfirm","notifyRequest","setNotifyRequest","barcode","setBarcode","interval","setInterval","ipAddr","portNum","then","scan","clearInterval","notify","RENTED","getElementById","dismiss","updateUser","_ref2","JSON","stringify","_ref3","logOut","_ref4","imageCaptured","files","file","INFO","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","getBase64","img","method","mode","crossDomain","headers","withCredentials","credentials","image","succeededToOpen","INVALID_BOOK","bookId","USER_CODE","USER_NAME","nameSuffix","USER_STATE","_RENT","rentSuffix","CameraAltIcon","accept","capture","inputMode","pattern","bookHolder","confirmRent","ret","rentSucceed","NOT_AVAILABLE","confirmAction","Return","_useState21","_useState22","NOT_RENTED","confirmReturn","returnSucceed","userLoading","userListData","userError","userList","setUserList","_args6","users","level","setUser","getUser","showUsers","showUser","_Fragment","findUsers","_findUsers","keys","t1","toLowerCase","admin","RentHistory","_useState23","_useState24","a1","a2","userName","Doc","_classCallCheck","userReady","logCallback","_createClass","_updateIpAddr","ip","checkServerIp","globalIp","window","open","callback","checkState","checkRent","user_id","retEntry","rent_date","_openDoc","updateFunc","prk","require","config","Context","rawCookie","v","reduce","acc","shift","trim","join","decodeURIComponent","passwordTyped","matched","emailDb","encrypted_email","phoneDb","encrypted_phone","sign","numberString","isNaN","DropDown","dropdown","setDropdown","click","setClick","menu","classList","add","remove","home","checkOutStatus","Navbar","isMobile","maxWidth","style","width","MenuIcon","textString","logMsg","App","setLogged","rentLoading","rentError","rentData","_useQuery2","serverLoading","serverError","serverData","loadBook","bookLoading","bookError","bookData","notifyInit","updateLog","lang","ts","process","APP_NAME","APP_VERSION","navigator","languages","kr","en","updateIpAddr","nothing","password","setRent","rents","setBook","setServerInfo","LOADING","setLogCallback","Router","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","limit","Routes","Route","path","element","UserSearch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","APP_ID","graphqlUri","app","Realm","getValidAccessToken","_getValidAccessToken","currentUser","anonymous","refreshAccessToken","accessToken","client","ApolloClient","link","HttpLink","uri","fetch","_fetch","options","Authorization","_x3","_x4","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider"],"mappings":"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","file":"static/js/main.524dc185.chunk.js","sourcesContent":["export const SEARCH_PER_SCREEN = 10;\r\nexport const MAX_SEARCH_ENTRY = 500;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n\r\nexport const getUserState = function(text, state) {\r\n    if (state === \"0\")\r\n        return text.normal;\r\n    else if (state === \"1\")\r\n        return text.overDue;\r\n    else if (state === \"2\")\r\n        return text.stopped;\r\n}\r\n\r\nexport const getBookState = function(text, state) {\r\n    if (state === \"0\")\r\n    {\r\n        return text.available;\r\n    }\r\n    else if (state === \"1\")\r\n    {\r\n        return text.checkedOut;\r\n    }\r\n    else if (state === \"3\")\r\n    {\r\n        return text.overDue;\r\n    }\r\n    else\r\n    {\r\n        return text.notAvailable;\r\n    }\r\n}\r\n\r\nexport const toUtf8 = function(text) {\r\n    return unescape(encodeURIComponent(text));\r\n};\r\n\r\nexport const fromUtf8 = function(text) {\r\n    return decodeURIComponent(escape(text));\r\n};\r\n\r\nexport const loadingId = \"custom-loading-id\";\r\nexport const loggingId = \"custom-logging-id\";\r\n","import React, { useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"./Home.css\";\r\nimport { toastProp } from \"../Util\";\r\n\r\nfunction Home(props) {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Home\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (<div id=\"home\" dangerouslySetInnerHTML={{__html:props.text.homeText}}></div>);\r\n}\r\n\r\nexport default Home;\r\n","import gql from \"graphql-tag\";\n\nexport const BOOK_QUERY = gql`\n    query AllBook{\n        books (sortBy: TITLE_ASC, limit:20000) {\n            _id\n            author\n            title\n            claim_num\n            num\n            series\n            category\n            claim\n            publisher\n            seqnum\n        }\n    }\n`;\n\nexport const RENT_QUERY = gql`\n    query AllRent{\n        rents (limit:20000) {\n            _id\n            book_id\n            user_id\n            rent_date\n            return_date\n            state\n        }\n    }\n`;\n\nexport const USERS_QUERY = gql`\n    query AllUser {\n        users (limit: 20000) {\n            _id\n            name\n            state\n            level\n        }\n    }`;\n\nexport const USER_QUERY = gql`\n    query FindUser($_id: String!){\n        user (query: {_id:$_id}) {\n            _id\n            name\n            state\n            level\n            encrypted_email\n            encrypted_phone\n        }\n    }`;\n\nexport const HISTORY_QUERY = gql`\n    query findLogs($user_id: String!){\n        rentLogs (query: {user_id: $user_id}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            user_id\n        }\n    }`;\n\nexport const NOTICE_QUERY = gql`\n    query GetNotices {\n        notices (sortBy: _ID_DESC, limit:20000) {\n            _id\n            date\n            title\n        }\n    }`;\n\nexport const CONTENT_QUERY = gql`\n    query GetContent ($_id: String!) {\n        notice (query: {_id: $_id}) {\n            _id\n            date\n            title\n            content\n        }\n    }`;\n\nexport const SERVER_QUERY = gql`\n    query GetServerInfo {\n        serverInfo {\n            _id\n            globalIp\n            localIp\n            port\n        }\n    }`;\n","import React, { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp } from \"../Util\";\r\nimport \"./Page.css\"\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { SEARCH_PER_SCREEN } from \"../Util\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport {NOTICE_QUERY, CONTENT_QUERY} from \"../api/query.js\";\r\n\r\nfunction Notice(props) {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(-1);\r\n    const { loading: noticeLoading, data: noticeData, error: noticeError } = useQuery(NOTICE_QUERY);\r\n    const [loadSelected, { loading: selectedLoading, data: selectedData, error: selectedError}] = useLazyQuery(CONTENT_QUERY,\r\n            {\"variables\": {\"_id\": selectedId}});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Notice\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Notice\");\r\n//            console.log(noticeData);\r\n//            console.log(noticeError);\r\n//            console.log(noticeLoading);\r\n            if (noticeData)\r\n            {\r\n                setSearchResults(noticeData.notices);\r\n            }\r\n        }, [noticeData, noticeError, noticeLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Content\");\r\n//            console.log(selectedData);\r\n//            console.log(selectedError);\r\n//            console.log(selectedLoading);\r\n            if (selectedData)\r\n            {\r\n//                setSearchResults(selectedData.content);\r\n            }\r\n        }, [selectedData, selectedError, selectedLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n            console.log(\"Page num \" + pageNum.toString() + \" \");\r\n            console.log(length);\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n//           console.log(displayedCodes);\r\n        }, [displayedCodes]\r\n    );\r\n\r\n    const selectEntry = (id) => {\r\n        console.log(\"selected \" + id.toString());\r\n        if (selectedId === id)\r\n        {\r\n            setSelectedId(-1);\r\n        }\r\n        else\r\n        {\r\n            setSelectedId(id);\r\n        }\r\n        loadSelected();\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n//        console.log(result);\r\n        return (\r\n                <tr className=\"\" key={result._id}>\r\n                    <td className=\"\"> {result.date} </td>\r\n                    <td className=\"noticeEntry\" colSpan=\"2\" onClick={() => selectEntry(result._id)}> {result.title}</td>\r\n                </tr>\r\n        );\r\n    }\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (searchResults.length > (pageNum + 1) * SEARCH_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div id=\"notice\">\r\n                <div id=\"title\">\r\n                    <h2>\r\n                        {props.text.notice}\r\n                    </h2>\r\n                </div>\r\n                {selectedId > 0 && selectedData &&\r\n                <div id=\"noticeContent\">\r\n                    <table className=\"content\"><tbody>\r\n                           {showEntry(selectedData.notice)}\r\n                        <tr>\r\n                            <td className=\"content\" colSpan=\"3\">\r\n                                {selectedData.notice.content}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                </div>\r\n                }\r\n                <div id=\"noticeList\">\r\n                    <table><tbody>\r\n                       {displayedCodes.length > 0 && displayedCodes.map((result) => showEntry(result))}\r\n                    </tbody></table>\r\n                </div>\r\n                {searchResults.length > SEARCH_PER_SCREEN && (\r\n                    <div id=\"pageControl\">\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={movePrev}/>\r\n                        </div>\r\n                        <div className=\"pageNum\" id=\"pageNum\">\r\n                            {pageNum+1}\r\n                        </div>\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateNextIcon fontSize=\"large\" sx={{color: (searchResults.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={moveNext}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default Notice;\r\n","import { useEffect, useState } from \"react\";\nimport { SEARCH_PER_SCREEN, MAX_SEARCH_ENTRY, getBookState, toUtf8 } from \"./Util\";\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\n\nfunction doNothing() {\n    console.log(\"Do nothing...\");\n}\n\nvar showCallback = doNothing;\nfunction ListView(props) {\n        const [itemList, setItemList] = useState([]);\n//        const [showCallback, setShowCallback] = useState(doNothing);\n        const [pageNum, setPageNum] = useState(0);\n        const [displayList, setDisplayList] = useState([]);\n\n    useEffect(function () {\n        console.log(\"Init List View\");\n    }, []);\n\n    useEffect(function () {\n        console.log(\"Set Item List\");\n        setItemList(props.list);\n    }, [props.list]);\n\n    useEffect(function () {\n        if (props.showCallback)\n        {\n            console.log(\"Set show callback\");\n //           setShowCallback(props.showCallback);\n            showCallback = props.showCallback;\n        }\n    }, [props.showCallback]);\n\n    useEffect(function () {\n        const length = itemList.length;\n        console.log(\"Page num \" + pageNum.toString());\n        if (length > SEARCH_PER_SCREEN)\n        {\n            const startIdx = pageNum * SEARCH_PER_SCREEN;\n            const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\n            setDisplayList(itemList.slice(startIdx,startIdx+count));\n        }\n        else\n        {\n            setDisplayList(itemList)\n        }\n    }, [itemList, pageNum]);\n\n    function movePrev() {\n        console.log(\"Prev\");\n        if (pageNum > 0)\n        {\n            setPageNum(pageNum - 1);\n        }\n    }\n\n    function moveNext() {\n        console.log(\"Next\");\n        if (itemList.length > (pageNum + 1) * SEARCH_PER_SCREEN)\n        {\n            setPageNum(pageNum + 1);\n        }\n    }\n\n    return (\n        <div id=\"listView\">\n            {showCallback(displayList)}\n            {itemList && itemList.length > SEARCH_PER_SCREEN && (\n                <div id=\"pageControl\">\n                    <div className=\"page\" id = \"page\">\n                        <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={() => {movePrev();} }/>\n                    </div>\n                    <div className=\"pageNum\" id=\"pageNum\">\n                        {pageNum+1}\n                    </div>\n                    <div className=\"page\" id = \"page\">\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: (itemList.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={() => {moveNext();} }/>\n                    </div>\n                </div>)\n            }\n        </div>\n    );\n}\nexport default ListView;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp } from \"../Util\";\r\nimport { SEARCH_PER_SCREEN, MAX_SEARCH_ENTRY, getBookState, toUtf8 } from \"../Util\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ListView from \"../ListView\";\r\n\r\nlet initialized = false;\r\n\r\nfunction Search(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(inputText, 50);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n\r\n    const [bookList, setBookList] = useState([]);\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"BOOK ID: \" + id);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setInputText(id);\r\n            }\r\n            else\r\n            {\r\n                setInputText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findBooks(text) {\r\n                let results = [];\r\n\r\n                if (props.doc.serverAvailable)\r\n                {\r\n                    console.log(toUtf8(text));\r\n                    console.log(btoa(toUtf8(text)));\r\n                    const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                        props.doc.serverInfo.port + \"/book\";\r\n                    const obj = {\"params\": {\"book\": btoa(toUtf8(text)), \"metch\":false}};\r\n                    console.log(obj);\r\n                    const response = await axios.get(url, obj);\r\n                    console.log(response)\r\n                    const books = response.data.return;\r\n                    let retDate = \"\";\r\n                    for (let i = 0 ; i < books.length ; i++)\r\n                    {\r\n                        const entry = {};\r\n                        const book = books[i];\r\n                        const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                        const state = book._STATE;\r\n                        if (state === 1 || state === 3)\r\n                        {\r\n                            retDate = props.text.returnDate + \" \" + book._RETURN;\r\n                        }\r\n                        let resultObject = {\r\n                            index: i,\r\n                            text: resultString,\r\n                            name: book.BOOKNAME,\r\n                            code: book.BARCODE,\r\n                            rent: getBookState(props.text, book._STATE.toString()),\r\n                            retDate: retDate,\r\n                            author: book.AUTHOR,\r\n                            totalName: book.TOTAL_NAME,\r\n                            claim_num: book.CLAMENUM,\r\n                            publish: book.PUBLISH,\r\n                            claim: book.CLAIM\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n\r\n                    for (let i = 0 ; i < bookList.length ; i++) {\r\n                        const row = bookList[i];\r\n                        if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                        if ((row.name && row.name.toString().includes(text)) ||\r\n                            (row.code === text))\r\n                        {\r\n                            let resultString = `${row.name} ${row.claim_num}`;\r\n                            let rent = props.text.available;\r\n                            let retDate = \"\";\r\n                            let state = \"0\";\r\n                            for (const entry of rentList)\r\n                            {\r\n                                if (entry.code === row.code)\r\n                                {\r\n                                    state = entry.state;\r\n                                    if (state === \"1\" || state === \"3\")\r\n                                    {\r\n                                        retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n    //                        if (rentList.includes(row.code))\r\n    //                            rent = props.text.checkedOut;\r\n    //                        else\r\n    //                            rent = props.text.available;\r\n                            let resultObject = {\r\n                                index: i,\r\n                                text: resultString,\r\n                                name: row.name,\r\n                                code: row.code.toString(),\r\n                                rent: getBookState(props.text, state),\r\n                                retDate: retDate,\r\n                                author: row.author,\r\n                                totalName: row.totalName,\r\n                                claim_num: row.claim_num,\r\n                                publish: row.publish,\r\n                                claim: row.claim\r\n                            };\r\n                            results.push(resultObject);\r\n                        }\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a['text'] > b['text']; });\r\n                return results;\r\n            }\r\n            async function query() {\r\n                if (searchQuery) {\r\n                    let sr = await findBooks(searchQuery);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        selectedRef.current = sr[0].code;\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, bookList, rentList, props]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        initialized = true;\r\n\r\n        let rl = [];\r\n        const rented = props.doc.rent;\r\n        for (let i = 0 ; i < rented.length; i++)\r\n        {\r\n           rl.push({code:rented[i].book_id, retDate:rented[i].return_date, state:rented[i].state});\r\n        }\r\n        setRentList(rl);\r\n\r\n        let bl = [];\r\n        const books = props.doc.book\r\n        for (const key in books)\r\n        {\r\n           const book = books[key];\r\n           bl.push({code: book._id, name: book.title, num: book.num, author: book.author, claim: book.claim,\r\n                    claim_num: book.claim_num, totalName: book.series, category: book.publisher, publish: book.publisher});\r\n        }\r\n        console.log(\"Load\");\r\n        console.log(books.length);\r\n        setBookList(bl);\r\n    }\r\n\r\n    const selectId = async (code) => {\r\n        console.log(\"Prev \" + selectedRef.current);\r\n        if (selectedRef.current === -1 || selectedRef.current !== code)\r\n        {\r\n            console.log(\"Select \" + code);\r\n            setSelectedId(code);\r\n            selectedRef.current = code;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + code);\r\n            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n        }\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n        const hidden = (result.code !== selectedRef.current);\r\n        const entryId = (hidden) ? \"searchResult\" : \"selectedSearchResult\";\r\n        return (\r\n            <div key={result.code}>\r\n            <div id={entryId} onClick={async () => await selectId(result.code)}>\r\n                <table><tbody>\r\n                    <tr className=\"searchTr\">\r\n                        <td className=\"searchTitle\"> {result.text}</td>\r\n                        <td className=\"searchRent\"> {result.rent} </td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {!hidden &&\r\n            <div>\r\n                <table><tbody>\r\n                <tr>\r\n                    <td>{result.author} </td>\r\n                    <td colSpan=\"2\" rowSpan=\"2\">{result.totalName} <b>{result.name}</b> { result.claim_num} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.code} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.publish}</td>\r\n                    <td colSpan={result.retDate.length > 0 ? \"1\":\"2\"}>{result.claim} </td>\r\n                    {result.retDate.length > 0 && <td>{result.retDate}</td> }\r\n                </tr>\r\n                </tbody></table>\r\n            </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function showEntries(results)\r\n    {\r\n        return results.map((result) => showEntry(result))\r\n    }\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <div id=\"title\">\r\n                <h2> {props.text.bookSearch} </h2>\r\n            </div>\r\n            <div id=\"searchContents\">\r\n                <input id=\"searchInput\"\r\n                    placeholder={props.text.searchBook}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n            </div>\r\n            <ListView list={searchResults} showCallback={(entries) => { return showEntries(entries); }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useEffect, useRef, useState } from \"react\";\nimport \"./Reader.css\";\nimport axios from \"axios\";\n\n\nfunction Reader(props) {\n    const videoRef = useRef();\n    const canvasRef = useRef();\n    const overlayRef = useRef();\n    const [result, setResult] = useState();\n    const [resolution, setResolution] = useState([0,0]);\n\n    useEffect(\n        function () {\n            if (result) {\n                props.onScan(result.data);\n                setResult(null);\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [result]\n    );\n\n    useEffect(function () {\n        let isMounted = true;\n        console.log(\"Set interval\");\n        const inter = setInterval(() => {\n            if (!isMounted)\n            {\n                console.log(\"Unmounted reader call\");\n                return;\n            }\n            requestAnimationFrame(tick);\n        }, 2000);\n        return () => {\n            console.log(\"Clear interval for reader\");\n            isMounted = false;\n            clearInterval(inter);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(\n        function () {\n            navigator.mediaDevices\n                .getUserMedia({ video: { facingMode: \"environment\", zoom: true, width:480, height:640 } })\n                .then(function (stream) {\n                    console.log(stream);\n                    console.log(\"TEST\");\n                    try {\n                        videoRef.current.srcObject = stream;\n                        videoRef.current.setAttribute(\"playsinline\", true); // required to tell iOS safari we don't want fullscreen\n                        videoRef.current.play();\n                        /*\n                        const [track] = stream.getVideoTracks();\n                        const capabilities = track.getCapabilities();\n                        const settings = track.getSettings();\n                        const imageWidth  = videoRef.current.videoWidth;\n                        const imageHeight = videoRef.current.videoHeight;\n                        setResolution([imageWidth, imageHeight]);\n                        console.log(\"Set resulution \" + imageWidth.toString() + \"x\" + imageHeight.toString());\n\n                        if (capabilities.focusDistance)\n                        {\n                            const text = document.getElementsById(\"text\").innerHtml(\"Change focus\");\n                            track.applyConstraints({advanced: [ {focusMode: \"auto\", focusDistance: capabilities.focusDistance.min}]});\n                        }\n                        else\n                        {\n                            const text = document.getElementsById(\"text\").innerHtml(\"Cannot change focus\");\n                        }\n                        */\n                    } catch {}\n                });\n            console.log(window.innerWidth.toString() + \"x\" + window.innerHeight.toString());\n        },\n        [videoRef]\n    );\n    useEffect(\n        function () {\n            var ctx = overlayRef.current.getContext(\"2d\");\n            const imageWidth  = videoRef.current.videoWidth;\n            const imageHeight = videoRef.current.videoHeight;\n            console.log(\"Resolution changed \" + imageWidth.toString() + \"x\" + imageHeight.toString());\n //           drawLine(ctx, { x: 20, y: 20, x1: 20, y1: 100 });\n\n            drawLine(ctx, { x: 0, y: imageHeight/2-75, x1: imageWidth, y1: imageHeight/2-75 }, { color: 'red', width:5 });\n            drawLine(ctx, { x: 0, y: imageHeight/2+75, x1: imageWidth, y1: imageHeight/2+75 }, { color: 'red', width:5 });\n            drawLine(ctx, { x: 0, y: imageHeight/2-75, x1: 0, y1: imageHeight/2+75 }, { color: 'red', width:5 });\n            drawLine(ctx, { x: imageWidth, y: imageHeight-75, x1: imageWidth, y1: imageHeight/2+75 }, { color: 'red', width:5 });\n\n//            drawLine(ctx, { x: 300, y: 250, x1: 260, y1: 70 }, { color: 'green', width: 5 });\n\n//            drawLine(ctx, { x: 70, y: 240, x1: 160, y1: 120 }, { color: 'blue' });\n\n            drawLine(ctx, { x: 0, y: 3, x1: imageWidth, y1: 3 }, { color: 'green', width: 5 });\n            drawLine(ctx, { x: 3, y: 0, x1: 3, y1: imageHeight }, { color: 'green', width: 5 });\n            drawLine(ctx, { x: 0, y: imageHeight-3, x1: imageWidth, y1: imageHeight-3 }, { color: 'green', width: 5 });\n            drawLine(ctx, { x: imageWidth-3, y: 0, x1: imageWidth-3, y1: imageHeight}, { color: 'green', width: 5 });\n\n        }, [resolution]\n    );\n    const drawLine = (context, info, style = {}) => {\n        const { x, y, x1, y1 } = info;\n        const { color = 'black', width = 1 } = style;\n\n        context.beginPath();\n        context.moveTo(x, y);\n        context.lineTo(x1, y1);\n        context.strokeStyle = color;\n        context.lineWidth = width;\n        context.stroke();\n    }\n\n/*\n    var sendBase64ToServer = function(base64) {\n        var httpPost = new XMLHttpRequest(),\n        path = \"http://127.0.0.1:8080/uploadImage\",\n        data = JSON.stringify({image: base64});\n        httpPost.onreadystatechange = function(err) {\n            if (httpPost.readyState == 4 && httpPost.status == 200){\n                console.log(httpPost.responseText);\n            } else {\n                console.log(err);\n            }\n        };\n        // Set the content type of the request to json since that's what's being sent\n        httpPost.setHeader('Content-Type', 'application/json');\n        httpPost.open(\"POST\", path, true);\n        httpPost.send(data);\n    };\n    var uploadImage = function(data, type){\n        sendBase64ToServer(data);\n    };\n*/\n    function capture() {\n        console.log(\"Capture\");\n        var canvas = canvasRef.current.getContext(\"2d\");\n        const imageWidth  = videoRef.current.videoWidth;\n        const imageHeight = videoRef.current.videoHeight;\n        canvasRef.current.width = imageWidth;\n        canvasRef.current.height = imageHeight;\n        canvas.drawImage(\n            videoRef.current,\n            0,\n            0,\n            canvasRef.current.width,\n            canvasRef.current.height\n        );\n        overlayRef.current.height = videoRef.current.videoHeight;\n        overlayRef.current.width = videoRef.current.videoWidth;\n        setResolution([imageWidth, imageHeight]);\n\n        const img = canvasRef.current.toDataURL('image/png');\n//        console.log(img);\n        axios({\n            method: \"post\",\n            mode: 'no-cors',\n            crossDomain: 'true',\n            url: \"https://10.0.0.68:8080/uploadImage\",\n//            url: \"https://localhost:8080/uploadImage\",\n            headers: {\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\n            },\n            withCredentials: false,\n            credentials: 'same-origin',\n            data: {\n                image: img\n            }\n        });\n    }\n\n    function tick() {\n\n\n//            console.log('tick');\n\n//            var videoElement = document.getElementById(\"video\")\n            console.log(videoRef.current.videoHeight.toString() + \"x\" + videoRef.current.videoWidth);\n            const imageWidth  = videoRef.current.videoWidth;\n            const imageHeight = videoRef.current.videoHeight;\n            canvasRef.current.height = imageWidth;\n            canvasRef.current.width = imageHeight;\n //          console.log(\"Resolution changed \" + imageWidth.toString() + \"x\" + imageHeight.toString());\n\n/*\n            if (image) {\n                const str = image.toDataURL();\n                console.log(str);\n            }\n*/\n//            uploadImage(image, \"image/png\");\n/*\n            axios({\n                method: \"post\",\n                mode: 'no-cors',\n                url: \"https://10.0.0.68:8080/uploadImage\",\n                headers: {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Content-Type\": \"application/json\",\n                    \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\n                },\n                withCredentials: true,\n                credentials: 'same-origin'\n            });\n*/\n//            console.log(image);\n\n            var ctx = canvasRef.current.getContext(\"2d\");\n            ctx.drawImage(\n                videoRef.current,\n                0,\n                0,\n                canvasRef.current.width,\n                canvasRef.current.height\n            );\n            /*\n            const str = canvasRef.toDataURL();\n            console.log(str);\n            var imageData = ctx.getImageData(\n                0,\n                0,\n                canvasRef.current.width,\n                canvasRef.current.height\n            );\n            BarcodeReader({\n                image: imageData,\n//                barcode: 'code-2of5',\n                barcode: 'coda-128',\n                options: {}\n            }).then(code => {\n                console.log('['+code+']');\n            }).catch(err => {\n                console.log(err);\n            })\n            */\n            /*\n            var code = jsQR(imageData.data, imageData.width, imageData.height, {\n                inversionAttempts: \"dontInvert\",\n            });\n            if (code) {\n                console.log(code.data);\n                setResult({ data: code.data, time: new Date() });\n            }\n            */\n            return;\n    }\n/*\n        <div>\n                <canvas id=\"canvas\" className=\"canvas\" ref={canvasRef} width={640} height={480}></canvas>\n                <Webcam id=\"webcam\" ref={webcamRef} screenshotFormat=\"image/png\" width={640} height={480}\n                    videoConstraints={videoConstraints}\n                />\n            <div>Test 2</div>\n        </div>\n*/\n\n    return (\n        <div>\n            <canvas id=\"canvas\" className=\"canvas\" ref={canvasRef} hidden/>\n            <video ref={videoRef}/>\n            <canvas id=\"overlay\" className=\"overlay\" ref={overlayRef}/>\n            <div id=\"text\">Test 0</div>\n            <button id=\"button\" type=\"button\" onClick={() => capture()}> Capture </button>\n        </div>\n    );\n}\n\nexport default Reader;\n","import React, { useEffect, useState } from \"react\";\r\nimport Reader from \"./Reader\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link } from 'react-router-dom'\r\nimport {USER_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction CheckOutStatus(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [expireDate, setExpireDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOutStatus initialize\");\r\n\r\n\r\n            if (\"autoLogin\" in props.context.cookie)\r\n            {\r\n                const autoLogin = (props.context.cookie.autoLogin === \"true\") ? true : false;\r\n                setAutoLogin(autoLogin);\r\n            }\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            setExpireDate(date.toGMTString());\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.doc.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            compare();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.logged)\r\n        {\r\n            setState(State.LoggedIn);\r\n            const userId = props.doc.userInfo['_id'];\r\n            setUserId(userId);\r\n            setSearchResults(props.doc.getRent(userId));\r\n            await loadHistory();\r\n        }\r\n        else\r\n        {\r\n            setState(State.LoggedOut);\r\n            setUserId(\"\");\r\n            setPasswordText(\"\");\r\n        }\r\n\r\n        console.log(\"Set title \" + props.doc.logged)\r\n        if (props.doc.logged)\r\n        {\r\n            if (props.doc.adminMode)\r\n                setTitle(props.text.userSearch);\r\n            else\r\n                setTitle(props.text.checkOut);\r\n        }\r\n        else\r\n        {\r\n            setTitle(props.text.logIn);\r\n        }\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const toggleAutoLogin = () => {\r\n        console.log(\"Toggle autoLogin\");\r\n        const cookieString = \"autoLogin=\" + (autoLogin ? \"false\":\"true\") + \"; expires=\" + expireDate + \";\";\r\n        console.log(cookieString);\r\n        document.cookie = cookieString;\r\n        setAutoLogin(!autoLogin);\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        setState(State.LoggingIn);\r\n        setUserId(userText.toUpperCase());\r\n        await loadUser();\r\n        await loadHistory();\r\n        console.log(\"Log In\");\r\n        compare();\r\n    }\r\n\r\n    const compare = () => {\r\n        if (!userData || state === State.LoggedOut)\r\n            return;\r\n\r\n        console.log(toast.isActive(loggingId));\r\n        const prop = toastProp;\r\n\r\n        let text;\r\n        if (props.context.checkLogIn(userData, passwordText))\r\n        {\r\n            props.doc.logIn(userData.user);\r\n\r\n            setSearchResults(props.doc.getRent(userId));\r\n            setState(State.LoggedIn);\r\n\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            document.cookie = \"user_id=\" + userId + \"; expires=\" + expireDate + \";\";\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.render = text;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = loggingId;\r\n        if (toast.isActive(loggingId))\r\n        {\r\n            console.log(\"update toast\");\r\n            toast.update(loggingId, prop);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"New toast\");\r\n            toast.info(text, prop);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {title}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!(state !== State.LoggedIn)}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <input type=\"password\" id=\"searchPassword\"\r\n                    placeholder={props.text.pwHolder}\r\n                    value={passwordText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setPasswordText(event.target.value);\r\n                    }} />\r\n                <div id=\"autoLogin\">\r\n                    <input type=\"checkbox\" id=\"autoLoginButton\" checked={autoLogin} onChange={() => toggleAutoLogin()}/>\r\n                    <label>\r\n                            {props.text.autoLogin}\r\n                    </label>\r\n                </div>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={!(state === State.LoggedIn)}>\r\n                <div>\r\n                    { showEntries(searchResults) }\r\n                </div>\r\n\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <ListView list={history} showCallback={(entries) => { return showEntries(entries); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOutStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, loadingId, getBookState, getUserState } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { Link } from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2,\r\n    LoggingOut: 3\r\n}\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 50);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [userData, setUserData] = useState({});\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOut initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                axios.get(url).then( response => {\r\n                        const book = response.data.scan;\r\n                        if (book) {\r\n                            console.log(book)\r\n                            setBarcode(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            console.log(toast.isActive(loggingId));\r\n            const prop = toastProp;\r\n\r\n            let text;\r\n            let notify = false;\r\n            if (\"USER_CODE\" in userData && state !== State.LoggedIn)\r\n            {\r\n                setState(State.LoggedIn);\r\n\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                text = props.text.logInSucceed;\r\n                notify = true;\r\n            }\r\n            else if (!(\"USER_CODE\" in userData))\r\n            {\r\n                setState(State.LoggedOut);\r\n\r\n                if (state === State.LoggingIn)\r\n                {\r\n                    prop.type = toast.TYPE.ERROR;\r\n                    text = props.text.logInFail;\r\n                    notify = true;\r\n                }\r\n            }\r\n\r\n            if (notify)\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": prop.type})\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 0)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n                setBarcode(\"\")\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            console.log(\"Notification \" + notifyRequest.text)\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//            if (\"id\" in notifyRequest)\r\n//                id = notifyRequest.id\r\n\r\n//            prop.toastId = id\r\n//            if (toast.isActive(id))\r\n//                toast.update(id, notifyRequest.text, prop);\r\n//            else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (state !== State.LoggedIn)\r\n                setBarcode(userText);\r\n        }, [userText]\r\n    );\r\n\r\n    const showBook = (book, index) => {\r\n        const id = book[\"BARCODE\"];\r\n        const state = getBookState(props.text, book[\"_STATE\"].toString());\r\n        const rentDate = book[\"_RENT\"];\r\n        const retDate = book[\"_RETURN\"];\r\n        const bookName = book[\"BOOKNAME\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td className=\"bookState\">{state}</td>\r\n                        <td colSpan=\"2\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const updateUser = async (userText) => {\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/user?user=\" + userText;\r\n        const obj = {\"params\": {\"user\": userText, \"data\":\"nothing\"}};\r\n        console.log(obj);\r\n        const response = await axios.get(url, btoa(JSON.stringify(obj)));\r\n        const user = response.data.return;\r\n        setUserData(user);\r\n        console.log(user);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        console.log(\"LOGIN\");\r\n        console.log(userText);\r\n        if (userText.length === 0)\r\n            return;\r\n        setState(State.LoggingIn);\r\n        const id = userText.toUpperCase();\r\n        setUserId(id);\r\n        updateUser(id);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Log Out\");\r\n        setUserData({});\r\n        setUserText(\"\");\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n        document.getElementById('barcodeScan').value= null;\r\n    }\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            console.log(url)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.loading,\r\n                              \"type\": toast.TYPE.INFO})\r\n            getBase64(file).then(\r\n                img => {\r\n                    axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(response);\r\n                        console.log(book);\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.succeededToOpen,\r\n                                              \"type\": toast.TYPE.SUCCESS});\r\n                        }\r\n                        else\r\n                        {\r\n                            console.log(\"Failed\");\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR});\r\n                            setScannedBook({});\r\n                            setBarcode(\"\")\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                const bookId = \"HK\" + bookText;\r\n                console.log(\"Search book \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Barcode: \" + barcode);\r\n            if (barcode.length == 0)\r\n                return;\r\n            if (state !== State.LoggedIn)\r\n            {\r\n                setUserText(barcode);\r\n            }\r\n            else\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [barcode]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n        document.getElementById('barcodeScan').value= null;\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/checkOut\"\r\n        axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE,\r\n                user: userId\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return\r\n            console.log(\"Rent confirmed\");\r\n            console.log(ret)\r\n\r\n            if (ret === \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.rentSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            setScannedBook({});\r\n            setBarcode(\"\")\r\n            updateUser(userId);\r\n        });\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        document.getElementById('barcodeScan').value= null;\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n//            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn ? true : false }>\r\n//            <div id=\"checkOutResult\" hidden={true}>\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.checkOut}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={state === State.LoggedIn}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn}>\r\n                {userData.USER_CODE && (\r\n                    <div id=\"userInfo\">\r\n                        <div id=\"userItem\">\r\n                            {userData.USER_CODE + \" : \" + userData.USER_NAME + props.text.nameSuffix}\r\n                        </div>\r\n                        <div id=\"userItem\"> {getUserState(props.text, userData.USER_STATE)} </div>\r\n                        <div id=\"userItem\"> {userData._RENT.length + \" \" + props.text.rentSuffix} </div>\r\n                    </div>\r\n                )}\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                    <label id=\"barcodeScan\" hidden>\r\n                        <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                        <span>\r\n                        <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                        </span>\r\n                    </label>\r\n                    <label id=\"manualInput\">\r\n                        <div id=\"hkPrefix\">\r\n                        HK\r\n                        </div>\r\n                        <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n                            placeholder={props.text.bookHolder}\r\n                            onInput={(event) => {\r\n                                setBookText(event.target.value);\r\n                            }} />\r\n                    </label>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmRent} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \": \" + scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> Confirm </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> Cancel </button>\r\n                </div>\r\n                <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.logOut} </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Reader from \"./Reader\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId, toUtf8 } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link } from 'react-router-dom'\r\nimport {USER_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction Return(props) {\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 50);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [title, setTitle] = useState(\"\");\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            props.doc.setCallback(undefined);\r\n            console.log(\"=======================================\");\r\n            console.log(\"Return initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr && ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                axios.get(url).then( response => {\r\n                        const book = response.data.scan;\r\n                        console.log(\"Barcode: \" + book);\r\n                        if (book) {\r\n                            console.log(barcode + \" -> \" + book)\r\n                            setBarcode(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        setInitialized(true);\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                const bookId = \"HK\" + bookText;\r\n                console.log(\"Search book \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"B\" + barcode);\r\n            if (barcode.length > 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [barcode]\r\n    );\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.loading,\r\n                              \"type\": toast.TYPE.INFO})\r\n            getBase64(file).then(\r\n                img => {\r\n                    const data = axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.succeededToOpen,\r\n                                              \"type\": toast.TYPE.SUCCESS});\r\n                        }\r\n                        else\r\n                        {\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR})\r\n                            setScannedBook({})\r\n                            setBarcode(\"\")\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE == 1 || scannedBook._STATE == 3)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    console.log(\"Not rented\")\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.NOT_RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                    setBarcode(\"\")\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! \"text\" in notifyRequest)\r\n                return\r\n\r\n            toast.dismiss();\r\n            const prop = toastProp;\r\n            const text = notifyRequest.text\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//           if (\"id\" in notifyRequest)\r\n//               id = notifyRequest.id\r\n\r\n//           prop.toastId = id\r\n //          if (toast.isActive(id))\r\n//               toast.update(id, notifyRequest.text, prop);\r\n//           else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/return\"\r\n        const data = axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return;\r\n            console.log(ret);\r\n            if (ret == \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.returnSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            setScannedBook({});\r\n            setBarcode(\"\")\r\n        });\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.return}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                <label id=\"barcodeScan\" hidden>\r\n                    <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                    <span>\r\n                    <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                    </span>\r\n                </label>\r\n                <label id=\"manualInput\">\r\n                    <div id=\"hkPrefix\">\r\n                        HK\r\n                    </div>\r\n                    <input inputMode=\"numeric\" pattern=\"\\d*\" type=\"text\" id=\"searchInput\"\r\n                        placeholder={props.text.bookHolder}\r\n                        onInput={(event) => {\r\n                            setBookText(event.target.value);\r\n                        }} />\r\n                </label>\r\n                </div>\r\n                <div id=\"checkReturn\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmReturn} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\" + scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> Confirm </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> Cancel </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n//                    <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n\r\nexport default Return;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp, loggingId, SEARCH_PER_SCREEN, MAX_SEARCH_ENTRY, getUserState } from \"../Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { Link } from 'react-router-dom'\r\nimport {USER_QUERY, USERS_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(userText, 50);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [history, setHistory] = useState([]);\r\n    const {loading: userLoading, data: userListData, error: userError } = useQuery(USERS_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [userList, setUserList] = useState({});\r\n    const [title, setTitle] = useState(\"\");\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n    const [rented, setRented] = useState([]);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"UserSearch initialize\");\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc(false);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                const stateStr = {\"0\": props.text.normal, \"1\": props.text.overDue, \"2\": props.text.stopped};\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n\r\n        if (notify)\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Set title \" + props.logged)\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const selectId = async (id) => {\r\n        if (selectedRef.current === -1 || selectedRef.current !== id)\r\n        {\r\n            console.log(\"Select \" + id);\r\n            setSelectedId(id);\r\n            selectedRef.current = id;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n        }\r\n    }\r\n\r\n    const showUser = (user, index) => {\r\n        const key = index.toString();\r\n        return (\r\n                <div>\r\n                    <table><tbody>\r\n                        <tr key={key} className=\"searchTr\" onClick={async ()=> await selectId(user.id)}>\r\n                            <td className=\"bookData\">{user.id}</td>\r\n                            <td className=\"bookData\">{user.name}</td>\r\n                            <td className=\"bookData\">{user.state}</td>\r\n                            <td className=\"bookData\">{user.rent}</td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                        {user.id === selectedRef.current && showEntries(user.id) }\r\n                </div>\r\n                );\r\n    }\r\n\r\n    const showUsers = (result) => {\r\n        return (<div>\r\n                    {\r\n                        result.map((user, index) => {\r\n                            return showUser(user, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 &&\r\n                        <table><tbody>\r\n                            <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                        </tbody></table>\r\n                    }\r\n                </div>);\r\n    }\r\n\r\n    const showEntries = (id) => {\r\n        const result = props.doc.getRent(id);\r\n        return (<>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </>);\r\n    }\r\n    useEffect(\r\n        () => {\r\n            async function findUsers(text) {\r\n                let results = [];\r\n\r\n//                for (let i = 0 ; i < userList.length ; i++) {\r\n                  for (const key in userList) {\r\n                    const row = userList[key];\r\n                    if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                    if ((row.name && row.name.toString().includes(text)) ||\r\n                        (row.id.toLowerCase() === text.toLowerCase()))\r\n                    {\r\n                        results.push(row);\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a['text'] > b['text']; });\r\n                return results;\r\n            }\r\n            async function query() {\r\n                if (searchQuery) {\r\n                    let sr = await findUsers(searchQuery);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        setSelectedId(sr[0].index);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n                setPageNum(0);\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, props]\r\n    );\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.userSearch}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onChange={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <div>\r\n                    <ListView list={searchResults} showCallback={(entries) => { return showUsers(entries); }}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Reader from \"./Reader\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId } from \"../Util\";\r\nimport { SEARCH_PER_SCREEN, MAX_SEARCH_ENTRY, getBookState, getUserState, toUtf8 } from \"../Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { Link } from 'react-router-dom'\r\nimport {USERS_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction RentHistory(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [rentList, setRentList] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const {loading: userLoading, data: userListData, error: userError } = useQuery(USERS_QUERY);\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [expireDate, setExpireDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [displayList, setDisplayList] = useState([]);\r\n    const [userList, setUserList] = useState({});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            setExpireDate(date.toGMTString());\r\n\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                const stateStr = {\"0\": props.text.normal, \"1\": props.text.overDue, \"2\": props.text.stopped};\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        return a1.rentDate > a2.rentDate;\r\n    }\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        const rent = props.doc.getRent();\r\n        rent.sort(compare);\r\n        setRentList(rent);\r\n\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        var userName;\r\n        const key = index.toString();\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookRow\">\r\n                        <td className=\"bookCell\"> {rent[\"user\"]} </td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookBottom\">\r\n                        <td colSpan=\"3\" className=\"bookCell\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = rentList.length;\r\n                console.log(\"Page num \" + pageNum.toString());\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayList(rentList.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayList(rentList);\r\n                setPageNum(0);\r\n            }\r\n        }, [rentList, pageNum]\r\n    );\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (rentList.length > (pageNum + 1) * SEARCH_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n/*\r\n                <div>\r\n                    { showEntries(displayList) }\r\n                </div>\r\n                {rentList.length > SEARCH_PER_SCREEN && (\r\n                    <div id=\"pageControl\">\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={movePrev}/>\r\n                        </div>\r\n                        <div className=\"pageNum\" id=\"pageNum\">\r\n                            {pageNum+1}\r\n                        </div>\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateNextIcon fontSize=\"large\" sx={{color: (rentList.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={moveNext}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n*/\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.history}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n/*\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <div>\r\n                    { showEntries(history) }\r\n                </div>\r\n*/\r\n\r\nexport default RentHistory;\r\n","import { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        this.initialized = false;\r\n        this.bookReady = false;\r\n        this.rentReady = false;\r\n        this.userReady = false;\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        this.book = {};\r\n        this.rent = {};\r\n        this.logCallback = undefined;\r\n        this.admin = false;\r\n        this.adminMode = false;\r\n        this.serverInfo = {};\r\n        this.serverAvailable = false;\r\n        this.ipAddr = \"\"\r\n    }\r\n\r\n    async updateIpAddr()\r\n    {\r\n        const response = await axios.get(\"https://api.ipify.org/?format=json\");\r\n        console.log(\"Get IP Address\");\r\n        console.log(response.data);\r\n        const ipAddr = response.data.ip;\r\n        console.log(\"IP addr updated \" + ipAddr)\r\n        this.ipAddr = ipAddr;\r\n        this.checkServerIp()\r\n    }\r\n\r\n    checkServerIp()\r\n    {\r\n        if (this.ipAddr.length === 0 || !this.serverInfo.globalIp)\r\n            return\r\n        if (this.serverInfo.globalIp === this.ipAddr)\r\n        {\r\n            console.log(\"Server is accessible \" + this.serverInfo.localIp);\r\n            this.serverAvailable = true;\r\n            const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n            window.open(query);\r\n            axios.get(query).then( (response) => {\r\n                                console.log(\"Server connected\");\r\n                                console.log(response.data);\r\n                          });\r\n        }\r\n    }\r\n\r\n\r\n    checkState() {\r\n        if (this.bookReady && this.rentReady) {\r\n            this.initialized = true;\r\n            toast.dismiss();\r\n            if (this.callback) {\r\n                this.callback();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setLogCallback(callback) {\r\n        this.logCallback = callback;\r\n    }\r\n\r\n    setRent(rent) {\r\n        this.rent = rent\r\n        this.rentReady = true;\r\n        this.checkState();\r\n        this.checkRent();\r\n    }\r\n\r\n    setServerInfo(serverInfo)\r\n    {\r\n        this.serverInfo = serverInfo;\r\n        console.log(this.serverInfo.globalIp);\r\n        this.checkServerIp()\r\n    }\r\n\r\n    setBook(books) {\r\n        this.book = {};\r\n        for (let i = 0 ; i < books.length ; i++)\r\n        {\r\n            const book = books[i];\r\n            const id = book['_id'];\r\n            this.book[id] = book;\r\n        }\r\n        this.bookReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setUser(users) {\r\n        this.user = {};\r\n        for (let i = 0 ; i < users.length ; i++)\r\n        {\r\n            const user = users[i];\r\n            const id = user.id;\r\n            this.user[id] = user;\r\n            this.user[id][\"rent\"] = 0;\r\n        }\r\n        this.userReady = true;\r\n        this.checkRent();\r\n    }\r\n\r\n    checkRent() {\r\n        if (!this.userReady || !this.rentReady)\r\n        {\r\n            console.log(\"Cannot check rent\");\r\n            return;\r\n        }\r\n        console.log(this.rent);\r\n        for (let i = 0 ; i < this.rent.length ; i++)\r\n        {\r\n            const state = this.rent[i].state;\r\n\r\n//            console.log(state);\r\n            if (state !== \"1\" && state !== \"3\")\r\n                continue;\r\n\r\n            const userId = this.rent[i].user_id;\r\n//            console.log(this.rent[i]);\r\n            console.log(userId);\r\n            console.log(userId.length);\r\n            if (userId && userId.length > 0 && userId in this.user)\r\n                this.user[userId][\"rent\"] += 1;\r\n            else\r\n                this.user[userId][\"rent\"] = 1;\r\n        }\r\n        console.log(this.user);\r\n    }\r\n\r\n    setAdminMode(mode) {\r\n        this.adminMode = mode;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n    }\r\n\r\n    logIn(userInfo) {\r\n        console.log(\"Logged in: \" + userInfo['_id']);\r\n        this.logged = true;\r\n        this.userInfo = userInfo;\r\n        if (userInfo['level'] === \"2\")\r\n            this.admin = true;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n    }\r\n\r\n    logOut() {\r\n        console.log(\"Logged out\");\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        if (this.logCallback)\r\n            this.logCallback(false);\r\n    }\r\n\r\n    getRent(userId = undefined) {\r\n        let ret = [];\r\n        console.log(\"Check \" + userId);\r\n        if (!this.bookReady)\r\n            return ret;\r\n//        console.log(this.rent.length);\r\n        for (let i = 0 ; i < this.rent.length ; i++) {\r\n            const entry = this.rent[i];\r\n            if (userId !== undefined && entry.user_id !== userId)\r\n                continue;\r\n//            console.log(entry)\r\n            if (entry.state !== \"1\" && entry.state !== \"3\")\r\n                continue;\r\n//            console.log(entry);\r\n            const id = entry[\"book_id\"];\r\n            const book = this.book[id];\r\n//            console.log(book)\r\n            let retEntry = {}\r\n            retEntry[\"id\"] = book._id\r\n            retEntry[\"title\"] = book.title\r\n            retEntry[\"rentDate\"] = entry.rent_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n            retEntry[\"retDate\"] = entry.return_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n            retEntry[\"user\"] = entry.user_id;\r\n            ret.push(retEntry)\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n\r\n    async openDoc() {\r\n        try {\r\n            this.initialized = true;\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.initialized;\r\n    }\r\n\r\n    setCallback(updateFunc)\r\n    {\r\n        console.log(\"Update function registered\");\r\n        this.callback = updateFunc;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","import config from \"./api/key\";\n\nconst NodeRSA = require('node-rsa');\n\nconst prk = new NodeRSA(config[\"privateKey\"]);\n\nclass Context {\n    constructor() {\n        console.log(\"Create Context\");\n\n        console.log(\"Cookies\");\n        const rawCookie = document.cookie;\n        this.cookie = rawCookie\n            .split(\";\")\n            .map(v => v.split(\"=\"))\n            .reduce((acc, v) => {\n                const key = v.shift().trim();\n                const value = v.join(\"=\").trim();\n                acc[decodeURIComponent(key)] = decodeURIComponent(value);\n                return acc;\n            }, {});\n        console.log(this.cookie);\n    }\n\n    checkLogIn(userData, passwordText) {\n        var matched = false;\n        var passwordTyped;\n        if (userData.user && passwordText.length > 0) {\n            console.log(\"User data available\");\n            const emailDb = userData.user.encrypted_email;\n            const phoneDb = userData.user.encrypted_phone;\n\n            passwordTyped = prk.sign(passwordText, 'base64');\n            if (passwordText === emailDb ||\n                passwordText === phoneDb )\n            {\n                passwordTyped = passwordText;\n                matched = true;\n            }\n            else if (emailDb === passwordTyped)\n            {\n//                console.log(\"Email match\");\n                matched = true;\n            }\n            else\n            {\n                var numberString = \"\";\n                for (let i = 0 ; i < passwordText.length ; i++)\n                {\n                    if (!isNaN(passwordText[i]))\n                        numberString += passwordText[i];;\n                }\n                passwordTyped = prk.sign(numberString, 'base64');\n                if (passwordTyped === phoneDb)\n                {\n//                    console.log(\"Phone match\");\n                    matched = true;\n                }\n                else\n                {\n//                    console.log(\"Nothing matched\");\n                }\n            }\n\n//            console.log(\"toast available\");\n        }\n        if (matched)\n        {\n            const date = new Date();\n            const days=2;\n            date.setTime(date.getTime()+(days*24*60*60*1000));\n            const expireDate = date.toGMTString();\n            document.cookie = \"password=\" +  passwordTyped + \"; expires=\" + expireDate + \";\";\n        }\n        return matched\n    }\n}\n\nexport default Context;\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Dropdown.css'\r\n\r\nfunction DropDown(props) {\r\n\r\n    const [dropdown, setDropdown] = useState(false);\r\n    const [click, setClick] = useState(false)\r\n\r\n    useEffect(\r\n        () => {\r\n            if (dropdown !== props.dropdown)\r\n            {\r\n                console.log(\"User clicked \" + props.doc.logged);\r\n                console.log(props.dropdown);\r\n                setClick(!click);\r\n                setDropdown(props.dropdown);\r\n            }\r\n            const menu = document.getElementById(\"dropdown-menu\");\r\n//            menu.hidden = !click;\r\n            if (!click)\r\n            {\r\n               menu.classList.remove('is-show');\r\n            }\r\n            else\r\n            {\r\n               menu.classList.add('is-show');\r\n            }\r\n\r\n        }, [props.dropdown, dropdown, click]\r\n    );\r\n\r\n    const logOut = () =>\r\n    {\r\n        setClick(false);\r\n        props.doc.logOut();\r\n        document.cookie = \"user_id=\";\r\n        document.cookie = \"password=\";\r\n        document.cookie = \"autoLogin=false\";\r\n    }\r\n\r\n    return (\r\n            <div id='dropdown-menu' onClick={() => { setClick(!click)}} className='dropdown-menu'>\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                    <div className='menu-items'>\r\n                        {props.doc.userInfo[\"_id\"] + \" : \" + props.doc.userInfo[\"name\"] + props.text.nameSuffix}\r\n                    </div>\r\n                    <hr className=\"hline\"/>\r\n                    </>\r\n                }\r\n                <Link className='menu-items' to=\"/\" onClick={() => setClick(false)}>\r\n                    {props.text.home}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/notice\" onClick={() => setClick(false)}>\r\n                    {props.text.notice}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/search\" onClick={() => setClick(false)}>\r\n                    {props.text.bookSearch}\r\n                </Link>\r\n                {props.doc.serverAvailable &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOut\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOut}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/return\" onClick={() => setClick(false)}>\r\n                            {props.text.return}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOutStatus}\r\n                        </Link>\r\n                        {props.doc.admin &&\r\n                            <>\r\n                            <hr className=\"hline\"/>\r\n                            <Link className='menu-items' to=\"/userSearch\" onClick={() => setClick(false)}>\r\n                                {props.text.userSearch}\r\n                            </Link>\r\n                            <Link className='menu-items' to=\"/rentHistory\" onClick={() => setClick(false)}>\r\n                                {props.text.history}\r\n                            </Link>\r\n                            </>\r\n                        }\r\n                        <hr className=\"hline\"/>\r\n                        <div className='menu-items' onClick={() => logOut()}>\r\n                            {props.text.logOut}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && !props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.logIn}\r\n                        </Link>\r\n                    </>\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default DropDown;\r\n","import React, { useState } from 'react';\r\nimport {isMobile} from \"react-device-detect\";\r\nimport \"./Navbar.css\";\r\nimport DropDown from \"./Dropdown\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction Navbar(props) {\r\n    const [dropdown, setDropdown] = useState(false)\r\n\r\n    const onClick = () => {\r\n        const maxWidth = document.getElementById(\"navbar\").style.maxWidth;\r\n        console.log(\"maxWidth\");\r\n        console.log(maxWidth);\r\n        console.log(document.getElementById(\"navbar\").style.width);\r\n        setDropdown(!dropdown);\r\n    }\r\n\r\nreturn (\r\n    <>\r\n        <div id=\"navbar\" className=\"navbar\">\r\n            <div className='title'>\r\n                {isMobile? (<h1>{props.text[\"titleShort\"]}</h1>) : (<h1>{props.text[\"titleLong\"]}</h1>)}\r\n            </div>\r\n            <div className='menu' onClick={onClick} >\r\n                <MenuIcon className=\"img\" fontSize=\"large\" sx={{ color: \"#ffffff\"}}/>\r\n            </div>\r\n            <DropDown text={props.text} doc={props.doc} dropdown={dropdown}/>\r\n        </div>\r\n    </>\r\n)\r\n}\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Notice from \"./pages/Notice\";\r\nimport Search from \"./pages/Search\";\r\nimport CheckOutStatus from \"./pages/CheckOutStatus\";\r\nimport CheckOut from \"./pages/CheckOut\";\r\nimport Return from \"./pages/Return\";\r\nimport UserSearch from \"./pages/UserSearch\";\r\nimport RentHistory from \"./pages/RentHistory\";\r\nimport Reader from \"./pages/Reader\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\nimport Context from \"./Context\";\r\nimport text from \"./api/text\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"./Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport Navbar from \"./Navbar\";\r\nimport {BOOK_QUERY, RENT_QUERY, USER_QUERY, SERVER_QUERY} from \"./api/query.js\";\r\n\r\nconst doc = new Doc();\r\nconst context = new Context();\r\n\r\nconst textString = {};\r\nlet logMsg = \"\"\r\nfunction App() {\r\n\r\n//    const [checkOutStr, setCheckOutStr] = useState(\"\");\r\n    const [logged, setLogged] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const { loading: rentLoading, error: rentError, data: rentData } = useQuery(RENT_QUERY);\r\n    const { loading: serverLoading, error: serverError, data: serverData } = useQuery(SERVER_QUERY);\r\n    const [loadBook, { loading: bookLoading, error: bookError, data: bookData }] = useLazyQuery(BOOK_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY, { \"variables\": { \"_id\": userId } });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            logMsg = logMsg + \"<p>Initialize app</p>\";\r\n            console.log(process.env.APP_NAME);\r\n            console.log(process.env.APP_VERSION);\r\n            const lang = navigator.languages;\r\n            console.log(lang);\r\n            let ts = {}\r\n            if (lang.length> 0 && (lang[0].toLowerCase().includes(\"kr\") || lang[0].toLowerCase().includes(\"ko\")))\r\n            {\r\n                ts = text.kr;\r\n            }\r\n            else\r\n            {\r\n                ts = text.en;\r\n            }\r\n            for (let key in ts)\r\n            {\r\n                textString[key] = ts[key];\r\n            }\r\n\r\n            await doc.updateIpAddr();\r\n\r\n            if (\"autoLogin\" in context.cookie &&  context.cookie.autoLogin === \"true\")\r\n            {\r\n                console.log(\"Auto Login: \" + context.cookie.user_id);\r\n                setUserId(context.cookie.user_id);\r\n                console.log(context.cookie.nothing);\r\n                loadUser();\r\n            }\r\n\r\n        }\r\n        initialize();\r\n    }, [loadUser]);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data loaded\");\r\n            if (!userData)\r\n            {\r\n                return;\r\n            }\r\n\r\n            console.log(\"Login check \" + context.cookie.password);\r\n            console.log(userData);\r\n            if (context.cookie.password && context.checkLogIn(userData, context.cookie.password))\r\n            {\r\n                console.log(\"Login suceeded\");\r\n                doc.logIn(userData.user);\r\n            }\r\n\r\n\r\n\r\n        }, [userData]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Rent Query Updated\");\r\n            logMsg = logMsg + \"<p>Rent Query Updated \" + rentLoading + \" \" + rentError + \"</p>\";\r\n            console.log(rentLoading);\r\n            console.log(rentError);\r\n            if (rentData)\r\n            {\r\n                console.log(\"Rent available\");\r\n                logMsg = logMsg + \"<p>Rent available</p>\"\r\n//                console.log(rentData.rents)\r\n                doc.setRent(rentData.rents)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [rentLoading, rentError, rentData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Book Query Updated\");\r\n            logMsg = logMsg + \"<p>Book Query Updated</p>\";\r\n            console.log(bookLoading)\r\n            console.log(bookError)\r\n            if (bookData)\r\n            {\r\n                console.log(\"Book available\")\r\n                logMsg = logMsg + \"<p>Book available</p>\";\r\n//                console.log(bookData.books)\r\n                doc.setBook(bookData.books)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [bookLoading, bookError, bookData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Server Query Updated\");\r\n            logMsg = logMsg + \"<p>Server Query Updated</p>\";\r\n            console.log(serverLoading)\r\n            console.log(serverError)\r\n            if (serverData)\r\n            {\r\n                console.log(\"Server info available\")\r\n                logMsg = logMsg + \"<p>Server info available</p>\";\r\n                console.log(serverData.serverInfo)\r\n                doc.setServerInfo(serverData.serverInfo)\r\n\r\n                if (!doc.serverAvailable)\r\n                {\r\n                    console.log(\"Server is not available. Load books from cloud DB\");\r\n                    loadBook();\r\n                    const prop = toastProp;\r\n                    prop.type = toast.TYPE.LOADING;\r\n                    prop.autoClose = false;\r\n                    prop.toastId = loadingId;\r\n                    toast.loading(textString.loading, prop);\r\n                    doc.setLogCallback(updateLog);\r\n                }\r\n            }\r\n        }, [serverLoading, serverError, serverData]\r\n    );\r\n\r\n    function notifyInit()\r\n    {\r\n        const prop = toastProp;\r\n        prop.type = toast.TYPE.SUCCESS;\r\n        prop.render = textString.succeededToOpen;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = \"\";\r\n        toast.info(textString.succeededToOpen, prop);\r\n    }\r\n\r\n    function updateLog(logged) {\r\n        console.log(\"==== Update logging state \" + doc.logged);\r\n        console.log(doc.userInfo);\r\n        setLogged(doc.logged);\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n        <div className=\"App\">\r\n            <div>\r\n                <ToastContainer\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    limit={10}\r\n                />\r\n            </div>\r\n            <Navbar doc={doc} text={textString}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home doc={doc} text={textString}/>} />\r\n                <Route path=\"/notice\" element={<Notice doc={doc} text={textString} />} />\r\n                <Route path=\"/search/:id?\" element={<Search doc={doc} text={textString}/>} />\r\n                <Route path=\"/checkOutStatus\" element={<CheckOutStatus context={context} doc={doc} text={textString} logged={logged}/>} />\r\n                <Route path=\"/userSearch\" element={<UserSearch context={context} doc={doc} text={textString} />} />\r\n                <Route path=\"/checkOut\" element={<CheckOut context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/return\" element={<Return context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentHistory\" element={<RentHistory context={context} doc={doc} text={textString}/>} />\r\n            </Routes>\r\n\r\n            <h3>\r\n                v {process.env.REACT_APP_VERSION}\r\n            </h3>\r\n        </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport * as Realm from \"realm-web\";\r\nimport {\r\n    ApolloClient,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    InMemoryCache,\r\n} from \"@apollo/client\";\r\n\r\nconst APP_ID = 'data-xaque';\r\nconst graphqlUri = `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\r\nconst app = new Realm.App(APP_ID);\r\n\r\n// Gets a valid Realm user access token to authenticate requests\r\nasync function getValidAccessToken() {\r\n    // Guarantee that there's a logged in user with a valid access token\r\n    if (!app.currentUser) {\r\n        // If no user is logged in, log in an anonymous user. The logged in user will have a valid\r\n        // access token.\r\n        await app.logIn(Realm.Credentials.anonymous());\r\n//        await app.logIn(apiKey);\r\n    } else {\r\n        // An already logged in user's access token might be stale. Tokens must be refreshed after\r\n        // 30 minutes. To guarantee that the token is valid, we refresh the user's access token.\r\n        await app.currentUser.refreshAccessToken();\r\n    }\r\n//    console.log(\"AccessToken: [\" + app.currentUser.accessToken + \"]\");\r\n\r\n    return app.currentUser.accessToken;\r\n}\r\n\r\n// Configure the ApolloClient to connect to your app's GraphQL endpoint\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\r\n        // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\r\n        // access token before sending the request.\r\n        fetch: async (uri, options) => {\r\n            const accessToken = await getValidAccessToken();\r\n            options.headers.Authorization = `Bearer ${accessToken}`;\r\n            return fetch(uri, options);\r\n        },\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}