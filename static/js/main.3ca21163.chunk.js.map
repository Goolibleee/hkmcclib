{"version":3,"sources":["pages/Home.js","Util.js","api/query.js","pages/Notice.js","ListView.js","pages/Search.js","api/query_test.js","pages/CheckOutStatus.js","pages/CheckOut.js","pages/Return.js","UserInfo.js","pages/UserSearch.js","pages/RentalSituation.js","pages/RentHistory.js","pages/NewMember.js","Doc.js","Context.js","Dropdown.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useEffect","_initialize","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","console","log","doc","setCallback","undefined","stop","apply","arguments","initialize","_jsx","id","dangerouslySetInnerHTML","__html","text","homeText","SEARCH_PER_SCREEN","MAX_SEARCH_ENTRY","String","prototype","format","formatted","this","i","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","getUserState","state","normal","overDue","stopped","getBookState","available","checkedOut","reserved","lost","damaged","given","notAvailable","deleted","compareRent","a1","a2","rentDate","title","toUtf8","unescape","encodeURIComponent","loadingId","loggingId","NOTICE_QUERY","gql","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","CONTENT_QUERY","_templateObject8","SERVER_QUERY","_templateObject9","Notice","_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useState3","_useState4","displayedCodes","setDisplayedCodes","_useState5","_useState6","pageNum","setPageNum","_useState7","_useState8","selectedId","setSelectedId","_useQuery","useQuery","noticeLoading","loading","noticeData","data","noticeError","error","_useLazyQuery","useLazyQuery","_useLazyQuery2","loadSelected","_useLazyQuery2$","selectedLoading","selectedData","selectedError","notices","toString","startIdx","count","Math","min","slice","showEntry","result","_jsxs","className","children","date","colSpan","onClick","_id","notice","content","map","NavigateBeforeIcon","fontSize","sx","color","NavigateNextIcon","showCallback","ListView","itemList","setItemList","displayList","setDisplayList","list","keyValue","detail","initialized","Search","inputText","setInputText","_useDebounce","useDebounce","searchQuery","selectedRef","useRef","bookList","setBookList","_useState9","_useState10","rentList","setRentList","_useState11","_useState12","setBookState","bookStateRef","_useState13","_useState14","needConfirm","setNeedConfirm","needConfirmRef","_useState15","_useState16","queryRequest","toggleQueryRequest","useParams","updateDoc","_updateDoc","_callee6","rl","rented","bl","books","key","book","_context6","rent","push","code","book_id","retDate","return_date","name","num","author","claim","claim_num","totalName","series","category","publisher","publish","isOpen","serverAvailable","findBooks","_x","_findBooks","_callee2","results","url","obj","response","resultString","resultObject","_i","row","_resultString","_retDate","_state","_iterator","_step","entry","_resultObject","_context2","btoa","serverInfo","localIp","port","axios","get","sent","return","abrupt","concat","BOOKNAME","CLAIMNUM","_STATE","returnDate","_RETURN","index","BARCODE","AUTHOR","TOTAL_NAME","CLAMENUM","PUBLISH","CLAIM","includes","_createForOfIteratorHelper","s","n","done","value","t0","e","f","finish","parseInt","sort","a","b","_query","_callee3","sr","_context3","current","query","selectId","_ref","_callee4","_context4","_x2","setState","_confirmAction","_callee7","ipAddr","portNum","_context7","post","then","hidden","entryId","flags","_callee5","_context5","rowSpan","admin","disabled","confirmAction","confirm","cancel","bookSearch","placeholder","searchBook","onChange","event","target","entries","BOOK_QUERY","RENT_QUERY","USERS_QUERY","USER_QUERY","HISTORY_QUERY","HISTORY_PERIOD_QUERY","State","LoggedOut","LoggingIn","LoggedIn","CheckOutStatus","userText","setUserText","passwordText","setPasswordText","setInitialized","userId","setUserId","history","setHistory","autoLogin","setAutoLogin","loadUser","userData","_useLazyQuery3","_useLazyQuery4","loadHistory","historyData","_useState17","_useState18","expireDate","setExpireDate","_useState19","_useState20","setTitle","_userId","logged","userInfo","getRent","t1","adminMode","userSearch","checkOut","logIn","_autoLogin","context","cookie","Date","setTime","getTime","days","toGMTString","_func","compare","func","bookReady","rentReady","hist","rentLogs","rentLog_tests","book_state","return_data","split","showEntries","retText","bookName","React","Fragment","Link","to","showRented","noEntry","toUpperCase","_ref2","prop","toast","isActive","checkLogIn","user_test","type","TYPE","SUCCESS","logInSucceed","document","ERROR","logInFail","render","toastId","update","info","idHolder","onInput","pwHolder","checked","cookieString","toggleAutoLogin","dueDate","Navigate","LoggingOut","CheckOut","bookText","setBookText","setUserData","scannedBook","setScannedBook","notifyRequest","setNotifyRequest","barcode","setBarcode","setRented","interval","setInterval","scan","clearInterval","notify","RENTED","getElementById","dismiss","updateUser","user","JSON","stringify","_ref3","logOut","_ref4","imageCaptured","files","file","INFO","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","getBase64","img","method","mode","crossDomain","headers","withCredentials","credentials","image","succeededToOpen","INVALID_BOOK","showBook","bookId","search","USER_CODE","USER_NAME","nameSuffix","USER_STATE","_RENT","rentSuffix","CameraAltIcon","accept","capture","inputMode","pattern","bookHolder","confirmRent","ret","rentSucceed","NOT_AVAILABLE","Return","returned","setReturned","NOT_RENTED","confirmReturn","returnSucceed","UserInfo","setDisabled","setUserInfo","setProperty","PHONE_NUMBER","EMAIL","ADDRESS","USER_LEVEL","NOTICE","Object","keys","registeredDate","REG_DATE","phone","email","address","notice_","level","kid","adult","save","confirmSave","refresh","userLoading","userListData","userError","userList","setUserList","_args6","users","user_tests","setUser","getUser","showUsers","showUser","_Fragment","findUsers","_findUsers","toLowerCase","input","trim","err","RentHistory","userName","RETURN_DATE","STATS","LENT_DATE","USER","situation","fromTime","setFromTime","toTime","setToTime","_useLazyQuery4$","historyLoading","historyError","yearValue","setYear","monthValue","setMonth","setQuery","option","year","month","thisYear","thisMonth","createElement","add","getFullYear","getMonth","bookInfo","user_id","timestamp","padStart","_search","queryTo","nextMonth","RENT_DATE","warn","movePrev","moveNext","NewMember","prepareNewMember","newMember","regSuccess","regFail","Doc","_classCallCheck","userReady","logCallback","_createClass","_updateIpAddr","ip","checkServerIp","_this","globalIp","timeout","catch","window","open","callback","checkState","checkRent","_getRent","_entry","_book","retEntry","_args2","rent_date","_openDoc","updateFunc","prk","require","config","Context","rawCookie","v","reduce","acc","shift","join","decodeURIComponent","passwordTyped","matched","emailDb","phoneDb","sign","numberString","isNaN","DropDown","dropdown","setDropdown","click","setClick","menu","classList","remove","home","checkOutStatus","Navbar","isMobile","maxWidth","style","width","MenuIcon","textString","logMsg","App","setLogged","rentLoading","rentError","rentData","_useQuery2","serverLoading","serverError","serverData","loadBook","bookLoading","bookError","bookData","notifyInit","updateLog","lang","ts","process","APP_NAME","APP_VERSION","navigator","languages","kr","en","updateIpAddr","nothing","password","setRent","rent_tests","setBook","book_tests","setServerInfo","LOADING","setLogCallback","Router","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","limit","Routes","Route","path","element","UserSearch","RentalSituation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","APP_ID","graphqlUri","app","Realm","getValidAccessToken","_getValidAccessToken","currentUser","anonymous","refreshAccessToken","accessToken","client","ApolloClient","link","HttpLink","uri","fetch","_fetch","options","Authorization","_x3","_x4","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider"],"mappings":"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","file":"static/js/main.3ca21163.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./Home.css\";\r\n\r\nfunction Home(props) {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Home\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (<div id=\"home\" dangerouslySetInnerHTML={{__html:props.text.homeText}}></div>);\r\n}\r\n\r\nexport default Home;\r\n","export const SEARCH_PER_SCREEN = 10;\r\nexport const MAX_SEARCH_ENTRY = 500;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n\r\nexport const getUserState = function(text, state) {\r\n    if (state === \"0\" || state === 0)\r\n        return text.normal;\r\n    else if (state === \"1\" || state === 1)\r\n        return text.overDue;\r\n    else if (state === \"2\" || state === 2)\r\n        return text.stopped;\r\n}\r\n\r\nexport const getBookState = function(text, state) {\r\n    switch (state)\r\n    {\r\n        case \"0\":\r\n        case 0:\r\n            return text.available;\r\n        case \"1\":\r\n        case 1:\r\n            return text.checkedOut;\r\n        case \"2\":\r\n        case 2:\r\n            return text.reserved;\r\n        case \"3\":\r\n        case 3:\r\n            return text.overDue;\r\n        case \"4\":\r\n        case 4:\r\n            return text.lost;\r\n        case \"5\":\r\n        case 5:\r\n            return text.damaged;\r\n        case \"6\":\r\n        case 6:\r\n            return text.given;\r\n        case \"7\":\r\n        case 7:\r\n        default:\r\n            return text.notAvailable;\r\n        case \"8\":\r\n        case 8:\r\n            return text.deleted;\r\n    }\r\n}\r\n\r\nexport const compareRent = function(a1, a2)\r\n{\r\n    if (a1.rentDate > a2.rentDate)\r\n        return true;\r\n    else if (a1.rentDate < a2.rentDate)\r\n        return false;\r\n    return a1.title > a2.title;\r\n}\r\n\r\nexport const toUtf8 = function(text) {\r\n    return unescape(encodeURIComponent(text));\r\n};\r\n\r\nexport const fromUtf8 = function(text) {\r\n    return decodeURIComponent(escape(text));\r\n};\r\n\r\nexport const loadingId = \"custom-loading-id\";\r\nexport const loggingId = \"custom-logging-id\";\r\n","import gql from \"graphql-tag\";\n\nexport const BOOK_QUERY = gql`\n    query AllBook{\n        books (sortBy: TITLE_ASC, limit:20000) {\n            _id\n            author\n            title\n            claim_num\n            num\n            series\n            category\n            claim\n            publisher\n            seqnum\n        }\n    }\n`;\n\nexport const RENT_QUERY = gql`\n    query AllRent{\n        rents (limit:20000) {\n            _id\n            book_id\n            user_id\n            rent_date\n            return_date\n            state\n        }\n    }\n`;\n\nexport const USERS_QUERY = gql`\n    query AllUser {\n        users (limit: 20000) {\n            _id\n            name\n            state\n            level\n        }\n    }`;\n\nexport const USER_QUERY = gql`\n    query FindUser($_id: String!){\n        user (query: {_id:$_id}) {\n            _id\n            name\n            state\n            level\n            encrypted_email\n            encrypted_phone\n        }\n    }`;\n\nexport const HISTORY_QUERY = gql`\n    query findLogs($user_id: String!){\n        rentLogs (limit: 20000, query: {user_id: $user_id}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_data\n            user_id\n        }\n    }`;\n\nexport const HISTORY_PERIOD_QUERY = gql`\n    query findLogs ($fromTime: String!, $toTime: String!) {\n        rentLogs(limit: 20000, query: {AND: [{timestamp_gte: $fromTime}, {timestamp_lt: $toTime}]}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_data\n            user_id\n        }\n    }`;\n\nexport const NOTICE_QUERY = gql`\n    query GetNotices {\n        notices (sortBy: _ID_DESC, limit:20000) {\n            _id\n            date\n            title\n        }\n    }`;\n\nexport const CONTENT_QUERY = gql`\n    query GetContent ($_id: String!) {\n        notice (query: {_id: $_id}) {\n            _id\n            date\n            title\n            content\n        }\n    }`;\n\nexport const SERVER_QUERY = gql`\n    query GetServerInfo {\n        serverInfo {\n            _id\n            globalIp\n            localIp\n            port\n        }\n    }`;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { SEARCH_PER_SCREEN } from \"../Util\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport {NOTICE_QUERY, CONTENT_QUERY} from \"../api/query.js\";\r\n\r\nfunction Notice(props) {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(-1);\r\n    const { loading: noticeLoading, data: noticeData, error: noticeError } = useQuery(NOTICE_QUERY);\r\n    const [loadSelected, { loading: selectedLoading, data: selectedData, error: selectedError}] = useLazyQuery(CONTENT_QUERY,\r\n            {\"variables\": {\"_id\": selectedId}});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Notice\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Notice\");\r\n//            console.log(noticeData);\r\n//            console.log(noticeError);\r\n//            console.log(noticeLoading);\r\n            if (noticeData)\r\n            {\r\n                setSearchResults(noticeData.notices);\r\n            }\r\n        }, [noticeData, noticeError, noticeLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Content\");\r\n//            console.log(selectedData);\r\n//            console.log(selectedError);\r\n//            console.log(selectedLoading);\r\n            if (selectedData)\r\n            {\r\n//                setSearchResults(selectedData.content);\r\n            }\r\n        }, [selectedData, selectedError, selectedLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n            console.log(\"Page num \" + pageNum.toString() + \" \");\r\n            console.log(length);\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n//           console.log(displayedCodes);\r\n        }, [displayedCodes]\r\n    );\r\n\r\n    const selectEntry = (id) => {\r\n        console.log(\"selected \" + id.toString());\r\n        if (selectedId === id)\r\n        {\r\n            setSelectedId(-1);\r\n        }\r\n        else\r\n        {\r\n            setSelectedId(id);\r\n        }\r\n        loadSelected();\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n//        console.log(result);\r\n        return (\r\n                <tr className=\"\" key={result._id}>\r\n                    <td className=\"\"> {result.date} </td>\r\n                    <td className=\"noticeEntry\" colSpan=\"2\" onClick={() => selectEntry(result._id)}> {result.title}</td>\r\n                </tr>\r\n        );\r\n    }\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (searchResults.length > (pageNum + 1) * SEARCH_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div id=\"notice\">\r\n                <div id=\"title\">\r\n                    <h2>\r\n                        {props.text.notice}\r\n                    </h2>\r\n                </div>\r\n                {selectedId > 0 && selectedData &&\r\n                <div id=\"noticeContent\">\r\n                    <table className=\"content\"><tbody>\r\n                           {showEntry(selectedData.notice)}\r\n                        <tr>\r\n                            <td className=\"content\" colSpan=\"3\">\r\n                                {selectedData.notice.content}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                </div>\r\n                }\r\n                <div id=\"noticeList\">\r\n                    <table><tbody>\r\n                       {displayedCodes.length > 0 && displayedCodes.map((result) => showEntry(result))}\r\n                    </tbody></table>\r\n                </div>\r\n                {searchResults.length > SEARCH_PER_SCREEN && (\r\n                    <div id=\"pageControl\">\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={movePrev}/>\r\n                        </div>\r\n                        <div className=\"pageNum\" id=\"pageNum\">\r\n                            {pageNum+1}\r\n                        </div>\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateNextIcon fontSize=\"large\" sx={{color: (searchResults.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={moveNext}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default Notice;\r\n","import { useEffect, useState } from \"react\";\nimport { SEARCH_PER_SCREEN } from \"./Util\";\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\n\nfunction doNothing() {\n    console.log(\"Do nothing...\");\n}\n\nvar showCallback = doNothing;\nfunction ListView(props) {\n        const [itemList, setItemList] = useState([]);\n//        const [showCallback, setShowCallback] = useState(doNothing);\n        const [pageNum, setPageNum] = useState(0);\n        const [displayList, setDisplayList] = useState([]);\n\n    useEffect(function () {\n        console.log(\"Init List View\");\n    }, []);\n\n    useEffect(function () {\n//        console.log(\"Set Item List\");\n        setItemList(props.list);\n    }, [props.list]);\n\n    useEffect(function () {\n        setPageNum(0);\n    }, [props.keyValue]);\n\n    useEffect(function () {\n        if (props.showCallback)\n        {\n//            console.log(\"Set show callback\");\n //           setShowCallback(props.showCallback);\n            showCallback = props.showCallback;\n        }\n    }, [props.showCallback]);\n\n    useEffect(function () {\n        const length = itemList.length;\n //       console.log(\"Page num \" + pageNum.toString());\n        if (length > SEARCH_PER_SCREEN)\n        {\n            const startIdx = pageNum * SEARCH_PER_SCREEN;\n            const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\n            setDisplayList(itemList.slice(startIdx,startIdx+count));\n        }\n        else\n        {\n            setDisplayList(itemList)\n        }\n    }, [itemList, pageNum]);\n\n    function movePrev() {\n        console.log(\"Prev\");\n        if (pageNum > 0)\n        {\n            setPageNum(pageNum - 1);\n        }\n    }\n\n    function moveNext() {\n        console.log(\"Next\");\n        if (itemList.length > (pageNum + 1) * SEARCH_PER_SCREEN)\n        {\n            setPageNum(pageNum + 1);\n        }\n    }\n\n    return (\n        <div id=\"listView\">\n            {showCallback(displayList, props.detail)}\n            {itemList && itemList.length > SEARCH_PER_SCREEN && (\n                <div id=\"pageControl\">\n                    <div className=\"page\" id = \"page\">\n                        <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={() => {movePrev();} }/>\n                    </div>\n                    <div className=\"pageNum\" id=\"pageNum\">\n                        {pageNum+1}\n                    </div>\n                    <div className=\"page\" id = \"page\">\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: (itemList.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={() => {moveNext();} }/>\n                    </div>\n                </div>)\n            }\n        </div>\n    );\n}\nexport default ListView;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { MAX_SEARCH_ENTRY, getBookState, toUtf8 } from \"../Util\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ListView from \"../ListView\";\r\n\r\nlet initialized = false;\r\n\r\nfunction Search(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(inputText, 300);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n\r\n    const [bookList, setBookList] = useState([]);\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    const [bookState, setBookState] = useState(0);\r\n    const bookStateRef = useRef(0);\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const needConfirmRef = useRef(false);\r\n\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n            console.log(\"BOOK ID: \" + id);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setInputText(id);\r\n            }\r\n            else\r\n            {\r\n                setInputText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findBooks(text) {\r\n                let results = [];\r\n\r\n                if (props.doc.serverAvailable)\r\n                {\r\n                    console.log(toUtf8(text));\r\n                    console.log(btoa(toUtf8(text)));\r\n                    const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                        props.doc.serverInfo.port + \"/book\";\r\n                    const obj = {\"params\": {\"book\": btoa(toUtf8(text)), \"match\":false}};\r\n                    console.log(\"=======================\");\r\n                    console.log(\"Request book list\");\r\n                    console.log(obj);\r\n                    const response = await axios.get(url, obj);\r\n                    console.log(response)\r\n                    if (!(\"books\" in response.data.return))\r\n                        return results;\r\n                    const books = response.data.return.books;\r\n                    for (let i = 0 ; i < books.length ; i++)\r\n                    {\r\n                        const book = books[i];\r\n                        const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                        const state = book._STATE;\r\n                        let retDate = \"\";\r\n                        if (state === 1 || state === 3 || state === \"1\" || state === \"3\")\r\n                        {\r\n                            retDate = props.text.returnDate + \" \" + book._RETURN;\r\n                        }\r\n                        let resultObject = {\r\n                            index: i,\r\n                            text: resultString,\r\n                            name: book.BOOKNAME,\r\n                            code: book.BARCODE,\r\n                            rent: getBookState(props.text, book._STATE.toString()),\r\n                            retDate: retDate,\r\n                            author: book.AUTHOR,\r\n                            totalName: book.TOTAL_NAME,\r\n                            claim_num: book.CLAMENUM,\r\n                            publish: book.PUBLISH,\r\n                            claim: book.CLAIM,\r\n                            state: book._STATE\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n\r\n                    for (let i = 0 ; i < bookList.length ; i++) {\r\n                        const row = bookList[i];\r\n                        if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                        if ((row.name && row.name.toString().includes(text)) ||\r\n                            (row.code === text))\r\n                        {\r\n                            let resultString = `${row.name} ${row.claim_num}`;\r\n                            let retDate = \"\";\r\n                            let state = \"0\";\r\n                            for (const entry of rentList)\r\n                            {\r\n                                if (entry.code === row.code)\r\n                                {\r\n                                    state = entry.state;\r\n                                    if (state === \"1\" || state === \"3\")\r\n                                    {\r\n                                        retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                            let resultObject = {\r\n                                index: i,\r\n                                text: resultString,\r\n                                name: row.name,\r\n                                code: row.code.toString(),\r\n                                rent: getBookState(props.text, state),\r\n                                retDate: retDate,\r\n                                author: row.author,\r\n                                totalName: row.totalName,\r\n                                claim_num: row.claim_num,\r\n                                publish: row.publish,\r\n                                claim: row.claim,\r\n                                state: parseInt(state)\r\n                            };\r\n                            results.push(resultObject);\r\n                        }\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a['text'] > b['text']; });\r\n                return results;\r\n            }\r\n            async function query() {\r\n                console.log(\"Refresh\");\r\n                if (searchQuery) {\r\n                    let sr = await findBooks(searchQuery);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        selectedRef.current = sr[0].code;\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, bookList, rentList, props, queryRequest]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        initialized = true;\r\n\r\n        let rl = [];\r\n        const rented = props.doc.rent;\r\n        for (let i = 0 ; i < rented.length; i++)\r\n        {\r\n           rl.push({code:rented[i].book_id, retDate:rented[i].return_date, state:rented[i].state});\r\n        }\r\n        setRentList(rl);\r\n\r\n        let bl = [];\r\n        const books = props.doc.book\r\n        for (const key in books)\r\n        {\r\n           const book = books[key];\r\n           bl.push({code: book._id, name: book.title, num: book.num, author: book.author, claim: book.claim,\r\n                    claim_num: book.claim_num, totalName: book.series, category: book.publisher, publish: book.publisher});\r\n        }\r\n        console.log(\"Load\");\r\n        console.log(books.length);\r\n        setBookList(bl);\r\n    }\r\n\r\n    const selectId = async (code) => {\r\n        console.log(\"Prev \" + selectedRef.current);\r\n        if (selectedRef.current === -1 || selectedRef.current !== code)\r\n        {\r\n            console.log(\"Select \" + code);\r\n            setSelectedId(code);\r\n            selectedRef.current = code;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + code);\r\n            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n        }\r\n    }\r\n\r\n    function setState(state)\r\n    {\r\n        console.log(\"Set state \" + state.toString());\r\n        needConfirmRef.current = true;\r\n        setNeedConfirm(true);\r\n        setBookState(state);\r\n        bookStateRef.current = state;\r\n        console.log(selectedId.toString() + needConfirmRef.current);\r\n    }\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n\r\n        const ipAddr = props.doc.serverInfo.localIp;\r\n        const portNum = props.doc.serverInfo.port;\r\n        if (ipAddr.length === 0 || portNum <= 0)\r\n            return;\r\n\r\n        const url = \"https://\" + ipAddr + \":\" +\r\n            portNum + \"/book\";\r\n        var obj = {};\r\n        obj[\"book\"] = selectedRef.current;\r\n        obj[\"state\"] = bookStateRef.current;\r\n        console.log(\"=======================\");\r\n        console.log(\"Change book state\");\r\n        console.log(obj);\r\n        await axios.post(url, obj).then( response => {\r\n            console.log(response);\r\n        });\r\n\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n        const hidden = (result.code !== selectedRef.current);\r\n        const entryId = (hidden) ? \"searchResult\" : \"selectedSearchResult\";\r\n        const flags = [false, false, false, false, false, false, false, false, false, false]\r\n        flags[result.state] = true;\r\n        if (result.state === 1 || result.state === 2 || result.state === 3)\r\n            flags[0] = true;\r\n        if (!hidden)\r\n            console.log(flags)\r\n        return (\r\n            <div key={result.code}>\r\n            <div id={entryId} onClick={async () => await selectId(result.code)}>\r\n                <table><tbody>\r\n                    <tr className=\"searchTr\">\r\n                        <td className=\"searchTitle\"> {result.text}</td>\r\n                        <td className=\"searchRent\"> {result.rent} </td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {!hidden &&\r\n            <div>\r\n                <table><tbody>\r\n                <tr>\r\n                    <td>{result.author} </td>\r\n                    <td colSpan=\"2\" rowSpan=\"2\">{result.totalName} <b>{result.name}</b> { result.claim_num} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.code} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.publish}</td>\r\n                    <td colSpan={result.retDate.length > 0 ? \"1\":\"2\"}>{result.claim} </td>\r\n                    {result.retDate.length > 0 && <td>{result.retDate}</td> }\r\n                </tr>\r\n                </tbody></table>\r\n                <div hidden={!props.doc.serverAvailable || !props.doc.admin}>\r\n                    <button className=\"bookStates\" id = \"0\" disabled={flags[0]} onClick={() => setState(0)}> {props.text.available} </button>\r\n                    <button className=\"bookStates\" id = \"4\" disabled={flags[4]} onClick={() => setState(4)}> {props.text.lost} </button>\r\n                    <button className=\"bookStates\" id = \"5\" disabled={flags[5]} onClick={() => setState(5)}> {props.text.damaged} </button>\r\n                    <button className=\"bookStates\" id = \"6\" disabled={flags[6]} onClick={() => setState(6)}> {props.text.given} </button>\r\n                    <button className=\"bookStates\" id = \"7\" disabled={flags[7]} onClick={() => setState(7)}> {props.text.notAvailable} </button>\r\n                    <button className=\"bookStates\" id = \"8\" disabled={flags[8]} onClick={() => setState(8)}> {props.text.deleted} </button>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirmRef.current}>\r\n                    <div id=\"bookName\"> {getBookState(props.text, bookStateRef.current)} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n            </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function showEntries(results)\r\n    {\r\n        console.log(\"Redraw \" + needConfirmRef.current);\r\n        return results.map((result) => showEntry(result))\r\n    }\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <div id=\"title\">\r\n                <h2> {props.text.bookSearch} </h2>\r\n            </div>\r\n            <div id=\"searchContents\">\r\n                <input id=\"searchInput\"\r\n                    placeholder={props.text.searchBook}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n            </div>\r\n            <ListView keyValue={searchQuery} list={searchResults} detail={selectedId + needConfirm} showCallback={(entries, detail) => { return showEntries(entries); }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import gql from \"graphql-tag\";\n\nexport const BOOK_QUERY = gql`\n    query AllBook{\n        book_tests (sortBy: TITLE_ASC, limit:20000) {\n            _id\n            author\n            title\n            claim_num\n            num\n            series\n            category\n            claim\n            publisher\n            seqnum\n        }\n    }\n`;\n\nexport const RENT_QUERY = gql`\n    query AllRent{\n        rent_tests (limit:20000) {\n            _id\n            book_id\n            user_id\n            rent_date\n            return_date\n            state\n        }\n    }\n`;\n\nexport const USERS_QUERY = gql`\n    query AllUser {\n        user_tests (limit: 20000) {\n            _id\n            name\n            state\n            level\n        }\n    }`;\n\nexport const USER_QUERY = gql`\n    query FindUser($_id: String!){\n        user_test (query: {_id:$_id}) {\n            _id\n            name\n            state\n            level\n            encrypted_email\n            encrypted_phone\n        }\n    }`;\n\nexport const HISTORY_QUERY = gql`\n    query findLogs($user_id: String!){\n        rentLog_tests (limit: 20000, query: {user_id: $user_id}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_data\n            user_id\n        }\n    }`;\n\nexport const HISTORY_PERIOD_QUERY = gql`\n    query findLogs ($fromTime: String!, $toTime: String!) {\n        rentLog_tests(limit: 20000, query: {AND: [{timestamp_gte: $fromTime}, {timestamp_lt: $toTime}]}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_data\n            user_id\n        }\n    }`;\n\nexport const NOTICE_QUERY = gql`\n    query GetNotices {\n        notice_tests (sortBy: _ID_DESC, limit:20000) {\n            _id\n            date\n            title\n        }\n    }`;\n\nexport const CONTENT_QUERY = gql`\n    query GetContent ($_id: String!) {\n        notice_test (query: {_id: $_id}) {\n            _id\n            date\n            title\n            content\n        }\n    }`;\n\nexport const SERVER_QUERY = gql`\n    query GetServerInfo {\n        serverInfo_test {\n            _id\n            globalIp\n            localIp\n            port\n        }\n    }`;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, compareRent } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\n//import {USER_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\nimport {USER_QUERY, HISTORY_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction CheckOutStatus(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [expireDate, setExpireDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOutStatus initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n\r\n            if (\"autoLogin\" in props.context.cookie)\r\n            {\r\n                const autoLogin = (props.context.cookie.autoLogin === \"true\") ? true : false;\r\n                setAutoLogin(autoLogin);\r\n            }\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            setExpireDate(date.toGMTString());\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.doc.logged]\r\n    );\r\n\r\n    useEffect(() => {\r\n            async function func() {\r\n                console.log(\"User data updated \");\r\n                await compare();\r\n            }\r\n            func();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n            let hist = [];\r\n//            const rentLogs = historyData.rentLogs;\r\n            const rentLogs = historyData.rentLog_tests;\r\n            for (let i = 0 ; i < rentLogs.length ; i++)\r\n            {\r\n                const entry = rentLogs[i];\r\n                if (entry.book_state !== \"1\" && entry.book_state !== 1)\r\n                    continue;\r\n                if (! (\"return_data\" in entry) || ! entry.return_data)\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const title = (id in props.doc.book) ? props.doc.book[id][\"title\"] : \"N/A\";\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                const retDate = entry.return_data;\r\n                hist.push({\"id\": id, \"title\": title, \"rentDate\": date, \"retDate\": retDate});\r\n\r\n            }\r\n            hist.sort(compareRent);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.logged)\r\n        {\r\n            setState(State.LoggedIn);\r\n            const userId = props.doc.userInfo['_id'];\r\n            setUserId(userId);\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            await loadHistory();\r\n        }\r\n        else\r\n        {\r\n            setState(State.LoggedOut);\r\n            setUserId(\"\");\r\n            setPasswordText(\"\");\r\n        }\r\n\r\n        console.log(\"Set title \" + props.doc.logged)\r\n        if (props.doc.logged)\r\n        {\r\n            if (props.doc.adminMode)\r\n                setTitle(props.text.userSearch);\r\n            else\r\n                setTitle(props.text.checkOut);\r\n        }\r\n        else\r\n        {\r\n            setTitle(props.text.logIn);\r\n        }\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const toggleAutoLogin = () => {\r\n        console.log(\"Toggle autoLogin\");\r\n        const cookieString = \"autoLogin=\" + (autoLogin ? \"false\":\"true\") + \"; expires=\" + expireDate + \";\";\r\n//        console.log(cookieString);\r\n        document.cookie = cookieString;\r\n        setAutoLogin(!autoLogin);\r\n    }\r\n\r\n    const showEntries = (result, retText) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{retText}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        setState(State.LoggingIn);\r\n        setUserId(userText.toUpperCase());\r\n        await loadUser();\r\n        await loadHistory();\r\n        console.log(\"Log In\");\r\n        await compare();\r\n    }\r\n\r\n    const compare = async () => {\r\n        if (!userData || state === State.LoggedOut)\r\n            return;\r\n\r\n        console.log(toast.isActive(loggingId));\r\n        const prop = toastProp;\r\n\r\n        let text;\r\n        if (props.context.checkLogIn(userData.user_test, passwordText))\r\n        {\r\n            props.doc.logIn(userData.user_test);\r\n\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            setState(State.LoggedIn);\r\n\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            document.cookie = \"user_id=\" + userId + \"; expires=\" + expireDate + \";\";\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.render = text;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = loggingId;\r\n        if (toast.isActive(loggingId))\r\n        {\r\n            console.log(\"update toast\");\r\n            toast.update(loggingId, prop);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"New toast\");\r\n            toast.info(text, prop);\r\n        }\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {title}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!(state !== State.LoggedIn)}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <input type=\"password\" id=\"searchPassword\"\r\n                    placeholder={props.text.pwHolder}\r\n                    value={passwordText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setPasswordText(event.target.value);\r\n                    }} />\r\n                <div id=\"autoLogin\">\r\n                    <input type=\"checkbox\" id=\"autoLoginButton\" checked={autoLogin} onChange={() => toggleAutoLogin()}/>\r\n                    <label>\r\n                            {props.text.autoLogin}\r\n                    </label>\r\n                </div>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={!(state === State.LoggedIn)}>\r\n                <div>\r\n                    { showEntries(searchResults, props.text.dueDate) }\r\n                </div>\r\n\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <ListView list={history} showCallback={(entries) => { return showEntries(entries, props.text.returnDate); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOutStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, loadingId, getUserState } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2,\r\n    LoggingOut: 3\r\n}\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 300);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [userData, setUserData] = useState({});\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n    const [rented, setRented] = useState([]);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOut initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n//            console.log(props.doc.serverInfo);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            import(\"./PageServer.css\");\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                axios.get(url).then( response => {\r\n                        const book = response.data.scan;\r\n                        if (book) {\r\n                            console.log(book)\r\n                            setBarcode(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            console.log(toast.isActive(loggingId));\r\n            const prop = toastProp;\r\n\r\n            let text;\r\n            let notify = false;\r\n            if (\"USER_CODE\" in userData && state !== State.LoggedIn)\r\n            {\r\n                setState(State.LoggedIn);\r\n\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                text = props.text.logInSucceed;\r\n                notify = true;\r\n            }\r\n            else if (!(\"USER_CODE\" in userData))\r\n            {\r\n                setState(State.LoggedOut);\r\n\r\n                if (state === State.LoggingIn)\r\n                {\r\n                    prop.type = toast.TYPE.ERROR;\r\n                    text = props.text.logInFail;\r\n                    notify = true;\r\n                }\r\n            }\r\n\r\n            if (notify)\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": prop.type})\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 0)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n                setBarcode(\"\")\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            console.log(\"Notification \" + notifyRequest.text)\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//            if (\"id\" in notifyRequest)\r\n//                id = notifyRequest.id\r\n\r\n//            prop.toastId = id\r\n//            if (toast.isActive(id))\r\n//                toast.update(id, notifyRequest.text, prop);\r\n//            else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (state !== State.LoggedIn)\r\n                setBarcode(userText);\r\n        }, [state, userText]\r\n    );\r\n\r\n    const updateUser = async (userText) => {\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/user?user=\" + userText;\r\n        const obj = {\"params\": {\"user\": userText, \"data\":\"nothing\"}};\r\n        console.log(obj);\r\n        const response = await axios.get(url, btoa(JSON.stringify(obj)));\r\n        const user = response.data.return;\r\n\r\n        setUserData(user);\r\n        console.log(user);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        console.log(\"LOGIN\");\r\n        console.log(userText);\r\n        if (userText.length === 0)\r\n            return;\r\n        setState(State.LoggingIn);\r\n        const id = userText.toUpperCase();\r\n        setUserId(id);\r\n        updateUser(id);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Log Out\");\r\n        setUserData({});\r\n        setUserText(\"\");\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n        setRented([])\r\n        document.getElementById('barcodeScan').value= null;\r\n    }\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            console.log(url)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.loading,\r\n                              \"type\": toast.TYPE.INFO})\r\n            getBase64(file).then(\r\n                img => {\r\n                    axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(response);\r\n                        console.log(book);\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.succeededToOpen,\r\n                                              \"type\": toast.TYPE.SUCCESS});\r\n                        }\r\n                        else\r\n                        {\r\n                            console.log(\"Failed\");\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR});\r\n                            setScannedBook({});\r\n                            setBarcode(\"\")\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                const bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            console.log(book.books)\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery, props.doc]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Barcode: \" + barcode);\r\n            if (barcode.length === 0)\r\n                return;\r\n            if (state !== State.LoggedIn)\r\n            {\r\n                if (barcode.search(\"AA\") === 0 || barcode.search(\"AB\") === 0 )\r\n                {\r\n                    setUserText(barcode);\r\n                }\r\n            }\r\n            else if (barcode.search(\"HK\") === 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [barcode, props.doc, state]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n        document.getElementById('barcodeScan').value= null;\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/checkOut\"\r\n        axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE,\r\n                user: userId\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return\r\n            console.log(\"Rent confirmed\");\r\n            console.log(ret)\r\n\r\n            if (ret === \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.rentSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n                rented.push({\"id\": scannedBook.BARCODE, \"name\": scannedBook.BOOKNAME})\r\n                console.log(rented)\r\n                setRented(rented)\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            setScannedBook({});\r\n            setBarcode(\"\")\r\n            updateUser(userId);\r\n        });\r\n    }\r\n\r\n    function showEntry(index, rent)\r\n    {\r\n    /*\r\n        return (<React.Fragment key={index + \"Fragment\"}>\r\n                    <tr key={index}>\r\n                        <td className=\"bookCell\"> {rent.id} </td>\r\n                        <td colSpan=\"3\" className=\"bookCell\"> {rent.name} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    */\r\n        return (<div id=\"bookEntry\" key={rent.id}>\r\n                    <div id=\"bookItem\"> {rent.id} </div>\r\n                    <div id=\"bookItem\"> {rent.name} </div>\r\n                </div>);\r\n\r\n    }\r\n\r\n    function showBook(books)\r\n    {\r\n        return (<div id=\"bookList\">\r\n                    <div id=\"dueDate\">\r\n                    {props.text.dueDate} : {props.doc.dueDate}\r\n                    </div>\r\n                    {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                </div>);\r\n    }\r\n    /*\r\n                    <table><tbody>\r\n                        {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                    </tbody></table>\r\n    */\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        document.getElementById('barcodeScan').value= null;\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n//            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn ? true : false }>\r\n//            <div id=\"checkOutResult\" hidden={true}>\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.checkOut}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={state === State.LoggedIn}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn}>\r\n                {userData.USER_CODE && (\r\n                    <div id=\"userInfo\">\r\n                        <div id=\"userItem\">\r\n                            {userData.USER_CODE + \" : \" + userData.USER_NAME + props.text.nameSuffix}\r\n                        </div>\r\n                        <div id=\"userItem\"> {getUserState(props.text, userData.USER_STATE)} </div>\r\n                        <div id=\"userItem\"> {userData._RENT.length + \" \" + props.text.rentSuffix} </div>\r\n                    </div>\r\n                )}\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                    <label id=\"barcodeScan\" hidden>\r\n                        <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                        <span>\r\n                        <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                        </span>\r\n                    </label>\r\n                    <label id=\"manualInput\">\r\n                        <div id=\"hkPrefix\" hidden>\r\n                        HK\r\n                        </div>\r\n                        <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n                            placeholder={props.text.bookHolder}\r\n                            onInput={(event) => {\r\n                                setBookText(event.target.value);\r\n                            }} />\r\n                    </label>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmRent} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\"} </div>\r\n                    <div id=\"bookName\"> {scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                {rented.length > 0 &&\r\n                    <ListView list={rented} showCallback={(entry) => {return showBook(entry)}}/>\r\n                }\r\n                <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.logOut} </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport ListView from \"../ListView\";\r\n\r\nfunction Return(props) {\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 300);\r\n//    const [initialized, setInitialized] = useState(false);\r\n//    const [userId, setUserId] = useState(\"\");\r\n//    const [state, setState] = useState(State.LoggedOut);\r\n//    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n//                     { \"variables\": { \"_id\": userId } });\r\n//    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n//                     { \"variables\": { \"user_id\": userId } });\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n    const [returned, setReturned] = useState([]);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            props.doc.setCallback(undefined);\r\n            console.log(\"=======================================\");\r\n            console.log(\"Return initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            import(\"./PageServer.css\")\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr && ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                axios.get(url).then( response => {\r\n                        const book = response.data.scan;\r\n                        if (book) {\r\n                            console.log(book.search(\"HK\"))\r\n                            if (book.search(\"HK\") === 0) {\r\n                                console.log(barcode + \" -> \" + book)\r\n                                setBarcode(book)\r\n                            }\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n*/\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                const bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery, props.doc]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"B\" + barcode);\r\n            if (barcode.length > 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [barcode, props.doc]\r\n    );\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.loading,\r\n                              \"type\": toast.TYPE.INFO})\r\n            getBase64(file).then(\r\n                img => {\r\n                    axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.succeededToOpen,\r\n                                              \"type\": toast.TYPE.SUCCESS});\r\n                        }\r\n                        else\r\n                        {\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR})\r\n                            setScannedBook({})\r\n                            setBarcode(\"\")\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 1 || scannedBook._STATE === 3)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    console.log(\"Not rented\")\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.NOT_RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                    setBarcode(\"\")\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//           if (\"id\" in notifyRequest)\r\n//               id = notifyRequest.id\r\n\r\n//           prop.toastId = id\r\n //          if (toast.isActive(id))\r\n//               toast.update(id, notifyRequest.text, prop);\r\n//           else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Returned updated\");\r\n            console.log(returned);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            console.log(\"Update return list\");\r\n            const bookId = \"HK\" + bookText;\r\n            console.log(\"Search book1 \" + bookId);\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n            const obj = {\"params\": {\"books\": returned}};\r\n            console.log(obj);\r\n            axios.get(url, obj).then( response => {\r\n//                    const book = response.data.return;\r\n//                    console.log(book)\r\n                }\r\n            );\r\n        },\r\n        [returned]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/return\"\r\n        axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return;\r\n            console.log(ret);\r\n            if (ret === \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.returnSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n                returned.push({\"id\": scannedBook.BARCODE, \"name\": scannedBook.BOOKNAME})\r\n                console.log(returned)\r\n                setReturned(returned)\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            setScannedBook({});\r\n            setBarcode(\"\")\r\n        });\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    function showEntry(index, rent)\r\n    {\r\n        return (<div id=\"bookEntry\" key={rent.id}>\r\n                    <div id=\"bookItem\"> {rent.id} </div>\r\n                    <div id=\"bookItem\"> {rent.name} </div>\r\n                </div>);\r\n    }\r\n\r\n    function showBook(books)\r\n    {\r\n        return (<div id=\"bookList\">\r\n                    {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                </div>);\r\n    }\r\n\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.return}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                <label id=\"barcodeScan\" hidden>\r\n                    <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                    <span>\r\n                    <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                    </span>\r\n                </label>\r\n                <label id=\"manualInput\">\r\n                    <div id=\"hkPrefix\" hidden>\r\n                        HK\r\n                    </div>\r\n                    <input inputMode=\"numeric\" pattern=\"\\d*\" type=\"text\" id=\"searchInput\"\r\n                        placeholder={props.text.bookHolder}\r\n                        onInput={(event) => {\r\n                            setBookText(event.target.value);\r\n                        }} />\r\n                </label>\r\n                </div>\r\n                <div id=\"checkReturn\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmReturn} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\"} </div>\r\n                    <div id=\"bookName\"> {scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                {returned.length > 0 &&\r\n                    <ListView list={returned} showCallback={(entry) => {return showBook(entry)}}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n//                    <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n\r\nexport default Return;\r\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toUtf8 } from \"./Util\";\nimport \"./UserInfo.css\";\n\nfunction UserInfo(props) {\n    const [needConfirm, setNeedConfirm] = useState(false);\n    const [disabled, setDisabled] = useState(true);\n    const [userInfo, setUserInfo] = useState({});\n\n    useEffect(function() {\n        console.log(\"User Info\");\n        console.log(props.info);\n        document.getElementById('userName').value = props.info.USER_NAME ? props.info.USER_NAME : \"\";\n        document.getElementById('phone').value = props.info.PHONE_NUMBER ? props.info.PHONE_NUMBER : \"\";\n        document.getElementById('email').value = props.info.EMAIL ? props.info.EMAIL : \"\";\n        document.getElementById('address').value = props.info.ADDRESS ? props.info.ADDRESS : \"\";\n        document.getElementById('notice_').value = props.info.NOTICE ? props.info.NOTICE : \"\";\n        document.getElementById('user_level').value = props.info.USER_LEVEL;\n        setUserInfo({\"USER_CODE\": props.info.USER_CODE});\n        setDisabled(true);\n\n    }, [props.info]);\n\n    function setProperty(index, value)\n    {\n        console.log(index);\n        console.log(value);\n        var info = userInfo;\n        switch (index)\n        {\n        case 0:\n            info.USER_NAME = value;\n            break;\n        case 1:\n            info.PHONE_NUMBER = value;\n            break;\n        case 2:\n            info.EMAIL = value;\n            break;\n        case 3:\n            info.ADDRESS = value;\n            break;\n        case 4:\n            info.USER_LEVEL = value;\n            break;\n        case 5:\n            info.NOTICE = value;\n            break;\n        default:\n            break;\n        }\n        const length = Object.keys(info).length;\n        console.log(length);\n//        if (length >= 1 && \"USER_LEVEL\" in info && info.USER_LEVEL >= 0 && info.USER_LEVEL <= 2)\n        if (length > 1)\n            setDisabled(false);\n        setUserInfo(info);\n    }\n\n    function confirmAction()\n    {\n        console.log(\"Save modification\");\n        console.log(userInfo);\n        const ipAddr = props.doc.serverInfo.localIp;\n        const portNum = props.doc.serverInfo.port;\n        if (ipAddr.length === 0 || portNum <= 0)\n            return;\n\n        const url = \"https://\" + ipAddr + \":\" +\n            portNum + \"/user\";\n\n        var obj = {};\n        console.log(userInfo)\n        for (const key in userInfo)\n        {\n            obj[key] = btoa(toUtf8(userInfo[key]));\n        }\n        axios.post(url, obj).then( response => {\n            console.log(response);\n            props.refresh(response);\n        });\n        setNeedConfirm(false);\n    }\n\n    function cancelAction()\n    {\n        setNeedConfirm(false);\n    }\n\n    return (\n        <div>\n            <table><tbody>\n                <tr key=\"Name\">\n                    <td> {props.text.name} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"userName\" onChange={(event) => {setProperty(0, event.target.value);}} />\n                    </td>\n                </tr>\n                {\"REG_DATE\" in props.info &&\n                    <tr key=\"Register\">\n                        <td> {props.text.registeredDate} </td>\n                        <td colSpan=\"3\" className=\"data\">\n                            {props.info.REG_DATE}\n                        </td>\n                    </tr>\n                }\n                <tr key=\"Phone\">\n                    <td> {props.text.phone} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"phone\" onChange={(event) => {setProperty(1, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Email\">\n                    <td> {props.text.email} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"email\" onChange={(event) => {setProperty(2, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Address\">\n                    <td> {props.text.address} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"address\" onChange={(event) => {setProperty(3, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Notice\">\n                    <td> {props.text.notice_} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"notice_\" onChange={(event) => {setProperty(5, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Level\">\n                    <td> {props.text.level} </td>\n                    <td colSpan=\"3\" className=\"cell\">\n                        <select name=\"User Level\" id=\"user_level\" className=\"dropdown\" onChange={(event) => {setProperty(4, event.target.value);}}>\n                            <option value=\"0\"> {props.text.kid} </option>\n                            <option value=\"1\"> {props.text.adult} </option>\n                            <option value=\"2\"> {props.text.admin} </option>\n                        </select>\n                    </td>\n                </tr>\n            </tbody></table>\n           <button id=\"modify\" hidden={needConfirm} onClick={async () => setNeedConfirm(true)} disabled={disabled}> {props.text.save} </button>\n            <div id=\"checkModify\" hidden={!needConfirm}>\n                <div id=\"noticeMsg\"> {props.text.confirmSave} </div>\n                <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\n                <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\n            </div>\n        </div>\n    );\n}\nexport default UserInfo;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp, MAX_SEARCH_ENTRY, getUserState, toUtf8 } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate, useParams } from 'react-router-dom'\r\n//import {USERS_QUERY} from \"../api/query.js\";\r\nimport {USERS_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport UserInfo from \"../UserInfo\";\r\nimport axios from \"axios\";\r\n\r\n//var rentList = [];\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(userText, 300);\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n//    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n    const { id } = useParams();\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n            {\r\n                return;\r\n            }\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"UserSearch initialize\");\r\n            console.log(\"User ID: \" + id);\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc(false);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n//                const users = userListData.users;\r\n                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n\r\n        if (notify)\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Set title \" + props.logged)\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const selectId = async (id) => {\r\n        const rent = await props.doc.getRent(id);\r\n        console.log(rent);\r\n        if (selectedRef.current === -1 || selectedRef.current !== id)\r\n        {\r\n            console.log(\"Select \" + id);\r\n//            setSelectedId(id);\r\n            selectedRef.current = id;\r\n            console.log(\"Set Rent List\");\r\n            console.log(rent)\r\n            setRentList(rent);\r\n//            rentList = rent;\r\n        }\r\n        else if (searchResults.length > 1)\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n//            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n            setRentList([]);\r\n//            rentList = [];\r\n        }\r\n    }\r\n\r\n    const showUser = (user, detail, index) => {\r\n        const key = index.toString();\r\n        return (\r\n                <div key={key}>\r\n                    <table><tbody>\r\n                        <tr key={user.id} className=\"searchTr\" onClick={async ()=> await selectId(user.id)}>\r\n                            <td className=\"bookData\">{user.id}</td>\r\n                            <td className=\"bookData\">{user.name}</td>\r\n                            <td className=\"bookData\">{user.state}</td>\r\n                            <td className=\"bookData\">{user.rent}</td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                        {user.id === selectedRef.current && showEntries(user, detail) }\r\n                </div>\r\n                );\r\n    }\r\n\r\n    const showUsers = (result, detail) => {\r\n        return (<div>\r\n                    {\r\n                        result.map((user, index) => {\r\n                            return showUser(user, detail, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 &&\r\n                        <table><tbody>\r\n                            <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                        </tbody></table>\r\n                    }\r\n                </div>);\r\n    }\r\n\r\n    const showEntries = (user, detail) => {\r\n        console.log(\"Detail\");\r\n        console.log(user);\r\n        return (<>\r\n                    {props.doc.serverAvailable &&\r\n                        <UserInfo text={props.text} doc={props.doc} info={user} refresh={refresh}/>\r\n                    }\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        detail.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        detail.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </>);\r\n    }\r\n    useEffect(\r\n        () => {\r\n            async function findUsers(text) {\r\n                let results = [];\r\n\r\n//                for (let i = 0 ; i < userList.length ; i++) {\r\n                  for (const key in userList) {\r\n                    const row = userList[key];\r\n                    if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                    if ((row.name && row.name.toString().includes(text)) ||\r\n                        (row.id.toLowerCase() === text.toLowerCase()))\r\n                    {\r\n                        results.push(row);\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a.name > b.name; });\r\n                console.log(results);\r\n                return results;\r\n            }\r\n            async function query() {\r\n                const input = userText.trim()\r\n                console.log(\"Query \" + input + \" \" + searchQuery)\r\n                if (input.length > 0 && searchQuery) {\r\n\r\n                    let sr;\r\n                    if (props.doc.serverAvailable)\r\n                    {\r\n                        console.log(\"from CLIB\")\r\n                        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/users\";\r\n                        const obj = {\"params\": {\"user\": btoa(toUtf8(input))}};\r\n                        console.log(obj);\r\n                        const response = await axios.get(url, obj);\r\n                        const users = response.data.return.data;\r\n                        console.log(response.data.return);\r\n                        sr = [];\r\n                        if (users) {\r\n                            for (const entry of response.data.return.data)\r\n                            {\r\n                                console.log(entry);\r\n                                let user = entry;\r\n                                user.id = entry.USER_CODE;\r\n                                user.name = entry.USER_NAME;\r\n                                user.state = getUserState(props.text, entry.USER_STATE);\r\n                                user.rent = entry._RENT.length;\r\n                                sr.push(user);\r\n                            }\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log(\"from DB\")\r\n                        sr = await findUsers(searchQuery);\r\n                    }\r\n\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                       selectId(sr[0].id);\r\n                   else\r\n                       selectId(0);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n       [searchQuery, props, userList, queryRequest, userText]\r\n    );\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.userSearch}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onChange={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <div>\r\n                    <ListView keyValue={searchQuery} list={searchResults} detail={rentList} showCallback={(entries, detail) => { return showUsers(entries, detail); }}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getBookState } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\n//import {USERS_QUERY} from \"../api/query.js\";\r\nimport {USERS_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport axios from \"axios\";\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n//                const users = userListData.users;\r\n                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userList]\r\n    );\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        return a1.rentDate > a2.rentDate;\r\n    }\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.serverAvailable)\r\n        {\r\n            let results = [];\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n            const obj = {\"params\": {\"user\": \"*\", \"match\":false}};\r\n//            console.log(obj);\r\n            const response = await axios.get(url, obj);\r\n//           console.log(response)\r\n//            if (!(\"books\" in response.data.return))\r\n//                return results;\r\n            const books = response.data.return.books;\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                const state = book._STATE;\r\n                let retDate = \"\";\r\n                if (state === 1 || state === 3 || state === \"1\" || state === \"3\")\r\n                {\r\n                    retDate = book.RETURN_DATE;\r\n                }\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: book.BOOKNAME,\r\n                    id: book.BARCODE,\r\n                    rent: getBookState(props.text, book.STATS.toString()),\r\n                    rentDate: book.LENT_DATE,\r\n                    retDate: retDate,\r\n                    author: book.AUTHOR,\r\n                    totalName: book.TOTAL_NAME,\r\n                    claim_num: book.CLAMENUM,\r\n                    publish: book.PUBLISH,\r\n                    claim: book.CLAIM,\r\n                    user: book.USER,\r\n                    userName: book.USER_NAME\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compare);\r\n            setRentList(results);\r\n        }\r\n        else\r\n        {\r\n\r\n            const rent = await props.doc.getRent();\r\n            console.log(\"Rent\");\r\n            console.log(rent);\r\n            rent.sort(compare);\r\n            for (const index in rent)\r\n            {\r\n                const userId = rent[index][\"user\"];\r\n                let userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                rent[index][\"userName\"] = userName;\r\n//                console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n            }\r\n            setRentList(rent);\r\n        }\r\n\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td colSpan=\"3\" className=\"bookCell\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"situation\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.situation}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue=\"\" list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { compareRent } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\n//import {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query.js\";\r\nimport {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport axios from \"axios\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n//    const [initialized, setInitialized] = useState(false);\r\n    const [fromTime, setFromTime] = useState(\"\");\r\n    const [toTime, setToTime] = useState(\"\");\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [loadHistory, {loading: historyLoading, data: historyData, error: historyError }] = useLazyQuery(HISTORY_PERIOD_QUERY,\r\n            {\"variables\": { \"fromTime\" : fromTime, \"toTime\": toTime}});\r\n    const [userList, setUserList] = useState({});\r\n    const [yearValue, setYear] = useState(0);\r\n    const [monthValue, setMonth] = useState(0);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [searchQuery] = useDebounce(query, 300);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            var i;\r\n            var option;\r\n            var year = document.getElementById('year')\r\n            var month = document.getElementById('month')\r\n            for (i = 1; i <= 12 ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                month.add(option, i);\r\n            }\r\n            const thisYear = new Date().getFullYear();\r\n            const thisMonth = new Date().getMonth() + 1;\r\n            const fromYear = 2017;\r\n\r\n            for (i = fromYear ; i <= thisYear ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                year.add(option, i);\r\n            }\r\n\r\n            console.log(thisYear);\r\n            console.log(thisMonth);\r\n            setYear(thisYear);\r\n            setMonth(thisMonth);\r\n            document.getElementById('year').value = thisYear;\r\n            document.getElementById('month').value = thisMonth;\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n//                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n//                const users = userListData.users;\r\n                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"History update\")\r\n\r\n            if (!historyData)\r\n                return\r\n\r\n//            console.log(historyData.rentLog_tests)\r\n\r\n//            const books = historyData.rentLogs;\r\n            const books = historyData.rentLog_tests;\r\n            let results = [];\r\n            let retDate = \"\";\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const state = book.book_state;\r\n                if (state !== \"1\" && state !== 1)\r\n                    continue\r\n                if (!book.return_data || book.return_data.length === 0)\r\n                    continue\r\n//                console.log(book)\r\n                const bookId = book.book_id;\r\n                const userId = book.user_id;\r\n                var userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                var bookInfo;\r\n                if (bookId in props.doc.book)\r\n                {\r\n                    bookInfo = props.doc.book[bookId];\r\n                }\r\n                else\r\n                {\r\n                    bookInfo = {}\r\n                    bookInfo.author = \"\"\r\n                    bookInfo.totalName = \"\"\r\n                    bookInfo.claim_num = \"\"\r\n                    bookInfo.publish = \"\"\r\n                    bookInfo.title = \"\"\r\n                }\r\n                const resultString = `${bookInfo.title} ${bookInfo.claim_num}`;\r\n                retDate = book.return_data;\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: bookInfo.title,\r\n                    id: bookId,\r\n                    rentDate: book.timestamp,\r\n                    retDate: retDate,\r\n                    author: bookInfo.author,\r\n                    claim_num: bookInfo.claim_num,\r\n                    publish: bookInfo.publisher,\r\n                    claim: bookInfo.claim,\r\n                    user: userId,\r\n                    userName: userName\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compareRent);\r\n//            console.log(results);\r\n            setRentList(results);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, historyLoading, historyError]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        }, [userList]\r\n    );\r\n*/\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        if (a1.rentDate > a2.rentDate)\r\n            return true;\r\n        else if (a1.rentDate < a2.rentDate)\r\n            return false;\r\n        return a1.title > a2.title;\r\n    }\r\n\r\n/*\r\n    async function updateDoc()\r\n    {\r\n        setInitialized(true);\r\n    }\r\n*/\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td colSpan=\"3\" className=\"bookCell\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n    function setProperty(index, value)\r\n    {\r\n        console.log(index);\r\n        console.log(value);\r\n        switch (index)\r\n        {\r\n            case 0:\r\n                setYear(value);\r\n                break;\r\n            case 1:\r\n                setMonth(parseInt(value));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(function () {\r\n        setQuery(yearValue.toString() + \"-\" + monthValue.toString().padStart(2, \"0\"))\r\n\r\n    }, [yearValue, monthValue]\r\n    );\r\n\r\n    useEffect(function () {\r\n        async function search()\r\n        {\r\n            console.log(\"Search\")\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/history\";\r\n                const obj = {\"params\": {\"period\": query}};\r\n                console.log(obj);\r\n                const response = await axios.get(url, obj);\r\n                console.log(response);\r\n\r\n                const books = response.data.return.books;\r\n                let results = [];\r\n                let retDate = \"\";\r\n                for (let i = 0 ; i < books.length ; i++)\r\n                {\r\n                    const book = books[i];\r\n                    const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                    if (\"RETURN_DATE\" in book)\r\n                    {\r\n                        retDate = book.RETURN_DATE;\r\n                    }\r\n                    let resultObject = {\r\n                        index: i,\r\n                        text: resultString,\r\n                        title: book.BOOKNAME,\r\n                        id: book.BARCODE,\r\n        //                rent: getBookState(props.text, book..toString()),\r\n                        rentDate: book.RENT_DATE,\r\n                        retDate: retDate,\r\n                        author: book.AUTHOR,\r\n                        totalName: book.TOTAL_NAME,\r\n                        claim_num: book.CLAMENUM,\r\n                        publish: book.PUBLISH,\r\n                        claim: book.CLAIM,\r\n                        user: book.USER,\r\n                        userName: book.USER_NAME\r\n                    };\r\n                    results.push(resultObject);\r\n                }\r\n                results.sort(compare);\r\n                setRentList(results);\r\n            }\r\n            else\r\n            {\r\n                var queryTo;\r\n                const nextMonth = monthValue + 1\r\n                queryTo = yearValue.toString() + \"-\" + nextMonth.toString().padStart(2, \"0\")\r\n                setFromTime(query)\r\n                setToTime(queryTo)\r\n                console.log(query)\r\n                console.log(queryTo)\r\n\r\n                try {\r\n                    await loadHistory();\r\n                }\r\n                catch (e)\r\n                {\r\n                    console.warn(e.name);\r\n                }\r\n\r\n    /*\r\n                for (const index in rent)\r\n                {\r\n                    const userId = rent[index][\"user\"];\r\n                    let userName;\r\n                    if (userList && userId in userList)\r\n                        userName = userList[userId].name;\r\n                    else\r\n                        userName = \"\"\r\n                    rent[index][\"userName\"] = userName;\r\n                    console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n                }\r\n                setRentList(rent);\r\n    */\r\n            }\r\n        }\r\n        search();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [searchQuery]\r\n    );\r\n\r\n    function movePrev()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month > 1)\r\n        {\r\n            month -= 1\r\n        }\r\n        else\r\n        {\r\n            year -= 1;\r\n            month = 12;\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    function moveNext()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month < 12)\r\n        {\r\n            month += 1\r\n        }\r\n        else\r\n        {\r\n            year += 1\r\n            month = 1\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.history}\r\n                </h2>\r\n            </div>\r\n            <div id=\"searchRange\">\r\n                <div className=\"page\" id = \"page\">\r\n                    <NavigateBeforeIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {movePrev();} }/>\r\n                </div>\r\n                <select name=\"year\" id=\"year\" className=\"dropdown\" onChange={(event) => {setProperty(0, event.target.value);}}/>\r\n                <select name=\"month\" id=\"month\" className=\"dropdown\" onChange={(event) => {setProperty(1, event.target.value);}}/>\r\n                    <div className=\"page\" id = \"page\">\r\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {moveNext();} }/>\r\n                    </div>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue={searchQuery} list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp } from \"../Util\";\r\nimport { Navigate } from 'react-router-dom'\r\nimport UserInfo from \"../UserInfo\";\r\n\r\nfunction NewMember(props) {\r\n//    const [userText, setUserText] = useState(\"\");\r\n    const [userInfo, setUserInfo] = useState({});\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n//    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n//    const [userList, setUserList] = useState({});\r\n//    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized || !props.doc.serverAvailable)\r\n            {\r\n                return;\r\n            }\r\n            import(\"./PageServer.css\");\r\n            console.log(\"=======================================\");\r\n            console.log(\"NewMember initialize\");\r\n            prepareNewMember();\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n*/\r\n\r\n    function prepareNewMember()\r\n    {\r\n        var info = {};\r\n        info.USER_CODE = \"\";\r\n        info.USER_NAME = \"\";\r\n        info.PHONE_NUMBER = \"\";\r\n        info.EMAIL = \"\";\r\n        info.ADDRESS = \"\";\r\n        info.NOTICE = \"\";\r\n        info.USER_LEVEL = -1;\r\n        setUserInfo(info);\r\n    }\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n*/\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n\r\n        const prop = toastProp;\r\n        var text\r\n        if (response.data.return === \"OK\")\r\n        {\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.regSuccess;\r\n            prepareNewMember()\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.regFail;\r\n        }\r\n        prop.autoClose = 3000;\r\n        toast.info(text, prop);\r\n    }\r\n    if (!props.doc.initialized || !props.doc.serverAvailable)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.newMember}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                {props.doc.serverAvailable &&\r\n                    <UserInfo text={props.text} doc={props.doc} info={userInfo} refresh={refresh}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewMember;\r\n","import { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        this.initialized = false;\r\n        this.bookReady = false;\r\n        this.rentReady = false;\r\n        this.userReady = false;\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        this.book = {};\r\n        this.rent = {};\r\n        this.logCallback = undefined;\r\n        this.admin = false;\r\n        this.dueDate = \"\";\r\n        this.serverInfo = {};\r\n        this.serverAvailable = false;\r\n        this.ipAddr = \"\"\r\n    }\r\n\r\n    async updateIpAddr()\r\n    {\r\n//        const response = await axios.get(\"https://ipv4.seeip.org/jsonip\");\r\n        const response = await axios.get(\"https://api.ipify.org/?format=json\")\r\n        console.log(\"Get IP Address\");\r\n        console.log(response.data);\r\n        const ipAddr = response.data.ip;\r\n        console.log(\"IP addr updated \" + ipAddr)\r\n        this.ipAddr = ipAddr;\r\n        this.checkServerIp()\r\n    }\r\n\r\n    checkServerIp()\r\n    {\r\n        if (this.ipAddr.length === 0 || !this.serverInfo.globalIp)\r\n            return;\r\n        if (this.serverInfo.globalIp === this.ipAddr)\r\n        {\r\n            console.log(\"Server is accessible \" + this.serverInfo.localIp);\r\n            const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n            this.serverAvailable = true;\r\n            axios.get(query, {timeout: 1000})\r\n                .then( (response) => {\r\n                    console.log(\"Server connected\");\r\n                    console.log(response.data);\r\n                    this.admin = response.data.admin;\r\n                    this.dueDate = response.data.dueDate;\r\n                    this.initialized = true;\r\n                })\r\n                .catch(error => {\r\n                  const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n                  window.open(query);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    checkState() {\r\n        if (this.bookReady && this.rentReady) {\r\n            this.initialized = true;\r\n            toast.dismiss();\r\n            if (this.callback) {\r\n                this.callback();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setLogCallback(callback) {\r\n        this.logCallback = callback;\r\n    }\r\n\r\n    setRent(rent) {\r\n        this.rent = rent\r\n        this.rentReady = true;\r\n        this.checkState();\r\n        this.checkRent();\r\n    }\r\n\r\n    setServerInfo(serverInfo)\r\n    {\r\n        console.log(serverInfo)\r\n        this.serverInfo = serverInfo;\r\n        console.log(this.serverInfo.globalIp);\r\n        this.checkServerIp()\r\n    }\r\n\r\n    setBook(books) {\r\n        this.book = {};\r\n        for (let i = 0 ; i < books.length ; i++)\r\n        {\r\n            const book = books[i];\r\n            const id = book['_id'];\r\n            this.book[id] = book;\r\n        }\r\n        this.bookReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setUser(users) {\r\n        this.user = {};\r\n        for (let i = 0 ; i < users.length ; i++)\r\n        {\r\n            const user = users[i];\r\n            const id = user.id;\r\n            this.user[id] = user;\r\n            this.user[id][\"rent\"] = 0;\r\n        }\r\n        this.userReady = true;\r\n        this.checkRent();\r\n    }\r\n\r\n    checkRent() {\r\n        if (!this.userReady || !this.rentReady)\r\n        {\r\n            console.log(\"Cannot check rent\");\r\n            return;\r\n        }\r\n//        console.log(this.rent);\r\n        for (let i = 0 ; i < this.rent.length ; i++)\r\n        {\r\n            const state = this.rent[i].state;\r\n\r\n//            console.log(state);\r\n            if (state !== \"1\" && state !== \"3\" && state !== 1 && state !== 3)\r\n                continue;\r\n\r\n            const userId = this.rent[i].user_id;\r\n//            console.log(this.rent[i]);\r\n//           console.log(userId);\r\n//           console.log(userId.length);\r\n            if (userId && userId.length > 0 && userId in this.user)\r\n                this.user[userId][\"rent\"] += 1;\r\n            else\r\n                this.user[userId][\"rent\"] = 1;\r\n        }\r\n        console.log(this.user);\r\n    }\r\n\r\n    logIn(userInfo) {\r\n        console.log(\"Logged in: \" + userInfo['_id']);\r\n        this.logged = true;\r\n        this.userInfo = userInfo;\r\n        if (userInfo['level'] === \"2\" ||\r\n            userInfo['level'] === 2)\r\n            this.admin = true;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n    }\r\n\r\n    logOut() {\r\n        console.log(\"Logged out\");\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        if (this.logCallback)\r\n            this.logCallback(false);\r\n    }\r\n\r\n    async getRent(userId = undefined) {\r\n        let ret = [];\r\n        if (this.serverAvailable) {\r\n            const url = \"https://\" + this.serverInfo.localIp + \":\" +\r\n                this.serverInfo.port + \"/book\";\r\n            const obj = {\"params\": {\"user\": userId}};\r\n            console.log(obj);\r\n            const result = await axios.get(url, obj);\r\n            console.log(result);\r\n            if (\"books\" in result.data.return)\r\n            {\r\n                // BARCODE, BOOKNAME, LENT_DATE, RETURN_DATE, STATS\r\n                // id, title, rentDate, retData,  stat\r\n                for (const entry of result.data.return.books)\r\n                {\r\n                    console.log(entry);\r\n                    const book = {'id': entry.BARCODE, 'title': entry.BOOKNAME, 'rentDate': entry.LENT_DATE, 'retDate': entry.RETURN_DATE, 'stat': entry.STATS}\r\n                    ret.push(book);\r\n                }\r\n//                ret = result.data.return.books;\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"Check \" + userId);\r\n            console.log(this.bookReady);\r\n            if (!this.bookReady)\r\n                return ret;\r\n    //        console.log(this.rent.length);\r\n            for (let i = 0 ; i < this.rent.length ; i++) {\r\n                const entry = this.rent[i];\r\n                if (userId !== undefined && entry.user_id !== userId)\r\n                    continue;\r\n    //            console.log(entry)\r\n                if (entry.state !== \"1\" && entry.state !== \"3\" && entry.state !== 1 && entry.state !== 3)\r\n                    continue;\r\n    //            console.log(entry);\r\n                const id = entry[\"book_id\"];\r\n                const book = this.book[id];\r\n    //            console.log(book)\r\n                let retEntry = {}\r\n                retEntry[\"id\"] = book._id\r\n                retEntry[\"title\"] = book.title\r\n                retEntry[\"rentDate\"] = entry.rent_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"retDate\"] = entry.return_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"user\"] = entry.user_id;\r\n                ret.push(retEntry)\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n\r\n    async openDoc() {\r\n        try {\r\n            this.initialized = true;\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.initialized;\r\n    }\r\n\r\n    setCallback(updateFunc)\r\n    {\r\n        console.log(\"Update function registered\");\r\n        this.callback = updateFunc;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","import config from \"./api/key\";\n\nconst NodeRSA = require('node-rsa');\n\nconst prk = new NodeRSA(config[\"privateKey\"]);\n\nclass Context {\n    constructor() {\n        console.log(\"Create Context\");\n\n        console.log(\"Cookies\");\n        const rawCookie = document.cookie;\n        this.cookie = rawCookie\n            .split(\";\")\n            .map(v => v.split(\"=\"))\n            .reduce((acc, v) => {\n                const key = v.shift().trim();\n                const value = v.join(\"=\").trim();\n                acc[decodeURIComponent(key)] = decodeURIComponent(value);\n                return acc;\n            }, {});\n    }\n\n    checkLogIn(user, passwordText) {\n        var matched = false;\n        var passwordTyped;\n        if (user && passwordText.length > 0) {\n            console.log(\"User data available\");\n            const emailDb = user[\"encrypted_email\"];\n            const phoneDb = user[\"encrypted_phone\"];\n\n            passwordTyped = prk.sign(passwordText, 'base64');\n            if (passwordText === emailDb ||\n                passwordText === phoneDb )\n            {\n                passwordTyped = passwordText;\n                matched = true;\n            }\n            else if (emailDb === passwordTyped)\n            {\n//                console.log(\"Email match\");\n                matched = true;\n            }\n            else\n            {\n                var numberString = \"\";\n                for (let i = 0 ; i < passwordText.length ; i++)\n                {\n                    if (!isNaN(passwordText[i]))\n                        numberString += passwordText[i];;\n                }\n                passwordTyped = prk.sign(numberString, 'base64');\n                if (passwordTyped === phoneDb)\n                {\n//                    console.log(\"Phone match\");\n                    matched = true;\n                }\n                else\n                {\n//                    console.log(\"Nothing matched\");\n                }\n            }\n\n//            console.log(\"toast available\");\n        }\n        if (matched)\n        {\n            const date = new Date();\n            const days=2;\n            date.setTime(date.getTime()+(days*24*60*60*1000));\n            const expireDate = date.toGMTString();\n            document.cookie = \"password=\" +  passwordTyped + \"; expires=\" + expireDate + \" ; SameSite=Lax ;\" ;\n        }\n        return matched\n    }\n}\n\nexport default Context;\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Dropdown.css'\r\n\r\nfunction DropDown(props) {\r\n\r\n    const [dropdown, setDropdown] = useState(false);\r\n    const [click, setClick] = useState(false)\r\n\r\n    useEffect(\r\n        () => {\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./DropdownServer.css\");\r\n            }\r\n            if (dropdown !== props.dropdown)\r\n            {\r\n                console.log(\"User clicked \" + props.doc.logged);\r\n                console.log(props.dropdown);\r\n                setClick(!click);\r\n                setDropdown(props.dropdown);\r\n            }\r\n            const menu = document.getElementById(\"dropdown-menu\");\r\n//            menu.hidden = !click;\r\n            if (!click)\r\n            {\r\n               menu.classList.remove('is-show');\r\n            }\r\n            else\r\n            {\r\n               menu.classList.add('is-show');\r\n            }\r\n\r\n        }, [props.dropdown, dropdown, click, props.doc.logged]\r\n    );\r\n\r\n    const logOut = () =>\r\n    {\r\n        setClick(false);\r\n        props.doc.logOut();\r\n        document.cookie = \"user_id=\";\r\n        document.cookie = \"password=\";\r\n        document.cookie = \"autoLogin=false\";\r\n    }\r\n\r\n    return (\r\n            <div id='dropdown-menu' onClick={() => { setClick(!click)}} className='dropdown-menu'>\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                    <div className='menu-items'>\r\n                        {props.doc.userInfo[\"_id\"] + \" : \" + props.doc.userInfo[\"name\"] + props.text.nameSuffix}\r\n                    </div>\r\n                    <hr className=\"hline\"/>\r\n                    </>\r\n                }\r\n                <Link className='menu-items' to=\"/\" onClick={() => setClick(false)}>\r\n                    {props.text.home}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/notice\" onClick={() => setClick(false)}>\r\n                    {props.text.notice}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/search\" onClick={() => setClick(false)}>\r\n                    {props.text.bookSearch}\r\n                </Link>\r\n                {props.doc.serverAvailable &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOut\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOut}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/return\" onClick={() => setClick(false)}>\r\n                            {props.text.return}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOutStatus}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {props.doc.admin &&\r\n                    <>\r\n                    <hr className=\"hline\"/>\r\n                    <Link className='menu-items' to=\"/userSearch\" onClick={() => setClick(false)}>\r\n                        {props.text.userSearch}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentalSituation\" onClick={() => setClick(false)}>\r\n                        {props.text.situation}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentHistory\" onClick={() => setClick(false)}>\r\n                        {props.text.history}\r\n                    </Link>\r\n                    </>\r\n                }\r\n                {props.doc.serverAvailable && props.doc.admin &&\r\n                    <Link className='menu-items' to=\"/newMember\" onClick={() => setClick(false)}>\r\n                        {props.text.newMember}\r\n                    </Link>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <hr className=\"hline\"/>\r\n                        <div className='menu-items' onClick={() => logOut()}>\r\n                            {props.text.logOut}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && !props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.logIn}\r\n                        </Link>\r\n                    </>\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default DropDown;\r\n","import React, { useState } from 'react';\r\nimport {isMobile} from \"react-device-detect\";\r\nimport \"./Navbar.css\";\r\nimport DropDown from \"./Dropdown\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction Navbar(props) {\r\n    const [dropdown, setDropdown] = useState(false)\r\n\r\n    const onClick = () => {\r\n        const maxWidth = document.getElementById(\"navbar\").style.maxWidth;\r\n        console.log(\"maxWidth\");\r\n        console.log(maxWidth);\r\n        console.log(document.getElementById(\"navbar\").style.width);\r\n        setDropdown(!dropdown);\r\n    }\r\n\r\nreturn (\r\n    <>\r\n        <div id=\"navbar\" className=\"navbar\">\r\n            <div className='title'>\r\n                {isMobile? (<h1>{props.text[\"titleShort\"]}</h1>) : (<h1>{props.text[\"titleLong\"]}</h1>)}\r\n            </div>\r\n            <div className='menu' onClick={onClick} >\r\n                <MenuIcon className=\"img\" fontSize=\"large\" sx={{ color: \"#ffffff\"}}/>\r\n            </div>\r\n            <DropDown text={props.text} doc={props.doc} dropdown={dropdown}/>\r\n        </div>\r\n    </>\r\n)\r\n}\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Notice from \"./pages/Notice\";\r\nimport Search from \"./pages/Search\";\r\nimport CheckOutStatus from \"./pages/CheckOutStatus\";\r\nimport CheckOut from \"./pages/CheckOut\";\r\nimport Return from \"./pages/Return\";\r\nimport UserSearch from \"./pages/UserSearch\";\r\nimport RentalSituation from \"./pages/RentalSituation\";\r\nimport RentHistory from \"./pages/RentHistory\";\r\nimport NewMember from \"./pages/NewMember\";\r\n//import Reader from \"./pages/Reader\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\nimport Context from \"./Context\";\r\nimport text from \"./api/text\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"./Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport Navbar from \"./Navbar\";\r\nimport {SERVER_QUERY} from \"./api/query.js\";\r\n//import {BOOK_QUERY, RENT_QUERY, USER_QUERY} from \"./api/query.js\";\r\nimport {BOOK_QUERY, RENT_QUERY, USER_QUERY} from \"./api/query_test.js\";\r\n\r\nconst doc = new Doc();\r\nconst context = new Context();\r\n\r\nconst textString = {};\r\nlet logMsg = \"\"\r\nfunction App() {\r\n\r\n//    const [checkOutStr, setCheckOutStr] = useState(\"\");\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [logged, setLogged] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const { loading: rentLoading, error: rentError, data: rentData } = useQuery(RENT_QUERY);\r\n    const { loading: serverLoading, error: serverError, data: serverData } = useQuery(SERVER_QUERY);\r\n    const [loadBook, { loading: bookLoading, error: bookError, data: bookData }] = useLazyQuery(BOOK_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY, { \"variables\": { \"_id\": userId } });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            logMsg = logMsg + \"<p>Initialize app</p>\";\r\n            console.log(process.env.APP_NAME);\r\n            console.log(process.env.APP_VERSION);\r\n            const lang = navigator.languages;\r\n            console.log(lang);\r\n            let ts = {}\r\n            if (lang.length> 0 && (lang[0].toLowerCase().includes(\"kr\") || lang[0].toLowerCase().includes(\"ko\")))\r\n            {\r\n                ts = text.kr;\r\n            }\r\n            else\r\n            {\r\n                ts = text.en;\r\n            }\r\n            for (let key in ts)\r\n            {\r\n                textString[key] = ts[key];\r\n            }\r\n\r\n            await doc.updateIpAddr();\r\n\r\n            if (\"autoLogin\" in context.cookie &&  context.cookie.autoLogin === \"true\")\r\n            {\r\n                console.log(\"Auto Login: \" + context.cookie.user_id);\r\n                setUserId(context.cookie.user_id);\r\n                console.log(context.cookie.nothing);\r\n                loadUser();\r\n            }\r\n            setInitialized(true);\r\n        }\r\n        initialize();\r\n    }, [loadUser]);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data loaded\");\r\n            if (!userData)\r\n            {\r\n                return;\r\n            }\r\n\r\n//            console.log(\"Login check \" + context.cookie.password);\r\n//            const user = userData.user\r\n            const user = userData.user_test\r\n//            console.log(user);\r\n            if (context.cookie.password && context.checkLogIn(user, context.cookie.password))\r\n            {\r\n                console.log(\"Login suceeded\");\r\n                doc.logIn(user);\r\n            }\r\n\r\n\r\n\r\n        }, [userData]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Rent Query Updated\");\r\n            logMsg = logMsg + \"<p>Rent Query Updated \" + rentLoading + \" \" + rentError + \"</p>\";\r\n            console.log(rentLoading);\r\n            console.log(rentError);\r\n            if (rentData)\r\n            {\r\n                console.log(\"Rent available\");\r\n                logMsg = logMsg + \"<p>Rent available</p>\"\r\n//                console.log(rentData.rents)\r\n//                doc.setRent(rentData.rents)\r\n                doc.setRent(rentData.rent_tests)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [rentLoading, rentError, rentData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Book Query Updated\");\r\n            logMsg = logMsg + \"<p>Book Query Updated</p>\";\r\n            console.log(bookLoading)\r\n            console.log(bookError)\r\n            if (bookData)\r\n            {\r\n                console.log(\"Book available\")\r\n                logMsg = logMsg + \"<p>Book available</p>\";\r\n//                console.log(bookData.books)\r\n//                doc.setBook(bookData.books)\r\n                doc.setBook(bookData.book_tests)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [bookLoading, bookError, bookData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Server Query Updated\");\r\n            logMsg = logMsg + \"<p>Server Query Updated</p>\";\r\n\r\n            console.log(serverData);\r\n            console.log(initialized);\r\n            if (!serverData || !initialized)\r\n                return\r\n\r\n            console.log(\"Server info available\")\r\n            logMsg = logMsg + \"<p>Server info available</p>\";\r\n            console.log(serverData)\r\n            doc.setServerInfo(serverData.serverInfo)\r\n\r\n            if (!doc.serverAvailable)\r\n            {\r\n                console.log(\"Server is not available. Load books from cloud DB\");\r\n                loadBook();\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.LOADING;\r\n                prop.autoClose = false;\r\n                prop.toastId = loadingId;\r\n                toast.loading(textString.loading, prop);\r\n                doc.setLogCallback(updateLog);\r\n            }\r\n        }, [serverLoading, serverError, serverData, loadBook, initialized]\r\n    );\r\n\r\n    function notifyInit()\r\n    {\r\n        const prop = toastProp;\r\n        prop.type = toast.TYPE.SUCCESS;\r\n        prop.render = textString.succeededToOpen;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = \"\";\r\n        toast.info(textString.succeededToOpen, prop);\r\n    }\r\n\r\n    function updateLog(logged) {\r\n        console.log(\"==== Update logging state \" + doc.logged);\r\n//        console.log(doc.userInfo);\r\n        setLogged(doc.logged);\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n        <div className=\"App\">\r\n            <div>\r\n                <ToastContainer\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    limit={10}\r\n                />\r\n            </div>\r\n            <Navbar doc={doc} text={textString}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home doc={doc} text={textString}/>} />\r\n                <Route path=\"/notice\" element={<Notice doc={doc} text={textString} />} />\r\n                <Route path=\"/search/:id?\" element={<Search doc={doc} text={textString}/>} />\r\n                <Route path=\"/checkOutStatus\" element={<CheckOutStatus context={context} doc={doc} text={textString} logged={logged}/>} />\r\n                <Route path=\"/userSearch/:id?\" element={<UserSearch context={context} doc={doc} text={textString} />} />\r\n                <Route path=\"/checkOut\" element={<CheckOut context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/return\" element={<Return context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentalSituation\" element={<RentalSituation context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentHistory\" element={<RentHistory context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/newMember\" element={<NewMember context={context} doc={doc} text={textString}/>} />\r\n            </Routes>\r\n\r\n            <h3>\r\n                v {process.env.REACT_APP_VERSION}\r\n            </h3>\r\n        </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport * as Realm from \"realm-web\";\r\nimport {\r\n    ApolloClient,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    InMemoryCache,\r\n} from \"@apollo/client\";\r\n\r\nconst APP_ID = 'data-xaque';\r\nconst graphqlUri = `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\r\nconst app = new Realm.App(APP_ID);\r\n\r\n// Gets a valid Realm user access token to authenticate requests\r\nasync function getValidAccessToken() {\r\n    // Guarantee that there's a logged in user with a valid access token\r\n    if (!app.currentUser) {\r\n        // If no user is logged in, log in an anonymous user. The logged in user will have a valid\r\n        // access token.\r\n        await app.logIn(Realm.Credentials.anonymous());\r\n//        await app.logIn(apiKey);\r\n    } else {\r\n        // An already logged in user's access token might be stale. Tokens must be refreshed after\r\n        // 30 minutes. To guarantee that the token is valid, we refresh the user's access token.\r\n        await app.currentUser.refreshAccessToken();\r\n    }\r\n//    console.log(\"AccessToken: [\" + app.currentUser.accessToken + \"]\");\r\n\r\n    return app.currentUser.accessToken;\r\n}\r\n\r\n// Configure the ApolloClient to connect to your app's GraphQL endpoint\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\r\n        // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\r\n        // access token before sending the request.\r\n        fetch: async (uri, options) => {\r\n            const accessToken = await getValidAccessToken();\r\n            options.headers.Authorization = `Bearer ${accessToken}`;\r\n            return fetch(uri, options);\r\n        },\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}