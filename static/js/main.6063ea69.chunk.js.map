{"version":3,"sources":["pages/Home.js","Util.js","api/query.js","pages/Notice.js","ListView.js","pages/Search.js","api/query_test.js","pages/CheckOutStatus.js","pages/CheckOut.js","pages/Return.js","UserInfo.js","pages/UserSearch.js","pages/RentalSituation.js","pages/RentHistory.js","pages/NewMember.js","Doc.js","Context.js","Dropdown.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useEffect","_initialize","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","console","log","doc","setCallback","undefined","stop","apply","arguments","initialize","_jsx","id","dangerouslySetInnerHTML","__html","text","homeText","SEARCH_PER_SCREEN","MAX_SEARCH_ENTRY","String","prototype","format","formatted","this","i","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","getUserState","state","normal","overDue","stopped","getBookState","available","checkedOut","reserved","lost","damaged","given","notAvailable","deleted","compareRent","a1","a2","rentDate","title","toUtf8","unescape","encodeURIComponent","loadingId","loggingId","NOTICE_QUERY","gql","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","CONTENT_QUERY","_templateObject8","SERVER_QUERY","_templateObject9","Notice","_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useState3","_useState4","displayedCodes","setDisplayedCodes","_useState5","_useState6","pageNum","setPageNum","_useState7","_useState8","selectedId","setSelectedId","_useQuery","useQuery","noticeLoading","loading","noticeData","data","noticeError","error","_useLazyQuery","useLazyQuery","_useLazyQuery2","loadSelected","_useLazyQuery2$","selectedLoading","selectedData","selectedError","notices","toString","startIdx","count","Math","min","slice","showEntry","result","_jsxs","className","children","date","colSpan","onClick","_id","notice","content","map","NavigateBeforeIcon","fontSize","sx","color","NavigateNextIcon","showCallback","ListView","itemList","setItemList","displayList","setDisplayList","list","keyValue","detail","initialized","Search","inputText","setInputText","_useDebounce","useDebounce","searchQuery","selectedRef","useRef","bookList","setBookList","_useState9","_useState10","rentList","setRentList","_useState11","_useState12","setBookState","bookStateRef","_useState13","_useState14","needConfirm","setNeedConfirm","needConfirmRef","_useState15","_useState16","queryRequest","toggleQueryRequest","useParams","updateDoc","_updateDoc","_callee6","rl","rented","bl","books","key","book","_context6","rent","push","code","book_id","retDate","return_date","name","num","author","claim","claim_num","totalName","series","category","publisher","publish","isbn","isOpen","serverAvailable","findBooks","_x","_findBooks","_callee2","results","url","obj","response","resultString","resultObject","_i","row","_resultString","_retDate","_state","_iterator","_step","entry","_resultObject","_context2","btoa","serverInfo","localIp","port","axios","get","sent","return","abrupt","concat","BOOKNAME","CLAIMNUM","_STATE","returnDate","_RETURN","index","BARCODE","AUTHOR","TOTAL_NAME","CLAMENUM","PUBLISH","CLAIM","ISBN","includes","_createForOfIteratorHelper","s","n","done","value","t0","e","f","finish","parseInt","sort","a","b","_query","_callee3","sr","_context3","current","query","selectId","_ref","_callee4","_context4","_x2","setState","_confirmAction","_callee7","ipAddr","portNum","_context7","post","then","hidden","entryId","flags","_callee5","_context5","rowSpan","admin","disabled","confirmAction","confirm","cancel","bookSearch","placeholder","searchBook","onChange","event","target","entries","BOOK_QUERY","RENT_QUERY","USERS_QUERY","USER_QUERY","HISTORY_QUERY","HISTORY_PERIOD_QUERY","State","LoggedOut","LoggingIn","LoggedIn","CheckOutStatus","userText","setUserText","passwordText","setPasswordText","setInitialized","userId","setUserId","history","setHistory","autoLogin","setAutoLogin","loadUser","userData","_useLazyQuery3","_useLazyQuery4","loadHistory","historyData","_useState17","_useState18","expireDate","setExpireDate","_useState19","_useState20","setTitle","_userId","logged","userInfo","getRent","t1","adminMode","userSearch","checkOut","logIn","_autoLogin","context","cookie","Date","setTime","getTime","days","toGMTString","_func","compare","func","bookReady","rentReady","hist","rentLogs","rentLog_tests","book_state","timestamp","split","showEntries","retText","bookName","React","Fragment","Link","to","showRented","noEntry","toUpperCase","_ref2","prop","toast","isActive","checkLogIn","user_test","type","TYPE","SUCCESS","logInSucceed","document","ERROR","logInFail","render","toastId","update","info","idHolder","onInput","pwHolder","checked","cookieString","toggleAutoLogin","dueDate","Navigate","LoggingOut","CheckOut","bookText","setBookText","setUserData","scannedBook","setScannedBook","notifyRequest","setNotifyRequest","barcode","setBarcode","setRented","prefixList","getElementsByName","substring","interval","setInterval","scan","clearInterval","notify","RENTED","getElementById","dismiss","prefix","updateUser","user","JSON","stringify","_ref3","logOut","_ref4","imageCaptured","files","file","INFO","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","getBase64","img","method","mode","crossDomain","headers","withCredentials","credentials","image","succeededToOpen","INVALID_BOOK","showBook","bookId","search","htmlFor","pattern","inputMode","USER_CODE","USER_NAME","nameSuffix","USER_STATE","_RENT","rentSuffix","CameraAltIcon","accept","capture","numberOnly","bookHolder","confirmRent","ret","rentSucceed","NOT_AVAILABLE","Return","returned","setReturned","NOT_RENTED","confirmReturn","returnSucceed","UserInfo","setDisabled","setUserInfo","setProperty","PHONE_NUMBER","EMAIL","ADDRESS","USER_LEVEL","NOTICE","Object","keys","registeredDate","REG_DATE","phone","email","address","notice_","level","kid","adult","save","confirmSave","refresh","userLoading","userListData","userError","userList","setUserList","_args6","_extend","extend","users","user_tests","setUser","getUser","extendCount","forceSelect","_args2","showUsers","showUser","_Fragment","findUsers","_x3","_findUsers","toLowerCase","input","trim","err","RentHistory","userName","RETURN_DATE","STATS","LENT_DATE","USER","situation","fromTime","setFromTime","toTime","setToTime","_useLazyQuery4$","historyLoading","historyError","yearValue","setYear","monthValue","setMonth","setQuery","option","year","month","thisYear","thisMonth","createElement","add","getFullYear","getMonth","bookInfo","user_id","padStart","_search","queryTo","nextMonth","RENT_DATE","warn","movePrev","moveNext","NewMember","prepareNewMember","newMember","regSuccess","regFail","Doc","_classCallCheck","userReady","logCallback","_createClass","_updateIpAddr","ip","checkServerIp","_this","globalIp","timeout","catch","window","open","callback","checkState","checkRent","_getRent","_entry","_book","retEntry","_EXTEND_COUNT","rent_date","_openDoc","updateFunc","prk","require","config","Context","rawCookie","v","reduce","acc","shift","join","decodeURIComponent","passwordTyped","matched","emailDb","phoneDb","sign","numberString","isNaN","DropDown","dropdown","setDropdown","click","setClick","menu","classList","remove","home","checkOutStatus","Navbar","isMobile","maxWidth","style","width","MenuIcon","textString","logMsg","App","setLogged","rentLoading","rentError","rentData","_useQuery2","serverLoading","serverError","serverData","loadBook","bookLoading","bookError","bookData","notifyInit","updateLog","lang","ts","process","APP_NAME","APP_VERSION","navigator","languages","kr","en","updateIpAddr","nothing","password","setRent","rent_tests","setBook","book_tests","setServerInfo","LOADING","setLogCallback","Router","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","limit","Routes","Route","path","element","UserSearch","RentalSituation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","APP_ID","graphqlUri","app","Realm","getValidAccessToken","_getValidAccessToken","currentUser","anonymous","refreshAccessToken","accessToken","client","ApolloClient","link","HttpLink","uri","fetch","_fetch","options","Authorization","_x4","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider"],"mappings":"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","file":"static/js/main.6063ea69.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./Home.css\";\r\n\r\nfunction Home(props) {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Home\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (<div id=\"home\" dangerouslySetInnerHTML={{__html:props.text.homeText}}></div>);\r\n}\r\n\r\nexport default Home;\r\n","export const SEARCH_PER_SCREEN = 10;\r\nexport const MAX_SEARCH_ENTRY = 500;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n\r\nexport const getUserState = function(text, state) {\r\n    if (state === \"0\" || state === 0)\r\n        return text.normal;\r\n    else if (state === \"1\" || state === 1)\r\n        return text.overDue;\r\n    else if (state === \"2\" || state === 2)\r\n        return text.stopped;\r\n}\r\n\r\nexport const getBookState = function(text, state) {\r\n    switch (state)\r\n    {\r\n        case \"0\":\r\n        case 0:\r\n            return text.available;\r\n        case \"1\":\r\n        case 1:\r\n            return text.checkedOut;\r\n        case \"2\":\r\n        case 2:\r\n            return text.reserved;\r\n        case \"3\":\r\n        case 3:\r\n            return text.overDue;\r\n        case \"4\":\r\n        case 4:\r\n            return text.lost;\r\n        case \"5\":\r\n        case 5:\r\n            return text.damaged;\r\n        case \"6\":\r\n        case 6:\r\n            return text.given;\r\n        case \"7\":\r\n        case 7:\r\n        default:\r\n            return text.notAvailable;\r\n        case \"8\":\r\n        case 8:\r\n            return text.deleted;\r\n    }\r\n}\r\n\r\nexport const compareRent = function(a1, a2)\r\n{\r\n    if (a1.rentDate > a2.rentDate)\r\n        return true;\r\n    else if (a1.rentDate < a2.rentDate)\r\n        return false;\r\n    return a1.title > a2.title;\r\n}\r\n\r\nexport const toUtf8 = function(text) {\r\n    return unescape(encodeURIComponent(text));\r\n};\r\n\r\nexport const fromUtf8 = function(text) {\r\n    return decodeURIComponent(escape(text));\r\n};\r\n\r\nexport const loadingId = \"custom-loading-id\";\r\nexport const loggingId = \"custom-logging-id\";\r\n","import gql from \"graphql-tag\";\n\nexport const BOOK_QUERY = gql`\n    query AllBook{\n        books (sortBy: TITLE_ASC, limit:20000) {\n            _id\n            author\n            title\n            claim_num\n            num\n            series\n            category\n            claim\n            publisher\n            seqnum\n            isbn\n        }\n    }\n`;\n\nexport const RENT_QUERY = gql`\n    query AllRent{\n        rents (limit:20000) {\n            _id\n            book_id\n            user_id\n            rent_date\n            return_date\n            state\n        }\n    }\n`;\n\nexport const USERS_QUERY = gql`\n    query AllUser {\n        users (limit: 20000) {\n            _id\n            name\n            state\n            level\n        }\n    }`;\n\nexport const USER_QUERY = gql`\n    query FindUser($_id: String!){\n        user (query: {_id:$_id}) {\n            _id\n            name\n            state\n            level\n            encrypted_email\n            encrypted_phone\n        }\n    }`;\n\nexport const HISTORY_QUERY = gql`\n    query findLogs($user_id: String!){\n        rentLogs (limit: 20000, query: {user_id: $user_id}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_date\n            user_id\n        }\n    }`;\n\nexport const HISTORY_PERIOD_QUERY = gql`\n    query findLogs ($fromTime: String!, $toTime: String!) {\n        rentLogs(limit: 20000, query: {AND: [{timestamp_gte: $fromTime}, {timestamp_lt: $toTime}]}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_date\n            user_id\n        }\n    }`;\n\nexport const NOTICE_QUERY = gql`\n    query GetNotices {\n        notices (sortBy: _ID_DESC, limit:20000) {\n            _id\n            date\n            title\n        }\n    }`;\n\nexport const CONTENT_QUERY = gql`\n    query GetContent ($_id: String!) {\n        notice (query: {_id: $_id}) {\n            _id\n            date\n            title\n            content\n        }\n    }`;\n\nexport const SERVER_QUERY = gql`\n    query GetServerInfo {\n        serverInfo {\n            _id\n            globalIp\n            localIp\n            port\n        }\n    }`;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { SEARCH_PER_SCREEN } from \"../Util\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport {NOTICE_QUERY, CONTENT_QUERY} from \"../api/query.js\";\r\n\r\nfunction Notice(props) {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(-1);\r\n    const { loading: noticeLoading, data: noticeData, error: noticeError } = useQuery(NOTICE_QUERY);\r\n    const [loadSelected, { loading: selectedLoading, data: selectedData, error: selectedError}] = useLazyQuery(CONTENT_QUERY,\r\n            {\"variables\": {\"_id\": selectedId}});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Notice\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Notice\");\r\n//            console.log(noticeData);\r\n//            console.log(noticeError);\r\n//            console.log(noticeLoading);\r\n            if (noticeData)\r\n            {\r\n                setSearchResults(noticeData.notices);\r\n            }\r\n        }, [noticeData, noticeError, noticeLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Content\");\r\n//            console.log(selectedData);\r\n//            console.log(selectedError);\r\n//            console.log(selectedLoading);\r\n            if (selectedData)\r\n            {\r\n//                setSearchResults(selectedData.content);\r\n            }\r\n        }, [selectedData, selectedError, selectedLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n            console.log(\"Page num \" + pageNum.toString() + \" \");\r\n            console.log(length);\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n//           console.log(displayedCodes);\r\n        }, [displayedCodes]\r\n    );\r\n\r\n    const selectEntry = (id) => {\r\n        console.log(\"selected \" + id.toString());\r\n        if (selectedId === id)\r\n        {\r\n            setSelectedId(-1);\r\n        }\r\n        else\r\n        {\r\n            setSelectedId(id);\r\n        }\r\n        loadSelected();\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n//        console.log(result);\r\n        return (\r\n                <tr className=\"\" key={result._id}>\r\n                    <td className=\"\"> {result.date} </td>\r\n                    <td className=\"noticeEntry\" colSpan=\"2\" onClick={() => selectEntry(result._id)}> {result.title}</td>\r\n                </tr>\r\n        );\r\n    }\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (searchResults.length > (pageNum + 1) * SEARCH_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div id=\"notice\">\r\n                <div id=\"title\">\r\n                    <h2>\r\n                        {props.text.notice}\r\n                    </h2>\r\n                </div>\r\n                {selectedId > 0 && selectedData &&\r\n                <div id=\"noticeContent\">\r\n                    <table className=\"content\"><tbody>\r\n                           {showEntry(selectedData.notice)}\r\n                        <tr>\r\n                            <td className=\"content\" colSpan=\"3\">\r\n                                {selectedData.notice.content}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                </div>\r\n                }\r\n                <div id=\"noticeList\">\r\n                    <table><tbody>\r\n                       {displayedCodes.length > 0 && displayedCodes.map((result) => showEntry(result))}\r\n                    </tbody></table>\r\n                </div>\r\n                {searchResults.length > SEARCH_PER_SCREEN && (\r\n                    <div id=\"pageControl\">\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={movePrev}/>\r\n                        </div>\r\n                        <div className=\"pageNum\" id=\"pageNum\">\r\n                            {pageNum+1}\r\n                        </div>\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateNextIcon fontSize=\"large\" sx={{color: (searchResults.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={moveNext}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default Notice;\r\n","import { useEffect, useState } from \"react\";\nimport { SEARCH_PER_SCREEN } from \"./Util\";\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\n\nfunction doNothing() {\n    console.log(\"Do nothing...\");\n}\n\nvar showCallback = doNothing;\nfunction ListView(props) {\n        const [itemList, setItemList] = useState([]);\n//        const [showCallback, setShowCallback] = useState(doNothing);\n        const [pageNum, setPageNum] = useState(0);\n        const [displayList, setDisplayList] = useState([]);\n\n    useEffect(function () {\n        console.log(\"Init List View\");\n    }, []);\n\n    useEffect(function () {\n//        console.log(\"Set Item List\");\n        setItemList(props.list);\n    }, [props.list]);\n\n    useEffect(function () {\n        setPageNum(0);\n    }, [props.keyValue]);\n\n    useEffect(function () {\n        if (props.showCallback)\n        {\n//            console.log(\"Set show callback\");\n //           setShowCallback(props.showCallback);\n            showCallback = props.showCallback;\n        }\n    }, [props.showCallback]);\n\n    useEffect(function () {\n        const length = itemList.length;\n //       console.log(\"Page num \" + pageNum.toString());\n        if (length > SEARCH_PER_SCREEN)\n        {\n            const startIdx = pageNum * SEARCH_PER_SCREEN;\n            const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\n            setDisplayList(itemList.slice(startIdx,startIdx+count));\n        }\n        else\n        {\n            setDisplayList(itemList)\n        }\n    }, [itemList, pageNum]);\n\n    function movePrev() {\n        console.log(\"Prev\");\n        if (pageNum > 0)\n        {\n            setPageNum(pageNum - 1);\n        }\n    }\n\n    function moveNext() {\n        console.log(\"Next\");\n        if (itemList.length > (pageNum + 1) * SEARCH_PER_SCREEN)\n        {\n            setPageNum(pageNum + 1);\n        }\n    }\n\n    return (\n        <div id=\"listView\">\n            {showCallback(displayList, props.detail)}\n            {itemList && itemList.length > SEARCH_PER_SCREEN && (\n                <div id=\"pageControl\">\n                    <div className=\"page\" id = \"page\">\n                        <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={() => {movePrev();} }/>\n                    </div>\n                    <div className=\"pageNum\" id=\"pageNum\">\n                        {pageNum+1}\n                    </div>\n                    <div className=\"page\" id = \"page\">\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: (itemList.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={() => {moveNext();} }/>\n                    </div>\n                </div>)\n            }\n        </div>\n    );\n}\nexport default ListView;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { MAX_SEARCH_ENTRY, getBookState, toUtf8 } from \"../Util\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ListView from \"../ListView\";\r\n\r\nlet initialized = false;\r\n\r\nfunction Search(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(inputText, 300);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n\r\n    const [bookList, setBookList] = useState([]);\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    const [bookState, setBookState] = useState(0);\r\n    const bookStateRef = useRef(0);\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const needConfirmRef = useRef(false);\r\n\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n            console.log(\"BOOK ID: \" + id);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setInputText(id);\r\n            }\r\n            else\r\n            {\r\n                setInputText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findBooks(text) {\r\n                let results = [];\r\n\r\n                if (props.doc.serverAvailable)\r\n                {\r\n                    console.log(toUtf8(text));\r\n                    console.log(btoa(toUtf8(text)));\r\n                    const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                        props.doc.serverInfo.port + \"/book\";\r\n                    const obj = {\"params\": {\"book\": btoa(toUtf8(text)), \"match\":false}};\r\n                    console.log(\"=======================\");\r\n                    console.log(\"Request book list\");\r\n                    console.log(obj);\r\n                    const response = await axios.get(url, obj);\r\n                    console.log(response)\r\n                    if (!(\"books\" in response.data.return))\r\n                        return results;\r\n                    const books = response.data.return.books;\r\n                    for (let i = 0 ; i < books.length ; i++)\r\n                    {\r\n                        const book = books[i];\r\n                        const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                        const state = book._STATE;\r\n                        let retDate = \"\";\r\n                        if (state === 1 || state === 3 || state === \"1\" || state === \"3\")\r\n                        {\r\n                            retDate = props.text.returnDate + \" \" + book._RETURN;\r\n                        }\r\n                        let resultObject = {\r\n                            index: i,\r\n                            text: resultString,\r\n                            name: book.BOOKNAME,\r\n                            code: book.BARCODE,\r\n                            rent: getBookState(props.text, book._STATE.toString()),\r\n                            retDate: retDate,\r\n                            author: book.AUTHOR,\r\n                            totalName: book.TOTAL_NAME,\r\n                            claim_num: book.CLAMENUM,\r\n                            publish: book.PUBLISH,\r\n                            claim: book.CLAIM,\r\n                            state: book._STATE,\r\n                            isbn: book.ISBN\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n\r\n                    for (let i = 0 ; i < bookList.length ; i++) {\r\n                        const row = bookList[i];\r\n                        if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                        if ((row.name && row.name.toString().includes(text)) ||\r\n                            (row.code === text) ||\r\n                            (row.isbn === text))\r\n                        {\r\n                            let resultString = `${row.name} ${row.claim_num}`;\r\n                            let retDate = \"\";\r\n                            let state = \"0\";\r\n                            for (const entry of rentList)\r\n                            {\r\n                                if (entry.code === row.code)\r\n                                {\r\n                                    state = entry.state;\r\n                                    if (state === \"1\" || state === \"3\")\r\n                                    {\r\n                                        retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                            let resultObject = {\r\n                                index: i,\r\n                                text: resultString,\r\n                                name: row.name,\r\n                                code: row.code.toString(),\r\n                                rent: getBookState(props.text, state),\r\n                                retDate: retDate,\r\n                                author: row.author,\r\n                                totalName: row.totalName,\r\n                                claim_num: row.claim_num,\r\n                                publish: row.publish,\r\n                                claim: row.claim,\r\n                                state: parseInt(state),\r\n                                isbn: row.isbn\r\n                            };\r\n                            results.push(resultObject);\r\n                            console.log(resultObject);\r\n                        }\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a['text'] > b['text']; });\r\n                return results;\r\n            }\r\n            async function query() {\r\n                console.log(\"Refresh\");\r\n                if (searchQuery) {\r\n                    let sr = await findBooks(searchQuery);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        selectedRef.current = sr[0].code;\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, bookList, rentList, props, queryRequest]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        initialized = true;\r\n\r\n        let rl = [];\r\n        const rented = props.doc.rent;\r\n        for (let i = 0 ; i < rented.length; i++)\r\n        {\r\n           rl.push({code:rented[i].book_id, retDate:rented[i].return_date, state:rented[i].state});\r\n        }\r\n        setRentList(rl);\r\n\r\n        let bl = [];\r\n        const books = props.doc.book\r\n        for (const key in books)\r\n        {\r\n           const book = books[key];\r\n           bl.push({code: book._id, name: book.title, num: book.num, author: book.author, claim: book.claim,\r\n                    claim_num: book.claim_num, totalName: book.series, category: book.publisher, publish: book.publisher, isbn: book.isbn});\r\n        }\r\n        console.log(\"Load\");\r\n        console.log(books.length);\r\n        setBookList(bl);\r\n    }\r\n\r\n    const selectId = async (code) => {\r\n        console.log(\"Prev \" + selectedRef.current);\r\n        if (selectedRef.current === -1 || selectedRef.current !== code)\r\n        {\r\n            console.log(\"Select \" + code);\r\n            setSelectedId(code);\r\n            selectedRef.current = code;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + code);\r\n            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n        }\r\n    }\r\n\r\n    function setState(state)\r\n    {\r\n        console.log(\"Set state \" + state.toString());\r\n        needConfirmRef.current = true;\r\n        setNeedConfirm(true);\r\n        setBookState(state);\r\n        bookStateRef.current = state;\r\n        console.log(selectedId.toString() + needConfirmRef.current);\r\n    }\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n\r\n        const ipAddr = props.doc.serverInfo.localIp;\r\n        const portNum = props.doc.serverInfo.port;\r\n        if (ipAddr.length === 0 || portNum <= 0)\r\n            return;\r\n\r\n        const url = \"https://\" + ipAddr + \":\" +\r\n            portNum + \"/book\";\r\n        var obj = {};\r\n        obj[\"book\"] = selectedRef.current;\r\n        obj[\"state\"] = bookStateRef.current;\r\n        console.log(\"=======================\");\r\n        console.log(\"Change book state\");\r\n        console.log(obj);\r\n        await axios.post(url, obj).then( response => {\r\n            console.log(response);\r\n        });\r\n\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n        const hidden = (result.code !== selectedRef.current);\r\n        const entryId = (hidden) ? \"searchResult\" : \"selectedSearchResult\";\r\n        const flags = [false, false, false, false, false, false, false, false, false, false]\r\n        flags[result.state] = true;\r\n        if (result.state === 1 || result.state === 2 || result.state === 3)\r\n            flags[0] = true;\r\n        if (!hidden)\r\n            console.log(flags)\r\n        return (\r\n            <div key={result.code}>\r\n            <div id={entryId} onClick={async () => await selectId(result.code)}>\r\n                <table><tbody>\r\n                    <tr className=\"searchTr\">\r\n                        <td className=\"searchTitle\"> {result.text}</td>\r\n                        <td className=\"searchRent\"> {result.rent} </td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {!hidden &&\r\n            <div>\r\n                <table><tbody>\r\n                <tr>\r\n                    <td>{result.author} </td>\r\n                    <td colSpan=\"2\" rowSpan=\"2\">{result.totalName} <b>{result.name}</b> { result.claim_num} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.code} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.publish}</td>\r\n                    <td colSpan={result.retDate.length > 0 ? \"1\":\"2\"}>{result.claim} </td>\r\n                    {result.retDate.length > 0 && <td>{result.retDate}</td> }\r\n                </tr>\r\n                </tbody></table>\r\n                <div hidden={!props.doc.serverAvailable || !props.doc.admin}>\r\n                    <button className=\"bookStates\" id = \"0\" disabled={flags[0]} onClick={() => setState(0)}> {props.text.available} </button>\r\n                    <button className=\"bookStates\" id = \"4\" disabled={flags[4]} onClick={() => setState(4)}> {props.text.lost} </button>\r\n                    <button className=\"bookStates\" id = \"5\" disabled={flags[5]} onClick={() => setState(5)}> {props.text.damaged} </button>\r\n                    <button className=\"bookStates\" id = \"6\" disabled={flags[6]} onClick={() => setState(6)}> {props.text.given} </button>\r\n                    <button className=\"bookStates\" id = \"7\" disabled={flags[7]} onClick={() => setState(7)}> {props.text.notAvailable} </button>\r\n                    <button className=\"bookStates\" id = \"8\" disabled={flags[8]} onClick={() => setState(8)}> {props.text.deleted} </button>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirmRef.current}>\r\n                    <div id=\"bookName\"> {getBookState(props.text, bookStateRef.current)} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n            </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function showEntries(results)\r\n    {\r\n        console.log(\"Redraw \" + needConfirmRef.current);\r\n        return results.map((result) => showEntry(result))\r\n    }\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <div id=\"title\">\r\n                <h2> {props.text.bookSearch} </h2>\r\n            </div>\r\n            <div id=\"searchContents\">\r\n                <input id=\"searchInput\"\r\n                    placeholder={props.text.searchBook}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n            </div>\r\n            <ListView keyValue={searchQuery} list={searchResults} detail={selectedId + needConfirm} showCallback={(entries, detail) => { return showEntries(entries); }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import gql from \"graphql-tag\";\n\nexport const BOOK_QUERY = gql`\n    query AllBook{\n        book_tests (sortBy: TITLE_ASC, limit:20000) {\n            _id\n            author\n            title\n            claim_num\n            num\n            series\n            category\n            claim\n            publisher\n            seqnum\n            isbn\n        }\n    }\n`;\n\nexport const RENT_QUERY = gql`\n    query AllRent{\n        rent_tests (limit:20000) {\n            _id\n            book_id\n            user_id\n            rent_date\n            return_date\n            state\n        }\n    }\n`;\n\nexport const USERS_QUERY = gql`\n    query AllUser {\n        user_tests (limit: 20000) {\n            _id\n            name\n            state\n            level\n        }\n    }`;\n\nexport const USER_QUERY = gql`\n    query FindUser($_id: String!){\n        user_test (query: {_id:$_id}) {\n            _id\n            name\n            state\n            level\n            encrypted_email\n            encrypted_phone\n        }\n    }`;\n\nexport const HISTORY_QUERY = gql`\n    query findLogs($user_id: String!){\n        rentLog_tests (limit: 20000, query: {user_id: $user_id}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_date\n            user_id\n        }\n    }`;\n\nexport const HISTORY_PERIOD_QUERY = gql`\n    query findLogs ($fromTime: String!, $toTime: String!) {\n        rentLog_tests(limit: 20000, query: {AND: [{timestamp_gte: $fromTime}, {timestamp_lt: $toTime}]}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_date\n            user_id\n        }\n    }`;\n\nexport const NOTICE_QUERY = gql`\n    query GetNotices {\n        notice_tests (sortBy: _ID_DESC, limit:20000) {\n            _id\n            date\n            title\n        }\n    }`;\n\nexport const CONTENT_QUERY = gql`\n    query GetContent ($_id: String!) {\n        notice_test (query: {_id: $_id}) {\n            _id\n            date\n            title\n            content\n        }\n    }`;\n\nexport const SERVER_QUERY = gql`\n    query GetServerInfo {\n        serverInfo_test {\n            _id\n            globalIp\n            localIp\n            port\n        }\n    }`;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, compareRent } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\n//import {USER_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\nimport {USER_QUERY, HISTORY_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction CheckOutStatus(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [expireDate, setExpireDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOutStatus initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n\r\n            if (\"autoLogin\" in props.context.cookie)\r\n            {\r\n                const autoLogin = (props.context.cookie.autoLogin === \"true\") ? true : false;\r\n                setAutoLogin(autoLogin);\r\n            }\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            setExpireDate(date.toGMTString());\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.doc.logged]\r\n    );\r\n\r\n    useEffect(() => {\r\n            async function func() {\r\n                console.log(\"User data updated \");\r\n                await compare();\r\n            }\r\n            func();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n            let hist = [];\r\n//            const rentLogs = historyData.rentLogs;\r\n            const rentLogs = historyData.rentLog_tests;\r\n            for (let i = 0 ; i < rentLogs.length ; i++)\r\n            {\r\n                const entry = rentLogs[i];\r\n                if (entry.book_state !== \"1\" && entry.book_state !== 1)\r\n                    continue;\r\n                if (! (\"return_date\" in entry) || ! entry.return_date)\r\n                    continue;\r\n                console.log(entry);\r\n                const id = entry.book_id;\r\n                const title = (id in props.doc.book) ? props.doc.book[id].title : \"N/A\";\r\n                const date = entry.timestamp.split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                const retDate = entry.return_date;\r\n                const claim = (id in props.doc.book) ? props.doc.book[id].claim : \"N/A\";\r\n                hist.push({\"id\": id, \"title\": title, \"rentDate\": date, \"retDate\": retDate, \"claim\": claim});\r\n\r\n            }\r\n            hist.sort(compareRent);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.logged)\r\n        {\r\n            setState(State.LoggedIn);\r\n            const userId = props.doc.userInfo['_id'];\r\n            setUserId(userId);\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            await loadHistory();\r\n        }\r\n        else\r\n        {\r\n            setState(State.LoggedOut);\r\n            setUserId(\"\");\r\n            setPasswordText(\"\");\r\n        }\r\n\r\n        console.log(\"Set title \" + props.doc.logged)\r\n        if (props.doc.logged)\r\n        {\r\n            if (props.doc.adminMode)\r\n                setTitle(props.text.userSearch);\r\n            else\r\n                setTitle(props.text.checkOut);\r\n        }\r\n        else\r\n        {\r\n            setTitle(props.text.logIn);\r\n        }\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const claim = rent[\"claim\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const toggleAutoLogin = () => {\r\n        console.log(\"Toggle autoLogin\");\r\n        const cookieString = \"autoLogin=\" + (autoLogin ? \"false\":\"true\") + \"; expires=\" + expireDate + \";\";\r\n//        console.log(cookieString);\r\n        document.cookie = cookieString;\r\n        setAutoLogin(!autoLogin);\r\n    }\r\n\r\n    const showEntries = (result, retText) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{retText}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        setState(State.LoggingIn);\r\n        setUserId(userText.toUpperCase());\r\n        await loadUser();\r\n        await loadHistory();\r\n        console.log(\"Log In\");\r\n        await compare();\r\n    }\r\n\r\n    const compare = async () => {\r\n        if (!userData || state === State.LoggedOut)\r\n            return;\r\n\r\n        console.log(toast.isActive(loggingId));\r\n        const prop = toastProp;\r\n\r\n        let text;\r\n        if (props.context.checkLogIn(userData.user_test, passwordText))\r\n        {\r\n            props.doc.logIn(userData.user_test);\r\n\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            setState(State.LoggedIn);\r\n\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            document.cookie = \"user_id=\" + userId + \"; expires=\" + expireDate + \";\";\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.render = text;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = loggingId;\r\n        if (toast.isActive(loggingId))\r\n        {\r\n            console.log(\"update toast\");\r\n            toast.update(loggingId, prop);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"New toast\");\r\n            toast.info(text, prop);\r\n        }\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {title}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!(state !== State.LoggedIn)}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <input type=\"password\" id=\"searchPassword\"\r\n                    placeholder={props.text.pwHolder}\r\n                    value={passwordText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setPasswordText(event.target.value);\r\n                    }} />\r\n                <div id=\"autoLogin\">\r\n                    <input type=\"checkbox\" id=\"autoLoginButton\" checked={autoLogin} onChange={() => toggleAutoLogin()}/>\r\n                    <label>\r\n                            {props.text.autoLogin}\r\n                    </label>\r\n                </div>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={!(state === State.LoggedIn)}>\r\n                <div>\r\n                    { showEntries(searchResults, props.text.dueDate) }\r\n                </div>\r\n\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <ListView list={history} showCallback={(entries) => { return showEntries(entries, props.text.returnDate); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOutStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, loadingId, getUserState } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2,\r\n    LoggingOut: 3\r\n}\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 300);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [userData, setUserData] = useState({});\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n    const [rented, setRented] = useState([]);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOut initialize\");\r\n            const prefixList = document.getElementsByName(\"idPrefix\");\r\n            const prefix = barcode.substring(0, 2);\r\n            for (var i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                const id = prefixList[i].id\r\n                if (\"AB\" === id)\r\n                    prefixList[i].checked = true\r\n                else\r\n                    prefixList[i].checked = false\r\n\r\n            }\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n//            console.log(props.doc.serverInfo);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            import(\"./PageServer.css\");\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                axios.get(url).then( response => {\r\n                        const code = response.data.scan;\r\n                        if (code) {\r\n                            console.log(code)\r\n                            setBarcode(code)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            console.log(toast.isActive(loggingId));\r\n            const prop = toastProp;\r\n\r\n            let text;\r\n            let notify = false;\r\n            if (\"USER_CODE\" in userData && state !== State.LoggedIn)\r\n            {\r\n                setState(State.LoggedIn);\r\n\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                text = props.text.logInSucceed;\r\n                notify = true;\r\n            }\r\n            else if (!(\"USER_CODE\" in userData))\r\n            {\r\n                setState(State.LoggedOut);\r\n\r\n                if (state === State.LoggingIn)\r\n                {\r\n                    prop.type = toast.TYPE.ERROR;\r\n                    text = props.text.logInFail;\r\n                    notify = true;\r\n                }\r\n            }\r\n\r\n            if (notify)\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": prop.type})\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 0)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n                setBarcode(\"\")\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            console.log(\"Notification \" + notifyRequest.text)\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//            if (\"id\" in notifyRequest)\r\n//                id = notifyRequest.id\r\n\r\n//            prop.toastId = id\r\n//            if (toast.isActive(id))\r\n//                toast.update(id, notifyRequest.text, prop);\r\n//            else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (state !== State.LoggedIn)\r\n            {\r\n                const prefixList = document.getElementsByName(\"idPrefix\");\r\n                var prefix = \"\"\r\n                for (var i = 0 ; i < prefixList.length ; i++)\r\n                {\r\n                    if (prefixList[i].checked)\r\n                        prefix = prefixList[i].id\r\n                        console.log(\"Pressed [\" + i.toString() + \" \" + prefix + \"]\")\r\n\r\n                }\r\n                const barcode = prefix + userText\r\n                setBarcode(barcode);\r\n            }\r\n        }, [state, userText]\r\n    );\r\n\r\n    const updateUser = async (userText) => {\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/user?user=\" + userText;\r\n        const obj = {\"params\": {\"user\": userText, \"data\":\"nothing\"}};\r\n        console.log(obj);\r\n        const response = await axios.get(url, btoa(JSON.stringify(obj)));\r\n        const user = response.data.return;\r\n\r\n        setUserData(user);\r\n        console.log(user);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        console.log(\"LOGIN\");\r\n        console.log(barcode);\r\n        if (barcode.length === 0)\r\n            return;\r\n        setState(State.LoggingIn);\r\n        const id = barcode.toUpperCase();\r\n        setUserId(id);\r\n        updateUser(id);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Log Out\");\r\n        setUserData({});\r\n        setUserText(\"\");\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n        setRented([])\r\n        document.getElementById('barcodeScan').value= null;\r\n    }\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            console.log(url)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.loading,\r\n                              \"type\": toast.TYPE.INFO})\r\n            getBase64(file).then(\r\n                img => {\r\n                    axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(response);\r\n                        console.log(book);\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.succeededToOpen,\r\n                                              \"type\": toast.TYPE.SUCCESS});\r\n                        }\r\n                        else\r\n                        {\r\n                            console.log(\"Failed\");\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR});\r\n                            setScannedBook({});\r\n                            setBarcode(\"\")\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                const bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            console.log(book.books)\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery, props.doc]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Set barcode: \" + barcode);\r\n            if (barcode.length === 0)\r\n                return;\r\n            if (state !== State.LoggedIn)\r\n            {\r\n                if (barcode.search(\"AA\") === 0 || barcode.search(\"AB\") === 0 )\r\n                {\r\n                    const prefixList = document.getElementsByName(\"idPrefix\");\r\n                    const prefix = barcode.substring(0, 2);\r\n                    for (var i = 0 ; i < prefixList.length ; i++)\r\n                    {\r\n                        const id = prefixList[i].id\r\n                        if (prefix === id)\r\n                            prefixList[i].checked = true\r\n                        else\r\n                            prefixList[i].checked = false\r\n\r\n                    }\r\n                    setUserText(barcode.substring(2));\r\n                }\r\n            }\r\n            else if (barcode.search(\"HK\") === 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [barcode, props.doc, state]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n        document.getElementById('barcodeScan').value= null;\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/checkOut\"\r\n        axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE,\r\n                user: userId\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return\r\n            console.log(\"Rent confirmed\");\r\n            console.log(ret)\r\n\r\n            if (ret === \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.rentSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n                rented.push({\"id\": scannedBook.BARCODE, \"name\": scannedBook.BOOKNAME})\r\n                console.log(rented)\r\n                setRented(rented)\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            setScannedBook({});\r\n            setBarcode(\"\")\r\n            updateUser(userId);\r\n        });\r\n    }\r\n\r\n    function showEntry(index, rent)\r\n    {\r\n    /*\r\n        return (<React.Fragment key={index + \"Fragment\"}>\r\n                    <tr key={index}>\r\n                        <td className=\"bookCell\"> {rent.id} </td>\r\n                        <td colSpan=\"3\" className=\"bookCell\"> {rent.name} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    */\r\n        return (<div id=\"bookEntry\" key={rent.id}>\r\n                    <div id=\"bookItem\"> {rent.id} </div>\r\n                    <div id=\"bookItem\"> {rent.name} </div>\r\n                </div>);\r\n\r\n    }\r\n\r\n    function showBook(books)\r\n    {\r\n        return (<div id=\"bookList\">\r\n                    <div id=\"dueDate\">\r\n                    {props.text.dueDate} : {props.doc.dueDate}\r\n                    </div>\r\n                    {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                </div>);\r\n    }\r\n    /*\r\n                    <table><tbody>\r\n                        {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                    </tbody></table>\r\n    */\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        document.getElementById('barcodeScan').value= null;\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n//            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn ? true : false }>\r\n//            <div id=\"checkOutResult\" hidden={true}>\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.checkOut}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={state === State.LoggedIn}>\r\n                <input type=\"radio\" id = \"AA\" name=\"idPrefix\"/>\r\n                <label htmlFor=\"AA\" className=\"idPrefix\" name=\"idPrefix\"> AA </label>\r\n                <input type=\"radio\" id = \"AB\" name=\"idPrefix\"/>\r\n                <label htmlFor=\"AB\" className=\"idPrefix\" name=\"idPrefix\"> AB </label>\r\n                <input type=\"text\" id=\"searchInput\" pattern=\"[0-9]*\" inputMode=\"numeric\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn}>\r\n                {userData.USER_CODE && (\r\n                    <div id=\"userInfo\">\r\n                        <div id=\"userItem\">\r\n                            {userData.USER_CODE + \" : \" + userData.USER_NAME + props.text.nameSuffix}\r\n                        </div>\r\n                        <div id=\"userItem\"> {getUserState(props.text, userData.USER_STATE)} </div>\r\n                        <div id=\"userItem\"> {userData._RENT.length + \" \" + props.text.rentSuffix} </div>\r\n                    </div>\r\n                )}\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                    <label id=\"barcodeScan\" hidden>\r\n                        <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                        <span>\r\n                        <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                        </span>\r\n                    </label>\r\n                    <label id=\"manualInput\">\r\n                        <div id=\"hkPrefix\">\r\n                        {props.text.numberOnly}\r\n                        </div>\r\n                        <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n                            placeholder={props.text.bookHolder}\r\n                            onInput={(event) => {\r\n                                setBookText(event.target.value);\r\n                            }} />\r\n                    </label>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmRent} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\"} </div>\r\n                    <div id=\"bookName\"> {scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                {rented.length > 0 &&\r\n                    <ListView list={rented} showCallback={(entry) => {return showBook(entry)}}/>\r\n                }\r\n                <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.logOut} </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport ListView from \"../ListView\";\r\n\r\nfunction Return(props) {\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 300);\r\n//    const [initialized, setInitialized] = useState(false);\r\n//    const [userId, setUserId] = useState(\"\");\r\n//    const [state, setState] = useState(State.LoggedOut);\r\n//    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n//                     { \"variables\": { \"_id\": userId } });\r\n//    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n//                     { \"variables\": { \"user_id\": userId } });\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n    const [returned, setReturned] = useState([]);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            props.doc.setCallback(undefined);\r\n            console.log(\"=======================================\");\r\n            console.log(\"Return initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            import(\"./PageServer.css\")\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr && ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                axios.get(url).then( response => {\r\n                        const book = response.data.scan;\r\n                        if (book) {\r\n                            console.log(book.search(\"HK\"))\r\n                            if (book.search(\"HK\") === 0) {\r\n                                console.log(barcode + \" -> \" + book)\r\n                                setBarcode(book)\r\n                            }\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n*/\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                const bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery, props.doc]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"B\" + barcode);\r\n            if (barcode.length > 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [barcode, props.doc]\r\n    );\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.loading,\r\n                              \"type\": toast.TYPE.INFO})\r\n            getBase64(file).then(\r\n                img => {\r\n                    axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.succeededToOpen,\r\n                                              \"type\": toast.TYPE.SUCCESS});\r\n                        }\r\n                        else\r\n                        {\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR})\r\n                            setScannedBook({})\r\n                            setBarcode(\"\")\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 1 || scannedBook._STATE === 3)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    console.log(\"Not rented\")\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.NOT_RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                    setBarcode(\"\")\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//           if (\"id\" in notifyRequest)\r\n//               id = notifyRequest.id\r\n\r\n//           prop.toastId = id\r\n //          if (toast.isActive(id))\r\n//               toast.update(id, notifyRequest.text, prop);\r\n//           else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Returned updated\");\r\n            console.log(returned);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            console.log(\"Update return list\");\r\n            const bookId = \"HK\" + bookText;\r\n            console.log(\"Search book1 \" + bookId);\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n            const obj = {\"params\": {\"books\": returned}};\r\n            console.log(obj);\r\n            axios.get(url, obj).then( response => {\r\n//                    const book = response.data.return;\r\n//                    console.log(book)\r\n                }\r\n            );\r\n        },\r\n        [returned]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/return\"\r\n        axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return;\r\n            console.log(ret);\r\n            if (ret === \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.returnSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n                returned.push({\"id\": scannedBook.BARCODE, \"name\": scannedBook.BOOKNAME})\r\n                console.log(returned)\r\n                setReturned(returned)\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            setScannedBook({});\r\n            setBarcode(\"\")\r\n        });\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    function showEntry(index, rent)\r\n    {\r\n        return (<div id=\"bookEntry\" key={rent.id}>\r\n                    <div id=\"bookItem\"> {rent.id} </div>\r\n                    <div id=\"bookItem\"> {rent.name} </div>\r\n                </div>);\r\n    }\r\n\r\n    function showBook(books)\r\n    {\r\n        return (<div id=\"bookList\">\r\n                    {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                </div>);\r\n    }\r\n\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.return}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                <label id=\"barcodeScan\" hidden>\r\n                    <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                    <span>\r\n                    <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                    </span>\r\n                </label>\r\n                <label id=\"manualInput\">\r\n                    <div id=\"hkPrefix\">\r\n                        {props.text.numberOnly}\r\n                    </div>\r\n                    <input inputMode=\"numeric\" pattern=\"\\d*\" type=\"text\" id=\"searchInput\"\r\n                        placeholder={props.text.bookHolder}\r\n                        onInput={(event) => {\r\n                            setBookText(event.target.value);\r\n                        }} />\r\n                </label>\r\n                </div>\r\n                <div id=\"checkReturn\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmReturn} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\"} </div>\r\n                    <div id=\"bookName\"> {scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                {returned.length > 0 &&\r\n                    <ListView list={returned} showCallback={(entry) => {return showBook(entry)}}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n//                    <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n\r\nexport default Return;\r\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toUtf8 } from \"./Util\";\nimport \"./UserInfo.css\";\n\nfunction UserInfo(props) {\n    const [needConfirm, setNeedConfirm] = useState(false);\n    const [disabled, setDisabled] = useState(true);\n    const [userInfo, setUserInfo] = useState({});\n\n    useEffect(function() {\n        console.log(\"User Info\");\n        console.log(props.info);\n        document.getElementById('userName').value = props.info.USER_NAME ? props.info.USER_NAME : \"\";\n        document.getElementById('phone').value = props.info.PHONE_NUMBER ? props.info.PHONE_NUMBER : \"\";\n        document.getElementById('email').value = props.info.EMAIL ? props.info.EMAIL : \"\";\n        document.getElementById('address').value = props.info.ADDRESS ? props.info.ADDRESS : \"\";\n        document.getElementById('notice_').value = props.info.NOTICE ? props.info.NOTICE : \"\";\n        document.getElementById('user_level').value = props.info.USER_LEVEL;\n        setUserInfo({\"USER_CODE\": props.info.USER_CODE});\n        setDisabled(true);\n\n    }, [props.info]);\n\n    function setProperty(index, value)\n    {\n        console.log(index);\n        console.log(value);\n        var info = userInfo;\n        switch (index)\n        {\n        case 0:\n            info.USER_NAME = value;\n            break;\n        case 1:\n            info.PHONE_NUMBER = value;\n            break;\n        case 2:\n            info.EMAIL = value;\n            break;\n        case 3:\n            info.ADDRESS = value;\n            break;\n        case 4:\n            info.USER_LEVEL = value;\n            break;\n        case 5:\n            info.NOTICE = value;\n            break;\n        default:\n            break;\n        }\n        const length = Object.keys(info).length;\n        console.log(length);\n//        if (length >= 1 && \"USER_LEVEL\" in info && info.USER_LEVEL >= 0 && info.USER_LEVEL <= 2)\n        if (length > 1)\n            setDisabled(false);\n        setUserInfo(info);\n    }\n\n    function confirmAction()\n    {\n        console.log(\"Save modification\");\n        console.log(userInfo);\n        const ipAddr = props.doc.serverInfo.localIp;\n        const portNum = props.doc.serverInfo.port;\n        if (ipAddr.length === 0 || portNum <= 0)\n            return;\n\n        const url = \"https://\" + ipAddr + \":\" +\n            portNum + \"/user\";\n\n        var obj = {};\n        console.log(userInfo)\n        for (const key in userInfo)\n        {\n            obj[key] = btoa(toUtf8(userInfo[key]));\n        }\n        axios.post(url, obj).then( response => {\n            console.log(response);\n            props.refresh(response);\n        });\n        setNeedConfirm(false);\n    }\n\n    function cancelAction()\n    {\n        setNeedConfirm(false);\n    }\n\n    return (\n        <div>\n            <table><tbody>\n                <tr key=\"Name\">\n                    <td> {props.text.name} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"userName\" onChange={(event) => {setProperty(0, event.target.value);}} />\n                    </td>\n                </tr>\n                {\"REG_DATE\" in props.info &&\n                    <tr key=\"Register\">\n                        <td> {props.text.registeredDate} </td>\n                        <td colSpan=\"3\" className=\"data\">\n                            {props.info.REG_DATE}\n                        </td>\n                    </tr>\n                }\n                <tr key=\"Phone\">\n                    <td> {props.text.phone} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"phone\" onChange={(event) => {setProperty(1, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Email\">\n                    <td> {props.text.email} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"email\" onChange={(event) => {setProperty(2, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Address\">\n                    <td> {props.text.address} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"address\" onChange={(event) => {setProperty(3, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Notice\">\n                    <td> {props.text.notice_} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"notice_\" onChange={(event) => {setProperty(5, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Level\">\n                    <td> {props.text.level} </td>\n                    <td colSpan=\"3\" className=\"cell\">\n                        <select name=\"User Level\" id=\"user_level\" className=\"dropdown\" onChange={(event) => {setProperty(4, event.target.value);}}>\n                            <option value=\"0\"> {props.text.kid} </option>\n                            <option value=\"1\"> {props.text.adult} </option>\n                            <option value=\"2\"> {props.text.admin} </option>\n                        </select>\n                    </td>\n                </tr>\n            </tbody></table>\n           <button id=\"modify\" hidden={needConfirm} onClick={async () => setNeedConfirm(true)} disabled={disabled}> {props.text.save} </button>\n            <div id=\"checkModify\" hidden={!needConfirm}>\n                <div id=\"noticeMsg\"> {props.text.confirmSave} </div>\n                <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\n                <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\n            </div>\n        </div>\n    );\n}\nexport default UserInfo;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp, MAX_SEARCH_ENTRY, getUserState, toUtf8 } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate, useParams } from 'react-router-dom'\r\n//import {USERS_QUERY} from \"../api/query.js\";\r\nimport {USERS_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport UserInfo from \"../UserInfo\";\r\nimport axios from \"axios\";\r\n\r\n//var rentList = [];\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(userText, 300);\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n//    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n    const { id } = useParams();\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n            {\r\n                return;\r\n            }\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"UserSearch initialize\");\r\n            console.log(\"User ID: \" + id);\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc(false);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n//                const users = userListData.users;\r\n                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n\r\n        if (notify)\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Set title \" + props.logged)\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    async function extend(key)\r\n    {\r\n        console.log(\"Extend \" + key);\r\n        const ipAddr = props.doc.serverInfo.localIp;\r\n        const portNum = props.doc.serverInfo.port;\r\n        if (ipAddr.length === 0 || portNum <= 0)\r\n            return;\r\n\r\n        const url = \"https://\" + ipAddr + \":\" +\r\n            portNum + \"/extend\";\r\n        var obj = {};\r\n        obj[\"book\"] = key\r\n\r\n        const ret = await axios.post(url, obj);\r\n        console.log(\"Extended\")\r\n        console.log(ret)\r\n        selectId(selectedRef.current, true);\r\n        if (ret.data.return === \"SUCCESS\")\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.extend, prop);\r\n        }\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const extendCount = rent.extendCount;\r\n        const key = index.toString();\r\n//                        <td colSpan={props.doc.serverAvailable?\"3\":\"2\"} className=\"bookName\">{bookName}</td>\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan={props.doc.serverAvailable?\"2\":\"3\"} className=\"bookName\">{bookName}</td>\r\n                        {props.doc.serverAvailable &&\r\n                            <td className=\"bookName\"><button className=\"extend\" onClick={() => extend(id)}>{props.text.extend + \" (\" + extendCount.toString() + \")\"}</button></td>\r\n                        }\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const selectId = async (id, forceSelect = false) => {\r\n        const rent = await props.doc.getRent(id);\r\n        console.log(rent);\r\n        if (selectedRef.current === -1 || selectedRef.current !== id || forceSelect )\r\n        {\r\n            console.log(\"Select \" + id);\r\n//            setSelectedId(id);\r\n            selectedRef.current = id;\r\n            console.log(\"Set Rent List\");\r\n            console.log(rent)\r\n            setRentList(rent);\r\n//            rentList = rent;\r\n        }\r\n        else if (searchResults.length > 1)\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n//            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n            setRentList([]);\r\n//            rentList = [];\r\n        }\r\n    }\r\n\r\n    const showUser = (user, detail, index) => {\r\n        const key = index.toString();\r\n        return (\r\n                <div key={key}>\r\n                    <table><tbody>\r\n                        <tr key={user.id} className=\"searchTr\" onClick={async ()=> await selectId(user.id)}>\r\n                            <td className=\"bookData\">{user.id}</td>\r\n                            <td className=\"bookData\">{user.name}</td>\r\n                            <td className=\"bookData\">{user.state}</td>\r\n                            <td className=\"bookData\">{user.rent}</td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                        {user.id === selectedRef.current && showEntries(user, detail) }\r\n                </div>\r\n                );\r\n    }\r\n\r\n    const showUsers = (result, detail) => {\r\n        return (<div>\r\n                    {\r\n                        result.map((user, index) => {\r\n                            return showUser(user, detail, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 &&\r\n                        <table><tbody>\r\n                            <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                        </tbody></table>\r\n                    }\r\n                </div>);\r\n    }\r\n\r\n    const showEntries = (user, detail) => {\r\n        console.log(\"Detail\");\r\n        console.log(user);\r\n        return (<>\r\n                    {props.doc.serverAvailable &&\r\n                        <UserInfo text={props.text} doc={props.doc} info={user} refresh={refresh}/>\r\n                    }\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        detail.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        detail.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </>);\r\n    }\r\n    useEffect(\r\n        () => {\r\n            async function findUsers(text) {\r\n                let results = [];\r\n\r\n//                for (let i = 0 ; i < userList.length ; i++) {\r\n                  for (const key in userList) {\r\n                    const row = userList[key];\r\n                    if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                    if ((row.name && row.name.toString().includes(text)) ||\r\n                        (row.id.toLowerCase() === text.toLowerCase()))\r\n                    {\r\n                        results.push(row);\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a.name > b.name; });\r\n                console.log(results);\r\n                return results;\r\n            }\r\n            async function query() {\r\n                const input = userText.trim()\r\n                console.log(\"Query \" + input + \" \" + searchQuery)\r\n                if (input.length > 0 && searchQuery) {\r\n\r\n                    let sr;\r\n                    if (props.doc.serverAvailable)\r\n                    {\r\n                        console.log(\"from CLIB\")\r\n                        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/users\";\r\n                        const obj = {\"params\": {\"user\": btoa(toUtf8(input))}};\r\n                        console.log(obj);\r\n                        const response = await axios.get(url, obj);\r\n                        const users = response.data.return.data;\r\n                        console.log(response.data.return);\r\n                        sr = [];\r\n                        if (users) {\r\n                            for (const entry of response.data.return.data)\r\n                            {\r\n                                console.log(entry);\r\n                                let user = entry;\r\n                                user.id = entry.USER_CODE;\r\n                                user.name = entry.USER_NAME;\r\n                                user.state = getUserState(props.text, entry.USER_STATE);\r\n                                user.rent = entry._RENT.length;\r\n                                sr.push(user);\r\n                            }\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log(\"from DB\")\r\n                        sr = await findUsers(searchQuery);\r\n                    }\r\n\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                       selectId(sr[0].id);\r\n                   else\r\n                       selectId(0);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n       [searchQuery, props, userList, queryRequest, userText]\r\n    );\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.userSearch}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onChange={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <div>\r\n                    <ListView keyValue={searchQuery} list={searchResults} detail={rentList} showCallback={(entries, detail) => { return showUsers(entries, detail); }}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getBookState } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\n//import {USERS_QUERY} from \"../api/query.js\";\r\nimport {USERS_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport axios from \"axios\";\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n//                const users = userListData.users;\r\n                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userList]\r\n    );\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        return a1.rentDate > a2.rentDate;\r\n    }\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.serverAvailable)\r\n        {\r\n            let results = [];\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n            const obj = {\"params\": {\"user\": \"*\", \"match\":false}};\r\n//            console.log(obj);\r\n            const response = await axios.get(url, obj);\r\n//           console.log(response)\r\n//            if (!(\"books\" in response.data.return))\r\n//                return results;\r\n            const books = response.data.return.books;\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                const state = book._STATE;\r\n                let retDate = \"\";\r\n                if (state === 1 || state === 3 || state === \"1\" || state === \"3\")\r\n                {\r\n                    retDate = book.RETURN_DATE;\r\n                }\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: book.BOOKNAME,\r\n                    id: book.BARCODE,\r\n                    rent: getBookState(props.text, book.STATS.toString()),\r\n                    rentDate: book.LENT_DATE,\r\n                    retDate: retDate,\r\n                    author: book.AUTHOR,\r\n                    totalName: book.TOTAL_NAME,\r\n                    claim_num: book.CLAMENUM,\r\n                    publish: book.PUBLISH,\r\n                    claim: book.CLAIM,\r\n                    user: book.USER,\r\n                    userName: book.USER_NAME\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compare);\r\n            setRentList(results);\r\n        }\r\n        else\r\n        {\r\n\r\n            const rent = await props.doc.getRent();\r\n            console.log(\"Rent\");\r\n            console.log(rent);\r\n            rent.sort(compare);\r\n            for (const index in rent)\r\n            {\r\n                const userId = rent[index][\"user\"];\r\n                let userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                rent[index][\"userName\"] = userName;\r\n//                console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n            }\r\n            setRentList(rent);\r\n        }\r\n\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        const claim = rent[\"claim\"];\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"situation\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.situation}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue=\"\" list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { compareRent } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\n//import {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query.js\";\r\nimport {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport axios from \"axios\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n//    const [initialized, setInitialized] = useState(false);\r\n    const [fromTime, setFromTime] = useState(\"\");\r\n    const [toTime, setToTime] = useState(\"\");\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [loadHistory, {loading: historyLoading, data: historyData, error: historyError }] = useLazyQuery(HISTORY_PERIOD_QUERY,\r\n            {\"variables\": { \"fromTime\" : fromTime, \"toTime\": toTime}});\r\n    const [userList, setUserList] = useState({});\r\n    const [yearValue, setYear] = useState(0);\r\n    const [monthValue, setMonth] = useState(0);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [searchQuery] = useDebounce(query, 300);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            var i;\r\n            var option;\r\n            var year = document.getElementById('year')\r\n            var month = document.getElementById('month')\r\n            for (i = 1; i <= 12 ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                month.add(option, i);\r\n            }\r\n            const thisYear = new Date().getFullYear();\r\n            const thisMonth = new Date().getMonth() + 1;\r\n            const fromYear = 2017;\r\n\r\n            for (i = fromYear ; i <= thisYear ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                year.add(option, i);\r\n            }\r\n\r\n            console.log(thisYear);\r\n            console.log(thisMonth);\r\n            setYear(thisYear);\r\n            setMonth(thisMonth);\r\n            document.getElementById('year').value = thisYear;\r\n            document.getElementById('month').value = thisMonth;\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n//                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n//                const users = userListData.users;\r\n                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"History update\")\r\n\r\n            if (!historyData)\r\n                return\r\n\r\n//            console.log(historyData.rentLog_tests)\r\n\r\n//            const books = historyData.rentLogs;\r\n            const books = historyData.rentLog_tests;\r\n            let results = [];\r\n            let retDate = \"\";\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const state = book.book_state;\r\n                if (state !== \"1\" && state !== 1)\r\n                    continue\r\n                if (!book.return_date || book.return_date.length === 0)\r\n                    continue\r\n//                console.log(book)\r\n                const bookId = book.book_id;\r\n                const userId = book.user_id;\r\n                var userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                var bookInfo;\r\n                if (bookId in props.doc.book)\r\n                {\r\n                    bookInfo = props.doc.book[bookId];\r\n                }\r\n                else\r\n                {\r\n                    bookInfo = {}\r\n                    bookInfo.author = \"\"\r\n                    bookInfo.totalName = \"\"\r\n                    bookInfo.claim_num = \"\"\r\n                    bookInfo.publish = \"\"\r\n                    bookInfo.title = \"\"\r\n                }\r\n                const resultString = `${bookInfo.title} ${bookInfo.claim_num}`;\r\n                retDate = book.return_date;\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: bookInfo.title,\r\n                    id: bookId,\r\n                    rentDate: book.timestamp,\r\n                    retDate: retDate,\r\n                    author: bookInfo.author,\r\n                    claim_num: bookInfo.claim_num,\r\n                    publish: bookInfo.publisher,\r\n                    claim: bookInfo.claim,\r\n                    user: userId,\r\n                    userName: userName\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compareRent);\r\n//            console.log(results);\r\n            setRentList(results);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, historyLoading, historyError]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        }, [userList]\r\n    );\r\n*/\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        if (a1.rentDate > a2.rentDate)\r\n            return true;\r\n        else if (a1.rentDate < a2.rentDate)\r\n            return false;\r\n        return a1.title > a2.title;\r\n    }\r\n\r\n/*\r\n    async function updateDoc()\r\n    {\r\n        setInitialized(true);\r\n    }\r\n*/\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const claim = rent[\"claim\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookCell\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n    function setProperty(index, value)\r\n    {\r\n        console.log(index);\r\n        console.log(value);\r\n        switch (index)\r\n        {\r\n            case 0:\r\n                setYear(value);\r\n                break;\r\n            case 1:\r\n                setMonth(parseInt(value));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(function () {\r\n        setQuery(yearValue.toString() + \"-\" + monthValue.toString().padStart(2, \"0\"))\r\n\r\n    }, [yearValue, monthValue]\r\n    );\r\n\r\n    useEffect(function () {\r\n        async function search()\r\n        {\r\n            console.log(\"Search\")\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/history\";\r\n                const obj = {\"params\": {\"period\": query}};\r\n                console.log(obj);\r\n                const response = await axios.get(url, obj);\r\n                console.log(response);\r\n\r\n                const books = response.data.return.books;\r\n                let results = [];\r\n                let retDate = \"\";\r\n                for (let i = 0 ; i < books.length ; i++)\r\n                {\r\n                    const book = books[i];\r\n                    const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                    if (\"RETURN_DATE\" in book)\r\n                    {\r\n                        retDate = book.RETURN_DATE;\r\n                    }\r\n                    let resultObject = {\r\n                        index: i,\r\n                        text: resultString,\r\n                        title: book.BOOKNAME,\r\n                        id: book.BARCODE,\r\n        //                rent: getBookState(props.text, book..toString()),\r\n                        rentDate: book.RENT_DATE,\r\n                        retDate: retDate,\r\n                        author: book.AUTHOR,\r\n                        totalName: book.TOTAL_NAME,\r\n                        claim_num: book.CLAMENUM,\r\n                        publish: book.PUBLISH,\r\n                        claim: book.CLAIM,\r\n                        user: book.USER,\r\n                        userName: book.USER_NAME\r\n                    };\r\n                    results.push(resultObject);\r\n                }\r\n                results.sort(compare);\r\n                setRentList(results);\r\n            }\r\n            else\r\n            {\r\n                var queryTo;\r\n                const nextMonth = monthValue + 1\r\n                queryTo = yearValue.toString() + \"-\" + nextMonth.toString().padStart(2, \"0\")\r\n                setFromTime(query)\r\n                setToTime(queryTo)\r\n                console.log(query)\r\n                console.log(queryTo)\r\n\r\n                try {\r\n                    await loadHistory();\r\n                }\r\n                catch (e)\r\n                {\r\n                    console.warn(e.name);\r\n                }\r\n\r\n    /*\r\n                for (const index in rent)\r\n                {\r\n                    const userId = rent[index][\"user\"];\r\n                    let userName;\r\n                    if (userList && userId in userList)\r\n                        userName = userList[userId].name;\r\n                    else\r\n                        userName = \"\"\r\n                    rent[index][\"userName\"] = userName;\r\n                    console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n                }\r\n                setRentList(rent);\r\n    */\r\n            }\r\n        }\r\n        search();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [searchQuery]\r\n    );\r\n\r\n    function movePrev()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month > 1)\r\n        {\r\n            month -= 1\r\n        }\r\n        else\r\n        {\r\n            year -= 1;\r\n            month = 12;\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    function moveNext()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month < 12)\r\n        {\r\n            month += 1\r\n        }\r\n        else\r\n        {\r\n            year += 1\r\n            month = 1\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.history}\r\n                </h2>\r\n            </div>\r\n            <div id=\"searchRange\">\r\n                <div className=\"page\" id = \"page\">\r\n                    <NavigateBeforeIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {movePrev();} }/>\r\n                </div>\r\n                <select name=\"year\" id=\"year\" className=\"dropdown\" onChange={(event) => {setProperty(0, event.target.value);}}/>\r\n                <select name=\"month\" id=\"month\" className=\"dropdown\" onChange={(event) => {setProperty(1, event.target.value);}}/>\r\n                    <div className=\"page\" id = \"page\">\r\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {moveNext();} }/>\r\n                    </div>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue={searchQuery} list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp } from \"../Util\";\r\nimport { Navigate } from 'react-router-dom'\r\nimport UserInfo from \"../UserInfo\";\r\n\r\nfunction NewMember(props) {\r\n//    const [userText, setUserText] = useState(\"\");\r\n    const [userInfo, setUserInfo] = useState({});\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n//    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n//    const [userList, setUserList] = useState({});\r\n//    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized || !props.doc.serverAvailable)\r\n            {\r\n                return;\r\n            }\r\n            import(\"./PageServer.css\");\r\n            console.log(\"=======================================\");\r\n            console.log(\"NewMember initialize\");\r\n            prepareNewMember();\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n*/\r\n\r\n    function prepareNewMember()\r\n    {\r\n        var info = {};\r\n        info.USER_CODE = \"\";\r\n        info.USER_NAME = \"\";\r\n        info.PHONE_NUMBER = \"\";\r\n        info.EMAIL = \"\";\r\n        info.ADDRESS = \"\";\r\n        info.NOTICE = \"\";\r\n        info.USER_LEVEL = -1;\r\n        setUserInfo(info);\r\n    }\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n*/\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n\r\n        const prop = toastProp;\r\n        var text\r\n        if (response.data.return === \"OK\")\r\n        {\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.regSuccess;\r\n            prepareNewMember()\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.regFail;\r\n        }\r\n        prop.autoClose = 3000;\r\n        toast.info(text, prop);\r\n    }\r\n    if (!props.doc.initialized || !props.doc.serverAvailable)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.newMember}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                {props.doc.serverAvailable &&\r\n                    <UserInfo text={props.text} doc={props.doc} info={userInfo} refresh={refresh}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewMember;\r\n","import { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        this.initialized = false;\r\n        this.bookReady = false;\r\n        this.rentReady = false;\r\n        this.userReady = false;\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        this.book = {};\r\n        this.rent = {};\r\n        this.logCallback = undefined;\r\n        this.admin = false;\r\n        this.dueDate = \"\";\r\n        this.serverInfo = {};\r\n        this.serverAvailable = false;\r\n        this.ipAddr = \"\"\r\n    }\r\n\r\n    async updateIpAddr()\r\n    {\r\n//        const response = await axios.get(\"https://ipv4.seeip.org/jsonip\");\r\n        const response = await axios.get(\"https://api.ipify.org/?format=json\")\r\n        console.log(\"Get IP Address\");\r\n        console.log(response.data);\r\n        const ipAddr = response.data.ip;\r\n        console.log(\"IP addr updated \" + ipAddr)\r\n        this.ipAddr = ipAddr;\r\n        this.checkServerIp()\r\n    }\r\n\r\n    checkServerIp()\r\n    {\r\n        if (this.ipAddr.length === 0 || !this.serverInfo.globalIp)\r\n            return;\r\n        if (this.serverInfo.globalIp === this.ipAddr)\r\n        {\r\n            console.log(\"Server is accessible \" + this.serverInfo.localIp);\r\n            const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n            this.serverAvailable = true;\r\n            axios.get(query, {timeout: 1000})\r\n                .then( (response) => {\r\n                    console.log(\"Server connected\");\r\n                    console.log(response.data);\r\n                    this.admin = response.data.admin;\r\n                    this.dueDate = response.data.dueDate;\r\n                    this.initialized = true;\r\n                })\r\n                .catch(error => {\r\n                  const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n                  window.open(query);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    checkState() {\r\n        if (this.bookReady && this.rentReady) {\r\n            this.initialized = true;\r\n            toast.dismiss();\r\n            if (this.callback) {\r\n                this.callback();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setLogCallback(callback) {\r\n        this.logCallback = callback;\r\n    }\r\n\r\n    setRent(rent) {\r\n        this.rent = rent\r\n        this.rentReady = true;\r\n        this.checkState();\r\n        this.checkRent();\r\n    }\r\n\r\n    setServerInfo(serverInfo)\r\n    {\r\n        console.log(serverInfo)\r\n        this.serverInfo = serverInfo;\r\n        console.log(this.serverInfo.globalIp);\r\n        this.checkServerIp()\r\n    }\r\n\r\n    setBook(books) {\r\n        this.book = {};\r\n        for (let i = 0 ; i < books.length ; i++)\r\n        {\r\n            const book = books[i];\r\n            const id = book['_id'];\r\n            this.book[id] = book;\r\n        }\r\n        this.bookReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setUser(users) {\r\n        this.user = {};\r\n        for (let i = 0 ; i < users.length ; i++)\r\n        {\r\n            const user = users[i];\r\n            const id = user.id;\r\n            this.user[id] = user;\r\n            this.user[id][\"rent\"] = 0;\r\n        }\r\n        this.userReady = true;\r\n        this.checkRent();\r\n    }\r\n\r\n    checkRent() {\r\n        if (!this.userReady || !this.rentReady)\r\n        {\r\n            console.log(\"Cannot check rent\");\r\n            return;\r\n        }\r\n//        console.log(this.rent);\r\n        for (let i = 0 ; i < this.rent.length ; i++)\r\n        {\r\n            const state = this.rent[i].state;\r\n\r\n//            console.log(state);\r\n            if (state !== \"1\" && state !== \"3\" && state !== 1 && state !== 3)\r\n                continue;\r\n\r\n            const userId = this.rent[i].user_id;\r\n//            console.log(this.rent[i]);\r\n//           console.log(userId);\r\n//           console.log(userId.length);\r\n            if (userId && userId.length > 0 && userId in this.user)\r\n                this.user[userId][\"rent\"] += 1;\r\n            else\r\n                this.user[userId][\"rent\"] = 1;\r\n        }\r\n        console.log(this.user);\r\n    }\r\n\r\n    logIn(userInfo) {\r\n        console.log(\"Logged in: \" + userInfo['_id']);\r\n        this.logged = true;\r\n        this.userInfo = userInfo;\r\n        if (userInfo['level'] === \"2\" ||\r\n            userInfo['level'] === 2)\r\n            this.admin = true;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n    }\r\n\r\n    logOut() {\r\n        console.log(\"Logged out\");\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        if (this.logCallback)\r\n            this.logCallback(false);\r\n    }\r\n\r\n    async getRent(userId = undefined) {\r\n        let ret = [];\r\n        if (this.serverAvailable) {\r\n            const url = \"https://\" + this.serverInfo.localIp + \":\" +\r\n                this.serverInfo.port + \"/book\";\r\n            const obj = {\"params\": {\"user\": userId}};\r\n            console.log(obj);\r\n            const result = await axios.get(url, obj);\r\n            console.log(result);\r\n            if (\"books\" in result.data.return)\r\n            {\r\n                // BARCODE, BOOKNAME, LENT_DATE, RETURN_DATE, STATS\r\n                // id, title, rentDate, retData,  stat\r\n                for (const entry of result.data.return.books)\r\n                {\r\n                    console.log(entry);\r\n                    const book = {'id': entry.BARCODE, 'title': entry.BOOKNAME, 'claim': entry.CLAIM, 'rentDate': entry.LENT_DATE, 'retDate': entry.RETURN_DATE, 'stat': entry.STATS, 'extendCount': entry._EXTEND_COUNT}\r\n                    ret.push(book);\r\n                }\r\n//                ret = result.data.return.books;\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"Check \" + userId);\r\n            console.log(this.bookReady);\r\n            if (!this.bookReady)\r\n                return ret;\r\n    //        console.log(this.rent.length);\r\n            for (let i = 0 ; i < this.rent.length ; i++) {\r\n                const entry = this.rent[i];\r\n                if (userId !== undefined && entry.user_id !== userId)\r\n                    continue;\r\n    //            console.log(entry)\r\n                if (entry.state !== \"1\" && entry.state !== \"3\" && entry.state !== 1 && entry.state !== 3)\r\n                    continue;\r\n    //            console.log(entry);\r\n                const id = entry[\"book_id\"];\r\n                const book = this.book[id];\r\n    //            console.log(book)\r\n                let retEntry = {}\r\n                retEntry[\"id\"] = book._id\r\n                retEntry[\"title\"] = book.title\r\n                retEntry[\"rentDate\"] = entry.rent_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"retDate\"] = entry.return_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"claim\"] = book.claim\r\n                retEntry[\"user\"] = entry.user_id;\r\n                ret.push(retEntry)\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n\r\n    async openDoc() {\r\n        try {\r\n            this.initialized = true;\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.initialized;\r\n    }\r\n\r\n    setCallback(updateFunc)\r\n    {\r\n        console.log(\"Update function registered\");\r\n        this.callback = updateFunc;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","import config from \"./api/key\";\n\nconst NodeRSA = require('node-rsa');\n\nconst prk = new NodeRSA(config[\"privateKey\"]);\n\nclass Context {\n    constructor() {\n        console.log(\"Create Context\");\n\n        console.log(\"Cookies\");\n        const rawCookie = document.cookie;\n        this.cookie = rawCookie\n            .split(\";\")\n            .map(v => v.split(\"=\"))\n            .reduce((acc, v) => {\n                const key = v.shift().trim();\n                const value = v.join(\"=\").trim();\n                acc[decodeURIComponent(key)] = decodeURIComponent(value);\n                return acc;\n            }, {});\n    }\n\n    checkLogIn(user, passwordText) {\n        var matched = false;\n        var passwordTyped;\n        if (user && passwordText.length > 0) {\n            console.log(\"User data available\");\n            const emailDb = user[\"encrypted_email\"];\n            const phoneDb = user[\"encrypted_phone\"];\n\n            passwordTyped = prk.sign(passwordText, 'base64');\n            if (passwordText === emailDb ||\n                passwordText === phoneDb )\n            {\n                passwordTyped = passwordText;\n                matched = true;\n            }\n            else if (emailDb === passwordTyped)\n            {\n//                console.log(\"Email match\");\n                matched = true;\n            }\n            else\n            {\n                var numberString = \"\";\n                for (let i = 0 ; i < passwordText.length ; i++)\n                {\n                    if (!isNaN(passwordText[i]))\n                        numberString += passwordText[i];;\n                }\n                passwordTyped = prk.sign(numberString, 'base64');\n                if (passwordTyped === phoneDb)\n                {\n//                    console.log(\"Phone match\");\n                    matched = true;\n                }\n                else\n                {\n//                    console.log(\"Nothing matched\");\n                }\n            }\n\n//            console.log(\"toast available\");\n        }\n        if (matched)\n        {\n            const date = new Date();\n            const days=2;\n            date.setTime(date.getTime()+(days*24*60*60*1000));\n            const expireDate = date.toGMTString();\n            document.cookie = \"password=\" +  passwordTyped + \"; expires=\" + expireDate + \" ; SameSite=Lax ;\" ;\n        }\n        return matched\n    }\n}\n\nexport default Context;\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Dropdown.css'\r\n\r\nfunction DropDown(props) {\r\n\r\n    const [dropdown, setDropdown] = useState(false);\r\n    const [click, setClick] = useState(false)\r\n\r\n    useEffect(\r\n        () => {\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./DropdownServer.css\");\r\n            }\r\n            if (dropdown !== props.dropdown)\r\n            {\r\n                console.log(\"User clicked \" + props.doc.logged);\r\n                console.log(props.dropdown);\r\n                setClick(!click);\r\n                setDropdown(props.dropdown);\r\n            }\r\n            const menu = document.getElementById(\"dropdown-menu\");\r\n//            menu.hidden = !click;\r\n            if (!click)\r\n            {\r\n               menu.classList.remove('is-show');\r\n            }\r\n            else\r\n            {\r\n               menu.classList.add('is-show');\r\n            }\r\n\r\n        }, [props.dropdown, dropdown, click, props.doc.logged]\r\n    );\r\n\r\n    const logOut = () =>\r\n    {\r\n        setClick(false);\r\n        props.doc.logOut();\r\n        document.cookie = \"user_id=\";\r\n        document.cookie = \"password=\";\r\n        document.cookie = \"autoLogin=false\";\r\n    }\r\n\r\n    return (\r\n            <div id='dropdown-menu' onClick={() => { setClick(!click)}} className='dropdown-menu'>\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                    <div className='menu-items'>\r\n                        {props.doc.userInfo[\"_id\"] + \" : \" + props.doc.userInfo[\"name\"] + props.text.nameSuffix}\r\n                    </div>\r\n                    <hr className=\"hline\"/>\r\n                    </>\r\n                }\r\n                <Link className='menu-items' to=\"/\" onClick={() => setClick(false)}>\r\n                    {props.text.home}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/notice\" onClick={() => setClick(false)}>\r\n                    {props.text.notice}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/search\" onClick={() => setClick(false)}>\r\n                    {props.text.bookSearch}\r\n                </Link>\r\n                {props.doc.serverAvailable &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOut\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOut}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/return\" onClick={() => setClick(false)}>\r\n                            {props.text.return}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOutStatus}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {props.doc.admin &&\r\n                    <>\r\n                    <hr className=\"hline\"/>\r\n                    <Link className='menu-items' to=\"/userSearch\" onClick={() => setClick(false)}>\r\n                        {props.text.userSearch}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentalSituation\" onClick={() => setClick(false)}>\r\n                        {props.text.situation}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentHistory\" onClick={() => setClick(false)}>\r\n                        {props.text.history}\r\n                    </Link>\r\n                    </>\r\n                }\r\n                {props.doc.serverAvailable && props.doc.admin &&\r\n                    <Link className='menu-items' to=\"/newMember\" onClick={() => setClick(false)}>\r\n                        {props.text.newMember}\r\n                    </Link>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <hr className=\"hline\"/>\r\n                        <div className='menu-items' onClick={() => logOut()}>\r\n                            {props.text.logOut}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && !props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.logIn}\r\n                        </Link>\r\n                    </>\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default DropDown;\r\n","import React, { useState } from 'react';\r\nimport {isMobile} from \"react-device-detect\";\r\nimport \"./Navbar.css\";\r\nimport DropDown from \"./Dropdown\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction Navbar(props) {\r\n    const [dropdown, setDropdown] = useState(false)\r\n\r\n    const onClick = () => {\r\n        const maxWidth = document.getElementById(\"navbar\").style.maxWidth;\r\n        console.log(\"maxWidth\");\r\n        console.log(maxWidth);\r\n        console.log(document.getElementById(\"navbar\").style.width);\r\n        setDropdown(!dropdown);\r\n    }\r\n\r\nreturn (\r\n    <>\r\n        <div id=\"navbar\" className=\"navbar\">\r\n            <div className='title'>\r\n                {isMobile? (<h1>{props.text[\"titleShort\"]}</h1>) : (<h1>{props.text[\"titleLong\"]}</h1>)}\r\n            </div>\r\n            <div className='menu' onClick={onClick} >\r\n                <MenuIcon className=\"img\" fontSize=\"large\" sx={{ color: \"#ffffff\"}}/>\r\n            </div>\r\n            <DropDown text={props.text} doc={props.doc} dropdown={dropdown}/>\r\n        </div>\r\n    </>\r\n)\r\n}\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Notice from \"./pages/Notice\";\r\nimport Search from \"./pages/Search\";\r\nimport CheckOutStatus from \"./pages/CheckOutStatus\";\r\nimport CheckOut from \"./pages/CheckOut\";\r\nimport Return from \"./pages/Return\";\r\nimport UserSearch from \"./pages/UserSearch\";\r\nimport RentalSituation from \"./pages/RentalSituation\";\r\nimport RentHistory from \"./pages/RentHistory\";\r\nimport NewMember from \"./pages/NewMember\";\r\n//import Reader from \"./pages/Reader\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\nimport Context from \"./Context\";\r\nimport text from \"./api/text\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"./Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport Navbar from \"./Navbar\";\r\nimport {SERVER_QUERY} from \"./api/query.js\";\r\n//import {BOOK_QUERY, RENT_QUERY, USER_QUERY} from \"./api/query.js\";\r\nimport {BOOK_QUERY, RENT_QUERY, USER_QUERY} from \"./api/query_test.js\";\r\n\r\nconst doc = new Doc();\r\nconst context = new Context();\r\n\r\nconst textString = {};\r\nlet logMsg = \"\"\r\nfunction App() {\r\n\r\n//    const [checkOutStr, setCheckOutStr] = useState(\"\");\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [logged, setLogged] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const { loading: rentLoading, error: rentError, data: rentData } = useQuery(RENT_QUERY);\r\n    const { loading: serverLoading, error: serverError, data: serverData } = useQuery(SERVER_QUERY);\r\n    const [loadBook, { loading: bookLoading, error: bookError, data: bookData }] = useLazyQuery(BOOK_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY, { \"variables\": { \"_id\": userId } });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            logMsg = logMsg + \"<p>Initialize app</p>\";\r\n            console.log(process.env.APP_NAME);\r\n            console.log(process.env.APP_VERSION);\r\n            const lang = navigator.languages;\r\n            console.log(lang);\r\n            let ts = {}\r\n            if (lang.length> 0 && (lang[0].toLowerCase().includes(\"kr\") || lang[0].toLowerCase().includes(\"ko\")))\r\n            {\r\n                ts = text.kr;\r\n            }\r\n            else\r\n            {\r\n                ts = text.en;\r\n            }\r\n            for (let key in ts)\r\n            {\r\n                textString[key] = ts[key];\r\n            }\r\n\r\n            await doc.updateIpAddr();\r\n\r\n            if (\"autoLogin\" in context.cookie &&  context.cookie.autoLogin === \"true\")\r\n            {\r\n                console.log(\"Auto Login: \" + context.cookie.user_id);\r\n                setUserId(context.cookie.user_id);\r\n                console.log(context.cookie.nothing);\r\n                loadUser();\r\n            }\r\n            setInitialized(true);\r\n        }\r\n        initialize();\r\n    }, [loadUser]);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data loaded\");\r\n            if (!userData)\r\n            {\r\n                return;\r\n            }\r\n\r\n//            console.log(\"Login check \" + context.cookie.password);\r\n//            const user = userData.user\r\n            const user = userData.user_test\r\n//            console.log(user);\r\n            if (context.cookie.password && context.checkLogIn(user, context.cookie.password))\r\n            {\r\n                console.log(\"Login suceeded\");\r\n                doc.logIn(user);\r\n            }\r\n\r\n\r\n\r\n        }, [userData]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Rent Query Updated\");\r\n            logMsg = logMsg + \"<p>Rent Query Updated \" + rentLoading + \" \" + rentError + \"</p>\";\r\n            console.log(rentLoading);\r\n            console.log(\"Rent Error\");\r\n            console.log(rentError);\r\n            if (rentData)\r\n            {\r\n                console.log(\"Rent available\");\r\n                logMsg = logMsg + \"<p>Rent available</p>\"\r\n//                console.log(rentData.rents)\r\n//                doc.setRent(rentData.rents)\r\n                doc.setRent(rentData.rent_tests)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [rentLoading, rentError, rentData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Book Query Updated\");\r\n            logMsg = logMsg + \"<p>Book Query Updated</p>\";\r\n            console.log(bookLoading)\r\n            console.log(bookError)\r\n            if (bookData)\r\n            {\r\n                console.log(\"Book available\")\r\n                logMsg = logMsg + \"<p>Book available</p>\";\r\n//                console.log(bookData.books)\r\n//                doc.setBook(bookData.books)\r\n                doc.setBook(bookData.book_tests)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [bookLoading, bookError, bookData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Server Query Updated\");\r\n            logMsg = logMsg + \"<p>Server Query Updated</p>\";\r\n\r\n            console.log(serverData);\r\n            console.log(initialized);\r\n            if (!serverData || !initialized)\r\n                return\r\n\r\n            console.log(\"Server info available\")\r\n            logMsg = logMsg + \"<p>Server info available</p>\";\r\n            console.log(serverData)\r\n            doc.setServerInfo(serverData.serverInfo)\r\n\r\n            if (!doc.serverAvailable)\r\n            {\r\n                console.log(\"Server is not available. Load books from cloud DB\");\r\n                loadBook();\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.LOADING;\r\n                prop.autoClose = false;\r\n                prop.toastId = loadingId;\r\n                toast.loading(textString.loading, prop);\r\n                doc.setLogCallback(updateLog);\r\n            }\r\n        }, [serverLoading, serverError, serverData, loadBook, initialized]\r\n    );\r\n\r\n    function notifyInit()\r\n    {\r\n        const prop = toastProp;\r\n        prop.type = toast.TYPE.SUCCESS;\r\n        prop.render = textString.succeededToOpen;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = \"\";\r\n        toast.info(textString.succeededToOpen, prop);\r\n    }\r\n\r\n    function updateLog(logged) {\r\n        console.log(\"==== Update logging state \" + doc.logged);\r\n//        console.log(doc.userInfo);\r\n        setLogged(doc.logged);\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n        <div className=\"App\">\r\n            <div>\r\n                <ToastContainer\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    limit={10}\r\n                />\r\n            </div>\r\n            <Navbar doc={doc} text={textString}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home doc={doc} text={textString}/>} />\r\n                <Route path=\"/notice\" element={<Notice doc={doc} text={textString} />} />\r\n                <Route path=\"/search/:id?\" element={<Search doc={doc} text={textString}/>} />\r\n                <Route path=\"/checkOutStatus\" element={<CheckOutStatus context={context} doc={doc} text={textString} logged={logged}/>} />\r\n                <Route path=\"/userSearch/:id?\" element={<UserSearch context={context} doc={doc} text={textString} />} />\r\n                <Route path=\"/checkOut\" element={<CheckOut context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/return\" element={<Return context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentalSituation\" element={<RentalSituation context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentHistory\" element={<RentHistory context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/newMember\" element={<NewMember context={context} doc={doc} text={textString}/>} />\r\n            </Routes>\r\n\r\n            <h3>\r\n                v {process.env.REACT_APP_VERSION}\r\n            </h3>\r\n        </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport * as Realm from \"realm-web\";\r\nimport {\r\n    ApolloClient,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    InMemoryCache,\r\n} from \"@apollo/client\";\r\n\r\nconst APP_ID = 'data-xaque';\r\nconst graphqlUri = `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\r\nconst app = new Realm.App(APP_ID);\r\n\r\n// Gets a valid Realm user access token to authenticate requests\r\nasync function getValidAccessToken() {\r\n    // Guarantee that there's a logged in user with a valid access token\r\n    if (!app.currentUser) {\r\n        // If no user is logged in, log in an anonymous user. The logged in user will have a valid\r\n        // access token.\r\n        await app.logIn(Realm.Credentials.anonymous());\r\n//        await app.logIn(apiKey);\r\n    } else {\r\n        // An already logged in user's access token might be stale. Tokens must be refreshed after\r\n        // 30 minutes. To guarantee that the token is valid, we refresh the user's access token.\r\n        await app.currentUser.refreshAccessToken();\r\n    }\r\n//    console.log(\"AccessToken: [\" + app.currentUser.accessToken + \"]\");\r\n\r\n    return app.currentUser.accessToken;\r\n}\r\n\r\n// Configure the ApolloClient to connect to your app's GraphQL endpoint\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\r\n        // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\r\n        // access token before sending the request.\r\n        fetch: async (uri, options) => {\r\n            const accessToken = await getValidAccessToken();\r\n            options.headers.Authorization = `Bearer ${accessToken}`;\r\n            return fetch(uri, options);\r\n        },\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}