{"version":3,"sources":["pages/Home.js","Util.js","api/query.js","pages/Notice.js","ListView.js","pages/Search.js","pages/CheckOutStatus.js","pages/CheckOut.js","pages/Return.js","UserInfo.js","pages/UserSearch.js","pages/RentalSituation.js","pages/RentHistory.js","pages/NewMember.js","Doc.js","Context.js","Dropdown.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useEffect","_initialize","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","console","log","doc","setCallback","undefined","stop","apply","arguments","initialize","_jsx","id","dangerouslySetInnerHTML","__html","text","homeText","SEARCH_PER_SCREEN","MAX_SEARCH_ENTRY","String","prototype","format","formatted","this","i","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","getUserState","state","normal","overDue","stopped","getBookState","available","checkedOut","notAvailable","compareRent","a1","a2","rentDate","title","toUtf8","unescape","encodeURIComponent","loadingId","loggingId","BOOK_QUERY","gql","_templateObject","_taggedTemplateLiteral","RENT_QUERY","_templateObject2","USERS_QUERY","_templateObject3","USER_QUERY","_templateObject4","HISTORY_QUERY","_templateObject5","HISTORY_PERIOD_QUERY","_templateObject6","NOTICE_QUERY","_templateObject7","CONTENT_QUERY","_templateObject8","SERVER_QUERY","_templateObject9","Notice","_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useState3","_useState4","displayedCodes","setDisplayedCodes","_useState5","_useState6","pageNum","setPageNum","_useState7","_useState8","selectedId","setSelectedId","_useQuery","useQuery","noticeLoading","loading","noticeData","data","noticeError","error","_useLazyQuery","useLazyQuery","_useLazyQuery2","loadSelected","_useLazyQuery2$","selectedLoading","selectedData","selectedError","notices","toString","startIdx","count","Math","min","slice","showEntry","result","_jsxs","className","children","date","colSpan","onClick","_id","notice","content","map","NavigateBeforeIcon","fontSize","sx","color","NavigateNextIcon","showCallback","ListView","itemList","setItemList","displayList","setDisplayList","list","keyValue","detail","initialized","Search","inputText","setInputText","_useDebounce","useDebounce","searchQuery","selectedRef","useRef","bookList","setBookList","_useState9","_useState10","rentList","setRentList","useParams","updateDoc","_updateDoc","_callee6","rl","rented","bl","books","key","book","_context6","rent","push","code","book_id","retDate","return_date","name","num","author","claim","claim_num","totalName","series","category","publisher","publish","isOpen","findBooks","_x","_findBooks","_callee2","results","url","obj","response","resultString","resultObject","_i","row","_resultString","_retDate","_state","_iterator","_step","entry","_resultObject","_context2","serverAvailable","btoa","serverInfo","localIp","port","axios","get","sent","return","abrupt","concat","BOOKNAME","CLAIMNUM","_STATE","returnDate","_RETURN","index","BARCODE","AUTHOR","TOTAL_NAME","CLAMENUM","PUBLISH","CLAIM","includes","_createForOfIteratorHelper","s","n","done","value","t0","e","f","finish","sort","a","b","_query","_callee3","sr","_context3","current","query","selectId","_ref","_callee4","_context4","_x2","hidden","entryId","_callee5","_context5","rowSpan","bookSearch","placeholder","searchBook","onChange","event","target","entries","State","LoggedOut","LoggingIn","LoggedIn","CheckOutStatus","userText","setUserText","passwordText","setPasswordText","setInitialized","userId","setUserId","_useState11","_useState12","setState","_useState13","_useState14","history","setHistory","_useState15","_useState16","autoLogin","setAutoLogin","loadUser","userData","_useLazyQuery3","_useLazyQuery4","loadHistory","historyData","_useState17","_useState18","expireDate","setExpireDate","_useState19","_useState20","setTitle","_userId","logged","userInfo","getRent","t1","adminMode","userSearch","checkOut","logIn","_autoLogin","context","cookie","Date","setTime","getTime","days","toGMTString","_func","compare","func","bookReady","rentReady","hist","rentLogs","book_state","return_data","split","showEntries","retText","bookName","React","Fragment","Link","to","showRented","noEntry","toUpperCase","_ref2","prop","toast","isActive","checkLogIn","user","type","TYPE","SUCCESS","logInSucceed","document","ERROR","logInFail","render","toastId","update","info","idHolder","disabled","onInput","pwHolder","checked","cookieString","toggleAutoLogin","dueDate","Navigate","LoggingOut","CheckOut","bookText","setBookText","setUserData","scannedBook","setScannedBook","needConfirm","setNeedConfirm","notifyRequest","setNotifyRequest","barcode","setBarcode","interval","setInterval","ipAddr","portNum","then","scan","clearInterval","notify","RENTED","getElementById","dismiss","updateUser","JSON","stringify","_ref3","logOut","_ref4","imageCaptured","files","file","INFO","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","getBase64","img","method","mode","crossDomain","headers","withCredentials","credentials","image","succeededToOpen","INVALID_BOOK","bookId","USER_CODE","USER_NAME","nameSuffix","USER_STATE","_RENT","rentSuffix","CameraAltIcon","accept","capture","inputMode","pattern","bookHolder","confirmRent","ret","rentSucceed","NOT_AVAILABLE","confirmAction","confirm","cancel","Return","NOT_RENTED","confirmReturn","returnSucceed","UserInfo","setDisabled","setUserInfo","setProperty","PHONE_NUMBER","EMAIL","ADDRESS","USER_LEVEL","NOTICE","Object","keys","registeredDate","REG_DATE","phone","email","address","notice_","level","kid","adult","admin","save","confirmSave","post","refresh","queryRequest","toggleQueryRequest","userLoading","userListData","userError","userList","setUserList","_args6","users","setUser","getUser","showUsers","showUser","_Fragment","findUsers","_findUsers","toLowerCase","input","trim","err","RentHistory","userName","RETURN_DATE","STATS","LENT_DATE","USER","situation","fromTime","setFromTime","toTime","setToTime","_useLazyQuery4$","historyLoading","historyError","yearValue","setYear","monthValue","setMonth","setQuery","option","year","month","thisYear","thisMonth","createElement","add","getFullYear","getMonth","bookInfo","user_id","timestamp","parseInt","padStart","_search","queryTo","nextMonth","RENT_DATE","warn","search","movePrev","moveNext","NewMember","prepareNewMember","newMember","Doc","_classCallCheck","userReady","logCallback","_createClass","_updateIpAddr","ip","checkServerIp","_this","globalIp","timeout","catch","window","open","callback","checkState","checkRent","_getRent","_entry","_book","retEntry","_args2","rent_date","_openDoc","updateFunc","prk","require","config","Context","rawCookie","v","reduce","acc","shift","join","decodeURIComponent","passwordTyped","matched","emailDb","encrypted_email","phoneDb","encrypted_phone","sign","numberString","isNaN","DropDown","dropdown","setDropdown","click","setClick","menu","classList","remove","home","checkOutStatus","Navbar","isMobile","maxWidth","style","width","MenuIcon","textString","logMsg","App","setLogged","rentLoading","rentError","rentData","_useQuery2","serverLoading","serverError","serverData","loadBook","bookLoading","bookError","bookData","notifyInit","updateLog","lang","ts","process","APP_NAME","APP_VERSION","navigator","languages","kr","en","updateIpAddr","nothing","password","setRent","rents","setBook","setServerInfo","LOADING","setLogCallback","Router","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","limit","Routes","Route","path","element","UserSearch","RentalSituation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","APP_ID","graphqlUri","app","Realm","getValidAccessToken","_getValidAccessToken","currentUser","anonymous","refreshAccessToken","accessToken","client","ApolloClient","link","HttpLink","uri","fetch","_fetch","options","Authorization","_x3","_x4","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider"],"mappings":"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","file":"static/js/main.d9e0418e.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./Home.css\";\r\n\r\nfunction Home(props) {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Home\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (<div id=\"home\" dangerouslySetInnerHTML={{__html:props.text.homeText}}></div>);\r\n}\r\n\r\nexport default Home;\r\n","export const SEARCH_PER_SCREEN = 10;\r\nexport const MAX_SEARCH_ENTRY = 500;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n\r\nexport const getUserState = function(text, state) {\r\n    if (state === \"0\" || state === 0)\r\n        return text.normal;\r\n    else if (state === \"1\" || state === 1)\r\n        return text.overDue;\r\n    else if (state === \"2\" || state === 2)\r\n        return text.stopped;\r\n}\r\n\r\nexport const getBookState = function(text, state) {\r\n    if (state === \"0\")\r\n    {\r\n        return text.available;\r\n    }\r\n    else if (state === \"1\")\r\n    {\r\n        return text.checkedOut;\r\n    }\r\n    else if (state === \"3\")\r\n    {\r\n        return text.overDue;\r\n    }\r\n    else\r\n    {\r\n        return text.notAvailable;\r\n    }\r\n}\r\n\r\nexport const compareRent = function(a1, a2)\r\n{\r\n    if (a1.rentDate > a2.rentDate)\r\n        return true;\r\n    else if (a1.rentDate < a2.rentDate)\r\n        return false;\r\n    return a1.title > a2.title;\r\n}\r\n\r\nexport const toUtf8 = function(text) {\r\n    return unescape(encodeURIComponent(text));\r\n};\r\n\r\nexport const fromUtf8 = function(text) {\r\n    return decodeURIComponent(escape(text));\r\n};\r\n\r\nexport const loadingId = \"custom-loading-id\";\r\nexport const loggingId = \"custom-logging-id\";\r\n","import gql from \"graphql-tag\";\n\nexport const BOOK_QUERY = gql`\n    query AllBook{\n        books (sortBy: TITLE_ASC, limit:20000) {\n            _id\n            author\n            title\n            claim_num\n            num\n            series\n            category\n            claim\n            publisher\n            seqnum\n        }\n    }\n`;\n\nexport const RENT_QUERY = gql`\n    query AllRent{\n        rents (limit:20000) {\n            _id\n            book_id\n            user_id\n            rent_date\n            return_date\n            state\n        }\n    }\n`;\n\nexport const USERS_QUERY = gql`\n    query AllUser {\n        users (limit: 20000) {\n            _id\n            name\n            state\n            level\n        }\n    }`;\n\nexport const USER_QUERY = gql`\n    query FindUser($_id: String!){\n        user (query: {_id:$_id}) {\n            _id\n            name\n            state\n            level\n            encrypted_email\n            encrypted_phone\n        }\n    }`;\n\nexport const HISTORY_QUERY = gql`\n    query findLogs($user_id: String!){\n        rentLogs (limit: 20000, query: {user_id: $user_id}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_data\n            user_id\n        }\n    }`;\n\nexport const HISTORY_PERIOD_QUERY = gql`\n    query findLogs ($fromTime: String!, $toTime: String!) {\n        rentLogs(limit: 20000, query: {AND: [{timestamp_gte: $fromTime}, {timestamp_lt: $toTime}]}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_data\n            user_id\n        }\n    }`;\n\nexport const NOTICE_QUERY = gql`\n    query GetNotices {\n        notices (sortBy: _ID_DESC, limit:20000) {\n            _id\n            date\n            title\n        }\n    }`;\n\nexport const CONTENT_QUERY = gql`\n    query GetContent ($_id: String!) {\n        notice (query: {_id: $_id}) {\n            _id\n            date\n            title\n            content\n        }\n    }`;\n\nexport const SERVER_QUERY = gql`\n    query GetServerInfo {\n        serverInfo {\n            _id\n            globalIp\n            localIp\n            port\n        }\n    }`;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { SEARCH_PER_SCREEN } from \"../Util\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport {NOTICE_QUERY, CONTENT_QUERY} from \"../api/query.js\";\r\n\r\nfunction Notice(props) {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(-1);\r\n    const { loading: noticeLoading, data: noticeData, error: noticeError } = useQuery(NOTICE_QUERY);\r\n    const [loadSelected, { loading: selectedLoading, data: selectedData, error: selectedError}] = useLazyQuery(CONTENT_QUERY,\r\n            {\"variables\": {\"_id\": selectedId}});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Notice\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Notice\");\r\n//            console.log(noticeData);\r\n//            console.log(noticeError);\r\n//            console.log(noticeLoading);\r\n            if (noticeData)\r\n            {\r\n                setSearchResults(noticeData.notices);\r\n            }\r\n        }, [noticeData, noticeError, noticeLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Content\");\r\n//            console.log(selectedData);\r\n//            console.log(selectedError);\r\n//            console.log(selectedLoading);\r\n            if (selectedData)\r\n            {\r\n//                setSearchResults(selectedData.content);\r\n            }\r\n        }, [selectedData, selectedError, selectedLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n            console.log(\"Page num \" + pageNum.toString() + \" \");\r\n            console.log(length);\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n//           console.log(displayedCodes);\r\n        }, [displayedCodes]\r\n    );\r\n\r\n    const selectEntry = (id) => {\r\n        console.log(\"selected \" + id.toString());\r\n        if (selectedId === id)\r\n        {\r\n            setSelectedId(-1);\r\n        }\r\n        else\r\n        {\r\n            setSelectedId(id);\r\n        }\r\n        loadSelected();\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n//        console.log(result);\r\n        return (\r\n                <tr className=\"\" key={result._id}>\r\n                    <td className=\"\"> {result.date} </td>\r\n                    <td className=\"noticeEntry\" colSpan=\"2\" onClick={() => selectEntry(result._id)}> {result.title}</td>\r\n                </tr>\r\n        );\r\n    }\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (searchResults.length > (pageNum + 1) * SEARCH_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div id=\"notice\">\r\n                <div id=\"title\">\r\n                    <h2>\r\n                        {props.text.notice}\r\n                    </h2>\r\n                </div>\r\n                {selectedId > 0 && selectedData &&\r\n                <div id=\"noticeContent\">\r\n                    <table className=\"content\"><tbody>\r\n                           {showEntry(selectedData.notice)}\r\n                        <tr>\r\n                            <td className=\"content\" colSpan=\"3\">\r\n                                {selectedData.notice.content}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                </div>\r\n                }\r\n                <div id=\"noticeList\">\r\n                    <table><tbody>\r\n                       {displayedCodes.length > 0 && displayedCodes.map((result) => showEntry(result))}\r\n                    </tbody></table>\r\n                </div>\r\n                {searchResults.length > SEARCH_PER_SCREEN && (\r\n                    <div id=\"pageControl\">\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={movePrev}/>\r\n                        </div>\r\n                        <div className=\"pageNum\" id=\"pageNum\">\r\n                            {pageNum+1}\r\n                        </div>\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateNextIcon fontSize=\"large\" sx={{color: (searchResults.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={moveNext}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default Notice;\r\n","import { useEffect, useState } from \"react\";\nimport { SEARCH_PER_SCREEN } from \"./Util\";\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\n\nfunction doNothing() {\n    console.log(\"Do nothing...\");\n}\n\nvar showCallback = doNothing;\nfunction ListView(props) {\n        const [itemList, setItemList] = useState([]);\n//        const [showCallback, setShowCallback] = useState(doNothing);\n        const [pageNum, setPageNum] = useState(0);\n        const [displayList, setDisplayList] = useState([]);\n\n    useEffect(function () {\n        console.log(\"Init List View\");\n    }, []);\n\n    useEffect(function () {\n//        console.log(\"Set Item List\");\n        setItemList(props.list);\n    }, [props.list]);\n\n    useEffect(function () {\n        setPageNum(0);\n    }, [props.keyValue]);\n\n    useEffect(function () {\n        if (props.showCallback)\n        {\n//            console.log(\"Set show callback\");\n //           setShowCallback(props.showCallback);\n            showCallback = props.showCallback;\n        }\n    }, [props.showCallback]);\n\n    useEffect(function () {\n        const length = itemList.length;\n //       console.log(\"Page num \" + pageNum.toString());\n        if (length > SEARCH_PER_SCREEN)\n        {\n            const startIdx = pageNum * SEARCH_PER_SCREEN;\n            const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\n            setDisplayList(itemList.slice(startIdx,startIdx+count));\n        }\n        else\n        {\n            setDisplayList(itemList)\n        }\n    }, [itemList, pageNum]);\n\n    function movePrev() {\n        console.log(\"Prev\");\n        if (pageNum > 0)\n        {\n            setPageNum(pageNum - 1);\n        }\n    }\n\n    function moveNext() {\n        console.log(\"Next\");\n        if (itemList.length > (pageNum + 1) * SEARCH_PER_SCREEN)\n        {\n            setPageNum(pageNum + 1);\n        }\n    }\n\n    return (\n        <div id=\"listView\">\n            {showCallback(displayList, props.detail)}\n            {itemList && itemList.length > SEARCH_PER_SCREEN && (\n                <div id=\"pageControl\">\n                    <div className=\"page\" id = \"page\">\n                        <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={() => {movePrev();} }/>\n                    </div>\n                    <div className=\"pageNum\" id=\"pageNum\">\n                        {pageNum+1}\n                    </div>\n                    <div className=\"page\" id = \"page\">\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: (itemList.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={() => {moveNext();} }/>\n                    </div>\n                </div>)\n            }\n        </div>\n    );\n}\nexport default ListView;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { MAX_SEARCH_ENTRY, getBookState, toUtf8 } from \"../Util\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ListView from \"../ListView\";\r\n\r\nlet initialized = false;\r\n\r\nfunction Search(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(inputText, 300);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n\r\n    const [bookList, setBookList] = useState([]);\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"BOOK ID: \" + id);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setInputText(id);\r\n            }\r\n            else\r\n            {\r\n                setInputText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findBooks(text) {\r\n                let results = [];\r\n\r\n                if (props.doc.serverAvailable)\r\n                {\r\n                    console.log(toUtf8(text));\r\n                    console.log(btoa(toUtf8(text)));\r\n                    const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                        props.doc.serverInfo.port + \"/book\";\r\n                    const obj = {\"params\": {\"book\": btoa(toUtf8(text)), \"match\":false}};\r\n                    console.log(obj);\r\n                    const response = await axios.get(url, obj);\r\n                    console.log(response)\r\n                    if (!(\"books\" in response.data.return))\r\n                        return results;\r\n                    const books = response.data.return.books;\r\n                    let retDate = \"\";\r\n                    for (let i = 0 ; i < books.length ; i++)\r\n                    {\r\n                        const book = books[i];\r\n                        const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                        const state = book._STATE;\r\n                        if (state === 1 || state === 3)\r\n                        {\r\n                            retDate = props.text.returnDate + \" \" + book._RETURN;\r\n                        }\r\n                        let resultObject = {\r\n                            index: i,\r\n                            text: resultString,\r\n                            name: book.BOOKNAME,\r\n                            code: book.BARCODE,\r\n                            rent: getBookState(props.text, book._STATE.toString()),\r\n                            retDate: retDate,\r\n                            author: book.AUTHOR,\r\n                            totalName: book.TOTAL_NAME,\r\n                            claim_num: book.CLAMENUM,\r\n                            publish: book.PUBLISH,\r\n                            claim: book.CLAIM\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n\r\n                    for (let i = 0 ; i < bookList.length ; i++) {\r\n                        const row = bookList[i];\r\n                        if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                        if ((row.name && row.name.toString().includes(text)) ||\r\n                            (row.code === text))\r\n                        {\r\n                            let resultString = `${row.name} ${row.claim_num}`;\r\n                            let retDate = \"\";\r\n                            let state = \"0\";\r\n                            for (const entry of rentList)\r\n                            {\r\n                                if (entry.code === row.code)\r\n                                {\r\n                                    state = entry.state;\r\n                                    if (state === \"1\" || state === \"3\")\r\n                                    {\r\n                                        retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                            let resultObject = {\r\n                                index: i,\r\n                                text: resultString,\r\n                                name: row.name,\r\n                                code: row.code.toString(),\r\n                                rent: getBookState(props.text, state),\r\n                                retDate: retDate,\r\n                                author: row.author,\r\n                                totalName: row.totalName,\r\n                                claim_num: row.claim_num,\r\n                                publish: row.publish,\r\n                                claim: row.claim\r\n                            };\r\n                            results.push(resultObject);\r\n                        }\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a['text'] > b['text']; });\r\n                return results;\r\n            }\r\n            async function query() {\r\n                if (searchQuery) {\r\n                    let sr = await findBooks(searchQuery);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        selectedRef.current = sr[0].code;\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, bookList, rentList, props]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        initialized = true;\r\n\r\n        let rl = [];\r\n        const rented = props.doc.rent;\r\n        for (let i = 0 ; i < rented.length; i++)\r\n        {\r\n           rl.push({code:rented[i].book_id, retDate:rented[i].return_date, state:rented[i].state});\r\n        }\r\n        setRentList(rl);\r\n\r\n        let bl = [];\r\n        const books = props.doc.book\r\n        for (const key in books)\r\n        {\r\n           const book = books[key];\r\n           bl.push({code: book._id, name: book.title, num: book.num, author: book.author, claim: book.claim,\r\n                    claim_num: book.claim_num, totalName: book.series, category: book.publisher, publish: book.publisher});\r\n        }\r\n        console.log(\"Load\");\r\n        console.log(books.length);\r\n        setBookList(bl);\r\n    }\r\n\r\n    const selectId = async (code) => {\r\n        console.log(\"Prev \" + selectedRef.current);\r\n        if (selectedRef.current === -1 || selectedRef.current !== code)\r\n        {\r\n            console.log(\"Select \" + code);\r\n            setSelectedId(code);\r\n            selectedRef.current = code;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + code);\r\n            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n        }\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n        const hidden = (result.code !== selectedRef.current);\r\n        const entryId = (hidden) ? \"searchResult\" : \"selectedSearchResult\";\r\n        return (\r\n            <div key={result.code}>\r\n            <div id={entryId} onClick={async () => await selectId(result.code)}>\r\n                <table><tbody>\r\n                    <tr className=\"searchTr\">\r\n                        <td className=\"searchTitle\"> {result.text}</td>\r\n                        <td className=\"searchRent\"> {result.rent} </td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {!hidden &&\r\n            <div>\r\n                <table><tbody>\r\n                <tr>\r\n                    <td>{result.author} </td>\r\n                    <td colSpan=\"2\" rowSpan=\"2\">{result.totalName} <b>{result.name}</b> { result.claim_num} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.code} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.publish}</td>\r\n                    <td colSpan={result.retDate.length > 0 ? \"1\":\"2\"}>{result.claim} </td>\r\n                    {result.retDate.length > 0 && <td>{result.retDate}</td> }\r\n                </tr>\r\n                </tbody></table>\r\n            </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function showEntries(results)\r\n    {\r\n        return results.map((result) => showEntry(result))\r\n    }\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <div id=\"title\">\r\n                <h2> {props.text.bookSearch} </h2>\r\n            </div>\r\n            <div id=\"searchContents\">\r\n                <input id=\"searchInput\"\r\n                    placeholder={props.text.searchBook}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n            </div>\r\n            <ListView keyValue={searchQuery} list={searchResults} detail={selectedId} showCallback={(entries) => { return showEntries(entries); }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, compareRent } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USER_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction CheckOutStatus(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [expireDate, setExpireDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOutStatus initialize\");\r\n\r\n\r\n            if (\"autoLogin\" in props.context.cookie)\r\n            {\r\n                const autoLogin = (props.context.cookie.autoLogin === \"true\") ? true : false;\r\n                setAutoLogin(autoLogin);\r\n            }\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            setExpireDate(date.toGMTString());\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.doc.logged]\r\n    );\r\n\r\n    useEffect(() => {\r\n            async function func() {\r\n                console.log(\"User data updated \");\r\n                await compare();\r\n            }\r\n            func();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n            console.log(historyData);\r\n            let hist = [];\r\n            for (let i = 0 ; i < historyData.rentLogs.length ; i++)\r\n            {\r\n                const entry = historyData.rentLogs[i];\r\n                if (entry.book_state !== \"1\")\r\n                    continue;\r\n                if (! (\"return_data\" in entry) || ! entry.return_data)\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const title = props.doc.book[id][\"title\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                const retDate = entry.return_data;\r\n                hist.push({\"id\": id, \"title\": title, \"rentDate\": date, \"retDate\": retDate});\r\n\r\n            }\r\n            hist.sort(compareRent);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.logged)\r\n        {\r\n            setState(State.LoggedIn);\r\n            const userId = props.doc.userInfo['_id'];\r\n            setUserId(userId);\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            await loadHistory();\r\n        }\r\n        else\r\n        {\r\n            setState(State.LoggedOut);\r\n            setUserId(\"\");\r\n            setPasswordText(\"\");\r\n        }\r\n\r\n        console.log(\"Set title \" + props.doc.logged)\r\n        if (props.doc.logged)\r\n        {\r\n            if (props.doc.adminMode)\r\n                setTitle(props.text.userSearch);\r\n            else\r\n                setTitle(props.text.checkOut);\r\n        }\r\n        else\r\n        {\r\n            setTitle(props.text.logIn);\r\n        }\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const toggleAutoLogin = () => {\r\n        console.log(\"Toggle autoLogin\");\r\n        const cookieString = \"autoLogin=\" + (autoLogin ? \"false\":\"true\") + \"; expires=\" + expireDate + \";\";\r\n        console.log(cookieString);\r\n        document.cookie = cookieString;\r\n        setAutoLogin(!autoLogin);\r\n    }\r\n\r\n    const showEntries = (result, retText) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{retText}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        setState(State.LoggingIn);\r\n        setUserId(userText.toUpperCase());\r\n        await loadUser();\r\n        await loadHistory();\r\n        console.log(\"Log In\");\r\n        await compare();\r\n    }\r\n\r\n    const compare = async () => {\r\n        if (!userData || state === State.LoggedOut)\r\n            return;\r\n\r\n        console.log(toast.isActive(loggingId));\r\n        const prop = toastProp;\r\n\r\n        let text;\r\n        if (props.context.checkLogIn(userData, passwordText))\r\n        {\r\n            props.doc.logIn(userData.user);\r\n\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            setState(State.LoggedIn);\r\n\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            document.cookie = \"user_id=\" + userId + \"; expires=\" + expireDate + \";\";\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.render = text;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = loggingId;\r\n        if (toast.isActive(loggingId))\r\n        {\r\n            console.log(\"update toast\");\r\n            toast.update(loggingId, prop);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"New toast\");\r\n            toast.info(text, prop);\r\n        }\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {title}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!(state !== State.LoggedIn)}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <input type=\"password\" id=\"searchPassword\"\r\n                    placeholder={props.text.pwHolder}\r\n                    value={passwordText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setPasswordText(event.target.value);\r\n                    }} />\r\n                <div id=\"autoLogin\">\r\n                    <input type=\"checkbox\" id=\"autoLoginButton\" checked={autoLogin} onChange={() => toggleAutoLogin()}/>\r\n                    <label>\r\n                            {props.text.autoLogin}\r\n                    </label>\r\n                </div>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={!(state === State.LoggedIn)}>\r\n                <div>\r\n                    { showEntries(searchResults, props.text.dueDate) }\r\n                </div>\r\n\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <ListView list={history} showCallback={(entries) => { return showEntries(entries, props.text.returnDate); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOutStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, loadingId, getUserState } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2,\r\n    LoggingOut: 3\r\n}\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 300);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [userData, setUserData] = useState({});\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOut initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n//            console.log(props.doc.serverInfo);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                axios.get(url).then( response => {\r\n                        const book = response.data.scan;\r\n                        if (book) {\r\n                            console.log(book)\r\n                            setBarcode(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            console.log(toast.isActive(loggingId));\r\n            const prop = toastProp;\r\n\r\n            let text;\r\n            let notify = false;\r\n            if (\"USER_CODE\" in userData && state !== State.LoggedIn)\r\n            {\r\n                setState(State.LoggedIn);\r\n\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                text = props.text.logInSucceed;\r\n                notify = true;\r\n            }\r\n            else if (!(\"USER_CODE\" in userData))\r\n            {\r\n                setState(State.LoggedOut);\r\n\r\n                if (state === State.LoggingIn)\r\n                {\r\n                    prop.type = toast.TYPE.ERROR;\r\n                    text = props.text.logInFail;\r\n                    notify = true;\r\n                }\r\n            }\r\n\r\n            if (notify)\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": prop.type})\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 0)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n                setBarcode(\"\")\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            console.log(\"Notification \" + notifyRequest.text)\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//            if (\"id\" in notifyRequest)\r\n//                id = notifyRequest.id\r\n\r\n//            prop.toastId = id\r\n//            if (toast.isActive(id))\r\n//                toast.update(id, notifyRequest.text, prop);\r\n//            else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (state !== State.LoggedIn)\r\n                setBarcode(userText);\r\n        }, [state, userText]\r\n    );\r\n\r\n    const updateUser = async (userText) => {\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/user?user=\" + userText;\r\n        const obj = {\"params\": {\"user\": userText, \"data\":\"nothing\"}};\r\n        console.log(obj);\r\n        const response = await axios.get(url, btoa(JSON.stringify(obj)));\r\n        const user = response.data.return;\r\n        setUserData(user);\r\n        console.log(user);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        console.log(\"LOGIN\");\r\n        console.log(userText);\r\n        if (userText.length === 0)\r\n            return;\r\n        setState(State.LoggingIn);\r\n        const id = userText.toUpperCase();\r\n        setUserId(id);\r\n        updateUser(id);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Log Out\");\r\n        setUserData({});\r\n        setUserText(\"\");\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n        document.getElementById('barcodeScan').value= null;\r\n    }\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            console.log(url)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.loading,\r\n                              \"type\": toast.TYPE.INFO})\r\n            getBase64(file).then(\r\n                img => {\r\n                    axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(response);\r\n                        console.log(book);\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.succeededToOpen,\r\n                                              \"type\": toast.TYPE.SUCCESS});\r\n                        }\r\n                        else\r\n                        {\r\n                            console.log(\"Failed\");\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR});\r\n                            setScannedBook({});\r\n                            setBarcode(\"\")\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                const bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            console.log(book.books)\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery, bookText, props.doc]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Barcode: \" + barcode);\r\n            if (barcode.length === 0)\r\n                return;\r\n            if (state !== State.LoggedIn)\r\n            {\r\n                setUserText(barcode);\r\n            }\r\n            else\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [barcode, props.doc, state]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n        document.getElementById('barcodeScan').value= null;\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/checkOut\"\r\n        axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE,\r\n                user: userId\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return\r\n            console.log(\"Rent confirmed\");\r\n            console.log(ret)\r\n\r\n            if (ret === \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.rentSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            setScannedBook({});\r\n            setBarcode(\"\")\r\n            updateUser(userId);\r\n        });\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        document.getElementById('barcodeScan').value= null;\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n//            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn ? true : false }>\r\n//            <div id=\"checkOutResult\" hidden={true}>\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.checkOut}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={state === State.LoggedIn}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn}>\r\n                {userData.USER_CODE && (\r\n                    <div id=\"userInfo\">\r\n                        <div id=\"userItem\">\r\n                            {userData.USER_CODE + \" : \" + userData.USER_NAME + props.text.nameSuffix}\r\n                        </div>\r\n                        <div id=\"userItem\"> {getUserState(props.text, userData.USER_STATE)} </div>\r\n                        <div id=\"userItem\"> {userData._RENT.length + \" \" + props.text.rentSuffix} </div>\r\n                    </div>\r\n                )}\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                    <label id=\"barcodeScan\" hidden>\r\n                        <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                        <span>\r\n                        <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                        </span>\r\n                    </label>\r\n                    <label id=\"manualInput\">\r\n                        <div id=\"hkPrefix\">\r\n                        HK\r\n                        </div>\r\n                        <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n                            placeholder={props.text.bookHolder}\r\n                            onInput={(event) => {\r\n                                setBookText(event.target.value);\r\n                            }} />\r\n                    </label>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmRent} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \": \" + scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.logOut} </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\n\r\nfunction Return(props) {\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 300);\r\n//    const [initialized, setInitialized] = useState(false);\r\n//    const [userId, setUserId] = useState(\"\");\r\n//    const [state, setState] = useState(State.LoggedOut);\r\n//    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n//                     { \"variables\": { \"_id\": userId } });\r\n//    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n//                     { \"variables\": { \"user_id\": userId } });\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            props.doc.setCallback(undefined);\r\n            console.log(\"=======================================\");\r\n            console.log(\"Return initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr && ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                axios.get(url).then( response => {\r\n                        const book = response.data.scan;\r\n                        if (book) {\r\n                            console.log(barcode + \" -> \" + book)\r\n                            setBarcode(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n*/\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                const bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery, bookText, props.doc]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"B\" + barcode);\r\n            if (barcode.length > 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [barcode, props.doc]\r\n    );\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.loading,\r\n                              \"type\": toast.TYPE.INFO})\r\n            getBase64(file).then(\r\n                img => {\r\n                    axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.succeededToOpen,\r\n                                              \"type\": toast.TYPE.SUCCESS});\r\n                        }\r\n                        else\r\n                        {\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR})\r\n                            setScannedBook({})\r\n                            setBarcode(\"\")\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 1 || scannedBook._STATE === 3)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    console.log(\"Not rented\")\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.NOT_RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                    setBarcode(\"\")\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//           if (\"id\" in notifyRequest)\r\n//               id = notifyRequest.id\r\n\r\n//           prop.toastId = id\r\n //          if (toast.isActive(id))\r\n//               toast.update(id, notifyRequest.text, prop);\r\n//           else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/return\"\r\n        axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return;\r\n            console.log(ret);\r\n            if (ret === \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.returnSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            setScannedBook({});\r\n            setBarcode(\"\")\r\n        });\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.return}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                <label id=\"barcodeScan\" hidden>\r\n                    <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                    <span>\r\n                    <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                    </span>\r\n                </label>\r\n                <label id=\"manualInput\">\r\n                    <div id=\"hkPrefix\">\r\n                        HK\r\n                    </div>\r\n                    <input inputMode=\"numeric\" pattern=\"\\d*\" type=\"text\" id=\"searchInput\"\r\n                        placeholder={props.text.bookHolder}\r\n                        onInput={(event) => {\r\n                            setBookText(event.target.value);\r\n                        }} />\r\n                </label>\r\n                </div>\r\n                <div id=\"checkReturn\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmReturn} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\" + scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n//                    <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n\r\nexport default Return;\r\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toUtf8 } from \"./Util\";\nimport \"./UserInfo.css\";\n\nfunction UserInfo(props) {\n    const [needConfirm, setNeedConfirm] = useState(false);\n    const [disabled, setDisabled] = useState(true);\n    const [userInfo, setUserInfo] = useState({});\n\n    useEffect(function() {\n        console.log(\"User Info\");\n        console.log(props.info);\n        document.getElementById('userName').value = props.info.USER_NAME;\n        document.getElementById('phone').value = props.info.PHONE_NUMBER;\n        document.getElementById('email').value = props.info.EMAIL;\n        document.getElementById('address').value = props.info.ADDRESS;\n        document.getElementById('notice_').value = props.info.NOTICE;\n        document.getElementById('user_level').value = props.info.USER_LEVEL;\n        setUserInfo({\"USER_CODE\": props.info.USER_CODE});\n        setDisabled(true);\n\n    }, [props.info]);\n\n    function setProperty(index, value)\n    {\n        console.log(index);\n        console.log(value);\n        var info = userInfo;\n        switch (index)\n        {\n        case 0:\n            info.USER_NAME = value;\n            break;\n        case 1:\n            info.PHONE_NUMBER = value;\n            break;\n        case 2:\n            info.EMAIL = value;\n            break;\n        case 3:\n            info.ADDRESS = value;\n            break;\n        case 4:\n            info.USER_LEVEL = value;\n            break;\n        case 5:\n            info.NOTICE = value;\n            break;\n        default:\n            break;\n        }\n        const length = Object.keys(info).length;\n        console.log(length);\n//        if (length >= 1 && \"USER_LEVEL\" in info && info.USER_LEVEL >= 0 && info.USER_LEVEL <= 2)\n        if (length > 1)\n            setDisabled(false);\n        setUserInfo(info);\n    }\n\n    function confirmAction()\n    {\n        console.log(\"Save modification\");\n        console.log(userInfo);\n        const ipAddr = props.doc.serverInfo.localIp;\n        const portNum = props.doc.serverInfo.port;\n        if (ipAddr.length === 0 || portNum <= 0)\n            return;\n\n        const url = \"https://\" + ipAddr + \":\" +\n            portNum + \"/user\";\n\n        var obj = {};\n        for (const key in userInfo)\n        {\n            obj[key] = btoa(toUtf8(userInfo[key]));\n        }\n        axios.post(url, obj).then( response => {\n            console.log(response);\n            props.refresh(response);\n        });\n        setNeedConfirm(false);\n    }\n\n    function cancelAction()\n    {\n        setNeedConfirm(false);\n    }\n\n    return (\n        <div>\n            <table><tbody>\n                <tr key=\"Name\">\n                    <td> {props.text.name} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"userName\" onChange={(event) => {setProperty(0, event.target.value);}} />\n                    </td>\n                </tr>\n                {\"REG_DATE\" in props.info &&\n                    <tr key=\"Register\">\n                        <td> {props.text.registeredDate} </td>\n                        <td colSpan=\"3\" className=\"data\">\n                            {props.info.REG_DATE}\n                        </td>\n                    </tr>\n                }\n                <tr key=\"Phone\">\n                    <td> {props.text.phone} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"phone\" onChange={(event) => {setProperty(1, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Email\">\n                    <td> {props.text.email} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"email\" onChange={(event) => {setProperty(2, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Address\">\n                    <td> {props.text.address} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"address\" onChange={(event) => {setProperty(3, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Notice\">\n                    <td> {props.text.notice_} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"notice_\" onChange={(event) => {setProperty(5, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Level\">\n                    <td> {props.text.level} </td>\n                    <td colSpan=\"3\" className=\"cell\">\n                        <select name=\"User Level\" id=\"user_level\" className=\"dropdown\" onChange={(event) => {setProperty(4, event.target.value);}}>\n                            <option value=\"0\"> {props.text.kid} </option>\n                            <option value=\"1\"> {props.text.adult} </option>\n                            <option value=\"2\"> {props.text.admin} </option>\n                        </select>\n                    </td>\n                </tr>\n            </tbody></table>\n           <button id=\"modify\" hidden={needConfirm} onClick={async () => setNeedConfirm(true)} disabled={disabled}> {props.text.save} </button>\n            <div id=\"checkModify\" hidden={!needConfirm}>\n                <div id=\"noticeMsg\"> {props.text.confirmSave} </div>\n                <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\n                <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\n            </div>\n        </div>\n    );\n}\nexport default UserInfo;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp, MAX_SEARCH_ENTRY, getUserState, toUtf8 } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate, useParams } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\nimport UserInfo from \"../UserInfo\";\r\nimport axios from \"axios\";\r\n\r\n//var rentList = [];\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(userText, 300);\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n//    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n    const { id } = useParams();\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n            {\r\n                return;\r\n            }\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"UserSearch initialize\");\r\n            console.log(\"User ID: \" + id);\r\n\r\n            if (!props.doc.serverAvailable)\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc(false);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n\r\n        if (notify)\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Set title \" + props.logged)\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const selectId = async (id) => {\r\n        if (selectedRef.current === -1 || selectedRef.current !== id)\r\n        {\r\n            console.log(\"Select \" + id);\r\n//            setSelectedId(id);\r\n            selectedRef.current = id;\r\n            const rent = await props.doc.getRent(id);\r\n            console.log(\"Set Rent List\");\r\n            console.log(rent)\r\n            setRentList(rent);\r\n//            rentList = rent;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n//            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n            setRentList([]);\r\n//            rentList = [];\r\n        }\r\n    }\r\n\r\n    const showUser = (user, detail, index) => {\r\n        const key = index.toString();\r\n        return (\r\n                <div key={key}>\r\n                    <table><tbody>\r\n                        <tr key={user.id} className=\"searchTr\" onClick={async ()=> await selectId(user.id)}>\r\n                            <td className=\"bookData\">{user.id}</td>\r\n                            <td className=\"bookData\">{user.name}</td>\r\n                            <td className=\"bookData\">{user.state}</td>\r\n                            <td className=\"bookData\">{user.rent}</td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                        {user.id === selectedRef.current && showEntries(user, detail) }\r\n                </div>\r\n                );\r\n    }\r\n\r\n    const showUsers = (result, detail) => {\r\n        return (<div>\r\n                    {\r\n                        result.map((user, index) => {\r\n                            return showUser(user, detail, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 &&\r\n                        <table><tbody>\r\n                            <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                        </tbody></table>\r\n                    }\r\n                </div>);\r\n    }\r\n\r\n    const showEntries = (user, detail) => {\r\n        console.log(\"Detail\");\r\n        console.log(user);\r\n        return (<>\r\n                    {props.doc.serverAvailable &&\r\n                        <UserInfo text={props.text} doc={props.doc} info={user} refresh={refresh}/>\r\n                    }\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        detail.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        detail.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </>);\r\n    }\r\n    useEffect(\r\n        () => {\r\n            async function findUsers(text) {\r\n                let results = [];\r\n\r\n//                for (let i = 0 ; i < userList.length ; i++) {\r\n                  for (const key in userList) {\r\n                    const row = userList[key];\r\n                    if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                    if ((row.name && row.name.toString().includes(text)) ||\r\n                        (row.id.toLowerCase() === text.toLowerCase()))\r\n                    {\r\n                        results.push(row);\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a.name > b.name; });\r\n                console.log(results);\r\n                return results;\r\n            }\r\n            async function query() {\r\n                const input = userText.trim()\r\n                console.log(\"Query \" + input + \" \" + searchQuery)\r\n                if (input.length > 0 && searchQuery) {\r\n\r\n                    let sr;\r\n                    if (props.doc.serverAvailable)\r\n                    {\r\n                        console.log(\"from CLIB\")\r\n                        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/users\";\r\n                        const obj = {\"params\": {\"user\": btoa(toUtf8(input))}};\r\n                        console.log(obj);\r\n                        const response = await axios.get(url, obj);\r\n                        const users = response.data.return.data;\r\n                        console.log(response.data.return);\r\n                        sr = [];\r\n                        if (users) {\r\n                            for (const entry of response.data.return.data)\r\n                            {\r\n                                console.log(entry);\r\n                                let user = entry;\r\n                                user.id = entry.USER_CODE;\r\n                                user.name = entry.USER_NAME;\r\n                                user.state = getUserState(props.text, entry.USER_STATE);\r\n                                user.rent = entry._RENT.length;\r\n                                sr.push(user);\r\n                            }\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log(\"from DB\")\r\n                        sr = await findUsers(searchQuery);\r\n                    }\r\n\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                       selectId(sr[0].id);\r\n                   else\r\n                       selectId(0);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n       [searchQuery, props, userList, queryRequest, userText]\r\n    );\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.userSearch}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onChange={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <div>\r\n                    <ListView keyValue={searchQuery} list={searchResults} detail={rentList} showCallback={(entries, detail) => { return showUsers(entries, detail); }}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getBookState } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\nimport axios from \"axios\";\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userList]\r\n    );\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        return a1.rentDate > a2.rentDate;\r\n    }\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.serverAvailable)\r\n        {\r\n            let results = [];\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n            const obj = {\"params\": {\"user\": \"*\", \"match\":false}};\r\n//            console.log(obj);\r\n            const response = await axios.get(url, obj);\r\n//           console.log(response)\r\n//            if (!(\"books\" in response.data.return))\r\n//                return results;\r\n            const books = response.data.return.books;\r\n            let retDate = \"\";\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                const state = book._STATE;\r\n                if (state === 1 || state === 3)\r\n                {\r\n                    retDate = book.RETURN_DATE;\r\n                }\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: book.BOOKNAME,\r\n                    id: book.BARCODE,\r\n                    rent: getBookState(props.text, book.STATS.toString()),\r\n                    rentDate: book.LENT_DATE,\r\n                    retDate: retDate,\r\n                    author: book.AUTHOR,\r\n                    totalName: book.TOTAL_NAME,\r\n                    claim_num: book.CLAMENUM,\r\n                    publish: book.PUBLISH,\r\n                    claim: book.CLAIM,\r\n                    user: book.USER,\r\n                    userName: book.USER_NAME\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compare);\r\n            setRentList(results);\r\n        }\r\n        else\r\n        {\r\n\r\n            const rent = await props.doc.getRent();\r\n            console.log(\"Rent\");\r\n            console.log(rent);\r\n            rent.sort(compare);\r\n            for (const index in rent)\r\n            {\r\n                const userId = rent[index][\"user\"];\r\n                let userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                rent[index][\"userName\"] = userName;\r\n//                console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n            }\r\n            setRentList(rent);\r\n        }\r\n\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td colSpan=\"3\" className=\"bookCell\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"situation\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.situation}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue=\"\" list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { compareRent } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\nimport axios from \"axios\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n//    const [initialized, setInitialized] = useState(false);\r\n    const [fromTime, setFromTime] = useState(\"\");\r\n    const [toTime, setToTime] = useState(\"\");\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [loadHistory, {loading: historyLoading, data: historyData, error: historyError }] = useLazyQuery(HISTORY_PERIOD_QUERY,\r\n            {\"variables\": { \"fromTime\" : fromTime, \"toTime\": toTime}});\r\n    const [userList, setUserList] = useState({});\r\n    const [yearValue, setYear] = useState(0);\r\n    const [monthValue, setMonth] = useState(0);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [searchQuery] = useDebounce(query, 300);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            var i;\r\n            var option;\r\n            var year = document.getElementById('year')\r\n            var month = document.getElementById('month')\r\n            for (i = 1; i <= 12 ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                month.add(option, i);\r\n            }\r\n            const thisYear = new Date().getFullYear();\r\n            const thisMonth = new Date().getMonth() + 1;\r\n            const fromYear = 2017;\r\n\r\n            for (i = fromYear ; i <= thisYear ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                year.add(option, i);\r\n            }\r\n\r\n            console.log(thisYear);\r\n            console.log(thisMonth);\r\n            setYear(thisYear);\r\n            setMonth(thisMonth);\r\n            document.getElementById('year').value = thisYear;\r\n            document.getElementById('month').value = thisMonth;\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n//                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"History update\")\r\n\r\n            if (!historyData)\r\n                return\r\n\r\n//            console.log(historyData.rentLogs)\r\n\r\n            const books = historyData.rentLogs;\r\n            let results = [];\r\n            let retDate = \"\";\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const state = book.book_state;\r\n                if (state !== \"1\")\r\n                    continue\r\n                if (!book.return_data || book.return_data.length === 0)\r\n                    continue\r\n//                console.log(book)\r\n                const bookId = book.book_id;\r\n                const userId = book.user_id;\r\n                var userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                var bookInfo;\r\n                if (bookId in props.doc.book)\r\n                {\r\n                    bookInfo = props.doc.book[bookId];\r\n                }\r\n                else\r\n                {\r\n                    bookInfo = {}\r\n                    bookInfo.author = \"\"\r\n                    bookInfo.totalName = \"\"\r\n                    bookInfo.claim_num = \"\"\r\n                    bookInfo.publish = \"\"\r\n                    bookInfo.title = \"\"\r\n                }\r\n                const resultString = `${bookInfo.title} ${bookInfo.claim_num}`;\r\n                retDate = book.return_data;\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: bookInfo.title,\r\n                    id: bookId,\r\n                    rentDate: book.timestamp,\r\n                    retDate: retDate,\r\n                    author: bookInfo.author,\r\n                    claim_num: bookInfo.claim_num,\r\n                    publish: bookInfo.publisher,\r\n                    claim: bookInfo.claim,\r\n                    user: userId,\r\n                    userName: userName\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compareRent);\r\n//            console.log(results);\r\n            setRentList(results);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, historyLoading, historyError]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        }, [userList]\r\n    );\r\n*/\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        if (a1.rentDate > a2.rentDate)\r\n            return true;\r\n        else if (a1.rentDate < a2.rentDate)\r\n            return false;\r\n        return a1.title > a2.title;\r\n    }\r\n\r\n/*\r\n    async function updateDoc()\r\n    {\r\n        setInitialized(true);\r\n    }\r\n*/\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td colSpan=\"3\" className=\"bookCell\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n    function setProperty(index, value)\r\n    {\r\n        console.log(index);\r\n        console.log(value);\r\n        switch (index)\r\n        {\r\n            case 0:\r\n                setYear(value);\r\n                break;\r\n            case 1:\r\n                setMonth(parseInt(value));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(function () {\r\n        setQuery(yearValue.toString() + \"-\" + monthValue.toString().padStart(2, \"0\"))\r\n\r\n    }, [yearValue, monthValue]\r\n    );\r\n\r\n    useEffect(function () {\r\n        async function search()\r\n        {\r\n            console.log(\"Search\")\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/history\";\r\n                const obj = {\"params\": {\"period\": query}};\r\n                console.log(obj);\r\n                const response = await axios.get(url, obj);\r\n                console.log(response);\r\n\r\n                const books = response.data.return.books;\r\n                let results = [];\r\n                let retDate = \"\";\r\n                for (let i = 0 ; i < books.length ; i++)\r\n                {\r\n                    const book = books[i];\r\n                    const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                    if (\"RETURN_DATE\" in book)\r\n                    {\r\n                        retDate = book.RETURN_DATE;\r\n                    }\r\n                    let resultObject = {\r\n                        index: i,\r\n                        text: resultString,\r\n                        title: book.BOOKNAME,\r\n                        id: book.BARCODE,\r\n        //                rent: getBookState(props.text, book..toString()),\r\n                        rentDate: book.RENT_DATE,\r\n                        retDate: retDate,\r\n                        author: book.AUTHOR,\r\n                        totalName: book.TOTAL_NAME,\r\n                        claim_num: book.CLAMENUM,\r\n                        publish: book.PUBLISH,\r\n                        claim: book.CLAIM,\r\n                        user: book.USER,\r\n                        userName: book.USER_NAME\r\n                    };\r\n                    results.push(resultObject);\r\n                }\r\n                results.sort(compare);\r\n                setRentList(results);\r\n            }\r\n            else\r\n            {\r\n                var queryTo;\r\n                const nextMonth = monthValue + 1\r\n                queryTo = yearValue.toString() + \"-\" + nextMonth.toString().padStart(2, \"0\")\r\n                setFromTime(query)\r\n                setToTime(queryTo)\r\n                console.log(query)\r\n                console.log(queryTo)\r\n\r\n                try {\r\n                    await loadHistory();\r\n                }\r\n                catch (e)\r\n                {\r\n                    console.warn(e.name);\r\n                }\r\n\r\n    /*\r\n                for (const index in rent)\r\n                {\r\n                    const userId = rent[index][\"user\"];\r\n                    let userName;\r\n                    if (userList && userId in userList)\r\n                        userName = userList[userId].name;\r\n                    else\r\n                        userName = \"\"\r\n                    rent[index][\"userName\"] = userName;\r\n                    console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n                }\r\n                setRentList(rent);\r\n    */\r\n            }\r\n        }\r\n        search();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [searchQuery]\r\n    );\r\n\r\n    function movePrev()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (month > 1)\r\n        {\r\n            month -= 1\r\n        }\r\n        else\r\n        {\r\n            year -= 1;\r\n            month = 12;\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    function moveNext()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (month < 12)\r\n        {\r\n            month += 1\r\n        }\r\n        else\r\n        {\r\n            year += 1\r\n            month = 1\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.history}\r\n                </h2>\r\n            </div>\r\n            <div id=\"searchRange\">\r\n                <div className=\"page\" id = \"page\">\r\n                    <NavigateBeforeIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {movePrev();} }/>\r\n                </div>\r\n                <select name=\"year\" id=\"year\" className=\"dropdown\" onChange={(event) => {setProperty(0, event.target.value);}}/>\r\n                <select name=\"month\" id=\"month\" className=\"dropdown\" onChange={(event) => {setProperty(1, event.target.value);}}/>\r\n                    <div className=\"page\" id = \"page\">\r\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {moveNext();} }/>\r\n                    </div>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue={searchQuery} list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp } from \"../Util\";\r\n//import { useLazyQuery } from \"@apollo/client\";\r\nimport { Navigate } from 'react-router-dom'\r\n//import {USERS_QUERY} from \"../api/query.js\";\r\nimport UserInfo from \"../UserInfo\";\r\n\r\nfunction NewMember(props) {\r\n//    const [userText, setUserText] = useState(\"\");\r\n    const [userInfo, setUserInfo] = useState({});\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n//    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n//    const [userList, setUserList] = useState({});\r\n//    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized || !props.doc.serverAvailable)\r\n            {\r\n                return;\r\n            }\r\n            console.log(\"=======================================\");\r\n            console.log(\"NewMember initialize\");\r\n            prepareNewMember();\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n*/\r\n\r\n    function prepareNewMember()\r\n    {\r\n        var info = {};\r\n        info.USER_CODE = \"\";\r\n        info.USER_NAME = \"\";\r\n        info.PHONE_NUMBER = \"\";\r\n        info.EMAIL = \"\";\r\n        info.ADDRESS = \"\";\r\n        info.NOTICE = \"\";\r\n        info.USER_LEVEL = -1;\r\n        setUserInfo(info);\r\n    }\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n*/\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n\r\n        const prop = toastProp;\r\n        var text\r\n        if (response.data.return === \"OK\")\r\n        {\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            prepareNewMember()\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.autoClose = 3000;\r\n        toast.info(text, prop);\r\n    }\r\n    if (!props.doc.initialized || !props.doc.serverAvailable)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.newMember}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                {props.doc.serverAvailable &&\r\n                    <UserInfo text={props.text} doc={props.doc} info={userInfo} refresh={refresh}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewMember;\r\n","import { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        this.initialized = false;\r\n        this.bookReady = false;\r\n        this.rentReady = false;\r\n        this.userReady = false;\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        this.book = {};\r\n        this.rent = {};\r\n        this.logCallback = undefined;\r\n        this.admin = false;\r\n        this.serverInfo = {};\r\n        this.serverAvailable = false;\r\n        this.ipAddr = \"\"\r\n    }\r\n\r\n    async updateIpAddr()\r\n    {\r\n//        const response = await axios.get(\"https://ipv4.seeip.org/jsonip\");\r\n        const response = await axios.get(\"https://api.ipify.org/?format=json\")\r\n        console.log(\"Get IP Address\");\r\n        console.log(response.data);\r\n        const ipAddr = response.data.ip;\r\n        console.log(\"IP addr updated \" + ipAddr)\r\n        this.ipAddr = ipAddr;\r\n        this.checkServerIp()\r\n    }\r\n\r\n    checkServerIp()\r\n    {\r\n        if (this.ipAddr.length === 0 || !this.serverInfo.globalIp)\r\n            return\r\n        if (this.serverInfo.globalIp === this.ipAddr)\r\n        {\r\n            console.log(\"Server is accessible \" + this.serverInfo.localIp);\r\n            const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n            this.serverAvailable = true;\r\n            axios.get(query, {timeout: 1000})\r\n                .then( (response) => {\r\n                    console.log(\"Server connected\");\r\n                    console.log(response.data);\r\n                    this.admin = response.data.admin;\r\n                    this.initialized = true;\r\n                })\r\n                .catch(error => {\r\n                  const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n                  window.open(query);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    checkState() {\r\n        if (this.bookReady && this.rentReady) {\r\n            this.initialized = true;\r\n            toast.dismiss();\r\n            if (this.callback) {\r\n                this.callback();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setLogCallback(callback) {\r\n        this.logCallback = callback;\r\n    }\r\n\r\n    setRent(rent) {\r\n        this.rent = rent\r\n        this.rentReady = true;\r\n        this.checkState();\r\n        this.checkRent();\r\n    }\r\n\r\n    setServerInfo(serverInfo)\r\n    {\r\n        this.serverInfo = serverInfo;\r\n        console.log(this.serverInfo.globalIp);\r\n        this.checkServerIp()\r\n    }\r\n\r\n    setBook(books) {\r\n        this.book = {};\r\n        for (let i = 0 ; i < books.length ; i++)\r\n        {\r\n            const book = books[i];\r\n            const id = book['_id'];\r\n            this.book[id] = book;\r\n        }\r\n        this.bookReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setUser(users) {\r\n        this.user = {};\r\n        for (let i = 0 ; i < users.length ; i++)\r\n        {\r\n            const user = users[i];\r\n            const id = user.id;\r\n            this.user[id] = user;\r\n            this.user[id][\"rent\"] = 0;\r\n        }\r\n        this.userReady = true;\r\n        this.checkRent();\r\n    }\r\n\r\n    checkRent() {\r\n        if (!this.userReady || !this.rentReady)\r\n        {\r\n            console.log(\"Cannot check rent\");\r\n            return;\r\n        }\r\n//        console.log(this.rent);\r\n        for (let i = 0 ; i < this.rent.length ; i++)\r\n        {\r\n            const state = this.rent[i].state;\r\n\r\n//            console.log(state);\r\n            if (state !== \"1\" && state !== \"3\")\r\n                continue;\r\n\r\n            const userId = this.rent[i].user_id;\r\n//            console.log(this.rent[i]);\r\n//           console.log(userId);\r\n//           console.log(userId.length);\r\n            if (userId && userId.length > 0 && userId in this.user)\r\n                this.user[userId][\"rent\"] += 1;\r\n            else\r\n                this.user[userId][\"rent\"] = 1;\r\n        }\r\n        console.log(this.user);\r\n    }\r\n\r\n    logIn(userInfo) {\r\n        console.log(\"Logged in: \" + userInfo['_id']);\r\n        this.logged = true;\r\n        this.userInfo = userInfo;\r\n        if (userInfo['level'] === \"2\")\r\n            this.admin = true;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n    }\r\n\r\n    logOut() {\r\n        console.log(\"Logged out\");\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        if (this.logCallback)\r\n            this.logCallback(false);\r\n    }\r\n\r\n    async getRent(userId = undefined) {\r\n        let ret = [];\r\n        if (this.serverAvailable) {\r\n            const url = \"https://\" + this.serverInfo.localIp + \":\" +\r\n                this.serverInfo.port + \"/book\";\r\n            const obj = {\"params\": {\"user\": userId}};\r\n            console.log(obj);\r\n            const result = await axios.get(url, obj);\r\n            console.log(result);\r\n            if (\"books\" in result.data.return)\r\n            {\r\n                // BARCODE, BOOKNAME, LENT_DATE, RETURN_DATE, STATS\r\n                // id, title, rentDate, retData,  stat\r\n                for (const entry of result.data.return.books)\r\n                {\r\n                    console.log(entry);\r\n                    const book = {'id': entry.BARCODE, 'title': entry.BOOKNAME, 'rentDate': entry.LENT_DATE, 'retDate': entry.RETURN_DATE, 'stat': entry.STATS}\r\n                    ret.push(book);\r\n                }\r\n//                ret = result.data.return.books;\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"Check \" + userId);\r\n            console.log(this.bookReady);\r\n            if (!this.bookReady)\r\n                return ret;\r\n    //        console.log(this.rent.length);\r\n            for (let i = 0 ; i < this.rent.length ; i++) {\r\n                const entry = this.rent[i];\r\n                if (userId !== undefined && entry.user_id !== userId)\r\n                    continue;\r\n    //            console.log(entry)\r\n                if (entry.state !== \"1\" && entry.state !== \"3\")\r\n                    continue;\r\n    //            console.log(entry);\r\n                const id = entry[\"book_id\"];\r\n                const book = this.book[id];\r\n    //            console.log(book)\r\n                let retEntry = {}\r\n                retEntry[\"id\"] = book._id\r\n                retEntry[\"title\"] = book.title\r\n                retEntry[\"rentDate\"] = entry.rent_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"retDate\"] = entry.return_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"user\"] = entry.user_id;\r\n                ret.push(retEntry)\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n\r\n    async openDoc() {\r\n        try {\r\n            this.initialized = true;\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.initialized;\r\n    }\r\n\r\n    setCallback(updateFunc)\r\n    {\r\n        console.log(\"Update function registered\");\r\n        this.callback = updateFunc;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","import config from \"./api/key\";\n\nconst NodeRSA = require('node-rsa');\n\nconst prk = new NodeRSA(config[\"privateKey\"]);\n\nclass Context {\n    constructor() {\n        console.log(\"Create Context\");\n\n        console.log(\"Cookies\");\n        const rawCookie = document.cookie;\n        this.cookie = rawCookie\n            .split(\";\")\n            .map(v => v.split(\"=\"))\n            .reduce((acc, v) => {\n                const key = v.shift().trim();\n                const value = v.join(\"=\").trim();\n                acc[decodeURIComponent(key)] = decodeURIComponent(value);\n                return acc;\n            }, {});\n        console.log(this.cookie);\n    }\n\n    checkLogIn(userData, passwordText) {\n        var matched = false;\n        var passwordTyped;\n        if (userData.user && passwordText.length > 0) {\n            console.log(\"User data available\");\n            const emailDb = userData.user.encrypted_email;\n            const phoneDb = userData.user.encrypted_phone;\n\n            passwordTyped = prk.sign(passwordText, 'base64');\n            if (passwordText === emailDb ||\n                passwordText === phoneDb )\n            {\n                passwordTyped = passwordText;\n                matched = true;\n            }\n            else if (emailDb === passwordTyped)\n            {\n//                console.log(\"Email match\");\n                matched = true;\n            }\n            else\n            {\n                var numberString = \"\";\n                for (let i = 0 ; i < passwordText.length ; i++)\n                {\n                    if (!isNaN(passwordText[i]))\n                        numberString += passwordText[i];;\n                }\n                passwordTyped = prk.sign(numberString, 'base64');\n                if (passwordTyped === phoneDb)\n                {\n//                    console.log(\"Phone match\");\n                    matched = true;\n                }\n                else\n                {\n//                    console.log(\"Nothing matched\");\n                }\n            }\n\n//            console.log(\"toast available\");\n        }\n        if (matched)\n        {\n            const date = new Date();\n            const days=2;\n            date.setTime(date.getTime()+(days*24*60*60*1000));\n            const expireDate = date.toGMTString();\n            document.cookie = \"password=\" +  passwordTyped + \"; expires=\" + expireDate + \" ; SameSite=Lax ;\" ;\n        }\n        return matched\n    }\n}\n\nexport default Context;\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Dropdown.css'\r\n\r\nfunction DropDown(props) {\r\n\r\n    const [dropdown, setDropdown] = useState(false);\r\n    const [click, setClick] = useState(false)\r\n\r\n    useEffect(\r\n        () => {\r\n            if (dropdown !== props.dropdown)\r\n            {\r\n                console.log(\"User clicked \" + props.doc.logged);\r\n                console.log(props.dropdown);\r\n                setClick(!click);\r\n                setDropdown(props.dropdown);\r\n            }\r\n            const menu = document.getElementById(\"dropdown-menu\");\r\n//            menu.hidden = !click;\r\n            if (!click)\r\n            {\r\n               menu.classList.remove('is-show');\r\n            }\r\n            else\r\n            {\r\n               menu.classList.add('is-show');\r\n            }\r\n\r\n        }, [props.dropdown, dropdown, click, props.doc.logged]\r\n    );\r\n\r\n    const logOut = () =>\r\n    {\r\n        setClick(false);\r\n        props.doc.logOut();\r\n        document.cookie = \"user_id=\";\r\n        document.cookie = \"password=\";\r\n        document.cookie = \"autoLogin=false\";\r\n    }\r\n\r\n    return (\r\n            <div id='dropdown-menu' onClick={() => { setClick(!click)}} className='dropdown-menu'>\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                    <div className='menu-items'>\r\n                        {props.doc.userInfo[\"_id\"] + \" : \" + props.doc.userInfo[\"name\"] + props.text.nameSuffix}\r\n                    </div>\r\n                    <hr className=\"hline\"/>\r\n                    </>\r\n                }\r\n                <Link className='menu-items' to=\"/\" onClick={() => setClick(false)}>\r\n                    {props.text.home}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/notice\" onClick={() => setClick(false)}>\r\n                    {props.text.notice}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/search\" onClick={() => setClick(false)}>\r\n                    {props.text.bookSearch}\r\n                </Link>\r\n                {props.doc.serverAvailable &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOut\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOut}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/return\" onClick={() => setClick(false)}>\r\n                            {props.text.return}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOutStatus}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {props.doc.admin &&\r\n                    <>\r\n                    <hr className=\"hline\"/>\r\n                    <Link className='menu-items' to=\"/userSearch\" onClick={() => setClick(false)}>\r\n                        {props.text.userSearch}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentalSituation\" onClick={() => setClick(false)}>\r\n                        {props.text.situation}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentHistory\" onClick={() => setClick(false)}>\r\n                        {props.text.history}\r\n                    </Link>\r\n                    </>\r\n                }\r\n                {props.doc.serverAvailable && props.doc.admin &&\r\n                    <Link className='menu-items' to=\"/newMember\" onClick={() => setClick(false)}>\r\n                        {props.text.newMember}\r\n                    </Link>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <hr className=\"hline\"/>\r\n                        <div className='menu-items' onClick={() => logOut()}>\r\n                            {props.text.logOut}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && !props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.logIn}\r\n                        </Link>\r\n                    </>\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default DropDown;\r\n","import React, { useState } from 'react';\r\nimport {isMobile} from \"react-device-detect\";\r\nimport \"./Navbar.css\";\r\nimport DropDown from \"./Dropdown\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction Navbar(props) {\r\n    const [dropdown, setDropdown] = useState(false)\r\n\r\n    const onClick = () => {\r\n        const maxWidth = document.getElementById(\"navbar\").style.maxWidth;\r\n        console.log(\"maxWidth\");\r\n        console.log(maxWidth);\r\n        console.log(document.getElementById(\"navbar\").style.width);\r\n        setDropdown(!dropdown);\r\n    }\r\n\r\nreturn (\r\n    <>\r\n        <div id=\"navbar\" className=\"navbar\">\r\n            <div className='title'>\r\n                {isMobile? (<h1>{props.text[\"titleShort\"]}</h1>) : (<h1>{props.text[\"titleLong\"]}</h1>)}\r\n            </div>\r\n            <div className='menu' onClick={onClick} >\r\n                <MenuIcon className=\"img\" fontSize=\"large\" sx={{ color: \"#ffffff\"}}/>\r\n            </div>\r\n            <DropDown text={props.text} doc={props.doc} dropdown={dropdown}/>\r\n        </div>\r\n    </>\r\n)\r\n}\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Notice from \"./pages/Notice\";\r\nimport Search from \"./pages/Search\";\r\nimport CheckOutStatus from \"./pages/CheckOutStatus\";\r\nimport CheckOut from \"./pages/CheckOut\";\r\nimport Return from \"./pages/Return\";\r\nimport UserSearch from \"./pages/UserSearch\";\r\nimport RentalSituation from \"./pages/RentalSituation\";\r\nimport RentHistory from \"./pages/RentHistory\";\r\nimport NewMember from \"./pages/NewMember\";\r\n//import Reader from \"./pages/Reader\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\nimport Context from \"./Context\";\r\nimport text from \"./api/text\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"./Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport Navbar from \"./Navbar\";\r\nimport {BOOK_QUERY, RENT_QUERY, USER_QUERY, SERVER_QUERY} from \"./api/query.js\";\r\n\r\nconst doc = new Doc();\r\nconst context = new Context();\r\n\r\nconst textString = {};\r\nlet logMsg = \"\"\r\nfunction App() {\r\n\r\n//    const [checkOutStr, setCheckOutStr] = useState(\"\");\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [logged, setLogged] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const { loading: rentLoading, error: rentError, data: rentData } = useQuery(RENT_QUERY);\r\n    const { loading: serverLoading, error: serverError, data: serverData } = useQuery(SERVER_QUERY);\r\n    const [loadBook, { loading: bookLoading, error: bookError, data: bookData }] = useLazyQuery(BOOK_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY, { \"variables\": { \"_id\": userId } });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            logMsg = logMsg + \"<p>Initialize app</p>\";\r\n            console.log(process.env.APP_NAME);\r\n            console.log(process.env.APP_VERSION);\r\n            const lang = navigator.languages;\r\n            console.log(lang);\r\n            let ts = {}\r\n            if (lang.length> 0 && (lang[0].toLowerCase().includes(\"kr\") || lang[0].toLowerCase().includes(\"ko\")))\r\n            {\r\n                ts = text.kr;\r\n            }\r\n            else\r\n            {\r\n                ts = text.en;\r\n            }\r\n            for (let key in ts)\r\n            {\r\n                textString[key] = ts[key];\r\n            }\r\n\r\n            await doc.updateIpAddr();\r\n\r\n            if (\"autoLogin\" in context.cookie &&  context.cookie.autoLogin === \"true\")\r\n            {\r\n                console.log(\"Auto Login: \" + context.cookie.user_id);\r\n                setUserId(context.cookie.user_id);\r\n                console.log(context.cookie.nothing);\r\n                loadUser();\r\n            }\r\n            setInitialized(true);\r\n        }\r\n        initialize();\r\n    }, [loadUser]);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data loaded\");\r\n            if (!userData)\r\n            {\r\n                return;\r\n            }\r\n\r\n            console.log(\"Login check \" + context.cookie.password);\r\n            console.log(userData);\r\n            if (context.cookie.password && context.checkLogIn(userData, context.cookie.password))\r\n            {\r\n                console.log(\"Login suceeded\");\r\n                doc.logIn(userData.user);\r\n            }\r\n\r\n\r\n\r\n        }, [userData]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Rent Query Updated\");\r\n            logMsg = logMsg + \"<p>Rent Query Updated \" + rentLoading + \" \" + rentError + \"</p>\";\r\n            console.log(rentLoading);\r\n            console.log(rentError);\r\n            if (rentData)\r\n            {\r\n                console.log(\"Rent available\");\r\n                logMsg = logMsg + \"<p>Rent available</p>\"\r\n//                console.log(rentData.rents)\r\n                doc.setRent(rentData.rents)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [rentLoading, rentError, rentData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Book Query Updated\");\r\n            logMsg = logMsg + \"<p>Book Query Updated</p>\";\r\n            console.log(bookLoading)\r\n            console.log(bookError)\r\n            if (bookData)\r\n            {\r\n                console.log(\"Book available\")\r\n                logMsg = logMsg + \"<p>Book available</p>\";\r\n//                console.log(bookData.books)\r\n                doc.setBook(bookData.books)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [bookLoading, bookError, bookData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Server Query Updated\");\r\n            logMsg = logMsg + \"<p>Server Query Updated</p>\";\r\n\r\n            console.log(serverData);\r\n            console.log(initialized);\r\n            if (!serverData || !initialized)\r\n                return\r\n\r\n            console.log(\"Server info available\")\r\n            logMsg = logMsg + \"<p>Server info available</p>\";\r\n            console.log(serverData.serverInfo)\r\n            doc.setServerInfo(serverData.serverInfo)\r\n\r\n            if (!doc.serverAvailable)\r\n            {\r\n                console.log(\"Server is not available. Load books from cloud DB\");\r\n                loadBook();\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.LOADING;\r\n                prop.autoClose = false;\r\n                prop.toastId = loadingId;\r\n                toast.loading(textString.loading, prop);\r\n                doc.setLogCallback(updateLog);\r\n            }\r\n        }, [serverLoading, serverError, serverData, loadBook, initialized]\r\n    );\r\n\r\n    function notifyInit()\r\n    {\r\n        const prop = toastProp;\r\n        prop.type = toast.TYPE.SUCCESS;\r\n        prop.render = textString.succeededToOpen;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = \"\";\r\n        toast.info(textString.succeededToOpen, prop);\r\n    }\r\n\r\n    function updateLog(logged) {\r\n        console.log(\"==== Update logging state \" + doc.logged);\r\n        console.log(doc.userInfo);\r\n        setLogged(doc.logged);\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n        <div className=\"App\">\r\n            <div>\r\n                <ToastContainer\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    limit={10}\r\n                />\r\n            </div>\r\n            <Navbar doc={doc} text={textString}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home doc={doc} text={textString}/>} />\r\n                <Route path=\"/notice\" element={<Notice doc={doc} text={textString} />} />\r\n                <Route path=\"/search/:id?\" element={<Search doc={doc} text={textString}/>} />\r\n                <Route path=\"/checkOutStatus\" element={<CheckOutStatus context={context} doc={doc} text={textString} logged={logged}/>} />\r\n                <Route path=\"/userSearch/:id?\" element={<UserSearch context={context} doc={doc} text={textString} />} />\r\n                <Route path=\"/checkOut\" element={<CheckOut context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/return\" element={<Return context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentalSituation\" element={<RentalSituation context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentHistory\" element={<RentHistory context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/newMember\" element={<NewMember context={context} doc={doc} text={textString}/>} />\r\n            </Routes>\r\n\r\n            <h3>\r\n                v {process.env.REACT_APP_VERSION}\r\n            </h3>\r\n        </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport * as Realm from \"realm-web\";\r\nimport {\r\n    ApolloClient,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    InMemoryCache,\r\n} from \"@apollo/client\";\r\n\r\nconst APP_ID = 'data-xaque';\r\nconst graphqlUri = `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\r\nconst app = new Realm.App(APP_ID);\r\n\r\n// Gets a valid Realm user access token to authenticate requests\r\nasync function getValidAccessToken() {\r\n    // Guarantee that there's a logged in user with a valid access token\r\n    if (!app.currentUser) {\r\n        // If no user is logged in, log in an anonymous user. The logged in user will have a valid\r\n        // access token.\r\n        await app.logIn(Realm.Credentials.anonymous());\r\n//        await app.logIn(apiKey);\r\n    } else {\r\n        // An already logged in user's access token might be stale. Tokens must be refreshed after\r\n        // 30 minutes. To guarantee that the token is valid, we refresh the user's access token.\r\n        await app.currentUser.refreshAccessToken();\r\n    }\r\n//    console.log(\"AccessToken: [\" + app.currentUser.accessToken + \"]\");\r\n\r\n    return app.currentUser.accessToken;\r\n}\r\n\r\n// Configure the ApolloClient to connect to your app's GraphQL endpoint\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\r\n        // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\r\n        // access token before sending the request.\r\n        fetch: async (uri, options) => {\r\n            const accessToken = await getValidAccessToken();\r\n            options.headers.Authorization = `Bearer ${accessToken}`;\r\n            return fetch(uri, options);\r\n        },\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}