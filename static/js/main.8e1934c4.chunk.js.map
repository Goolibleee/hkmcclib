{"version":3,"sources":["pages/Home.js","Util.js","api/query.js","pages/Notice.js","ListView.js","pages/Search.js","pages/CheckOutStatus.js","pages/CheckOut.js","pages/Return.js","UserInfo.js","pages/UserSearch.js","pages/RentalSituation.js","pages/RentHistory.js","pages/NewMember.js","Doc.js","Context.js","Dropdown.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useEffect","_initialize","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","console","log","doc","setCallback","undefined","stop","apply","arguments","initialize","serverAvailable","_jsxs","id","children","_jsx","Link","className","to","text","checkOut","return","dangerouslySetInnerHTML","__html","homeText","SEARCH_PER_SCREEN","MAX_SEARCH_ENTRY","String","prototype","format","formatted","this","i","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","getUserState","state","normal","overDue","stopped","getBookState","available","checkedOut","reserved","lost","damaged","given","notAvailable","deleted","compareRent","a1","a2","rentDate","title","toUtf8","unescape","encodeURIComponent","loadingId","loggingId","BOOK_QUERY","gql","_templateObject","_taggedTemplateLiteral","RENT_QUERY","_templateObject2","USERS_QUERY","_templateObject3","USER_QUERY","_templateObject4","HISTORY_QUERY","_templateObject5","HISTORY_PERIOD_QUERY","_templateObject6","NOTICE_QUERY","_templateObject7","CONTENT_QUERY","_templateObject8","SERVER_QUERY","_templateObject9","Notice","_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useState3","_useState4","displayedCodes","setDisplayedCodes","_useState5","_useState6","pageNum","setPageNum","_useState7","_useState8","selectedId","setSelectedId","_useQuery","useQuery","noticeLoading","loading","noticeData","data","noticeError","error","_useLazyQuery","useLazyQuery","_useLazyQuery2","loadSelected","_useLazyQuery2$","selectedLoading","selectedData","selectedError","notices","toString","startIdx","count","Math","min","slice","showEntry","result","date","colSpan","onClick","_id","notice","content","map","NavigateBeforeIcon","fontSize","sx","color","NavigateNextIcon","showCallback","ListView","itemList","setItemList","displayList","setDisplayList","list","keyValue","detail","initialized","Search","inputText","setInputText","_useDebounce","useDebounce","searchQuery","selectedRef","useRef","bookList","setBookList","_useState9","_useState10","rentList","setRentList","_useState11","_useState12","setBookState","bookStateRef","_useState13","_useState14","needConfirm","setNeedConfirm","needConfirmRef","_useState15","_useState16","queryRequest","toggleQueryRequest","useParams","_useState17","_useState18","advancedSearch","setAdvancedSearch","_useState19","_useState20","author","setAuthor","_useState21","_useState22","fromId","setFromId","_useState23","_useState24","toId","setToId","_useState25","_useState26","fromDate","setFromDate","_useState27","_useState28","toDate","setToDate","_useState29","_useState30","stateFilter","setStateFilter","updateDoc","_updateDoc","_callee6","rl","rm","rented","bl","books","lastKey","key","book","_context6","rent","push","code","book_id","retDate","return_date","name","num","claim","regDate","registration_date","claim_num","totalName","series","category","publisher","publish","isbn","isOpen","findBooks","_x","_findBooks","_callee2","results","url","obj","response","resultString","resultObject","_context2","btoa","serverInfo","localIp","port","axios","get","sent","abrupt","concat","BOOKNAME","CLAIMNUM","_STATE","returnDate","_RETURN","index","BARCODE","REG_DATE","AUTHOR","TOTAL_NAME","CLAMENUM","PUBLISH","CLAIM","ISBN","findBookLocally","sort","a","b","_query","_callee3","sr","_context3","current","query","selectId","_ref","_callee4","_context4","_x2","setState","setSearchState","stateStr","value","document","getElementById","checked","filter","idx","element","_confirmAction","_callee7","ipAddr","portNum","_context7","post","then","hidden","entryId","flags","_callee5","_context5","rowSpan","admin","disabled","confirmAction","confirm","cancel","setPeriod","from","row","includes","_step","_iterator","_createForOfIteratorHelper","s","n","done","entry","err","e","f","parseInt","bookSearch","placeholder","searchBook","onChange","event","target","type","advSearch","bookCode","registeredDate","Calendar","date1","date2","dateStr1","getFullYear","getMonth","padStart","getDate","dateStr2","selectRange","all","search","entries","State","LoggedOut","LoggingIn","LoggedIn","CheckOutStatus","userText","setUserText","passwordText","setPasswordText","setInitialized","userId","setUserId","history","setHistory","autoLogin","setAutoLogin","loadUser","userData","_useLazyQuery3","_useLazyQuery4","loadHistory","historyData","expireDate","setExpireDate","setTitle","_userId","logged","userInfo","t0","getRent","t1","adminMode","userSearch","logIn","_autoLogin","context","cookie","Date","setTime","getTime","days","toGMTString","_func","compare","func","bookReady","rentReady","hist","rentLogs","book_state","timestamp","split","showEntries","retText","bookName","React","Fragment","showRented","noEntry","toUpperCase","_ref2","prop","toast","isActive","checkLogIn","user","TYPE","SUCCESS","logInSucceed","ERROR","logInFail","render","toastId","update","info","idHolder","onInput","pwHolder","cookieString","toggleAutoLogin","dueDate","Navigate","LoggingOut","CheckOut","bookText","setBookText","setUserData","scannedBook","setScannedBook","notifyRequest","setNotifyRequest","barcode","setBarcode","setRented","navigate","useNavigate","prefixList","getElementsByName","substring","interval","setInterval","scan","clearInterval","notify","RENTED","dismiss","prefix","updateUser","JSON","stringify","USER_CODE","_ref3","logOut","_ref4","imageCaptured","files","file","INFO","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","getBase64","img","method","mode","crossDomain","headers","withCredentials","credentials","image","succeededToOpen","INVALID_BOOK","showBook","bookId","htmlFor","pattern","inputMode","USER_NAME","nameSuffix","USER_STATE","_RENT","rentSuffix","CameraAltIcon","accept","capture","numberOnly","bookHolder","confirmRent","ret","rentSucceed","NOT_AVAILABLE","finish","Return","returned","setReturned","NOT_RENTED","confirmReturn","returnSucceed","UserInfo","setDisabled","setUserInfo","setProperty","PHONE_NUMBER","EMAIL","ADDRESS","USER_LEVEL","NOTICE","Object","keys","phone","email","address","notice_","level","kid","adult","save","confirmSave","refresh","userLoading","userListData","userError","userList","setUserList","_args6","_extend","extend","users","setUser","getUser","extendCount","forceSelect","_args2","showUsers","showUser","_Fragment","findUsers","_x3","_findUsers","toLowerCase","input","trim","RentHistory","userName","RETURN_DATE","STATS","LENT_DATE","USER","situation","fromTime","setFromTime","toTime","setToTime","_useLazyQuery4$","historyLoading","historyError","yearValue","setYear","monthValue","setMonth","setQuery","option","year","month","thisYear","thisMonth","createElement","add","bookInfo","user_id","_search","queryTo","nextMonth","_RETURN_DATE","RENT_DATE","warn","movePrev","moveNext","NewMember","prepareNewMember","newMember","regSuccess","regFail","Doc","_classCallCheck","userReady","logCallback","_createClass","_updateIpAddr","ip","checkServerIp","_this","globalIp","timeout","catch","window","open","callback","checkState","checkRent","_getRent","_entry","_book","retEntry","_EXTEND_COUNT","rent_date","_openDoc","updateFunc","prk","require","config","Context","rawCookie","v","reduce","acc","shift","join","decodeURIComponent","passwordTyped","matched","emailDb","phoneDb","sign","numberString","isNaN","DropDown","dropdown","setDropdown","click","setClick","menu","classList","remove","home","checkOutStatus","Navbar","isMobile","maxWidth","style","width","MenuIcon","textString","logMsg","App","setLogged","rentLoading","rentError","rentData","_useQuery2","serverLoading","serverError","serverData","loadBook","bookLoading","bookError","bookData","notifyInit","updateLog","lang","ts","process","APP_NAME","APP_VERSION","navigator","languages","kr","en","updateIpAddr","nothing","password","setRent","rents","setBook","setServerInfo","LOADING","setLogCallback","Router","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","limit","Routes","Route","path","UserSearch","RentalSituation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","APP_ID","graphqlUri","app","Realm","getValidAccessToken","_getValidAccessToken","currentUser","anonymous","refreshAccessToken","accessToken","client","ApolloClient","link","HttpLink","uri","fetch","_fetch","options","Authorization","_x4","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider"],"mappings":"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","file":"static/js/main.8e1934c4.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport \"./Home.css\";\r\n\r\nfunction Home(props) {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Home\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    if (!props.doc.serverAvailable)\r\n    {\r\n        return (<div id=\"home\" dangerouslySetInnerHTML={{__html:props.text.homeText}}></div>);\r\n    }\r\n    else\r\n    {\r\n        import(\"./PageServer.css\");\r\n        return (<div id=\"home\">\r\n                    <Link className='home-items' to=\"/checkOut\">\r\n                        {props.text.checkOut}\r\n                    </Link>\r\n                    <Link className='home-items' to=\"/return\">\r\n                        {props.text.return}\r\n                    </Link>\r\n                </div>);\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","export const SEARCH_PER_SCREEN = 10;\r\nexport const MAX_SEARCH_ENTRY = 500;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n\r\nexport const getUserState = function(text, state) {\r\n    if (state === \"0\" || state === 0)\r\n        return text.normal;\r\n    else if (state === \"1\" || state === 1)\r\n        return text.overDue;\r\n    else if (state === \"2\" || state === 2)\r\n        return text.stopped;\r\n}\r\n\r\nexport const getBookState = function(text, state) {\r\n    switch (state)\r\n    {\r\n        case \"0\":\r\n        case 0:\r\n            return text.available;\r\n        case \"1\":\r\n        case 1:\r\n            return text.checkedOut;\r\n        case \"2\":\r\n        case 2:\r\n            return text.reserved;\r\n        case \"3\":\r\n        case 3:\r\n            return text.overDue;\r\n        case \"4\":\r\n        case 4:\r\n            return text.lost;\r\n        case \"5\":\r\n        case 5:\r\n            return text.damaged;\r\n        case \"6\":\r\n        case 6:\r\n            return text.given;\r\n        case \"7\":\r\n        case 7:\r\n        default:\r\n            return text.notAvailable;\r\n        case \"8\":\r\n        case 8:\r\n            return text.deleted;\r\n    }\r\n}\r\n\r\nexport const compareRent = function(a1, a2)\r\n{\r\n    if (a1.rentDate > a2.rentDate)\r\n        return true;\r\n    else if (a1.rentDate < a2.rentDate)\r\n        return false;\r\n    return a1.title > a2.title;\r\n}\r\n\r\nexport const toUtf8 = function(text) {\r\n    return unescape(encodeURIComponent(text));\r\n};\r\n\r\nexport const fromUtf8 = function(text) {\r\n    return decodeURIComponent(escape(text));\r\n};\r\n\r\nexport const loadingId = \"custom-loading-id\";\r\nexport const loggingId = \"custom-logging-id\";\r\n","import gql from \"graphql-tag\";\n\nexport const BOOK_QUERY = gql`\n    query AllBook{\n        books (sortBy: TITLE_ASC, limit:20000) {\n            _id\n            author\n            title\n            claim_num\n            num\n            series\n            category\n            claim\n            publisher\n            seqnum\n            registration_date\n            isbn\n        }\n    }\n`;\n\nexport const RENT_QUERY = gql`\n    query AllRent{\n        rents (limit:20000) {\n            _id\n            book_id\n            user_id\n            rent_date\n            return_date\n            state\n        }\n    }\n`;\n\nexport const USERS_QUERY = gql`\n    query AllUser {\n        users (limit: 20000) {\n            _id\n            name\n            state\n            level\n        }\n    }`;\n\nexport const USER_QUERY = gql`\n    query FindUser($_id: String!){\n        user (query: {_id:$_id}) {\n            _id\n            name\n            state\n            level\n            encrypted_email\n            encrypted_phone\n        }\n    }`;\n\nexport const HISTORY_QUERY = gql`\n    query findLogs($user_id: String!){\n        rentLogs (limit: 20000, query: {user_id: $user_id}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_date\n            user_id\n        }\n    }`;\n\nexport const HISTORY_PERIOD_QUERY = gql`\n    query findLogs ($fromTime: String!, $toTime: String!) {\n        rentLogs(limit: 20000, query: {AND: [{timestamp_gte: $fromTime}, {timestamp_lt: $toTime}]}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_date\n            user_id\n        }\n    }`;\n\nexport const NOTICE_QUERY = gql`\n    query GetNotices {\n        notices (sortBy: _ID_DESC, limit:20000) {\n            _id\n            date\n            title\n        }\n    }`;\n\nexport const CONTENT_QUERY = gql`\n    query GetContent ($_id: String!) {\n        notice (query: {_id: $_id}) {\n            _id\n            date\n            title\n            content\n        }\n    }`;\n\nexport const SERVER_QUERY = gql`\n    query GetServerInfo {\n        serverInfo {\n            _id\n            globalIp\n            localIp\n            port\n        }\n    }`;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { SEARCH_PER_SCREEN } from \"../Util\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport {NOTICE_QUERY, CONTENT_QUERY} from \"../api/query.js\";\r\n\r\nfunction Notice(props) {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(-1);\r\n    const { loading: noticeLoading, data: noticeData, error: noticeError } = useQuery(NOTICE_QUERY);\r\n    const [loadSelected, { loading: selectedLoading, data: selectedData, error: selectedError}] = useLazyQuery(CONTENT_QUERY,\r\n            {\"variables\": {\"_id\": selectedId}});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Notice\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Notice\");\r\n//            console.log(noticeData);\r\n//            console.log(noticeError);\r\n//            console.log(noticeLoading);\r\n            if (noticeData)\r\n            {\r\n                setSearchResults(noticeData.notices);\r\n            }\r\n        }, [noticeData, noticeError, noticeLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Content\");\r\n//            console.log(selectedData);\r\n//            console.log(selectedError);\r\n//            console.log(selectedLoading);\r\n            if (selectedData)\r\n            {\r\n//                setSearchResults(selectedData.content);\r\n            }\r\n        }, [selectedData, selectedError, selectedLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n            console.log(\"Page num \" + pageNum.toString() + \" \");\r\n            console.log(length);\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n//           console.log(displayedCodes);\r\n        }, [displayedCodes]\r\n    );\r\n\r\n    const selectEntry = (id) => {\r\n        console.log(\"selected \" + id.toString());\r\n        if (selectedId === id)\r\n        {\r\n            setSelectedId(-1);\r\n        }\r\n        else\r\n        {\r\n            setSelectedId(id);\r\n        }\r\n        loadSelected();\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n//        console.log(result);\r\n        return (\r\n                <tr className=\"\" key={result._id}>\r\n                    <td className=\"\"> {result.date} </td>\r\n                    <td className=\"noticeEntry\" colSpan=\"2\" onClick={() => selectEntry(result._id)}> {result.title}</td>\r\n                </tr>\r\n        );\r\n    }\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (searchResults.length > (pageNum + 1) * SEARCH_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div id=\"notice\">\r\n                <div id=\"title\">\r\n                    <h2>\r\n                        {props.text.notice}\r\n                    </h2>\r\n                </div>\r\n                {selectedId > 0 && selectedData &&\r\n                <div id=\"noticeContent\">\r\n                    <table className=\"content\"><tbody>\r\n                           {showEntry(selectedData.notice)}\r\n                        <tr>\r\n                            <td className=\"content\" colSpan=\"3\">\r\n                                {selectedData.notice.content}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                </div>\r\n                }\r\n                <div id=\"noticeList\">\r\n                    <table><tbody>\r\n                       {displayedCodes.length > 0 && displayedCodes.map((result) => showEntry(result))}\r\n                    </tbody></table>\r\n                </div>\r\n                {searchResults.length > SEARCH_PER_SCREEN && (\r\n                    <div id=\"pageControl\">\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={movePrev}/>\r\n                        </div>\r\n                        <div className=\"pageNum\" id=\"pageNum\">\r\n                            {pageNum+1}\r\n                        </div>\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateNextIcon fontSize=\"large\" sx={{color: (searchResults.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={moveNext}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default Notice;\r\n","import { useEffect, useState } from \"react\";\nimport { SEARCH_PER_SCREEN } from \"./Util\";\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\n\nfunction doNothing() {\n    console.log(\"Do nothing...\");\n}\n\nvar showCallback = doNothing;\nfunction ListView(props) {\n        const [itemList, setItemList] = useState([]);\n//        const [showCallback, setShowCallback] = useState(doNothing);\n        const [pageNum, setPageNum] = useState(0);\n        const [displayList, setDisplayList] = useState([]);\n\n    useEffect(function () {\n        console.log(\"Init List View\");\n    }, []);\n\n    useEffect(function () {\n//        console.log(\"Set Item List\");\n        setItemList(props.list);\n    }, [props.list]);\n\n    useEffect(function () {\n        setPageNum(0);\n    }, [props.keyValue]);\n\n    useEffect(function () {\n        if (props.showCallback)\n        {\n//            console.log(\"Set show callback\");\n //           setShowCallback(props.showCallback);\n            showCallback = props.showCallback;\n        }\n    }, [props.showCallback]);\n\n    useEffect(function () {\n        const length = itemList.length;\n //       console.log(\"Page num \" + pageNum.toString());\n        if (length > SEARCH_PER_SCREEN)\n        {\n            const startIdx = pageNum * SEARCH_PER_SCREEN;\n            const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\n            setDisplayList(itemList.slice(startIdx,startIdx+count));\n        }\n        else\n        {\n            setDisplayList(itemList)\n        }\n    }, [itemList, pageNum]);\n\n    function movePrev() {\n        console.log(\"Prev\");\n        if (pageNum > 0)\n        {\n            setPageNum(pageNum - 1);\n        }\n    }\n\n    function moveNext() {\n        console.log(\"Next\");\n        if (itemList.length > (pageNum + 1) * SEARCH_PER_SCREEN)\n        {\n            setPageNum(pageNum + 1);\n        }\n    }\n\n    return (\n        <div id=\"listView\">\n            {showCallback(displayList, props.detail)}\n            {itemList && itemList.length > SEARCH_PER_SCREEN && (\n                <div id=\"pageControl\">\n                    <div className=\"page\" id = \"page\">\n                        <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={() => {movePrev();} }/>\n                    </div>\n                    <div className=\"pageNum\" id=\"pageNum\">\n                        {pageNum+1}\n                    </div>\n                    <div className=\"page\" id = \"page\">\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: (itemList.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={() => {moveNext();} }/>\n                    </div>\n                </div>)\n            }\n        </div>\n    );\n}\nexport default ListView;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { MAX_SEARCH_ENTRY, getBookState, toUtf8 } from \"../Util\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ListView from \"../ListView\";\r\nimport Calendar from \"react-calendar\";\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nlet initialized = false;\r\n\r\nfunction Search(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(inputText, 300);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n\r\n    const [bookList, setBookList] = useState([]);\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    const [bookState, setBookState] = useState(0);\r\n    const bookStateRef = useRef(0);\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const needConfirmRef = useRef(false);\r\n\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n\r\n    const { id } = useParams();\r\n\r\n    const [advancedSearch, setAdvancedSearch] = useState(false);\r\n\r\n    const [author, setAuthor] = useState(\"\");\r\n    const [fromId, setFromId] = useState(\"\");\r\n    const [toId, setToId] = useState(\"\");\r\n    const [fromDate, setFromDate] = useState(\"\");\r\n    const [toDate, setToDate] = useState(\"\");\r\n\r\n    const [stateFilter, setStateFilter] = useState(0);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n            console.log(\"BOOK ID: \" + id);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setInputText(id);\r\n            }\r\n            else\r\n            {\r\n                setInputText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findBooks(text) {\r\n                let results = [];\r\n\r\n                if (props.doc.serverAvailable)\r\n                {\r\n                    console.log(toUtf8(text));\r\n                    console.log(btoa(toUtf8(text)));\r\n                    const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                        props.doc.serverInfo.port + \"/book\";\r\n                    const obj = {\"params\": {\"book\": btoa(toUtf8(text)), \"match\":false}};\r\n                    console.log(\"=======================\");\r\n                    console.log(\"Request book list\");\r\n                    console.log(obj);\r\n                    const response = await axios.get(url, obj);\r\n                    console.log(response)\r\n                    if (!(\"books\" in response.data.return))\r\n                        return results;\r\n                    const books = response.data.return.books;\r\n                    for (let i = 0 ; i < books.length ; i++)\r\n                    {\r\n                        const book = books[i];\r\n                        const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                        const state = book._STATE;\r\n                        let retDate = \"\";\r\n                        if (state === 1 || state === 3 || state === \"1\" || state === \"3\")\r\n                        {\r\n                            retDate = props.text.returnDate + \" \" + book._RETURN;\r\n                        }\r\n                        let resultObject = {\r\n                            index: i,\r\n                            text: resultString,\r\n                            name: book.BOOKNAME,\r\n                            code: book.BARCODE,\r\n                            rent: getBookState(props.text, book._STATE.toString()),\r\n                            retDate: retDate,\r\n                            regDate: book.REG_DATE,\r\n                            author: book.AUTHOR,\r\n                            totalName: book.TOTAL_NAME,\r\n                            claim_num: book.CLAMENUM,\r\n                            publish: book.PUBLISH,\r\n                            claim: book.CLAIM,\r\n                            state: book._STATE,\r\n                            isbn: book.ISBN\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    results = findBookLocally(bookList);\r\n                }\r\n                results.sort(function(a,b) { return a['text'] > b['text']; });\r\n                return results;\r\n            }\r\n            async function query() {\r\n                console.log(\"Refresh\");\r\n                if (advancedSearch) {\r\n                    return;\r\n                }\r\n                if (searchQuery) {\r\n                    let sr = await findBooks(searchQuery);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        selectedRef.current = sr[0].code;\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, bookList, rentList, props, queryRequest, advancedSearch]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        initialized = true;\r\n\r\n        let rl = [];\r\n        let rm = {};\r\n        const rented = props.doc.rent;\r\n        for (let i = 0 ; i < rented.length; i++)\r\n        {\r\n           rl.push({code:rented[i].book_id, retDate:rented[i].return_date, state:rented[i].state});\r\n           rm[rented[i].book_id] = rented[i].state;\r\n        }\r\n        setRentList(rl);\r\n\r\n        let bl = [];\r\n        const books = props.doc.book\r\n        var lastKey;\r\n        for (const key in books)\r\n        {\r\n           const book = books[key];\r\n           const state = (key in rm) ? rm[key] : 0;\r\n           bl.push({code: book._id, name: book.title, state: state, num: book.num, author: book.author, claim: book.claim,\r\n                    regDate: book.registration_date,\r\n                    claim_num: book.claim_num, totalName: book.series, category: book.publisher, publish: book.publisher, isbn: book.isbn});\r\n            lastKey = key;\r\n        }\r\n        console.log(books[lastKey])\r\n        console.log(\"Load\");\r\n        console.log(books.length);\r\n        setBookList(bl);\r\n    }\r\n\r\n    const selectId = async (code) => {\r\n        console.log(\"Prev \" + selectedRef.current);\r\n        if (selectedRef.current === -1 || selectedRef.current !== code)\r\n        {\r\n            console.log(\"Select \" + code);\r\n            setSelectedId(code);\r\n            selectedRef.current = code;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + code);\r\n            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n        }\r\n    }\r\n\r\n    function setState(state)\r\n    {\r\n        console.log(\"Set state \" + state.toString());\r\n        needConfirmRef.current = true;\r\n        setNeedConfirm(true);\r\n        setBookState(state);\r\n        bookStateRef.current = state;\r\n        console.log(selectedId.toString() + needConfirmRef.current);\r\n    }\r\n\r\n    function setSearchState(state)\r\n    {\r\n        const stateStr = state.toString()\r\n        const value = document.getElementById(stateStr).checked;\r\n        console.log(\"Set Search state \" + stateStr + \" Value: \" + value);\r\n        if (stateStr === \"1023\")\r\n        {\r\n            document.getElementById(\"1023\").checked = value;\r\n            document.getElementById(\"0\").checked = value;\r\n            document.getElementById(\"1\").checked = value;\r\n            document.getElementById(\"3\").checked = value;\r\n            document.getElementById(\"4\").checked = value;\r\n            document.getElementById(\"5\").checked = value;\r\n            document.getElementById(\"6\").checked = value;\r\n            document.getElementById(\"7\").checked = value;\r\n            document.getElementById(\"8\").checked = value;\r\n        }\r\n        else\r\n        {\r\n            document.getElementById(stateStr).checked = value;\r\n        }\r\n\r\n        var filter = 0;\r\n        for (var i = 0 ; i < 9 ; i++)\r\n        {\r\n            const idx = i.toString();\r\n            const element = document.getElementById(idx);\r\n            if (element)\r\n                filter |= (element.checked) ? (1 << i) : 0;\r\n        }\r\n        setStateFilter(filter);\r\n        console.log(\"Filter: \" + filter.toString());\r\n    }\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n\r\n        const ipAddr = props.doc.serverInfo.localIp;\r\n        const portNum = props.doc.serverInfo.port;\r\n        if (ipAddr.length === 0 || portNum <= 0)\r\n            return;\r\n\r\n        const url = \"https://\" + ipAddr + \":\" +\r\n            portNum + \"/book\";\r\n        var obj = {};\r\n        obj[\"book\"] = selectedRef.current;\r\n        obj[\"state\"] = bookStateRef.current;\r\n        console.log(\"=======================\");\r\n        console.log(\"Change book state\");\r\n        console.log(obj);\r\n        await axios.post(url, obj).then( response => {\r\n            console.log(response);\r\n        });\r\n\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n        const hidden = (result.code !== selectedRef.current);\r\n        const entryId = (hidden) ? \"searchResult\" : \"selectedSearchResult\";\r\n        const flags = [false, false, false, false, false, false, false, false, false, false]\r\n        flags[result.state] = true;\r\n        if (result.state === 1 || result.state === 2 || result.state === 3)\r\n            flags[0] = true;\r\n        if (!hidden)\r\n            console.log(flags)\r\n        return (\r\n            <div key={result.code}>\r\n            <div id={entryId} onClick={async () => await selectId(result.code)}>\r\n                <table><tbody>\r\n                    <tr className=\"searchTr\">\r\n                        <td className=\"searchTitle\"> {result.text}</td>\r\n                        <td className=\"searchRent\"> {result.rent} </td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {!hidden &&\r\n            <div>\r\n                <table><tbody>\r\n                <tr>\r\n                    <td>{result.author} </td>\r\n                    <td colSpan=\"2\" rowSpan=\"2\">{result.totalName} <b>{result.name}</b> { result.claim_num} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.code} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.publish}</td>\r\n                    <td colSpan={result.retDate.length > 0 ? \"1\":\"2\"}>{result.claim} </td>\r\n                    {result.retDate.length > 0 && <td>{result.retDate}</td> }\r\n                </tr>\r\n                </tbody></table>\r\n                <div hidden={!props.doc.serverAvailable || !props.doc.admin}>\r\n                    <button className=\"bookStates\" id = \"0\" disabled={flags[0]} onClick={() => setState(0)}> {props.text.available} </button>\r\n                    <button className=\"bookStates\" id = \"4\" disabled={flags[4]} onClick={() => setState(4)}> {props.text.lost} </button>\r\n                    <button className=\"bookStates\" id = \"5\" disabled={flags[5]} onClick={() => setState(5)}> {props.text.damaged} </button>\r\n                    <button className=\"bookStates\" id = \"6\" disabled={flags[6]} onClick={() => setState(6)}> {props.text.given} </button>\r\n                    <button className=\"bookStates\" id = \"7\" disabled={flags[7]} onClick={() => setState(7)}> {props.text.notAvailable} </button>\r\n                    <button className=\"bookStates\" id = \"8\" disabled={flags[8]} onClick={() => setState(8)}> {props.text.deleted} </button>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirmRef.current}>\r\n                    <div id=\"bookName\"> {getBookState(props.text, bookStateRef.current)} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n            </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function showEntries(results)\r\n    {\r\n        console.log(\"Redraw \" + needConfirmRef.current);\r\n        return results.map((result) => showEntry(result))\r\n    }\r\n\r\n    function setPeriod(from, text)\r\n    {\r\n        if (from)\r\n            setFromId(text)\r\n        else\r\n            setToId(text)\r\n    }\r\n\r\n    function findBookLocally(bookList)\r\n    {\r\n        let results = [];\r\n        console.log(advancedSearch);\r\n        for (let i = 0 ; i < bookList.length ; i++) {\r\n            const row = bookList[i];\r\n            if (results.length >= MAX_SEARCH_ENTRY) break;\r\n\r\n            const text = inputText;\r\n            if (text.length > 0 && row.name && !row.name.toString().includes(text) &&\r\n                row.code !== text && row.isbn !== text)\r\n                continue\r\n            if (advancedSearch)\r\n            {\r\n                if (author.length > 0 && row.author && !row.author.toString().includes(author))\r\n                    continue;\r\n\r\n                if (fromId.length > 0 && row.code < fromId)\r\n                    continue;\r\n\r\n                if (toId.length > 0 && row.code > toId)\r\n                    continue;\r\n\r\n                const regDate = row.regDate;\r\n\r\n                if (regDate < fromDate || regDate > toDate)\r\n                    continue;\r\n                console.log(row);\r\n                console.log(regDate);\r\n                console.log(regDate < fromDate);\r\n                console.log(regDate > toDate);\r\n\r\n                if (!(1<<(row.state) & stateFilter))\r\n                    continue;\r\n            }\r\n            else if (text.length == 0)\r\n                continue;\r\n\r\n            let resultString = `${row.name} ${row.claim_num}`;\r\n            let retDate = \"\";\r\n            let state = \"0\";\r\n            for (const entry of rentList)\r\n            {\r\n                if (entry.code === row.code)\r\n                {\r\n                    state = entry.state;\r\n                    if (state === \"1\" || state === \"3\")\r\n                    {\r\n                        retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            let resultObject = {\r\n                index: i,\r\n                text: resultString,\r\n                name: row.name,\r\n                code: row.code.toString(),\r\n                rent: getBookState(props.text, state),\r\n                retDate: retDate,\r\n                regDate: row.regDate,\r\n                author: row.author,\r\n                totalName: row.totalName,\r\n                claim_num: row.claim_num,\r\n                publish: row.publish,\r\n                claim: row.claim,\r\n                state: parseInt(state),\r\n                isbn: row.isbn\r\n            };\r\n            results.push(resultObject);\r\n//            console.log(resultObject);\r\n        }\r\n        console.log(results.length);\r\n\r\n        return results;\r\n    }\r\n\r\n    function onChangeDate(date)\r\n    {\r\n        console.log(date);\r\n        const date1 = date[0]\r\n        const date2 = date[1]\r\n        const y1 = date1.getFullYear().toString();\r\n        const m1 = (date1.getMonth() + 1).toString().padStart(2, \"0\")\r\n        const d1 = date1.getDate().toString().padStart(2, \"0\");\r\n        const dateStr1 = y1 + \"-\" + m1 + \"-\" + d1;\r\n        console.log(dateStr1);\r\n        setFromDate(dateStr1);\r\n\r\n        const y2 = date2.getFullYear().toString();\r\n        const m2 = (date2.getMonth() + 1).toString().padStart(2, \"0\")\r\n        const d2 = date2.getDate().toString().padStart(2, \"0\");\r\n        const dateStr2 = y2 + \"-\" + m2 + \"-\" + d2;\r\n        console.log(dateStr2);\r\n        setToDate(dateStr2);\r\n    }\r\n\r\n    function searchEntry()\r\n    {\r\n        console.log(\"Search\");\r\n        console.log(fromId);\r\n        console.log(toId);\r\n        console.log(fromDate);\r\n        console.log(toDate);\r\n        let results = findBookLocally(bookList);\r\n        results.sort(function(a,b) { return a['code'] > b['code']; });\r\n\r\n        let sr = results;\r\n        if (sr.length > 0)\r\n            setSearchResults(sr);\r\n        else\r\n            setSearchResults([]);\r\n        if (sr.length === 1)\r\n            selectedRef.current = sr[0].code;\r\n    }\r\n\r\n    function toggleAdvancedSearch()\r\n    {\r\n        setAdvancedSearch(!advancedSearch);\r\n    }\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <div id=\"title\">\r\n                <h2> {props.text.bookSearch} </h2>\r\n            </div>\r\n            <div id=\"searchContents\">\r\n                <input id=\"searchInput\"\r\n                    placeholder={props.text.searchBook}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n                    <div hidden={!props.doc.admin}>\r\n                        <input type=\"checkbox\" id=\"advancedSearch\" checked={advancedSearch} onChange={() => toggleAdvancedSearch()}/>\r\n                        <label>\r\n                            {props.text.advSearch}\r\n                        </label>\r\n                    </div>\r\n                <div hidden={!advancedSearch}>\r\n                    <div>\r\n                    <label> {props.text.author} </label>\r\n                    <input type=\"text\" id=\"author\" onChange={(event) => {setAuthor(event.target.value)}} />\r\n                    </div>\r\n                    <div>\r\n                    <label> {props.text.bookCode} </label>\r\n                    <input type=\"text\" id=\"fromPeriod\" onChange={(event) => {setPeriod(true, event.target.value);}} />\r\n                    <label> ~  </label>\r\n                    <input type=\"text\" id=\"toPeriod\" onChange={(event) => {setPeriod(false, event.target.value);}} />\r\n                    </div>\r\n                    <div>\r\n                    <label> {props.text.registeredDate} </label>\r\n                    <Calendar onChange={onChangeDate} selectRange=\"true\"/>\r\n                    </div>\r\n                    <div>\r\n                    <table><tbody>\r\n                        <tr key=\"stateName\" className=\"bookData\">\r\n                            <td className =\"stateName\"> {props.text.all} </td>\r\n                            <td className =\"stateName\"> {props.text.available} </td>\r\n                            <td className =\"stateName\"> {props.text.checkedOut} </td>\r\n                            <td className =\"stateName\"> {props.text.overDue} </td>\r\n                            <td className =\"stateName\"> {props.text.lost} </td>\r\n                            <td className =\"stateName\"> {props.text.damaged} </td>\r\n                            <td className =\"stateName\"> {props.text.given} </td>\r\n                            <td className =\"stateName\"> {props.text.notAvailable} </td>\r\n                            <td className =\"stateName\"> {props.text.deleted} </td>\r\n                        </tr>\r\n                        <tr key=\"stateButton\" className=\"bookData\">\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"1023\" onChange={() => setSearchState(1023)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"0\" onChange={() => setSearchState(0)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"1\" onChange={() => setSearchState(1)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"3\" onChange={() => setSearchState(3)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"4\" onChange={() => setSearchState(4)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"5\" onChange={() => setSearchState(5)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"6\" onChange={() => setSearchState(6)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"7\" onChange={() => setSearchState(7)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"8\" onChange={() => setSearchState(8)}/>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                    </div>\r\n                    <div>\r\n                    <button id=\"searchEntry\" onClick={searchEntry}> {props.text.search} </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ListView keyValue={searchQuery} list={searchResults} detail={selectedId + needConfirm} showCallback={(entries, detail) => { return showEntries(entries); }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, compareRent } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USER_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\n//import {USER_QUERY, HISTORY_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction CheckOutStatus(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [expireDate, setExpireDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOutStatus initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n\r\n            if (\"autoLogin\" in props.context.cookie)\r\n            {\r\n                const autoLogin = (props.context.cookie.autoLogin === \"true\") ? true : false;\r\n                setAutoLogin(autoLogin);\r\n            }\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            setExpireDate(date.toGMTString());\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.doc.logged]\r\n    );\r\n\r\n    useEffect(() => {\r\n            async function func() {\r\n                console.log(\"User data updated \");\r\n                await compare();\r\n            }\r\n            func();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n            let hist = [];\r\n            const rentLogs = historyData.rentLogs;\r\n//            const rentLogs = historyData.rentLog_tests;\r\n            for (let i = 0 ; i < rentLogs.length ; i++)\r\n            {\r\n                const entry = rentLogs[i];\r\n                if (entry.book_state !== \"1\" && entry.book_state !== 1)\r\n                    continue;\r\n                if (! (\"return_date\" in entry) || ! entry.return_date)\r\n                    continue;\r\n                console.log(entry);\r\n                const id = entry.book_id;\r\n                const title = (id in props.doc.book) ? props.doc.book[id].title : \"N/A\";\r\n                const date = entry.timestamp.split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                const retDate = entry.return_date;\r\n                const claim = (id in props.doc.book) ? props.doc.book[id].claim : \"N/A\";\r\n                hist.push({\"id\": id, \"title\": title, \"rentDate\": date, \"retDate\": retDate, \"claim\": claim});\r\n\r\n            }\r\n            hist.sort(compareRent);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.logged)\r\n        {\r\n            setState(State.LoggedIn);\r\n            const userId = props.doc.userInfo['_id'];\r\n            setUserId(userId);\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            await loadHistory();\r\n        }\r\n        else\r\n        {\r\n            setState(State.LoggedOut);\r\n            setUserId(\"\");\r\n            setPasswordText(\"\");\r\n        }\r\n\r\n        console.log(\"Set title \" + props.doc.logged)\r\n        if (props.doc.logged)\r\n        {\r\n            if (props.doc.adminMode)\r\n                setTitle(props.text.userSearch);\r\n            else\r\n                setTitle(props.text.checkOut);\r\n        }\r\n        else\r\n        {\r\n            setTitle(props.text.logIn);\r\n        }\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const claim = rent[\"claim\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const toggleAutoLogin = () => {\r\n        console.log(\"Toggle autoLogin\");\r\n        const cookieString = \"autoLogin=\" + (autoLogin ? \"false\":\"true\") + \"; expires=\" + expireDate + \";\";\r\n//        console.log(cookieString);\r\n        document.cookie = cookieString;\r\n        setAutoLogin(!autoLogin);\r\n    }\r\n\r\n    const showEntries = (result, retText) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{retText}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        setState(State.LoggingIn);\r\n        setUserId(userText.toUpperCase());\r\n        await loadUser();\r\n        await loadHistory();\r\n        console.log(\"Log In\");\r\n        await compare();\r\n    }\r\n\r\n    const compare = async () => {\r\n        if (!userData || state === State.LoggedOut)\r\n            return;\r\n\r\n        console.log(toast.isActive(loggingId));\r\n        const prop = toastProp;\r\n\r\n        let text;\r\n        if (props.context.checkLogIn(userData.user, passwordText))\r\n        {\r\n            props.doc.logIn(userData.user);\r\n\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            setState(State.LoggedIn);\r\n\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            document.cookie = \"user_id=\" + userId + \"; expires=\" + expireDate + \";\";\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.render = text;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = loggingId;\r\n        if (toast.isActive(loggingId))\r\n        {\r\n            console.log(\"update toast\");\r\n            toast.update(loggingId, prop);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"New toast\");\r\n            toast.info(text, prop);\r\n        }\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {title}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!(state !== State.LoggedIn)}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <input type=\"password\" id=\"searchPassword\"\r\n                    placeholder={props.text.pwHolder}\r\n                    value={passwordText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setPasswordText(event.target.value);\r\n                    }} />\r\n                <div id=\"autoLogin\">\r\n                    <input type=\"checkbox\" id=\"autoLoginButton\" checked={autoLogin} onChange={() => toggleAutoLogin()}/>\r\n                    <label>\r\n                            {props.text.autoLogin}\r\n                    </label>\r\n                </div>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={!(state === State.LoggedIn)}>\r\n                <div>\r\n                    { showEntries(searchResults, props.text.dueDate) }\r\n                </div>\r\n\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <ListView list={history} showCallback={(entries) => { return showEntries(entries, props.text.returnDate); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOutStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, loadingId, getUserState } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport ListView from \"../ListView\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2,\r\n    LoggingOut: 3\r\n}\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 300);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [userData, setUserData] = useState({});\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n    const [rented, setRented] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOut initialize\");\r\n            const prefixList = document.getElementsByName(\"idPrefix\");\r\n            const prefix = barcode.substring(0, 2);\r\n            for (var i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                const id = prefixList[i].id\r\n                if (\"AB\" === id)\r\n                    prefixList[i].checked = true\r\n                else\r\n                    prefixList[i].checked = false\r\n\r\n            }\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n//            console.log(props.doc.serverInfo);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            if (props.doc.admin)\r\n                return;\r\n            import(\"./PageServer.css\");\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                axios.get(url).then( response => {\r\n                        const code = response.data.scan;\r\n                        if (code) {\r\n                            console.log(code)\r\n                            setBarcode(code)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            console.log(toast.isActive(loggingId));\r\n            const prop = toastProp;\r\n\r\n            let text;\r\n            let notify = false;\r\n            if (\"USER_CODE\" in userData && state !== State.LoggedIn)\r\n            {\r\n                setState(State.LoggedIn);\r\n\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                text = props.text.logInSucceed;\r\n                notify = true;\r\n            }\r\n            else if (!(\"USER_CODE\" in userData))\r\n            {\r\n                setState(State.LoggedOut);\r\n\r\n                if (state === State.LoggingIn)\r\n                {\r\n                    prop.type = toast.TYPE.ERROR;\r\n                    text = props.text.logInFail;\r\n                    notify = true;\r\n                }\r\n            }\r\n\r\n            if (notify)\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": prop.type})\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 0)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n                setBarcode(\"\")\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            console.log(\"Notification \" + notifyRequest.text)\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//            if (\"id\" in notifyRequest)\r\n//                id = notifyRequest.id\r\n\r\n//            prop.toastId = id\r\n//            if (toast.isActive(id))\r\n//                toast.update(id, notifyRequest.text, prop);\r\n//            else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (state !== State.LoggedIn)\r\n            {\r\n                const prefixList = document.getElementsByName(\"idPrefix\");\r\n                var prefix = \"\"\r\n                for (var i = 0 ; i < prefixList.length ; i++)\r\n                {\r\n                    if (prefixList[i].checked)\r\n                        prefix = prefixList[i].id\r\n                        console.log(\"Pressed [\" + i.toString() + \" \" + prefix + \"]\")\r\n\r\n                }\r\n                let barcode;\r\n                if (userText[0] === \"A\" || userText[0] == \"a\")\r\n                    barcode = userText;\r\n                else\r\n                    barcode = prefix + userText;\r\n                setBarcode(barcode);\r\n            }\r\n        }, [state, userText]\r\n    );\r\n\r\n    const updateUser = async (userText) => {\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/user?user=\" + userText;\r\n        const obj = {\"params\": {\"user\": userText, \"data\":\"nothing\"}};\r\n        console.log(obj);\r\n        const response = await axios.get(url, btoa(JSON.stringify(obj)));\r\n        const user = response.data.return;\r\n\r\n        setUserData(user);\r\n        console.log(user);\r\n        setUserId(user.USER_CODE);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        console.log(\"LOGIN\");\r\n        console.log(barcode);\r\n        if (barcode.length === 0)\r\n            return;\r\n        setState(State.LoggingIn);\r\n        const id = barcode.toUpperCase();\r\n        updateUser(id);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Finish\")\r\n        setUserData({});\r\n        setUserText(\"\");\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n        setRented([])\r\n        document.getElementById('barcodeScan').value= null;\r\n        navigate(\"/\")\r\n    }\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            console.log(url)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.loading,\r\n                              \"type\": toast.TYPE.INFO})\r\n            getBase64(file).then(\r\n                img => {\r\n                    axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(response);\r\n                        console.log(book);\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.succeededToOpen,\r\n                                              \"type\": toast.TYPE.SUCCESS});\r\n                        }\r\n                        else\r\n                        {\r\n                            console.log(\"Failed\");\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR});\r\n                            setScannedBook({});\r\n                            setBarcode(\"\")\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                var bookId;\r\n                if (props.doc.admin)\r\n                    bookId = bookText;\r\n                else\r\n                    bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            console.log(book.books)\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery, props.doc]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Set barcode: \" + barcode);\r\n            if (barcode.length === 0)\r\n                return;\r\n            if (state !== State.LoggedIn)\r\n            {\r\n                if (barcode.search(\"AA\") === 0 || barcode.search(\"AB\") === 0 )\r\n                {\r\n                    const prefixList = document.getElementsByName(\"idPrefix\");\r\n                    const prefix = barcode.substring(0, 2);\r\n                    for (var i = 0 ; i < prefixList.length ; i++)\r\n                    {\r\n                        const id = prefixList[i].id\r\n                        if (prefix === id)\r\n                            prefixList[i].checked = true\r\n                        else\r\n                            prefixList[i].checked = false\r\n\r\n                    }\r\n                    setUserText(barcode.substring(2));\r\n                }\r\n            }\r\n            else if (barcode.search(\"HK\") === 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [barcode, props.doc, state]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n        document.getElementById('barcodeScan').value= null;\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/checkOut\"\r\n        axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE,\r\n                user: userId\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return\r\n            console.log(\"Rent confirmed\");\r\n            console.log(ret)\r\n\r\n            if (ret === \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.rentSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n                rented.push({\"id\": scannedBook.BARCODE, \"name\": scannedBook.BOOKNAME})\r\n                console.log(rented)\r\n                setRented(rented)\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            setScannedBook({});\r\n            setBarcode(\"\")\r\n            updateUser(userId);\r\n        });\r\n    }\r\n\r\n    function showEntry(index, rent)\r\n    {\r\n    /*\r\n        return (<React.Fragment key={index + \"Fragment\"}>\r\n                    <tr key={index}>\r\n                        <td className=\"bookCell\"> {rent.id} </td>\r\n                        <td colSpan=\"3\" className=\"bookCell\"> {rent.name} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    */\r\n        return (<div id=\"bookEntry\" key={rent.id}>\r\n                    <div id=\"bookItem\"> {rent.id} </div>\r\n                    <div id=\"bookItem\"> {rent.name} </div>\r\n                </div>);\r\n\r\n    }\r\n\r\n    function showBook(books)\r\n    {\r\n        return (<div id=\"bookList\">\r\n                    <div id=\"dueDate\">\r\n                    {props.text.dueDate} : {props.doc.dueDate}\r\n                    </div>\r\n                    {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                </div>);\r\n    }\r\n    /*\r\n                    <table><tbody>\r\n                        {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                    </tbody></table>\r\n    */\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        document.getElementById('barcodeScan').value= null;\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n//            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn ? true : false }>\r\n//            <div id=\"checkOutResult\" hidden={true}>\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.checkOut}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={state === State.LoggedIn}>\r\n                <input type=\"radio\" id = \"AA\" name=\"idPrefix\"/>\r\n                <label htmlFor=\"AA\" className=\"idPrefix\" name=\"idPrefix\"> AA </label>\r\n                <input type=\"radio\" id = \"AB\" name=\"idPrefix\"/>\r\n                <label htmlFor=\"AB\" className=\"idPrefix\" name=\"idPrefix\"> AB </label>\r\n                <input type=\"text\" id=\"searchInput\" pattern=\"[0-9]*\" inputMode=\"numeric\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn}>\r\n                {userData.USER_CODE && (\r\n                    <div id=\"userInfo\">\r\n                        <div id=\"userItem\">\r\n                            {userData.USER_CODE + \" : \" + userData.USER_NAME + props.text.nameSuffix}\r\n                        </div>\r\n                        <div id=\"userItem\"> {getUserState(props.text, userData.USER_STATE)} </div>\r\n                        <div id=\"userItem\"> {userData._RENT.length + \" \" + props.text.rentSuffix} </div>\r\n                    </div>\r\n                )}\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                    <label id=\"barcodeScan\" hidden>\r\n                        <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                        <span>\r\n                        <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                        </span>\r\n                    </label>\r\n                    <label id=\"manualInput\">\r\n                        <div id=\"hkPrefix\">\r\n                        {props.text.numberOnly}\r\n                        </div>\r\n                        <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n                            placeholder={props.text.bookHolder}\r\n                            onInput={(event) => {\r\n                                setBookText(event.target.value);\r\n                            }} />\r\n                    </label>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmRent} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\"} </div>\r\n                    <div id=\"bookName\"> {scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                {rented.length > 0 &&\r\n                    <ListView list={rented} showCallback={(entry) => {return showBook(entry)}}/>\r\n                }\r\n            </div>\r\n            <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.finish} </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport ListView from \"../ListView\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Return(props) {\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 300);\r\n//    const [initialized, setInitialized] = useState(false);\r\n//    const [userId, setUserId] = useState(\"\");\r\n//    const [state, setState] = useState(State.LoggedOut);\r\n//    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n//                     { \"variables\": { \"_id\": userId } });\r\n//    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n//                     { \"variables\": { \"user_id\": userId } });\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n    const [returned, setReturned] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            props.doc.setCallback(undefined);\r\n            console.log(\"=======================================\");\r\n            console.log(\"Return initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            if (props.doc.admin)\r\n                return;\r\n            import(\"./PageServer.css\")\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr && ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                axios.get(url).then( response => {\r\n                        const book = response.data.scan;\r\n                        if (book) {\r\n                            console.log(book.search(\"HK\"))\r\n                            if (book.search(\"HK\") === 0) {\r\n                                console.log(barcode + \" -> \" + book)\r\n                                setBarcode(book)\r\n                            }\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n*/\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                var bookId;\r\n                if (props.doc.admin)\r\n                    bookId = bookText;\r\n                else\r\n                    bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery, props.doc]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"B\" + barcode);\r\n            if (barcode.length > 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [barcode, props.doc]\r\n    );\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.loading,\r\n                              \"type\": toast.TYPE.INFO})\r\n            getBase64(file).then(\r\n                img => {\r\n                    axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.succeededToOpen,\r\n                                              \"type\": toast.TYPE.SUCCESS});\r\n                        }\r\n                        else\r\n                        {\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR})\r\n                            setScannedBook({})\r\n                            setBarcode(\"\")\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 1 || scannedBook._STATE === 3)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    console.log(\"Not rented\")\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.NOT_RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                    setBarcode(\"\")\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//           if (\"id\" in notifyRequest)\r\n//               id = notifyRequest.id\r\n\r\n//           prop.toastId = id\r\n //          if (toast.isActive(id))\r\n//               toast.update(id, notifyRequest.text, prop);\r\n//           else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Returned updated\");\r\n            console.log(returned);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            console.log(\"Update return list\");\r\n            const bookId = \"HK\" + bookText;\r\n            console.log(\"Search book1 \" + bookId);\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n            const obj = {\"params\": {\"books\": returned}};\r\n            console.log(obj);\r\n            axios.get(url, obj).then( response => {\r\n//                    const book = response.data.return;\r\n//                    console.log(book)\r\n                }\r\n            );\r\n        },\r\n        [returned]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/return\"\r\n        axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return;\r\n            console.log(ret);\r\n            if (ret === \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.returnSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n                returned.push({\"id\": scannedBook.BARCODE, \"name\": scannedBook.BOOKNAME})\r\n                console.log(returned)\r\n                setReturned(returned)\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            setScannedBook({});\r\n            setBarcode(\"\")\r\n        });\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    function showEntry(index, rent)\r\n    {\r\n        return (<div id=\"bookEntry\" key={rent.id}>\r\n                    <div id=\"bookItem\"> {rent.id} </div>\r\n                    <div id=\"bookItem\"> {rent.name} </div>\r\n                </div>);\r\n    }\r\n\r\n    function showBook(books)\r\n    {\r\n        return (<div id=\"bookList\">\r\n                    {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                </div>);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Finish\")\r\n        navigate(\"/\")\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.return}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                <label id=\"barcodeScan\" hidden>\r\n                    <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                    <span>\r\n                    <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                    </span>\r\n                </label>\r\n                <label id=\"manualInput\">\r\n                    <div id=\"hkPrefix\">\r\n                        {props.text.numberOnly}\r\n                    </div>\r\n                    <input inputMode=\"numeric\" pattern=\"\\d*\" type=\"text\" id=\"searchInput\"\r\n                        placeholder={props.text.bookHolder}\r\n                        onInput={(event) => {\r\n                            setBookText(event.target.value);\r\n                        }} />\r\n                </label>\r\n                </div>\r\n                <div id=\"checkReturn\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmReturn} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\"} </div>\r\n                    <div id=\"bookName\"> {scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                {returned.length > 0 &&\r\n                    <ListView list={returned} showCallback={(entry) => {return showBook(entry)}}/>\r\n                }\r\n            </div>\r\n            <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.finish} </button>\r\n        </div>\r\n    );\r\n}\r\n//                    <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n\r\nexport default Return;\r\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toUtf8 } from \"./Util\";\nimport \"./UserInfo.css\";\n\nfunction UserInfo(props) {\n    const [needConfirm, setNeedConfirm] = useState(false);\n    const [disabled, setDisabled] = useState(true);\n    const [userInfo, setUserInfo] = useState({});\n\n    useEffect(function() {\n        console.log(\"User Info\");\n        console.log(props.info);\n        document.getElementById('userName').value = props.info.USER_NAME ? props.info.USER_NAME : \"\";\n        document.getElementById('phone').value = props.info.PHONE_NUMBER ? props.info.PHONE_NUMBER : \"\";\n        document.getElementById('email').value = props.info.EMAIL ? props.info.EMAIL : \"\";\n        document.getElementById('address').value = props.info.ADDRESS ? props.info.ADDRESS : \"\";\n        document.getElementById('notice_').value = props.info.NOTICE ? props.info.NOTICE : \"\";\n        document.getElementById('user_level').value = props.info.USER_LEVEL;\n        setUserInfo({\"USER_CODE\": props.info.USER_CODE});\n        setDisabled(true);\n\n    }, [props.info]);\n\n    function setProperty(index, value)\n    {\n        console.log(index);\n        console.log(value);\n        var info = userInfo;\n        switch (index)\n        {\n        case 0:\n            info.USER_NAME = value;\n            break;\n        case 1:\n            info.PHONE_NUMBER = value;\n            break;\n        case 2:\n            info.EMAIL = value;\n            break;\n        case 3:\n            info.ADDRESS = value;\n            break;\n        case 4:\n            info.USER_LEVEL = value;\n            break;\n        case 5:\n            info.NOTICE = value;\n            break;\n        default:\n            break;\n        }\n        const length = Object.keys(info).length;\n        console.log(length);\n//        if (length >= 1 && \"USER_LEVEL\" in info && info.USER_LEVEL >= 0 && info.USER_LEVEL <= 2)\n        if (length > 1)\n            setDisabled(false);\n        setUserInfo(info);\n    }\n\n    function confirmAction()\n    {\n        console.log(\"Save modification\");\n        console.log(userInfo);\n        const ipAddr = props.doc.serverInfo.localIp;\n        const portNum = props.doc.serverInfo.port;\n        if (ipAddr.length === 0 || portNum <= 0)\n            return;\n\n        const url = \"https://\" + ipAddr + \":\" +\n            portNum + \"/user\";\n\n        var obj = {};\n        console.log(userInfo)\n        for (const key in userInfo)\n        {\n            obj[key] = btoa(toUtf8(userInfo[key]));\n        }\n        axios.post(url, obj).then( response => {\n            console.log(response);\n            props.refresh(response);\n        });\n        setNeedConfirm(false);\n    }\n\n    function cancelAction()\n    {\n        setNeedConfirm(false);\n    }\n\n    return (\n        <div>\n            <table><tbody>\n                <tr key=\"Name\">\n                    <td> {props.text.name} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"userName\" onChange={(event) => {setProperty(0, event.target.value);}} />\n                    </td>\n                </tr>\n                {\"REG_DATE\" in props.info &&\n                    <tr key=\"Register\">\n                        <td> {props.text.registeredDate} </td>\n                        <td colSpan=\"3\" className=\"data\">\n                            {props.info.REG_DATE}\n                        </td>\n                    </tr>\n                }\n                <tr key=\"Phone\">\n                    <td> {props.text.phone} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"phone\" onChange={(event) => {setProperty(1, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Email\">\n                    <td> {props.text.email} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"email\" onChange={(event) => {setProperty(2, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Address\">\n                    <td> {props.text.address} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"address\" onChange={(event) => {setProperty(3, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Notice\">\n                    <td> {props.text.notice_} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"notice_\" onChange={(event) => {setProperty(5, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Level\">\n                    <td> {props.text.level} </td>\n                    <td colSpan=\"3\" className=\"cell\">\n                        <select name=\"User Level\" id=\"user_level\" className=\"dropdown\" onChange={(event) => {setProperty(4, event.target.value);}}>\n                            <option value=\"0\"> {props.text.kid} </option>\n                            <option value=\"1\"> {props.text.adult} </option>\n                            <option value=\"2\"> {props.text.admin} </option>\n                        </select>\n                    </td>\n                </tr>\n            </tbody></table>\n           <button id=\"modify\" hidden={needConfirm} onClick={async () => setNeedConfirm(true)} disabled={disabled}> {props.text.save} </button>\n            <div id=\"checkModify\" hidden={!needConfirm}>\n                <div id=\"noticeMsg\"> {props.text.confirmSave} </div>\n                <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\n                <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\n            </div>\n        </div>\n    );\n}\nexport default UserInfo;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp, MAX_SEARCH_ENTRY, getUserState, toUtf8 } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate, useParams } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport UserInfo from \"../UserInfo\";\r\nimport axios from \"axios\";\r\n\r\n//var rentList = [];\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(userText, 300);\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n//    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n    const { id } = useParams();\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n            {\r\n                return;\r\n            }\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"UserSearch initialize\");\r\n            console.log(\"User ID: \" + id);\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc(false);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.users;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n\r\n        if (notify)\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Set title \" + props.logged)\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    async function extend(key)\r\n    {\r\n        console.log(\"Extend \" + key);\r\n        const ipAddr = props.doc.serverInfo.localIp;\r\n        const portNum = props.doc.serverInfo.port;\r\n        if (ipAddr.length === 0 || portNum <= 0)\r\n            return;\r\n\r\n        const url = \"https://\" + ipAddr + \":\" +\r\n            portNum + \"/extend\";\r\n        var obj = {};\r\n        obj[\"book\"] = key\r\n\r\n        const ret = await axios.post(url, obj);\r\n        console.log(\"Extended\")\r\n        console.log(ret)\r\n        selectId(selectedRef.current, true);\r\n        if (ret.data.return === \"SUCCESS\")\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.extend, prop);\r\n        }\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const extendCount = rent.extendCount;\r\n        const key = index.toString();\r\n//                        <td colSpan={props.doc.serverAvailable?\"3\":\"2\"} className=\"bookName\">{bookName}</td>\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan={props.doc.serverAvailable?\"2\":\"3\"} className=\"bookName\">{bookName}</td>\r\n                        {props.doc.serverAvailable &&\r\n                            <td className=\"bookName\"><button className=\"extend\" onClick={() => extend(id)}>{props.text.extend + \" (\" + extendCount.toString() + \")\"}</button></td>\r\n                        }\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const selectId = async (id, forceSelect = false) => {\r\n        const rent = await props.doc.getRent(id);\r\n        console.log(rent);\r\n        if (selectedRef.current === -1 || selectedRef.current !== id || forceSelect )\r\n        {\r\n            console.log(\"Select \" + id);\r\n//            setSelectedId(id);\r\n            selectedRef.current = id;\r\n            console.log(\"Set Rent List\");\r\n            console.log(rent)\r\n            setRentList(rent);\r\n//            rentList = rent;\r\n        }\r\n        else if (searchResults.length > 1)\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n//            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n            setRentList([]);\r\n//            rentList = [];\r\n        }\r\n    }\r\n\r\n    const showUser = (user, detail, index) => {\r\n        const key = index.toString();\r\n        return (\r\n                <div key={key}>\r\n                    <table><tbody>\r\n                        <tr key={user.id} className=\"searchTr\" onClick={async ()=> await selectId(user.id)}>\r\n                            <td className=\"bookData\">{user.id}</td>\r\n                            <td className=\"bookData\">{user.name}</td>\r\n                            <td className=\"bookData\">{user.state}</td>\r\n                            <td className=\"bookData\">{user.rent}</td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                        {user.id === selectedRef.current && showEntries(user, detail) }\r\n                </div>\r\n                );\r\n    }\r\n\r\n    const showUsers = (result, detail) => {\r\n        return (<div>\r\n                    {\r\n                        result.map((user, index) => {\r\n                            return showUser(user, detail, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 &&\r\n                        <table><tbody>\r\n                            <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                        </tbody></table>\r\n                    }\r\n                </div>);\r\n    }\r\n\r\n    const showEntries = (user, detail) => {\r\n        console.log(\"Detail\");\r\n        console.log(user);\r\n        return (<>\r\n                    {props.doc.serverAvailable &&\r\n                        <UserInfo text={props.text} doc={props.doc} info={user} refresh={refresh}/>\r\n                    }\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        detail.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        detail.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </>);\r\n    }\r\n    useEffect(\r\n        () => {\r\n            async function findUsers(text) {\r\n                let results = [];\r\n\r\n//                for (let i = 0 ; i < userList.length ; i++) {\r\n                  for (const key in userList) {\r\n                    const row = userList[key];\r\n                    if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                    if ((row.name && row.name.toString().includes(text)) ||\r\n                        (row.id.toLowerCase() === text.toLowerCase()))\r\n                    {\r\n                        results.push(row);\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a.name > b.name; });\r\n                console.log(results);\r\n                return results;\r\n            }\r\n            async function query() {\r\n                const input = userText.trim()\r\n                console.log(\"Query \" + input + \" \" + searchQuery)\r\n                if (input.length > 0 && searchQuery) {\r\n\r\n                    let sr;\r\n                    if (props.doc.serverAvailable)\r\n                    {\r\n                        console.log(\"from CLIB\")\r\n                        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/users\";\r\n                        const obj = {\"params\": {\"user\": btoa(toUtf8(input))}};\r\n                        console.log(obj);\r\n                        const response = await axios.get(url, obj);\r\n                        const users = response.data.return.data;\r\n                        console.log(response.data.return);\r\n                        sr = [];\r\n                        if (users) {\r\n                            for (const entry of response.data.return.data)\r\n                            {\r\n                                console.log(entry);\r\n                                let user = entry;\r\n                                user.id = entry.USER_CODE;\r\n                                user.name = entry.USER_NAME;\r\n                                user.state = getUserState(props.text, entry.USER_STATE);\r\n                                user.rent = entry._RENT.length;\r\n                                sr.push(user);\r\n                            }\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log(\"from DB\")\r\n                        sr = await findUsers(searchQuery);\r\n                    }\r\n\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                       selectId(sr[0].id);\r\n                   else\r\n                       selectId(0);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n       [searchQuery, props, userList, queryRequest, userText]\r\n    );\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.userSearch}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onChange={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <div>\r\n                    <ListView keyValue={searchQuery} list={searchResults} detail={rentList} showCallback={(entries, detail) => { return showUsers(entries, detail); }}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getBookState } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport axios from \"axios\";\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.users;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userList]\r\n    );\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        return a1.rentDate > a2.rentDate;\r\n    }\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.serverAvailable)\r\n        {\r\n            let results = [];\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n            const obj = {\"params\": {\"user\": \"*\", \"match\":false}};\r\n//            console.log(obj);\r\n            const response = await axios.get(url, obj);\r\n//           console.log(response)\r\n//            if (!(\"books\" in response.data.return))\r\n//                return results;\r\n            const books = response.data.return.books;\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                const state = book._STATE;\r\n                let retDate = \"\";\r\n                if (state === 1 || state === 3 || state === \"1\" || state === \"3\")\r\n                {\r\n                    retDate = book.RETURN_DATE;\r\n                }\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: book.BOOKNAME,\r\n                    id: book.BARCODE,\r\n                    rent: getBookState(props.text, book.STATS.toString()),\r\n                    rentDate: book.LENT_DATE,\r\n                    retDate: retDate,\r\n                    author: book.AUTHOR,\r\n                    totalName: book.TOTAL_NAME,\r\n                    claim_num: book.CLAMENUM,\r\n                    publish: book.PUBLISH,\r\n                    claim: book.CLAIM,\r\n                    user: book.USER,\r\n                    userName: book.USER_NAME\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compare);\r\n            setRentList(results);\r\n        }\r\n        else\r\n        {\r\n\r\n            const rent = await props.doc.getRent();\r\n            console.log(\"Rent\");\r\n            console.log(rent);\r\n            rent.sort(compare);\r\n            for (const index in rent)\r\n            {\r\n                const userId = rent[index][\"user\"];\r\n                let userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                rent[index][\"userName\"] = userName;\r\n//                console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n            }\r\n            setRentList(rent);\r\n        }\r\n\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        const claim = rent[\"claim\"];\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"situation\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.situation}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue=\"\" list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { compareRent } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport axios from \"axios\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n//    const [initialized, setInitialized] = useState(false);\r\n    const [fromTime, setFromTime] = useState(\"\");\r\n    const [toTime, setToTime] = useState(\"\");\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [loadHistory, {loading: historyLoading, data: historyData, error: historyError }] = useLazyQuery(HISTORY_PERIOD_QUERY,\r\n            {\"variables\": { \"fromTime\" : fromTime, \"toTime\": toTime}});\r\n    const [userList, setUserList] = useState({});\r\n    const [yearValue, setYear] = useState(0);\r\n    const [monthValue, setMonth] = useState(0);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [searchQuery] = useDebounce(query, 300);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            var i;\r\n            var option;\r\n            var year = document.getElementById('year')\r\n            var month = document.getElementById('month')\r\n            for (i = 1; i <= 12 ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                month.add(option, i);\r\n            }\r\n            const thisYear = new Date().getFullYear();\r\n            const thisMonth = new Date().getMonth() + 1;\r\n            const fromYear = 2017;\r\n\r\n            for (i = fromYear ; i <= thisYear ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                year.add(option, i);\r\n            }\r\n\r\n            console.log(thisYear);\r\n            console.log(thisMonth);\r\n            setYear(thisYear);\r\n            setMonth(thisMonth);\r\n            document.getElementById('year').value = thisYear;\r\n            document.getElementById('month').value = thisMonth;\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n//                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.users;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"History update\")\r\n\r\n            if (!historyData)\r\n                return\r\n\r\n//            console.log(historyData.rentLog_tests)\r\n\r\n            const books = historyData.rentLogs;\r\n//            const books = historyData.rentLog_tests;\r\n            let results = [];\r\n            let retDate = \"\";\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const state = book.book_state;\r\n                if (state !== \"1\" && state !== 1)\r\n                    continue\r\n                if (!book.return_date || book.return_date.length === 0)\r\n                    continue\r\n//                console.log(book)\r\n                const bookId = book.book_id;\r\n                const userId = book.user_id;\r\n                var userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                var bookInfo;\r\n                if (bookId in props.doc.book)\r\n                {\r\n                    bookInfo = props.doc.book[bookId];\r\n                }\r\n                else\r\n                {\r\n                    bookInfo = {}\r\n                    bookInfo.author = \"\"\r\n                    bookInfo.totalName = \"\"\r\n                    bookInfo.claim_num = \"\"\r\n                    bookInfo.publish = \"\"\r\n                    bookInfo.title = \"\"\r\n                }\r\n                const resultString = `${bookInfo.title} ${bookInfo.claim_num}`;\r\n                retDate = book.return_date;\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: bookInfo.title,\r\n                    id: bookId,\r\n                    rentDate: book.timestamp,\r\n                    retDate: retDate,\r\n                    author: bookInfo.author,\r\n                    claim_num: bookInfo.claim_num,\r\n                    publish: bookInfo.publisher,\r\n                    claim: bookInfo.claim,\r\n                    user: userId,\r\n                    userName: userName\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compareRent);\r\n//            console.log(results);\r\n            setRentList(results);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, historyLoading, historyError]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        }, [userList]\r\n    );\r\n*/\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        if (a1.rentDate > a2.rentDate)\r\n            return true;\r\n        else if (a1.rentDate < a2.rentDate)\r\n            return false;\r\n        return a1.title > a2.title;\r\n    }\r\n\r\n/*\r\n    async function updateDoc()\r\n    {\r\n        setInitialized(true);\r\n    }\r\n*/\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const claim = rent[\"claim\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookCell\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n    function setProperty(index, value)\r\n    {\r\n        console.log(index);\r\n        console.log(value);\r\n        switch (index)\r\n        {\r\n            case 0:\r\n                setYear(value);\r\n                break;\r\n            case 1:\r\n                setMonth(parseInt(value));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(function () {\r\n        setQuery(yearValue.toString() + \"-\" + monthValue.toString().padStart(2, \"0\"))\r\n\r\n    }, [yearValue, monthValue]\r\n    );\r\n\r\n    useEffect(function () {\r\n        async function search()\r\n        {\r\n            console.log(\"Search\")\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/history\";\r\n                const obj = {\"params\": {\"period\": query}};\r\n                console.log(obj);\r\n                const response = await axios.get(url, obj);\r\n                console.log(response);\r\n\r\n                const books = response.data.return.books;\r\n                let results = [];\r\n                let retDate = \"\";\r\n                for (let i = 0 ; i < books.length ; i++)\r\n                {\r\n                    const book = books[i];\r\n                    const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                    if (\"_RETURN_DATE\" in book)\r\n                    {\r\n                        retDate = book._RETURN_DATE;\r\n                    }\r\n                    let resultObject = {\r\n                        index: i,\r\n                        text: resultString,\r\n                        title: book.BOOKNAME,\r\n                        id: book.BARCODE,\r\n        //                rent: getBookState(props.text, book..toString()),\r\n                        rentDate: book.RENT_DATE,\r\n                        retDate: retDate,\r\n                        author: book.AUTHOR,\r\n                        totalName: book.TOTAL_NAME,\r\n                        claim_num: book.CLAMENUM,\r\n                        publish: book.PUBLISH,\r\n                        claim: book.CLAIM,\r\n                        user: book.USER,\r\n                        userName: book.USER_NAME\r\n                    };\r\n                    results.push(resultObject);\r\n                }\r\n                results.sort(compare);\r\n                setRentList(results);\r\n            }\r\n            else\r\n            {\r\n                var queryTo;\r\n                const nextMonth = monthValue + 1\r\n                queryTo = yearValue.toString() + \"-\" + nextMonth.toString().padStart(2, \"0\")\r\n                setFromTime(query)\r\n                setToTime(queryTo)\r\n                console.log(query)\r\n                console.log(queryTo)\r\n\r\n                try {\r\n                    await loadHistory();\r\n                }\r\n                catch (e)\r\n                {\r\n                    console.warn(e.name);\r\n                }\r\n\r\n    /*\r\n                for (const index in rent)\r\n                {\r\n                    const userId = rent[index][\"user\"];\r\n                    let userName;\r\n                    if (userList && userId in userList)\r\n                        userName = userList[userId].name;\r\n                    else\r\n                        userName = \"\"\r\n                    rent[index][\"userName\"] = userName;\r\n                    console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n                }\r\n                setRentList(rent);\r\n    */\r\n            }\r\n        }\r\n        search();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [searchQuery]\r\n    );\r\n\r\n    function movePrev()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month > 1)\r\n        {\r\n            month -= 1\r\n        }\r\n        else\r\n        {\r\n            year -= 1;\r\n            month = 12;\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    function moveNext()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month < 12)\r\n        {\r\n            month += 1\r\n        }\r\n        else\r\n        {\r\n            year += 1\r\n            month = 1\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.history}\r\n                </h2>\r\n            </div>\r\n            <div id=\"searchRange\">\r\n                <div className=\"page\" id = \"page\">\r\n                    <NavigateBeforeIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {movePrev();} }/>\r\n                </div>\r\n                <select name=\"year\" id=\"year\" className=\"dropdown\" onChange={(event) => {setProperty(0, event.target.value);}}/>\r\n                <select name=\"month\" id=\"month\" className=\"dropdown\" onChange={(event) => {setProperty(1, event.target.value);}}/>\r\n                    <div className=\"page\" id = \"page\">\r\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {moveNext();} }/>\r\n                    </div>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue={searchQuery} list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp } from \"../Util\";\r\nimport { Navigate } from 'react-router-dom'\r\nimport UserInfo from \"../UserInfo\";\r\n\r\nfunction NewMember(props) {\r\n//    const [userText, setUserText] = useState(\"\");\r\n    const [userInfo, setUserInfo] = useState({});\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n//    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n//    const [userList, setUserList] = useState({});\r\n//    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized || !props.doc.serverAvailable)\r\n            {\r\n                return;\r\n            }\r\n            import(\"./PageServer.css\");\r\n            console.log(\"=======================================\");\r\n            console.log(\"NewMember initialize\");\r\n            prepareNewMember();\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n*/\r\n\r\n    function prepareNewMember()\r\n    {\r\n        var info = {};\r\n        info.USER_CODE = \"\";\r\n        info.USER_NAME = \"\";\r\n        info.PHONE_NUMBER = \"\";\r\n        info.EMAIL = \"\";\r\n        info.ADDRESS = \"\";\r\n        info.NOTICE = \"\";\r\n        info.USER_LEVEL = -1;\r\n        setUserInfo(info);\r\n    }\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n*/\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n\r\n        const prop = toastProp;\r\n        var text\r\n        if (response.data.return === \"OK\")\r\n        {\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.regSuccess;\r\n            prepareNewMember()\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.regFail;\r\n        }\r\n        prop.autoClose = 3000;\r\n        toast.info(text, prop);\r\n    }\r\n    if (!props.doc.initialized || !props.doc.serverAvailable)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.newMember}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                {props.doc.serverAvailable &&\r\n                    <UserInfo text={props.text} doc={props.doc} info={userInfo} refresh={refresh}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewMember;\r\n","import { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        this.initialized = false;\r\n        this.bookReady = false;\r\n        this.rentReady = false;\r\n        this.userReady = false;\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        this.book = {};\r\n        this.rent = {};\r\n        this.logCallback = undefined;\r\n        this.admin = false;\r\n        this.dueDate = \"\";\r\n        this.serverInfo = {};\r\n        this.serverAvailable = false;\r\n        this.ipAddr = \"\"\r\n    }\r\n\r\n    async updateIpAddr()\r\n    {\r\n//        const response = await axios.get(\"https://ipv4.seeip.org/jsonip\");\r\n        const response = await axios.get(\"https://api.ipify.org/?format=json\")\r\n        console.log(\"Get IP Address\");\r\n        console.log(response.data);\r\n        const ipAddr = response.data.ip;\r\n        console.log(\"IP addr updated \" + ipAddr)\r\n        this.ipAddr = ipAddr;\r\n        this.checkServerIp()\r\n    }\r\n\r\n    checkServerIp()\r\n    {\r\n        if (this.ipAddr.length === 0 || !this.serverInfo.globalIp)\r\n            return;\r\n        if (this.serverInfo.globalIp === this.ipAddr)\r\n        {\r\n            console.log(\"Server is accessible \" + this.serverInfo.localIp);\r\n            const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n            this.serverAvailable = true;\r\n            axios.get(query, {timeout: 1000})\r\n                .then( (response) => {\r\n                    console.log(\"Server connected\");\r\n                    console.log(response.data);\r\n                    this.admin = response.data.admin;\r\n                    this.dueDate = response.data.dueDate;\r\n                    this.initialized = true;\r\n                })\r\n                .catch(error => {\r\n                  const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n                  window.open(query);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    checkState() {\r\n        if (this.bookReady && this.rentReady) {\r\n            this.initialized = true;\r\n            toast.dismiss();\r\n            if (this.callback) {\r\n                this.callback();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setLogCallback(callback) {\r\n        this.logCallback = callback;\r\n    }\r\n\r\n    setRent(rent) {\r\n        this.rent = rent\r\n        this.rentReady = true;\r\n        this.checkState();\r\n        this.checkRent();\r\n    }\r\n\r\n    setServerInfo(serverInfo)\r\n    {\r\n        console.log(serverInfo)\r\n        this.serverInfo = serverInfo;\r\n        console.log(this.serverInfo.globalIp);\r\n        this.checkServerIp()\r\n    }\r\n\r\n    setBook(books) {\r\n        this.book = {};\r\n        for (let i = 0 ; i < books.length ; i++)\r\n        {\r\n            const book = books[i];\r\n            const id = book['_id'];\r\n            this.book[id] = book;\r\n        }\r\n        this.bookReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setUser(users) {\r\n        this.user = {};\r\n        for (let i = 0 ; i < users.length ; i++)\r\n        {\r\n            const user = users[i];\r\n            const id = user.id;\r\n            this.user[id] = user;\r\n            this.user[id][\"rent\"] = 0;\r\n        }\r\n        this.userReady = true;\r\n        this.checkRent();\r\n    }\r\n\r\n    checkRent() {\r\n        if (!this.userReady || !this.rentReady)\r\n        {\r\n            console.log(\"Cannot check rent\");\r\n            return;\r\n        }\r\n//        console.log(this.rent);\r\n        for (let i = 0 ; i < this.rent.length ; i++)\r\n        {\r\n            const state = this.rent[i].state;\r\n\r\n//            console.log(state);\r\n            if (state !== \"1\" && state !== \"3\" && state !== 1 && state !== 3)\r\n                continue;\r\n\r\n            const userId = this.rent[i].user_id;\r\n//            console.log(this.rent[i]);\r\n//           console.log(userId);\r\n//           console.log(userId.length);\r\n            if (userId && userId.length > 0 && userId in this.user)\r\n                this.user[userId][\"rent\"] += 1;\r\n            else\r\n                this.user[userId][\"rent\"] = 1;\r\n        }\r\n        console.log(this.user);\r\n    }\r\n\r\n    logIn(userInfo) {\r\n        console.log(\"Logged in: \" + userInfo['_id']);\r\n        this.logged = true;\r\n        this.userInfo = userInfo;\r\n        if (userInfo['level'] === \"2\" ||\r\n            userInfo['level'] === 2)\r\n            this.admin = true;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n    }\r\n\r\n    logOut() {\r\n        console.log(\"Logged out\");\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        if (this.logCallback)\r\n            this.logCallback(false);\r\n    }\r\n\r\n    async getRent(userId = undefined) {\r\n        let ret = [];\r\n        if (this.serverAvailable) {\r\n            const url = \"https://\" + this.serverInfo.localIp + \":\" +\r\n                this.serverInfo.port + \"/book\";\r\n            const obj = {\"params\": {\"user\": userId}};\r\n            console.log(obj);\r\n            const result = await axios.get(url, obj);\r\n            console.log(result);\r\n            if (\"books\" in result.data.return)\r\n            {\r\n                // BARCODE, BOOKNAME, LENT_DATE, RETURN_DATE, STATS\r\n                // id, title, rentDate, retData,  stat\r\n                for (const entry of result.data.return.books)\r\n                {\r\n                    console.log(entry);\r\n                    const book = {'id': entry.BARCODE, 'title': entry.BOOKNAME, 'claim': entry.CLAIM, 'rentDate': entry.LENT_DATE, 'retDate': entry.RETURN_DATE, 'stat': entry.STATS, 'extendCount': entry._EXTEND_COUNT}\r\n                    ret.push(book);\r\n                }\r\n//                ret = result.data.return.books;\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"Check \" + userId);\r\n            console.log(this.bookReady);\r\n            if (!this.bookReady)\r\n                return ret;\r\n    //        console.log(this.rent.length);\r\n            for (let i = 0 ; i < this.rent.length ; i++) {\r\n                const entry = this.rent[i];\r\n                if (userId !== undefined && entry.user_id !== userId)\r\n                    continue;\r\n    //            console.log(entry)\r\n                if (entry.state !== \"1\" && entry.state !== \"3\" && entry.state !== 1 && entry.state !== 3)\r\n                    continue;\r\n    //            console.log(entry);\r\n                const id = entry[\"book_id\"];\r\n                const book = this.book[id];\r\n    //            console.log(book)\r\n                let retEntry = {}\r\n                retEntry[\"id\"] = book._id\r\n                retEntry[\"title\"] = book.title\r\n                retEntry[\"rentDate\"] = entry.rent_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"retDate\"] = entry.return_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"claim\"] = book.claim\r\n                retEntry[\"user\"] = entry.user_id;\r\n                ret.push(retEntry)\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n\r\n    async openDoc() {\r\n        try {\r\n            this.initialized = true;\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.initialized;\r\n    }\r\n\r\n    setCallback(updateFunc)\r\n    {\r\n        console.log(\"Update function registered\");\r\n        this.callback = updateFunc;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","import config from \"./api/key\";\n\nconst NodeRSA = require('node-rsa');\n\nconst prk = new NodeRSA(config[\"privateKey\"]);\n\nclass Context {\n    constructor() {\n        console.log(\"Create Context\");\n\n        console.log(\"Cookies\");\n        const rawCookie = document.cookie;\n        this.cookie = rawCookie\n            .split(\";\")\n            .map(v => v.split(\"=\"))\n            .reduce((acc, v) => {\n                const key = v.shift().trim();\n                const value = v.join(\"=\").trim();\n                acc[decodeURIComponent(key)] = decodeURIComponent(value);\n                return acc;\n            }, {});\n    }\n\n    checkLogIn(user, passwordText) {\n        var matched = false;\n        var passwordTyped;\n        if (user && passwordText.length > 0) {\n            console.log(\"User data available\");\n            const emailDb = user[\"encrypted_email\"];\n            const phoneDb = user[\"encrypted_phone\"];\n\n            passwordTyped = prk.sign(passwordText, 'base64');\n            if (passwordText === emailDb ||\n                passwordText === phoneDb )\n            {\n                passwordTyped = passwordText;\n                matched = true;\n            }\n            else if (emailDb === passwordTyped)\n            {\n//                console.log(\"Email match\");\n                matched = true;\n            }\n            else\n            {\n                var numberString = \"\";\n                for (let i = 0 ; i < passwordText.length ; i++)\n                {\n                    if (!isNaN(passwordText[i]))\n                        numberString += passwordText[i];;\n                }\n                passwordTyped = prk.sign(numberString, 'base64');\n                if (passwordTyped === phoneDb)\n                {\n//                    console.log(\"Phone match\");\n                    matched = true;\n                }\n                else\n                {\n//                    console.log(\"Nothing matched\");\n                }\n            }\n\n//            console.log(\"toast available\");\n        }\n        if (matched)\n        {\n            const date = new Date();\n            const days=2;\n            date.setTime(date.getTime()+(days*24*60*60*1000));\n            const expireDate = date.toGMTString();\n            document.cookie = \"password=\" +  passwordTyped + \"; expires=\" + expireDate + \" ; SameSite=Lax ;\" ;\n        }\n        return matched\n    }\n}\n\nexport default Context;\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Dropdown.css'\r\n\r\nfunction DropDown(props) {\r\n\r\n    const [dropdown, setDropdown] = useState(false);\r\n    const [click, setClick] = useState(false)\r\n\r\n    useEffect(\r\n        () => {\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./DropdownServer.css\");\r\n            }\r\n            if (dropdown !== props.dropdown)\r\n            {\r\n                console.log(\"User clicked \" + props.doc.logged);\r\n                console.log(props.dropdown);\r\n                setClick(!click);\r\n                setDropdown(props.dropdown);\r\n            }\r\n            const menu = document.getElementById(\"dropdown-menu\");\r\n//            menu.hidden = !click;\r\n            if (!click)\r\n            {\r\n               menu.classList.remove('is-show');\r\n            }\r\n            else\r\n            {\r\n               menu.classList.add('is-show');\r\n            }\r\n\r\n        }, [props.dropdown, dropdown, click, props.doc.logged]\r\n    );\r\n\r\n    const logOut = () =>\r\n    {\r\n        setClick(false);\r\n        props.doc.logOut();\r\n        document.cookie = \"user_id=\";\r\n        document.cookie = \"password=\";\r\n        document.cookie = \"autoLogin=false\";\r\n    }\r\n\r\n    return (\r\n            <div id='dropdown-menu' onClick={() => { setClick(!click)}} className='dropdown-menu'>\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                    <div className='menu-items'>\r\n                        {props.doc.userInfo[\"_id\"] + \" : \" + props.doc.userInfo[\"name\"] + props.text.nameSuffix}\r\n                    </div>\r\n                    <hr className=\"hline\"/>\r\n                    </>\r\n                }\r\n                <Link className='menu-items' to=\"/\" onClick={() => setClick(false)}>\r\n                    {props.text.home}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/notice\" onClick={() => setClick(false)}>\r\n                    {props.text.notice}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/search\" onClick={() => setClick(false)}>\r\n                    {props.text.bookSearch}\r\n                </Link>\r\n                {props.doc.serverAvailable &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOut\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOut}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/return\" onClick={() => setClick(false)}>\r\n                            {props.text.return}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOutStatus}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {props.doc.admin &&\r\n                    <>\r\n                    <hr className=\"hline\"/>\r\n                    <Link className='menu-items' to=\"/userSearch\" onClick={() => setClick(false)}>\r\n                        {props.text.userSearch}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentalSituation\" onClick={() => setClick(false)}>\r\n                        {props.text.situation}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentHistory\" onClick={() => setClick(false)}>\r\n                        {props.text.history}\r\n                    </Link>\r\n                    </>\r\n                }\r\n                {props.doc.serverAvailable && props.doc.admin &&\r\n                    <Link className='menu-items' to=\"/newMember\" onClick={() => setClick(false)}>\r\n                        {props.text.newMember}\r\n                    </Link>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <hr className=\"hline\"/>\r\n                        <div className='menu-items' onClick={() => logOut()}>\r\n                            {props.text.logOut}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && !props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.logIn}\r\n                        </Link>\r\n                    </>\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default DropDown;\r\n","import React, { useState } from 'react';\r\nimport {isMobile} from \"react-device-detect\";\r\nimport \"./Navbar.css\";\r\nimport DropDown from \"./Dropdown\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction Navbar(props) {\r\n    const [dropdown, setDropdown] = useState(false)\r\n\r\n    const onClick = () => {\r\n        const maxWidth = document.getElementById(\"navbar\").style.maxWidth;\r\n        console.log(\"maxWidth\");\r\n        console.log(maxWidth);\r\n        console.log(document.getElementById(\"navbar\").style.width);\r\n        setDropdown(!dropdown);\r\n    }\r\n\r\nreturn (\r\n    <>\r\n        <div id=\"navbar\" className=\"navbar\">\r\n            <div className='title'>\r\n                {isMobile? (<h1>{props.text[\"titleShort\"]}</h1>) : (<h1>{props.text[\"titleLong\"]}</h1>)}\r\n            </div>\r\n            <div className='menu' onClick={onClick} >\r\n                <MenuIcon className=\"img\" fontSize=\"large\" sx={{ color: \"#ffffff\"}}/>\r\n            </div>\r\n            <DropDown text={props.text} doc={props.doc} dropdown={dropdown}/>\r\n        </div>\r\n    </>\r\n)\r\n}\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Notice from \"./pages/Notice\";\r\nimport Search from \"./pages/Search\";\r\nimport CheckOutStatus from \"./pages/CheckOutStatus\";\r\nimport CheckOut from \"./pages/CheckOut\";\r\nimport Return from \"./pages/Return\";\r\nimport UserSearch from \"./pages/UserSearch\";\r\nimport RentalSituation from \"./pages/RentalSituation\";\r\nimport RentHistory from \"./pages/RentHistory\";\r\nimport NewMember from \"./pages/NewMember\";\r\n//import Reader from \"./pages/Reader\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\nimport Context from \"./Context\";\r\nimport text from \"./api/text\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"./Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport Navbar from \"./Navbar\";\r\nimport {SERVER_QUERY} from \"./api/query.js\";\r\nimport {BOOK_QUERY, RENT_QUERY, USER_QUERY} from \"./api/query.js\";\r\n//import {BOOK_QUERY, RENT_QUERY, USER_QUERY} from \"./api/query_test.js\";\r\n\r\nconst doc = new Doc();\r\nconst context = new Context();\r\n\r\nconst textString = {};\r\nlet logMsg = \"\"\r\nfunction App() {\r\n\r\n//    const [checkOutStr, setCheckOutStr] = useState(\"\");\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [logged, setLogged] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const { loading: rentLoading, error: rentError, data: rentData } = useQuery(RENT_QUERY);\r\n    const { loading: serverLoading, error: serverError, data: serverData } = useQuery(SERVER_QUERY);\r\n    const [loadBook, { loading: bookLoading, error: bookError, data: bookData }] = useLazyQuery(BOOK_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY, { \"variables\": { \"_id\": userId } });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            logMsg = logMsg + \"<p>Initialize app</p>\";\r\n            console.log(process.env.APP_NAME);\r\n            console.log(process.env.APP_VERSION);\r\n            const lang = navigator.languages;\r\n            console.log(lang);\r\n            let ts = {}\r\n            if (lang.length> 0 && (lang[0].toLowerCase().includes(\"kr\") || lang[0].toLowerCase().includes(\"ko\")))\r\n            {\r\n                ts = text.kr;\r\n            }\r\n            else\r\n            {\r\n                ts = text.en;\r\n            }\r\n            for (let key in ts)\r\n            {\r\n                textString[key] = ts[key];\r\n            }\r\n\r\n            await doc.updateIpAddr();\r\n\r\n            if (\"autoLogin\" in context.cookie &&  context.cookie.autoLogin === \"true\")\r\n            {\r\n                console.log(\"Auto Login: \" + context.cookie.user_id);\r\n                setUserId(context.cookie.user_id);\r\n                console.log(context.cookie.nothing);\r\n                loadUser();\r\n            }\r\n            setInitialized(true);\r\n        }\r\n        initialize();\r\n    }, [loadUser]);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data loaded\");\r\n            if (!userData)\r\n            {\r\n                return;\r\n            }\r\n\r\n//            console.log(\"Login check \" + context.cookie.password);\r\n            const user = userData.user\r\n//            const user = userData.user_test\r\n//            console.log(user);\r\n            if (context.cookie.password && context.checkLogIn(user, context.cookie.password))\r\n            {\r\n                console.log(\"Login suceeded\");\r\n                doc.logIn(user);\r\n            }\r\n\r\n\r\n\r\n        }, [userData]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Rent Query Updated\");\r\n            logMsg = logMsg + \"<p>Rent Query Updated \" + rentLoading + \" \" + rentError + \"</p>\";\r\n            console.log(rentLoading);\r\n            console.log(\"Rent Error\");\r\n            console.log(rentError);\r\n            if (rentData)\r\n            {\r\n                console.log(\"Rent available\");\r\n                logMsg = logMsg + \"<p>Rent available</p>\"\r\n//                console.log(rentData.rents)\r\n                doc.setRent(rentData.rents)\r\n//                doc.setRent(rentData.rent_tests)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [rentLoading, rentError, rentData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Book Query Updated\");\r\n            logMsg = logMsg + \"<p>Book Query Updated</p>\";\r\n            console.log(bookLoading)\r\n            console.log(bookError)\r\n            if (bookData)\r\n            {\r\n                console.log(\"Book available\")\r\n                logMsg = logMsg + \"<p>Book available</p>\";\r\n//                console.log(bookData.books)\r\n                doc.setBook(bookData.books)\r\n//                doc.setBook(bookData.book_tests)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [bookLoading, bookError, bookData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Server Query Updated\");\r\n            logMsg = logMsg + \"<p>Server Query Updated</p>\";\r\n\r\n            console.log(serverData);\r\n            console.log(initialized);\r\n            if (!serverData || !initialized)\r\n                return\r\n\r\n            console.log(\"Server info available\")\r\n            logMsg = logMsg + \"<p>Server info available</p>\";\r\n            console.log(serverData)\r\n            doc.setServerInfo(serverData.serverInfo)\r\n\r\n            if (!doc.serverAvailable)\r\n            {\r\n                console.log(\"Server is not available. Load books from cloud DB\");\r\n                loadBook();\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.LOADING;\r\n                prop.autoClose = false;\r\n                prop.toastId = loadingId;\r\n                toast.loading(textString.loading, prop);\r\n                doc.setLogCallback(updateLog);\r\n            }\r\n        }, [serverLoading, serverError, serverData, loadBook, initialized]\r\n    );\r\n\r\n    function notifyInit()\r\n    {\r\n        const prop = toastProp;\r\n        prop.type = toast.TYPE.SUCCESS;\r\n        prop.render = textString.succeededToOpen;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = \"\";\r\n        toast.info(textString.succeededToOpen, prop);\r\n    }\r\n\r\n    function updateLog(logged) {\r\n        console.log(\"==== Update logging state \" + doc.logged);\r\n//        console.log(doc.userInfo);\r\n        setLogged(doc.logged);\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n        <div className=\"App\">\r\n            <div>\r\n                <ToastContainer\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    limit={10}\r\n                />\r\n            </div>\r\n            <Navbar doc={doc} text={textString}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home doc={doc} text={textString}/>} />\r\n                <Route path=\"/notice\" element={<Notice doc={doc} text={textString} />} />\r\n                <Route path=\"/search/:id?\" element={<Search doc={doc} text={textString}/>} />\r\n                <Route path=\"/checkOutStatus\" element={<CheckOutStatus context={context} doc={doc} text={textString} logged={logged}/>} />\r\n                <Route path=\"/userSearch/:id?\" element={<UserSearch context={context} doc={doc} text={textString} />} />\r\n                <Route path=\"/checkOut\" element={<CheckOut context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/return\" element={<Return context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentalSituation\" element={<RentalSituation context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentHistory\" element={<RentHistory context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/newMember\" element={<NewMember context={context} doc={doc} text={textString}/>} />\r\n            </Routes>\r\n\r\n            <h3>\r\n                v {process.env.REACT_APP_VERSION}\r\n            </h3>\r\n        </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport * as Realm from \"realm-web\";\r\nimport {\r\n    ApolloClient,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    InMemoryCache,\r\n} from \"@apollo/client\";\r\n\r\nconst APP_ID = 'data-xaque';\r\nconst graphqlUri = `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\r\nconst app = new Realm.App(APP_ID);\r\n\r\n// Gets a valid Realm user access token to authenticate requests\r\nasync function getValidAccessToken() {\r\n    // Guarantee that there's a logged in user with a valid access token\r\n    if (!app.currentUser) {\r\n        // If no user is logged in, log in an anonymous user. The logged in user will have a valid\r\n        // access token.\r\n        await app.logIn(Realm.Credentials.anonymous());\r\n//        await app.logIn(apiKey);\r\n    } else {\r\n        // An already logged in user's access token might be stale. Tokens must be refreshed after\r\n        // 30 minutes. To guarantee that the token is valid, we refresh the user's access token.\r\n        await app.currentUser.refreshAccessToken();\r\n    }\r\n//    console.log(\"AccessToken: [\" + app.currentUser.accessToken + \"]\");\r\n\r\n    return app.currentUser.accessToken;\r\n}\r\n\r\n// Configure the ApolloClient to connect to your app's GraphQL endpoint\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\r\n        // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\r\n        // access token before sending the request.\r\n        fetch: async (uri, options) => {\r\n            const accessToken = await getValidAccessToken();\r\n            options.headers.Authorization = `Bearer ${accessToken}`;\r\n            return fetch(uri, options);\r\n        },\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}