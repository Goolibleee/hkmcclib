{"version":3,"sources":["Util.js","pages/Home.js","api/query.js","pages/Notice.js","pages/Search.js","pages/CheckOut.js","pages/UserSearch.js","Doc.js","Context.js","Dropdown.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["SEARCH_PER_SCREEN","MAX_SEARCH_ENTRY","String","prototype","format","formatted","this","i","arguments","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","loadingId","loggingId","Home","props","updateDoc","_updateDoc","apply","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","notify","prop","_args2","wrap","_context2","prev","next","console","log","type","toast","TYPE","SUCCESS","render","text","succeededToOpen","toastId","info","stop","useEffect","_initialize","_callee","_context","doc","isOpen","setCallback","initialize","_jsx","id","dangerouslySetInnerHTML","__html","homeText","BOOK_QUERY","gql","_templateObject","_taggedTemplateLiteral","RENT_QUERY","_templateObject2","USERS_QUERY","_templateObject3","USER_QUERY","_templateObject4","HISTORY_QUERY","_templateObject5","NOTICE_QUERY","_templateObject6","CONTENT_QUERY","_templateObject7","SERVER_QUERY","_templateObject8","Notice","_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useState3","_useState4","displayedCodes","setDisplayedCodes","_useState5","_useState6","pageNum","setPageNum","_useState7","_useState8","selectedId","setSelectedId","_useQuery","useQuery","noticeLoading","loading","noticeData","data","noticeError","error","_useLazyQuery","useLazyQuery","_useLazyQuery2","loadSelected","_useLazyQuery2$","selectedLoading","selectedData","selectedError","notices","toString","startIdx","count","Math","min","slice","showEntry","result","_jsxs","className","children","date","colSpan","onClick","_id","title","notice","content","map","NavigateBeforeIcon","fontSize","sx","color","NavigateNextIcon","initialized","Search","inputText","setInputText","_useDebounce","useDebounce","searchQuery","_useState9","_useState10","_useState11","_useState12","bookList","setBookList","_useState13","_useState14","rentList","setRentList","useParams","_callee6","rl","rented","bl","books","key","book","_args6","_context6","rent","push","code","book_id","retDate","return_date","state","name","num","author","claim","claim_num","totalName","series","category","publisher","publish","findBooks","_x","_findBooks","results","row","resultString","_iterator","_step","entry","resultObject","abrupt","includes","concat","available","_createForOfIteratorHelper","s","n","done","value","checkedOut","returnDate","overDue","notAvailable","t0","e","f","finish","index","sort","a","b","_query","_callee3","sr","_context3","sent","query","selectId","_ref","_callee4","_context4","_x2","searchTitle","placeholder","searchBook","onChange","event","target","hidden","bookInfo","entryId","_callee5","_context5","rowSpan","State","LoggedOut","LoggingIn","LoggedIn","CheckOut","userText","setUserText","passwordText","setPasswordText","setInitialized","userId","setUserId","setState","history","setHistory","_useState15","_useState16","autoLogin","setAutoLogin","loadUser","userData","_useLazyQuery3","_useLazyQuery4","loadHistory","historyData","_useState17","_useState18","expireDate","setExpireDate","_useState19","_useState20","setTitle","_userId","_args4","logged","userInfo","getRent","adminMode","userSearch","checkOut","logIn","_autoLogin","context","cookie","Date","setTime","getTime","days","toGMTString","compare","rawHist","bookReady","rentReady","split","s1","s2","hist","j","showEntries","rentDate","bookName","React","Fragment","Link","to","showRented","noEntry","toUpperCase","isActive","checkLogIn","user","logInSucceed","document","ERROR","logInFail","update","idHolder","disabled","onInput","pwHolder","checked","cookieString","toggleAutoLogin","userLoading","userListData","userError","userList","setUserList","setRented","list","stateStr","normal","stopped","users","level","setUser","getUser","_Fragment","findUsers","_findUsers","keys","t1","toLowerCase","showUser","Doc","_this","_classCallCheck","userReady","logCallback","admin","serverInfo","serverAvailable","ipAddr","axios","get","then","response","ip","updateIpAddr","_createClass","checkServerIp","globalIp","localIp","port","window","open","callback","dismiss","checkState","checkRent","user_id","mode","ret","retEntry","_openDoc","updateFunc","prk","require","config","Context","rawCookie","v","reduce","acc","shift","trim","join","decodeURIComponent","passwordTyped","matched","emailDb","encrypted_email","phoneDb","encrypted_phone","sign","numberString","isNaN","DropDown","dropdown","setDropdown","click","setClick","menu","getElementById","classList","add","remove","nameSuffix","home","bookSearch","setAdminMode","userMode","logOut","Navbar","isMobile","maxWidth","style","width","MenuIcon","textString","logMsg","App","setLogged","rentLoading","rentError","rentData","_useQuery2","bookLoading","bookError","bookData","_useQuery3","serverLoading","serverError","serverData","updateLog","lang","ts","process","APP_NAME","APP_VERSION","navigator","languages","kr","en","nothing","LOADING","setLogCallback","password","setRent","rents","setBook","setServerInfo","Router","Routes","Route","path","element","UserSearch","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","limit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","APP_ID","graphqlUri","app","Realm","getValidAccessToken","_getValidAccessToken","currentUser","anonymous","refreshAccessToken","accessToken","client","ApolloClient","link","HttpLink","uri","fetch","_fetch","options","headers","Authorization","_x3","_x4","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider"],"mappings":"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","file":"static/js/main.85987269.chunk.js","sourcesContent":["export const SEARCH_PER_SCREEN = 10;\r\nexport const MAX_SEARCH_ENTRY = 500;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"bottom-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n\r\nexport const loadingId = \"custom-loading-id\";\r\nexport const loggingId = \"custom-logging-id\";\r\n","import React, { useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"./Home.css\";\r\nimport { toastProp } from \"../Util\";\r\n\r\nfunction Home(props) {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Home\");\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \");\r\n\r\n        if (notify) {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Done\");\r\n    }\r\n\r\n    return (<div id=\"home\" dangerouslySetInnerHTML={{__html:props.text.homeText}}></div>);\r\n}\r\n\r\nexport default Home;\r\n","import gql from \"graphql-tag\";\n\nexport const BOOK_QUERY = gql`\n    query AllBook{\n        books (sortBy: TITLE_ASC, limit:20000) {\n            _id\n            author\n            title\n            claim_num\n            num\n            series\n            category\n            claim\n            publisher\n            seqnum\n        }\n    }\n`;\n\nexport const RENT_QUERY = gql`\n    query AllRent{\n        rents (limit:20000) {\n            _id\n            book_id\n            user_id\n            rent_date\n            return_date\n            state\n        }\n    }\n`;\n\nexport const USERS_QUERY = gql`\n    query AllUser {\n        users (limit: 20000) {\n            _id\n            name\n            state\n            level\n        }\n    }`;\n\nexport const USER_QUERY = gql`\n    query FindUser($_id: String!){\n        user (query: {_id:$_id}) {\n            _id\n            name\n            state\n            level\n            encrypted_email\n            encrypted_phone\n        }\n    }`;\n\nexport const HISTORY_QUERY = gql`\n    query findLogs($user_id: String!){\n        rentLogs (query: {user_id: $user_id}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            user_id\n        }\n    }`;\n\nexport const NOTICE_QUERY = gql`\n    query GetNotices {\n        notices (sortBy: _ID_DESC, limit:20000) {\n            _id\n            date\n            title\n        }\n    }`;\n\nexport const CONTENT_QUERY = gql`\n    query GetContent ($_id: String!) {\n        notice (query: {_id: $_id}) {\n            _id\n            date\n            title\n            content\n        }\n    }`;\n\nexport const SERVER_QUERY = gql`\n    query GetServerInfo {\n        serverInfo {\n            _id\n            globalIp\n            localIp\n            port\n        }\n    }`;\n","import React, { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp } from \"../Util\";\r\nimport \"./Page.css\"\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { SEARCH_PER_SCREEN } from \"../Util\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport {NOTICE_QUERY, CONTENT_QUERY} from \"../api/query.js\";\r\n\r\nfunction Notice(props) {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(-1);\r\n    const { loading: noticeLoading, data: noticeData, error: noticeError } = useQuery(NOTICE_QUERY);\r\n    const [loadSelected, { loading: selectedLoading, data: selectedData, error: selectedError}] = useLazyQuery(CONTENT_QUERY,\r\n            {\"variables\": {\"_id\": selectedId}});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Notice\");\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Notice\");\r\n//            console.log(noticeData);\r\n//            console.log(noticeError);\r\n//            console.log(noticeLoading);\r\n            if (noticeData)\r\n            {\r\n                setSearchResults(noticeData.notices);\r\n            }\r\n        }, [noticeData, noticeError, noticeLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Content\");\r\n//            console.log(selectedData);\r\n//            console.log(selectedError);\r\n//            console.log(selectedLoading);\r\n            if (selectedData)\r\n            {\r\n//                setSearchResults(selectedData.content);\r\n            }\r\n        }, [selectedData, selectedError, selectedLoading]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \");\r\n\r\n        if (notify) {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Done\");\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n            console.log(\"Page num \" + pageNum.toString() + \" \");\r\n            console.log(length);\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n//           console.log(displayedCodes);\r\n        }, [displayedCodes]\r\n    );\r\n\r\n    const selectEntry = (id) => {\r\n        console.log(\"selected \" + id.toString());\r\n        if (selectedId === id)\r\n        {\r\n            setSelectedId(-1);\r\n        }\r\n        else\r\n        {\r\n            setSelectedId(id);\r\n        }\r\n        loadSelected();\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n//        console.log(result);\r\n        return (\r\n                <tr className=\"\" key={result._id}>\r\n                    <td className=\"\"> {result.date} </td>\r\n                    <td className=\"noticeEntry\" colSpan=\"2\" onClick={() => selectEntry(result._id)}> {result.title}</td>\r\n                </tr>\r\n        );\r\n    }\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (searchResults.length > (pageNum + 1) * SEARCH_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div id=\"notice\">\r\n                <div id=\"title\">\r\n                    <h2>\r\n                        {props.text.notice}\r\n                    </h2>\r\n                </div>\r\n                {selectedId > 0 && selectedData &&\r\n                <div id=\"noticeContent\">\r\n                    <table className=\"content\"><tbody>\r\n                           {showEntry(selectedData.notice)}\r\n                        <tr>\r\n                            <td className=\"content\" colSpan=\"3\">\r\n                                {selectedData.notice.content}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                </div>\r\n                }\r\n                <div id=\"noticeList\">\r\n                    <table><tbody>\r\n                       {displayedCodes.length > 0 && displayedCodes.map((result) => showEntry(result))}\r\n                    </tbody></table>\r\n                </div>\r\n                {searchResults.length > SEARCH_PER_SCREEN && (\r\n                    <div id=\"pageControl\">\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={movePrev}/>\r\n                        </div>\r\n                        <div className=\"pageNum\" id=\"pageNum\">\r\n                            {pageNum+1}\r\n                        </div>\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateNextIcon fontSize=\"large\" sx={{color: (searchResults.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={moveNext}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default Notice;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp } from \"../Util\";\r\nimport { SEARCH_PER_SCREEN, MAX_SEARCH_ENTRY } from \"../Util\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nlet initialized = false;\r\n\r\nfunction Search(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(inputText, 50);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n\r\n    const [bookList, setBookList] = useState([]);\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"BOOK ID: \" + id);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setInputText(id);\r\n            }\r\n            else\r\n            {\r\n                setInputText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findBooks(text) {\r\n                let results = [];\r\n\r\n                for (let i = 0 ; i < bookList.length ; i++) {\r\n                    const row = bookList[i];\r\n                    if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                    if ((row.name && row.name.toString().includes(text)) ||\r\n                        (row.code === text))\r\n                    {\r\n                        let resultString = `${row.name} ${row.claim_num}`;\r\n                        let rent = props.text.available;\r\n                        let retDate = \"\";\r\n                        for (const entry of rentList)\r\n                        {\r\n                            if (entry.code === row.code)\r\n                            {\r\n                                if (entry.state === \"1\")\r\n                                {\r\n                                    rent = props.text.checkedOut;\r\n                                    retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                                }\r\n                                else if (entry.state === \"3\")\r\n                                {\r\n                                    rent = props.text.overDue;\r\n                                    retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                                }\r\n                                else\r\n                                {\r\n                                    rent = props.text.notAvailable;\r\n                                }\r\n\r\n                                break;\r\n                            }\r\n                        }\r\n//                        if (rentList.includes(row.code))\r\n//                            rent = props.text.checkedOut;\r\n//                        else\r\n//                            rent = props.text.available;\r\n                        let resultObject = {\r\n                            index: i,\r\n                            text: resultString,\r\n                            name: row.name,\r\n                            code: row.code.toString(),\r\n                            rent: rent,\r\n                            retDate: retDate\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a['text'] > b['text']; });\r\n                return results;\r\n            }\r\n            async function query() {\r\n                if (searchQuery) {\r\n                    let sr = await findBooks(searchQuery);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        setSelectedId(sr[0].index);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n                setPageNum(0);\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, bookList, rentList, props]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n                console.log(\"Page num \" + pageNum.toString());\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        initialized = true;\r\n\r\n        if (notify) {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.loading, prop);\r\n        }\r\n        console.log(\"Done\");\r\n        let rl = [];\r\n        const rented = props.doc.rent;\r\n        for (let i = 0 ; i < rented.length; i++)\r\n        {\r\n           rl.push({code:rented[i].book_id, retDate:rented[i].return_date, state:rented[i].state});\r\n        }\r\n        setRentList(rl);\r\n\r\n        let bl = [];\r\n        const books = props.doc.book\r\n        for (const key in books)\r\n        {\r\n           const book = books[key];\r\n           bl.push({code: book._id, name: book.title, num: book.num, author: book.author, claim: book.claim,\r\n                    claim_num: book.claim_num, totalName: book.series, category: book.publisher, publish: book.publisher});\r\n        }\r\n        console.log(\"Load\");\r\n        console.log(books.length);\r\n        setBookList(bl);\r\n    }\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (searchResults.length > (pageNum + 1) * SEARCH_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n\r\n    const selectId = async (id) => {\r\n        if (selectedId === -1 || selectedId !== id)\r\n        {\r\n            console.log(\"Select \" + id);\r\n            setSelectedId(id);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n            setSelectedId(-1);\r\n        }\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n        const hidden = (result.index !== selectedId);\r\n        const bookInfo = bookList[result.index];\r\n        const entryId = (hidden) ? \"searchResult\" : \"selectedSearchResult\";\r\n        return (\r\n            <div key={result.code}>\r\n            <div id={entryId} onClick={async () => await selectId(result.index)}>\r\n                <table><tbody>\r\n                    <tr className=\"searchTr\">\r\n                        <td className=\"searchTitle\"> {result.text}</td>\r\n                        <td className=\"searchRent\"> {result.rent} </td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {!hidden &&\r\n            <div>\r\n                <table><tbody>\r\n                <tr>\r\n                    <td>{bookInfo.author} </td>\r\n                    <td colSpan=\"2\" rowSpan=\"2\">{bookInfo.totalName} <b>{bookInfo.name}</b> { bookInfo.claim_num} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{bookInfo.code} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{bookInfo.publish}</td>\r\n                    <td colSpan={result.retDate.length > 0 ? \"1\":\"2\"}>{bookInfo.claim} </td>\r\n                    {result.retDate.length > 0 && <td>{result.retDate}</td> }\r\n                </tr>\r\n                </tbody></table>\r\n            </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <div id=\"title\">\r\n                <h2> {props.text.searchTitle} </h2>\r\n            </div>\r\n            <div id=\"searchContents\">\r\n                <input id=\"searchInput\"\r\n                    placeholder={props.text.searchBook}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n\r\n                {displayedCodes.map((result) => showEntry(result))}\r\n            </div>\r\n            {searchResults.length > SEARCH_PER_SCREEN && (\r\n                <div id=\"pageControl\">\r\n                    <div className=\"page\" id = \"page\">\r\n                        <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={movePrev}/>\r\n                    </div>\r\n                    <div className=\"pageNum\" id=\"pageNum\">\r\n                        {pageNum+1}\r\n                    </div>\r\n                    <div className=\"page\" id = \"page\">\r\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: (searchResults.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={moveNext}/>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n//                        <NavigateBeforeIcon fontSize=\"large\" hidden={pageNum === 0 ? \"hidden\":\"\"} color=\"primary\" onClick={movePrev}/>\r\n//                        <NavigateBeforeIcon id=\"prevPage\" fontSize=\"large\" color=\"primary\" onClick={movePrev} />\r\n//                        {pageNum !== 0 ?\r\n//                         <button id=\"prevPage\" hidden onClick={movePrev}> &lt;&lt; </button> : null}\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link } from 'react-router-dom'\r\nimport {USER_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [expireDate, setExpireDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOut initialize\");\r\n\r\n\r\n            if (\"autoLogin\" in props.context.cookie)\r\n            {\r\n                const autoLogin = (props.context.cookie.autoLogin === \"true\") ? true : false;\r\n                setAutoLogin(autoLogin);\r\n            }\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            setExpireDate(date.toGMTString());\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc(false);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            compare();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.logged)\r\n        {\r\n            setState(State.LoggedIn);\r\n            const userId = props.doc.userInfo['_id'];\r\n            setUserId(userId);\r\n            setSearchResults(props.doc.getRent(userId));\r\n            await loadHistory();\r\n        }\r\n        else\r\n        {\r\n            setState(State.LoggedOut);\r\n            setUserId(\"\");\r\n            setPasswordText(\"\");\r\n        }\r\n\r\n        if (notify)\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Set title \" + props.logged)\r\n        if (props.doc.logged)\r\n        {\r\n            if (props.doc.adminMode)\r\n                setTitle(props.text.userSearch);\r\n            else\r\n                setTitle(props.text.checkOut);\r\n        }\r\n        else\r\n        {\r\n            setTitle(props.text.logIn);\r\n        }\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const toggleAutoLogin = () => {\r\n        console.log(\"Toggle autoLogin\");\r\n        const cookieString = \"autoLogin=\" + (autoLogin ? \"false\":\"true\") + \"; expires=\" + expireDate + \";\";\r\n        console.log(cookieString);\r\n        document.cookie = cookieString;\r\n        setAutoLogin(!autoLogin);\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        setState(State.LoggingIn);\r\n        setUserId(userText.toUpperCase());\r\n        await loadUser();\r\n        await loadHistory();\r\n        console.log(\"Log In\");\r\n        compare();\r\n    }\r\n\r\n    const compare = () => {\r\n        if (!userData || state === State.LoggedOut)\r\n            return;\r\n\r\n        console.log(toast.isActive(loggingId));\r\n        const prop = toastProp;\r\n\r\n        let text;\r\n        if (props.context.checkLogIn(userData, passwordText))\r\n        {\r\n            props.doc.logIn(userData.user);\r\n\r\n            setSearchResults(props.doc.getRent(userId));\r\n            setState(State.LoggedIn);\r\n\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            document.cookie = \"user_id=\" + userId + \"; expires=\" + expireDate + \";\";\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.render = text;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = loggingId;\r\n        if (toast.isActive(loggingId))\r\n        {\r\n            console.log(\"update toast\");\r\n            toast.update(loggingId, prop);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"New toast\");\r\n            toast.info(text, prop);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {title}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={state === State.LoggedIn}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <input type=\"password\" id=\"searchPassword\"\r\n                    placeholder={props.text.pwHolder}\r\n                    value={passwordText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setPasswordText(event.target.value);\r\n                    }} />\r\n                <div id=\"autoLogin\">\r\n                    <input type=\"checkbox\" id=\"autoLoginButton\" checked={autoLogin} onChange={() => toggleAutoLogin()}/>\r\n                    <label>\r\n                            {props.text.autoLogin}\r\n                    </label>\r\n                </div>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn}>\r\n                <div>\r\n                    { showEntries(searchResults) }\r\n                </div>\r\n\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <div>\r\n                    { showEntries(history) }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp, loggingId, SEARCH_PER_SCREEN, MAX_SEARCH_ENTRY } from \"../Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { Link } from 'react-router-dom'\r\nimport {USER_QUERY, USERS_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(userText, 50);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [history, setHistory] = useState([]);\r\n    const {loading: userLoading, data: userListData, error: userError } = useQuery(USERS_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [userList, setUserList] = useState({});\r\n    const [title, setTitle] = useState(\"\");\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n    const [rented, setRented] = useState([]);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"UserSearch initialize\");\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc(false);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                const stateStr = {\"0\": props.text.normal, \"1\": props.text.overDue, \"2\": props.text.stopped};\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": stateStr[user.state]};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n\r\n        if (notify)\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Set title \" + props.logged)\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const selectId = async (id) => {\r\n        if (selectedId === -1 || selectedId !== id)\r\n        {\r\n            console.log(\"Select \" + id);\r\n            setSelectedId(id);\r\n            setRented(props.doc.getRent(searchResults[id].id));\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n            setSelectedId(-1);\r\n        }\r\n    }\r\n\r\n    const showUser = (user, index) => {\r\n        const key = index.toString();\r\n        return (\r\n                <div>\r\n                    <table><tbody>\r\n                        <tr key={key} className=\"searchTr\" onClick={async ()=> await selectId(index)}>\r\n                            <td className=\"bookData\">{user.id}</td>\r\n                            <td className=\"bookData\">{user.name}</td>\r\n                            <td className=\"bookData\">{user.state}</td>\r\n                            <td className=\"bookData\">{user.rent}</td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                        {index === selectedId && showEntries(rented) }\r\n                </div>\r\n                );\r\n    }\r\n\r\n    const showUsers = (result) => {\r\n        return (<div>\r\n                    {\r\n                        result.map((user, index) => {\r\n                            return showUser(user, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 &&\r\n                        <table><tbody>\r\n                            <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                        </tbody></table>\r\n                    }\r\n                </div>);\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </>);\r\n    }\r\n    useEffect(\r\n        () => {\r\n            async function findUsers(text) {\r\n                let results = [];\r\n\r\n//                for (let i = 0 ; i < userList.length ; i++) {\r\n                  for (const key in userList) {\r\n                    const row = userList[key];\r\n                    if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                    if ((row.name && row.name.toString().includes(text)) ||\r\n                        (row.id.toLowerCase() === text.toLowerCase()))\r\n                    {\r\n                        results.push(row);\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a['text'] > b['text']; });\r\n                return results;\r\n            }\r\n            async function query() {\r\n                if (searchQuery) {\r\n                    let sr = await findUsers(searchQuery);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        setSelectedId(sr[0].index);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n                setPageNum(0);\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, props]\r\n    );\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.userSearch}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.adminMode}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onChange={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <div>\r\n                    { showUsers(searchResults) }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        this.initialized = false;\r\n        this.bookReady = false;\r\n        this.rentReady = false;\r\n        this.userReady = false;\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        this.book = {};\r\n        this.rent = {};\r\n        this.logCallback = undefined;\r\n        this.admin = false;\r\n        this.adminMode = false;\r\n        this.serverInfo = {};\r\n        this.serverAvailable = false;\r\n        this.ipAddr = \"\"\r\n        axios.get(\"https://api.ipify.org/?format=json\").then( (response) => {\r\n                            console.log(\"Get IP Address\");\r\n                            console.log(response.data);\r\n                            const ipAddr = response.data.ip;\r\n                            this.updateIpAddr(ipAddr)\r\n                      });\r\n    }\r\n\r\n    updateIpAddr(ipAddr)\r\n    {\r\n        console.log(\"IP addr updated \" + ipAddr)\r\n        this.ipAddr = ipAddr;\r\n        this.checkServerIp()\r\n    }\r\n\r\n    checkServerIp()\r\n    {\r\n        if (this.ipAddr.length == 0 || !this.serverInfo.globalIp)\r\n            return\r\n        if (this.serverInfo.globalIp === this.ipAddr)\r\n        {\r\n            console.log(\"Server is accessible \" + this.serverInfo.localIp);\r\n            this.serverAvailable = true;\r\n            const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n            window.open(query);\r\n            axios.get(query).then( (response) => {\r\n                                console.log(\"Server connected\");\r\n                                console.log(response.data);\r\n                          });\r\n        }\r\n    }\r\n\r\n\r\n    checkState() {\r\n        if (this.bookReady && this.rentReady) {\r\n            this.initialized = true;\r\n            if (this.callback) {\r\n                toast.dismiss();\r\n                this.callback();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setLogCallback(callback) {\r\n        this.logCallback = callback;\r\n    }\r\n\r\n    setRent(rent) {\r\n        this.rent = rent\r\n        this.rentReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setServerInfo(serverInfo)\r\n    {\r\n        this.serverInfo = serverInfo;\r\n        console.log(this.serverInfo.globalIp);\r\n        this.checkServerIp()\r\n    }\r\n\r\n    setBook(books) {\r\n        this.book = {};\r\n        for (let i = 0 ; i < books.length ; i++)\r\n        {\r\n            const book = books[i];\r\n            const id = book['_id'];\r\n            this.book[id] = book;\r\n        }\r\n        this.bookReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setUser(users) {\r\n        this.user = {};\r\n        for (let i = 0 ; i < users.length ; i++)\r\n        {\r\n            const user = users[i];\r\n            const id = user.id;\r\n            this.user[id] = user;\r\n            this.user[id][\"rent\"] = 0;\r\n        }\r\n        this.checkRent();\r\n        this.userReady = true;\r\n    }\r\n\r\n    checkRent() {\r\n        if (!this.userReady || !this.rentReady)\r\n            return;\r\n        console.log(this.rent);\r\n        for (let i = 0 ; i < this.rent.length ; i++)\r\n        {\r\n            const state = this.rent[i].state;\r\n\r\n//            console.log(state);\r\n            if (state !== \"1\" && state !== \"3\")\r\n                continue;\r\n\r\n            const userId = this.rent[i].user_id;\r\n//            console.log(this.rent[i]);\r\n            console.log(userId);\r\n            console.log(userId.length);\r\n            if (userId && userId.length > 0 && userId in this.user)\r\n                this.user[userId][\"rent\"] += 1;\r\n            else\r\n                this.user[userId][\"rent\"] = 1;\r\n        }\r\n        console.log(this.user);\r\n    }\r\n\r\n    setAdminMode(mode) {\r\n        this.adminMode = mode;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n    }\r\n\r\n    logIn(userInfo) {\r\n        console.log(\"Logged in: \" + userInfo['_id']);\r\n        this.logged = true;\r\n        this.userInfo = userInfo;\r\n        if (userInfo['level'] === \"2\")\r\n            this.admin = true;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n    }\r\n\r\n    logOut() {\r\n        console.log(\"Logged out\");\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        if (this.logCallback)\r\n            this.logCallback(false);\r\n    }\r\n\r\n    getRent(userId) {\r\n        let ret = [];\r\n        console.log(\"Check \" + userId);\r\n        if (!this.bookReady)\r\n            return ret;\r\n//        console.log(this.rent.length);\r\n        for (let i = 0 ; i < this.rent.length ; i++) {\r\n            const entry = this.rent[i];\r\n            if (entry[\"user_id\"] !== userId)\r\n                continue;\r\n//            console.log(entry);\r\n            const id = entry[\"book_id\"];\r\n            const book = this.book[id];\r\n//            console.log(book)\r\n            let retEntry = {}\r\n            retEntry[\"id\"] = book[\"_id\"];\r\n            retEntry[\"title\"] = book[\"title\"];\r\n            retEntry[\"rentDate\"] = entry[\"rent_date\"].split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n            retEntry[\"retDate\"] = entry[\"return_date\"].split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n            ret.push(retEntry)\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n\r\n    async openDoc() {\r\n        try {\r\n            this.initialized = true;\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.initialized;\r\n    }\r\n\r\n    setCallback(updateFunc)\r\n    {\r\n        console.log(\"Update function registered\");\r\n        this.callback = updateFunc;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","import config from \"./api/config\";\n\nconst NodeRSA = require('node-rsa');\n\nconst prk = new NodeRSA(config[\"privateKey\"]);\n\nclass Context {\n    constructor() {\n        console.log(\"Create Context\");\n\n        console.log(\"Cookies\");\n        const rawCookie = document.cookie;\n        this.cookie = rawCookie\n            .split(\";\")\n            .map(v => v.split(\"=\"))\n            .reduce((acc, v) => {\n                const key = v.shift().trim();\n                const value = v.join(\"=\").trim();\n                acc[decodeURIComponent(key)] = decodeURIComponent(value);\n                return acc;\n            }, {});\n        console.log(this.cookie);\n    }\n\n    checkLogIn(userData, passwordText) {\n        var matched = false;\n        var passwordTyped;\n        if (userData.user && passwordText.length > 0) {\n            console.log(\"User data available\");\n            const emailDb = userData.user.encrypted_email;\n            const phoneDb = userData.user.encrypted_phone;\n\n            passwordTyped = prk.sign(passwordText, 'base64');\n            if (passwordText === emailDb ||\n                passwordText === phoneDb )\n            {\n                passwordTyped = passwordText;\n                matched = true;\n            }\n            else if (emailDb === passwordTyped)\n            {\n//                console.log(\"Email match\");\n                matched = true;\n            }\n            else\n            {\n                var numberString = \"\";\n                for (let i = 0 ; i < passwordText.length ; i++)\n                {\n                    if (!isNaN(passwordText[i]))\n                        numberString += passwordText[i];;\n                }\n                passwordTyped = prk.sign(numberString, 'base64');\n                if (passwordTyped === phoneDb)\n                {\n//                    console.log(\"Phone match\");\n                    matched = true;\n                }\n                else\n                {\n//                    console.log(\"Nothing matched\");\n                }\n            }\n\n//            console.log(\"toast available\");\n        }\n        if (matched)\n        {\n            const date = new Date();\n            const days=2;\n            date.setTime(date.getTime()+(days*24*60*60*1000));\n            const expireDate = date.toGMTString();\n            document.cookie = \"password=\" +  passwordTyped + \"; expires=\" + expireDate + \";\";\n        }\n        return matched\n    }\n}\n\nexport default Context;\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Dropdown.css'\r\n\r\nfunction DropDown(props) {\r\n\r\n    const [dropdown, setDropdown] = useState(false);\r\n    const [click, setClick] = useState(false)\r\n\r\n    useEffect(\r\n        () => {\r\n            if (dropdown !== props.dropdown)\r\n            {\r\n                console.log(\"User clicked\");\r\n                console.log(props.dropdown);\r\n                setClick(!click);\r\n                setDropdown(props.dropdown);\r\n            }\r\n            const menu = document.getElementById(\"dropdown-menu\");\r\n//            menu.hidden = !click;\r\n            if (!click)\r\n            {\r\n               menu.classList.remove('is-show');\r\n            }\r\n            else\r\n            {\r\n               menu.classList.add('is-show');\r\n            }\r\n\r\n        }, [props.dropdown, dropdown, click]\r\n    );\r\n\r\n    const logOut = () =>\r\n    {\r\n        setClick(false);\r\n        props.doc.logOut();\r\n        document.cookie = \"user_id=\";\r\n        document.cookie = \"password=\";\r\n        document.cookie = \"autoLogin=false\";\r\n    }\r\n\r\n    const changeMode = () =>\r\n    {\r\n        if (props.doc.admin === true)\r\n            props.doc.setAdminMode(!props.doc.adminMode);\r\n        else\r\n            props.doc.setAdminMode(false);\r\n    }\r\n\r\n    return (\r\n            <div id='dropdown-menu' onClick={() => { setClick(!click)}} className='dropdown-menu'>\r\n                {props.logged &&\r\n                    <>\r\n                        <div className='menu-items'>\r\n                            {props.doc.userInfo[\"_id\"] + \" : \" + props.doc.userInfo[\"name\"] + props.text.nameSuffix}\r\n                        </div>\r\n                        <Link className='menu-items' to=\"/\" onClick={() => setClick(false)}>\r\n                            {props.text.home}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/notice\" onClick={() => setClick(false)}>\r\n                            {props.text.notice}\r\n                        </Link>\r\n                        {!props.doc.adminMode &&\r\n                            <>\r\n                            <Link className='menu-items' to=\"/search\" onClick={() => setClick(false)}>\r\n                                {props.text.bookSearch}\r\n                            </Link>\r\n                            <Link className='menu-items' to=\"/checkOut\" onClick={() => setClick(false)}>\r\n                                {props.text.checkOut}\r\n                            </Link>\r\n                            </>\r\n                        }\r\n                        {props.doc.adminMode &&\r\n                            <>\r\n                            <Link className='menu-items' to=\"/userSearch\" onClick={() => setClick(false)}>\r\n                                {props.text.userSearch}\r\n                            </Link>\r\n                            <Link className='menu-items' to=\"/search\" onClick={() => setClick(false)}>\r\n                                {props.text.checkOut}\r\n                            </Link>\r\n                            </>\r\n                        }\r\n                        {props.doc.admin &&\r\n                            <div className='menu-items' onClick={() => changeMode()}>\r\n                                {props.doc.adminMode && props.text.userMode}\r\n                                {!props.doc.adminMode && props.text.adminMode}\r\n                            </div>\r\n                        }\r\n                        {props.doc.serverAvailable && <>\r\n                            <div className='menu-items'>\r\n                                Check Out\r\n                            </div>\r\n                            <div className='menu-items'>\r\n                                Return\r\n                            </div>\r\n                            </>\r\n                        }\r\n                        <div className='menu-items' onClick={() => logOut()}>\r\n                            {props.text.logOut}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {!props.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/\" onClick={() => setClick(false)}>\r\n                            {props.text.home}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/notice\" onClick={() => setClick(false)}>\r\n                            {props.text.notice}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/checkOut\" onClick={() => setClick(false)}>\r\n                            {props.text.logIn}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/search\" onClick={() => setClick(false)}>\r\n                            {props.text.bookSearch}\r\n                        </Link>\r\n                        {props.doc.serverAvailable &&\r\n                            <div className='menu-items'>\r\n                                Return\r\n                            </div>\r\n                        }\r\n                    </>\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default DropDown;\r\n","import React, { useState } from 'react';\r\nimport {isMobile} from \"react-device-detect\";\r\nimport \"./Navbar.css\";\r\nimport DropDown from \"./Dropdown\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction Navbar(props) {\r\n    const [dropdown, setDropdown] = useState(false)\r\n\r\n    const onClick = () => {\r\n        const maxWidth = document.getElementById(\"navbar\").style.maxWidth;\r\n        console.log(\"maxWidth\");\r\n        console.log(maxWidth);\r\n        console.log(document.getElementById(\"navbar\").style.width);\r\n        setDropdown(!dropdown);\r\n    }\r\n\r\nreturn (\r\n    <>\r\n        <div id=\"navbar\" className=\"navbar\">\r\n            <div className='title'>\r\n                {isMobile? (<h1>{props.text[\"titleShort\"]}</h1>) : (<h1>{props.text[\"titleLong\"]}</h1>)}\r\n            </div>\r\n            <div className='menu' onClick={onClick} >\r\n                <MenuIcon className=\"img\" fontSize=\"large\" sx={{ color: \"#ffffff\"}}/>\r\n            </div>\r\n            <DropDown text={props.text} doc={props.doc} logged={props.logged} dropdown={dropdown}/>\r\n        </div>\r\n    </>\r\n)\r\n}\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Notice from \"./pages/Notice\";\r\nimport Search from \"./pages/Search\";\r\nimport CheckOut from \"./pages/CheckOut\";\r\nimport UserSearch from \"./pages/UserSearch\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\nimport Context from \"./Context\";\r\nimport text from \"./api/text\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"./Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport Navbar from \"./Navbar\";\r\nimport {BOOK_QUERY, RENT_QUERY, USER_QUERY, SERVER_QUERY} from \"./api/query.js\";\r\n\r\nconst doc = new Doc();\r\nconst context = new Context();\r\n\r\nconst textString = {};\r\nlet logMsg = \"\"\r\nfunction App() {\r\n\r\n//    const [checkOutStr, setCheckOutStr] = useState(\"\");\r\n    const [logged, setLogged] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const { loading: rentLoading, error: rentError, data: rentData } = useQuery(RENT_QUERY);\r\n    const { loading: bookLoading, error: bookError, data: bookData } = useQuery(BOOK_QUERY);\r\n    const { loading: serverLoading, error: serverError, data: serverData } = useQuery(SERVER_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY, { \"variables\": { \"_id\": userId } });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            logMsg = logMsg + \"<p>Initialize app</p>\";\r\n            console.log(process.env.APP_NAME);\r\n            console.log(process.env.APP_VERSION);\r\n            const lang = navigator.languages;\r\n            console.log(lang);\r\n            let ts = {}\r\n            if (lang.length> 0 && (lang[0].toLowerCase().includes(\"kr\") || lang[0].toLowerCase().includes(\"ko\")))\r\n            {\r\n                ts = text.kr;\r\n            }\r\n            else\r\n            {\r\n                ts = text.en;\r\n            }\r\n            for (let key in ts)\r\n            {\r\n                textString[key] = ts[key];\r\n            }\r\n\r\n            if (\"autoLogin\" in context.cookie &&  context.cookie.autoLogin === \"true\")\r\n            {\r\n                console.log(\"Auto Login: \" + context.cookie.user_id);\r\n                setUserId(context.cookie.user_id);\r\n                console.log(context.cookie.nothing);\r\n            }\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.LOADING;\r\n            prop.autoClose = false;\r\n            prop.toastId = loadingId;\r\n            toast.loading(textString.loading, prop);\r\n            doc.setLogCallback(updateLog);\r\n\r\n            loadUser();\r\n\r\n        }\r\n        initialize();\r\n    }, [loadUser]);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data loaded\");\r\n            if (!userData)\r\n            {\r\n                return;\r\n            }\r\n\r\n            console.log(\"Login check \" + context.cookie.password);\r\n            console.log(userData);\r\n            if (context.cookie.password && context.checkLogIn(userData, context.cookie.password))\r\n            {\r\n                console.log(\"Login suceeded\");\r\n                doc.logIn(userData.user);\r\n            }\r\n\r\n\r\n\r\n        }, [userData]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Rent Query Updated\");\r\n            logMsg = logMsg + \"<p>Rent Query Updated \" + rentLoading + \" \" + rentError + \"</p>\";\r\n            console.log(rentLoading);\r\n            console.log(rentError);\r\n            if (rentData)\r\n            {\r\n                console.log(\"Rent available\");\r\n                logMsg = logMsg + \"<p>Rent available</p>\"\r\n//                console.log(rentData.rents)\r\n                doc.setRent(rentData.rents)\r\n            }\r\n        }, [rentLoading, rentError, rentData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Book Query Updated\");\r\n            logMsg = logMsg + \"<p>Book Query Updated</p>\";\r\n            console.log(bookLoading)\r\n            console.log(bookError)\r\n            if (bookData)\r\n            {\r\n                console.log(\"Book available\")\r\n                logMsg = logMsg + \"<p>Book available</p>\";\r\n//                console.log(bookData.books)\r\n                doc.setBook(bookData.books)\r\n            }\r\n        }, [bookLoading, bookError, bookData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Server Query Updated\");\r\n            logMsg = logMsg + \"<p>Server Query Updated</p>\";\r\n            console.log(serverLoading)\r\n            console.log(serverError)\r\n            if (serverData)\r\n            {\r\n                console.log(\"Server info available\")\r\n                logMsg = logMsg + \"<p>Server info available</p>\";\r\n                console.log(serverData.serverInfo)\r\n                doc.setServerInfo(serverData.serverInfo)\r\n            }\r\n        }, [serverLoading, serverError, serverData]\r\n    );\r\n\r\n    function updateLog(logged) {\r\n        console.log(\"==== Update logging state \" + doc.logged);\r\n        console.log(doc.userInfo);\r\n        setLogged(doc.logged);\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n        <div className=\"App\">\r\n            <Navbar doc={doc} text={textString} logged={logged}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home doc={doc} text={textString}/>} />\r\n                <Route path=\"/notice\" element={<Notice doc={doc} text={textString} />} />\r\n                <Route path=\"/search/:id?\" element={<Search doc={doc} text={textString}/>} />\r\n                <Route path=\"/checkOut\" element={<CheckOut context={context} doc={doc} text={textString} logged={logged}/>} />\r\n                <Route path=\"/userSearch\" element={<UserSearch context={context} doc={doc} text={textString} />} />\r\n            </Routes>\r\n\r\n            <div>\r\n                <ToastContainer\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    limit={2}\r\n                />\r\n            </div>\r\n            <h3>\r\n                v {process.env.REACT_APP_VERSION}\r\n            </h3>\r\n        </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport * as Realm from \"realm-web\";\r\nimport {\r\n    ApolloClient,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    InMemoryCache,\r\n} from \"@apollo/client\";\r\n\r\nconst APP_ID = 'data-xaque';\r\nconst graphqlUri = `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\r\nconst app = new Realm.App(APP_ID);\r\n\r\n// Gets a valid Realm user access token to authenticate requests\r\nasync function getValidAccessToken() {\r\n    // Guarantee that there's a logged in user with a valid access token\r\n    if (!app.currentUser) {\r\n        // If no user is logged in, log in an anonymous user. The logged in user will have a valid\r\n        // access token.\r\n        await app.logIn(Realm.Credentials.anonymous());\r\n//        await app.logIn(apiKey);\r\n    } else {\r\n        // An already logged in user's access token might be stale. Tokens must be refreshed after\r\n        // 30 minutes. To guarantee that the token is valid, we refresh the user's access token.\r\n        await app.currentUser.refreshAccessToken();\r\n    }\r\n//    console.log(\"AccessToken: [\" + app.currentUser.accessToken + \"]\");\r\n\r\n    return app.currentUser.accessToken;\r\n}\r\n\r\n// Configure the ApolloClient to connect to your app's GraphQL endpoint\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\r\n        // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\r\n        // access token before sending the request.\r\n        fetch: async (uri, options) => {\r\n            const accessToken = await getValidAccessToken();\r\n            options.headers.Authorization = `Bearer ${accessToken}`;\r\n            return fetch(uri, options);\r\n        },\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}