{"version":3,"sources":["pages/Home.js","Util.js","api/query.js","pages/Notice.js","ListView.js","pages/Search.js","pages/CheckOutStatus.js","pages/CheckOut.js","pages/Return.js","UserInfo.js","pages/UserSearch.js","pages/RentalSituation.js","pages/RentHistory.js","pages/NewMember.js","Doc.js","Context.js","Dropdown.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useEffect","_initialize","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","console","log","doc","setCallback","undefined","stop","apply","arguments","initialize","serverAvailable","_jsxs","id","children","_jsx","Link","className","to","text","checkOut","return","dangerouslySetInnerHTML","__html","homeText","SEARCH_PER_SCREEN","MAX_SEARCH_ENTRY","String","prototype","format","formatted","this","i","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","getUserState","state","normal","overDue","stopped","getBookState","available","checkedOut","reserved","lost","damaged","given","notAvailable","deleted","compareRent","a1","a2","rentDate","title","toUtf8","unescape","encodeURIComponent","loadingId","loggingId","BOOK_QUERY","gql","_templateObject","_taggedTemplateLiteral","RENT_QUERY","_templateObject2","USERS_QUERY","_templateObject3","USER_QUERY","_templateObject4","HISTORY_QUERY","_templateObject5","HISTORY_PERIOD_QUERY","_templateObject6","NOTICE_QUERY","_templateObject7","CONTENT_QUERY","_templateObject8","SERVER_QUERY","_templateObject9","Notice","_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useState3","_useState4","displayedCodes","setDisplayedCodes","_useState5","_useState6","pageNum","setPageNum","_useState7","_useState8","selectedId","setSelectedId","_useQuery","useQuery","noticeLoading","loading","noticeData","data","noticeError","error","_useLazyQuery","useLazyQuery","_useLazyQuery2","loadSelected","_useLazyQuery2$","selectedLoading","selectedData","selectedError","notices","toString","startIdx","count","Math","min","slice","showEntry","result","date","colSpan","onClick","_id","notice","content","map","NavigateBeforeIcon","fontSize","sx","color","NavigateNextIcon","showCallback","ListView","itemList","setItemList","displayList","setDisplayList","list","keyValue","detail","initialized","Search","inputText","setInputText","_useDebounce","useDebounce","searchQuery","selectedRef","useRef","bookList","setBookList","_useState9","_useState10","rentList","setRentList","_useState11","_useState12","setBookState","bookStateRef","_useState13","_useState14","needConfirm","setNeedConfirm","needConfirmRef","_useState15","_useState16","queryRequest","toggleQueryRequest","useParams","_useState17","_useState18","advancedSearch","setAdvancedSearch","_useState19","_useState20","author","setAuthor","_useState21","_useState22","fromId","setFromId","_useState23","_useState24","toId","setToId","_useState25","_useState26","fromDate","setFromDate","_useState27","_useState28","toDate","setToDate","_useState29","_useState30","stateFilter","setStateFilter","updateDoc","_updateDoc","_callee6","rl","rm","rented","bl","books","lastKey","key","book","_context6","rent","push","code","book_id","retDate","return_date","name","num","claim","regDate","registration_date","claim_num","totalName","series","category","publisher","publish","isbn","isOpen","findBooks","_x","_findBooks","_callee2","results","url","param","response","resultString","resultObject","_context2","btoa","serverInfo","localIp","port","requestGet","sent","abrupt","concat","BOOKNAME","CLAIMNUM","_STATE","returnDate","_RETURN","index","BARCODE","REG_DATE","AUTHOR","TOTAL_NAME","CLAMENUM","PUBLISH","CLAIM","ISBN","findBookLocally","sort","a","b","_query","_callee3","sr","_context3","current","query","selectId","_ref","_callee4","_context4","_x2","setState","setSearchState","stateStr","value","document","getElementById","checked","filter","idx","element","_confirmAction","_callee7","ipAddr","portNum","obj","_context7","requestPost","hidden","entryId","flags","_callee5","_context5","rowSpan","admin","disabled","confirmAction","confirm","cancel","setPeriod","from","row","includes","_step","_iterator","_createForOfIteratorHelper","s","n","done","entry","err","e","f","parseInt","bookSearch","placeholder","searchBook","onChange","event","target","type","advSearch","bookCode","registeredDate","Calendar","date1","date2","dateStr1","getFullYear","getMonth","padStart","getDate","dateStr2","selectRange","all","search","entries","State","LoggedOut","LoggingIn","LoggedIn","CheckOutStatus","userText","setUserText","passwordText","setPasswordText","setInitialized","userId","setUserId","history","setHistory","autoLogin","setAutoLogin","loadUser","userData","_useLazyQuery3","_useLazyQuery4","loadHistory","historyData","expireDate","setExpireDate","setTitle","_userId","logged","userInfo","t0","getRent","t1","adminMode","userSearch","logIn","_autoLogin","context","cookie","Date","setTime","getTime","days","toGMTString","_func","compare","func","bookReady","rentReady","hist","rentLogs","book_state","timestamp","split","showEntries","retText","bookName","React","Fragment","showRented","noEntry","toUpperCase","_ref2","prop","toast","isActive","checkLogIn","user","TYPE","SUCCESS","logInSucceed","ERROR","logInFail","render","toastId","update","info","idHolder","onInput","pwHolder","cookieString","toggleAutoLogin","dueDate","Navigate","LoggingOut","CheckOut","bookText","setBookText","setUserData","scannedBook","setScannedBook","notifyRequest","setNotifyRequest","barcode","setBarcode","setRented","navigate","useNavigate","prefixList","getElementsByName","substring","interval","setInterval","scan","clearInterval","notify","RENTED","dismiss","prefix","updateUser","USER_CODE","_ref3","logOut","_ref4","_callee10","ret","_context10","rentSucceed","NOT_AVAILABLE","showBook","bookId","htmlFor","pattern","inputMode","_callee8","_context8","USER_NAME","nameSuffix","USER_STATE","_RENT","rentSuffix","numberOnly","bookHolder","confirmRent","_callee9","_context9","finish","Return","returned","setReturned","returnSucceed","NOT_RENTED","CameraAltIcon","confirmReturn","UserInfo","setDisabled","setUserInfo","setProperty","PHONE_NUMBER","EMAIL","ADDRESS","USER_LEVEL","NOTICE","Object","keys","refresh","phone","email","address","notice_","level","kid","adult","save","confirmSave","userLoading","userListData","userError","userList","setUserList","_args6","succeededToOpen","_extend","extend","users","setUser","getUser","extendCount","forceSelect","_args2","showUsers","showUser","_Fragment","findUsers","_x3","_findUsers","toLowerCase","input","trim","RentHistory","userName","RETURN_DATE","STATS","LENT_DATE","USER","situation","fromTime","setFromTime","toTime","setToTime","_useLazyQuery4$","historyLoading","historyError","yearValue","setYear","monthValue","setMonth","setQuery","option","year","month","thisYear","thisMonth","createElement","add","bookInfo","user_id","_search","queryTo","nextMonth","_RETURN_DATE","RENT_DATE","warn","movePrev","moveNext","NewMember","prepareNewMember","newMember","regSuccess","regFail","Doc","_classCallCheck","userReady","logCallback","_createClass","_requestGet","os","navigator","platform","axios","get","_requestPost","post","_x4","_updateIpAddr","ip","checkServerIp","_this","globalIp","then","catch","window","open","callback","checkState","checkRent","proxy","_getRent","_entry","_book","retEntry","_args4","_EXTEND_COUNT","rent_date","_openDoc","updateFunc","prk","require","config","Context","rawCookie","v","reduce","acc","shift","join","decodeURIComponent","passwordTyped","matched","emailDb","phoneDb","sign","numberString","isNaN","DropDown","dropdown","setDropdown","click","setClick","menu","classList","remove","home","checkOutStatus","Navbar","isMobile","maxWidth","style","width","MenuIcon","textString","logMsg","App","setLogged","rentLoading","rentError","rentData","_useQuery2","serverLoading","serverError","serverData","loadBook","bookLoading","bookError","bookData","notifyInit","updateLog","lang","ts","process","APP_NAME","APP_VERSION","languages","kr","en","updateIpAddr","nothing","password","setRent","rents","setBook","setServerInfo","LOADING","setLogCallback","Router","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","limit","Routes","Route","path","UserSearch","RentalSituation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","APP_ID","graphqlUri","app","Realm","getValidAccessToken","_getValidAccessToken","currentUser","anonymous","refreshAccessToken","accessToken","client","ApolloClient","link","HttpLink","uri","fetch","_fetch","options","headers","Authorization","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider"],"mappings":"8wSAgCeA,MA5Bf,SAAcC,GAUV,OATAC,qBAAU,WACmB,SAAAC,IAGxB,OAHwBA,EAAAC,YAAAC,cAAAC,MAAzB,SAAAC,IAAA,OAAAF,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACIC,QAAQC,IAAI,QACZZ,EAAMa,IAAIC,iBAAYC,GAAW,wBAAAP,EAAAQ,OAAA,GAAAV,EAAA,MACpCW,MAAA,KAAAC,UAAA,EAJkB,WACMhB,EAAAe,MAAC,KAADC,UAAA,CAIzBC,EAEJ,GAAG,IAEEnB,EAAMa,IAAIO,iBAMX,kCACQC,eAAA,OAAKC,GAAG,OAAMC,SAAA,CACVC,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,YAAWJ,SACtCvB,EAAM4B,KAAKC,WAEhBL,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,UAASJ,SACpCvB,EAAM4B,KAAKE,aAVpBN,cAAA,OAAKF,GAAG,OAAOS,wBAAyB,CAACC,OAAOhC,EAAM4B,KAAKK,WAc3E,E,0BC9BaC,EAAoB,GACpBC,EAAmB,IAYhCC,OAAOC,UAAUC,OAAS,WAEtB,IADA,IAAIC,EAAYC,KACPC,EAAI,EAAGA,EAAIvB,UAAUwB,OAAQD,IAAK,CACvC,IAAIE,EAAS,IAAIC,OAAO,MAAMH,EAAE,MAAO,MACvCF,EAAYA,EAAUM,QAAQF,EAAQzB,UAAUuB,GACpD,CACA,OAAOF,CACX,EAEO,I,kBAAMO,EAAY,CACrBC,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUtC,GAGDuC,EAAe,SAAS1B,EAAM2B,GACvC,MAAc,MAAVA,GAA2B,IAAVA,EACV3B,EAAK4B,OACG,MAAVD,GAA2B,IAAVA,EACf3B,EAAK6B,QACG,MAAVF,GAA2B,IAAVA,EACf3B,EAAK8B,aADX,CAET,EAEaC,EAAe,SAAS/B,EAAM2B,GACvC,OAAQA,GAEJ,IAAK,IACL,KAAK,EACD,OAAO3B,EAAKgC,UAChB,IAAK,IACL,KAAK,EACD,OAAOhC,EAAKiC,WAChB,IAAK,IACL,KAAK,EACD,OAAOjC,EAAKkC,SAChB,IAAK,IACL,KAAK,EACD,OAAOlC,EAAK6B,QAChB,IAAK,IACL,KAAK,EACD,OAAO7B,EAAKmC,KAChB,IAAK,IACL,KAAK,EACD,OAAOnC,EAAKoC,QAChB,IAAK,IACL,KAAK,EACD,OAAOpC,EAAKqC,MAChB,IAAK,IACL,KAAK,EACL,QACI,OAAOrC,EAAKsC,aAChB,IAAK,IACL,KAAK,EACD,OAAOtC,EAAKuC,QAExB,EAEaC,EAAc,SAASC,EAAIC,GAEpC,OAAID,EAAGE,SAAWD,EAAGC,YAEZF,EAAGE,SAAWD,EAAGC,WAEnBF,EAAGG,MAAQF,EAAGE,KACzB,EAEaC,EAAS,SAAS7C,GAC3B,OAAO8C,SAASC,mBAAmB/C,GACvC,EAMagD,EAAY,oBACZC,EAAY,oB,kDC3FZC,EAAaC,YAAGC,MAAAC,YAAA,2VAmBhBC,EAAaH,YAAGI,MAAAF,YAAA,6MAahBG,EAAcL,YAAGM,MAAAJ,YAAA,wJAUjBK,EAAaP,YAAGQ,MAAAN,YAAA,qOAYhBO,EAAgBT,YAAGU,MAAAR,YAAA,oQAYnBS,EAAuBX,YAAGY,MAAAV,YAAA,iUAY1BW,EAAeb,YAAGc,MAAAZ,YAAA,2JASlBa,EAAgBf,YAAGgB,MAAAd,YAAA,oLAUnBe,EAAejB,YAAGkB,MAAAhB,YAAA,yJCwDhBiB,MAnJf,SAAgBlG,GACZ,IAAAmG,EAA0CC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/CI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GACtCI,EAA4CL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAAjDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,EAA8BT,mBAAS,GAAEU,EAAAR,YAAAO,EAAA,GAAlCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,EAAoCb,oBAAU,GAAEc,EAAAZ,YAAAW,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,EAAyEC,YAAS1B,GAAjE2B,EAAaF,EAAtBG,QAA8BC,EAAUJ,EAAhBK,KAAyBC,EAAWN,EAAlBO,MAClDC,EAA8FC,YAAahC,EACnG,CAAC,UAAa,CAAC,IAAOqB,KAAaY,EAAAzB,YAAAuB,EAAA,GADpCG,EAAYD,EAAA,GAAAE,EAAAF,EAAA,GAAaG,EAAeD,EAAxBT,QAAgCW,EAAYF,EAAlBP,KAA2BU,EAAaH,EAApBL,MAGrE3H,qBAAU,WACmB,SAAAC,IAGxB,OAHwBA,EAAAC,YAAAC,cAAAC,MAAzB,SAAAC,IAAA,OAAAF,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACIC,QAAQC,IAAI,UACZZ,EAAMa,IAAIC,iBAAYC,GAAW,wBAAAP,EAAAQ,OAAA,GAAAV,EAAA,MACpCW,MAAA,KAAAC,UAAA,EAJkB,WACMhB,EAAAe,MAAC,KAADC,UAAA,CAIzBC,EAEJ,GAAG,IAEHlB,qBACI,WACIU,QAAQC,IAAI,cAIR6G,GAEAjB,EAAiBiB,EAAWY,QAEpC,GAAG,CAACZ,EAAYE,EAAaJ,IAGjCtH,qBACI,WACIU,QAAQC,IAAI,cAQhB,GAAG,CAACuH,EAAcC,EAAeF,IAGrCjI,qBACI,WACI,IAAMyC,EAAS6D,EAAc7D,OAG7B,GAFA/B,QAAQC,IAAI,YAAcmG,EAAQuB,WAAa,KAC/C3H,QAAQC,IAAI8B,GACRA,EAASR,EACb,CACI,IAAMqG,EAAWxB,EAAU7E,EACrBsG,EAAQC,KAAKC,IAAIxG,EAAmBQ,EAAS6F,GACnD3B,EAAkBL,EAAcoC,MAAMJ,EAASA,EAASC,GAC5D,MAGI5B,EAAkBL,GAClBS,EAAW,EAEnB,GAAG,CAACT,EAAeQ,IAGvB9G,qBACI,WACR,GACW,CAAC0G,IAGR,IAaMiC,EAAY,SAACC,GAEf,OACQxH,eAAA,MAAIK,UAAU,GAAEH,SAAA,CACZF,eAAA,MAAIK,UAAU,GAAEH,SAAA,CAAC,IAAEsH,EAAOC,KAAK,OAC/BzH,eAAA,MAAIK,UAAU,cAAcqH,QAAQ,IAAIC,QAAS,kBAlB5C1H,EAkB8DuH,EAAOI,IAjBtFtI,QAAQC,IAAI,YAAcU,EAAGgH,YAGzBlB,EAFAD,IAAe7F,GAEA,EAIDA,QAElB0G,IAVgB,IAAC1G,CAkByE,EAACC,SAAA,CAAC,IAAEsH,EAAOrE,WAFvEqE,EAAOI,IAKzC,EAgBA,OACQ5H,eAAA,OAAKC,GAAG,SAAQC,SAAA,CACZC,cAAA,OAAKF,GAAG,QAAOC,SACXC,cAAA,MAAAD,SACKvB,EAAM4B,KAAKsH,WAGnB/B,EAAa,GAAKgB,GACnB3G,cAAA,OAAKF,GAAG,gBAAeC,SACnBC,cAAA,SAAOE,UAAU,UAASH,SAACF,eAAA,SAAAE,SAAA,CACnBqH,EAAUT,EAAae,QAC3B1H,cAAA,MAAAD,SACIC,cAAA,MAAIE,UAAU,UAAUqH,QAAQ,IAAGxH,SAC9B4G,EAAae,OAAOC,mBAMrC3H,cAAA,OAAKF,GAAG,aAAYC,SAChBC,cAAA,SAAAD,SAAOC,cAAA,SAAAD,SACHoF,EAAejE,OAAS,GAAKiE,EAAeyC,KAAI,SAACP,GAAM,OAAKD,EAAUC,EAAO,UAGpFtC,EAAc7D,OAASR,GACpBb,eAAA,OAAKC,GAAG,cAAaC,SAAA,CACjBC,cAAA,OAAKE,UAAU,OAAOJ,GAAK,OAAMC,SAC7BC,cAAC6H,IAAkB,CAACC,SAAS,QAAQC,GAAI,CAACC,MAAoB,IAAZzC,EAAiB,UAAU,WAAYiC,QAzCjH,WACQjC,EAAU,GAEVC,EAAWD,EAAU,EAE7B,MAsCoBvF,cAAA,OAAKE,UAAU,UAAUJ,GAAG,UAASC,SAChCwF,EAAQ,IAEbvF,cAAA,OAAKE,UAAU,OAAOJ,GAAK,OAAMC,SAC7BC,cAACiI,IAAgB,CAACH,SAAS,QAAQC,GAAI,CAACC,MAAQjD,EAAc7D,SAAWqE,EAAU,GAAK7E,EAAqB,UAAU,WAAY8G,QAxC3J,WACQzC,EAAc7D,QAAUqE,EAAU,GAAK7E,GAEvC8E,EAAWD,EAAU,EAE7B,WAyCJ,E,yBChJA,IAAI2C,EAJJ,WACI/I,QAAQC,IAAI,gBAChB,EAiFe+I,MA9Ef,SAAkB3J,GACV,IAAAmG,EAAgCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArCyD,EAAQvD,EAAA,GAAEwD,EAAWxD,EAAA,GAE5BI,EAA8BL,mBAAS,GAAEM,EAAAJ,YAAAG,EAAA,GAAlCM,EAAOL,EAAA,GAAEM,EAAUN,EAAA,GAC1BG,EAAsCT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAA3CiD,EAAWhD,EAAA,GAAEiD,EAAcjD,EAAA,GAuDtC,OArDA7G,qBAAU,WACNU,QAAQC,IAAI,iBAChB,GAAG,IAEHX,qBAAU,WAEN4J,EAAY7J,EAAMgK,KACtB,GAAG,CAAChK,EAAMgK,OAEV/J,qBAAU,WACN+G,EAAW,EACf,GAAG,CAAChH,EAAMiK,WAEVhK,qBAAU,WACFD,EAAM0J,eAINA,EAAe1J,EAAM0J,aAE7B,GAAG,CAAC1J,EAAM0J,eAEVzJ,qBAAU,WACN,IAAMyC,EAASkH,EAASlH,OAExB,GAAIA,EAASR,EACb,CACI,IAAMqG,EAAWxB,EAAU7E,EACrBsG,EAAQC,KAAKC,IAAIxG,EAAmBQ,EAAS6F,GACnDwB,EAAeH,EAASjB,MAAMJ,EAASA,EAASC,GACpD,MAGIuB,EAAeH,EAEvB,GAAG,CAACA,EAAU7C,IAmBV1F,eAAA,OAAKC,GAAG,WAAUC,SAAA,CACbmI,EAAaI,EAAa9J,EAAMkK,QAChCN,GAAYA,EAASlH,OAASR,GAC3Bb,eAAA,OAAKC,GAAG,cAAaC,SAAA,CACjBC,cAAA,OAAKE,UAAU,OAAOJ,GAAK,OAAMC,SAC7BC,cAAC6H,IAAkB,CAACC,SAAS,QAAQC,GAAI,CAACC,MAAoB,IAAZzC,EAAiB,UAAU,WAAYiC,QAAS,WArBlHrI,QAAQC,IAAI,QACRmG,EAAU,GAEVC,EAAWD,EAAU,EAkB2G,MAExHvF,cAAA,OAAKE,UAAU,UAAUJ,GAAG,UAASC,SAChCwF,EAAQ,IAEbvF,cAAA,OAAKE,UAAU,OAAOJ,GAAK,OAAMC,SAC7BC,cAACiI,IAAgB,CAACH,SAAS,QAAQC,GAAI,CAACC,MAAQI,EAASlH,SAAWqE,EAAU,GAAK7E,EAAqB,UAAU,WAAY8G,QAAS,WAnBvJrI,QAAQC,IAAI,QACRgJ,EAASlH,QAAUqE,EAAU,GAAK7E,GAElC8E,EAAWD,EAAU,EAgBgJ,WAMjL,E,UC9EIoD,I,QAAc,GAyhBHC,OAvhBf,SAAgBpK,GACZ,IAAAmG,EAAkCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvCkE,EAAShE,EAAA,GAAEiE,EAAYjE,EAAA,GAC9BkE,EAAsBC,YAAYH,EAAW,KAAtCI,EAA0CnE,YAAAiE,EAAA,GAA/B,GAClB9D,EAA0CL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA/CF,EAAaG,EAAA,GAAEF,EAAgBE,EAAA,GACtCG,EAAoCT,mBAAS,GAAEU,EAAAR,YAAAO,EAAA,GAAxCM,EAAUL,EAAA,GAAEM,EAAaN,EAAA,GAC1B4D,EAAcC,iBAAO,KAE3B1D,EAAgCb,mBAAS,IAAGc,EAAAZ,YAAAW,EAAA,GAArC2D,EAAQ1D,EAAA,GAAE2D,EAAW3D,EAAA,GAC5B4D,EAAgC1E,mBAAS,IAAG2E,EAAAzE,YAAAwE,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAE5BG,EAAkC9E,mBAAS,GAAE+E,EAAA7E,YAAA4E,EAAA,GAA3BE,GAAFD,EAAA,GAAcA,EAAA,IACxBE,EAAeV,iBAAO,GAC5BW,EAAsClF,oBAAS,GAAMmF,EAAAjF,YAAAgF,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAC5BG,EAAiBf,kBAAO,GAE9BgB,EAA2CvF,oBAAS,GAAMwF,EAAAtF,YAAAqF,EAAA,GAAnDE,EAAYD,EAAA,GAAEE,EAAkBF,EAAA,GAE/BtK,EAAOyK,cAAPzK,GAER0K,EAA4C5F,oBAAS,GAAM6F,EAAA3F,YAAA0F,EAAA,GAApDE,EAAcD,EAAA,GAAEE,GAAiBF,EAAA,GAExCG,GAA4BhG,mBAAS,IAAGiG,GAAA/F,YAAA8F,GAAA,GAAjCE,GAAMD,GAAA,GAAEE,GAASF,GAAA,GACxBG,GAA4BpG,mBAAS,IAAGqG,GAAAnG,YAAAkG,GAAA,GAAjCE,GAAMD,GAAA,GAAEE,GAASF,GAAA,GACxBG,GAAwBxG,mBAAS,IAAGyG,GAAAvG,YAAAsG,GAAA,GAA7BE,GAAID,GAAA,GAAEE,GAAOF,GAAA,GACpBG,GAAgC5G,mBAAS,IAAG6G,GAAA3G,YAAA0G,GAAA,GAArCE,GAAQD,GAAA,GAAEE,GAAWF,GAAA,GAC5BG,GAA4BhH,mBAAS,IAAGiH,GAAA/G,YAAA8G,GAAA,GAAjCE,GAAMD,GAAA,GAAEE,GAASF,GAAA,GAExBG,GAAsCpH,mBAAS,GAAEqH,GAAAnH,YAAAkH,GAAA,GAA1CE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GA2GhC,SAEaG,KAAS,OAAAC,GAAA5M,MAAC,KAADC,UAAA,UAAA2M,KA+BvB,OA/BuBA,GAAA1N,YAAAC,cAAAC,MAAxB,SAAAyN,IAAA,IAAAC,EAAAC,EAAAC,EAAAxL,EAAAyL,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/K,EAAA,OAAAnD,cAAAG,MAAA,SAAAgO,GAAA,cAAAA,EAAA9N,KAAA8N,EAAA7N,MAAA,OAQI,IANAC,QAAQC,IAAI,mBAAqBuJ,IACjCA,IAAc,EAEV4D,EAAK,GACLC,EAAK,CAAC,EACJC,EAASjO,EAAMa,IAAI2N,KAChB/L,EAAI,EAAIA,EAAIwL,EAAOvL,OAAQD,IAEjCsL,EAAGU,KAAK,CAACC,KAAKT,EAAOxL,GAAGkM,QAASC,QAAQX,EAAOxL,GAAGoM,YAAatL,MAAM0K,EAAOxL,GAAGc,QAChFyK,EAAGC,EAAOxL,GAAGkM,SAAWV,EAAOxL,GAAGc,MAOrC,IAAW8K,KALXpD,EAAY8C,GAERG,EAAK,GACHC,EAAQnO,EAAMa,IAAIyN,KAIfA,EAAOH,EAAME,GACb9K,EAAS8K,KAAOL,EAAMA,EAAGK,GAAO,EACtCH,EAAGO,KAAK,CAACC,KAAMJ,EAAKrF,IAAK6F,KAAMR,EAAK9J,MAAOjB,MAAOA,EAAOwL,IAAKT,EAAKS,IAAKzC,OAAQgC,EAAKhC,OAAQ0C,MAAOV,EAAKU,MAChGC,QAASX,EAAKY,kBACdC,UAAWb,EAAKa,UAAWC,UAAWd,EAAKe,OAAQC,SAAUhB,EAAKiB,UAAWC,QAASlB,EAAKiB,UAAWE,KAAMnB,EAAKmB,OACzHrB,EAAUC,EAEd1N,QAAQC,IAAIuN,EAAMC,IAClBzN,QAAQC,IAAI,QACZD,QAAQC,IAAIuN,EAAMzL,QAClBmI,EAAYqD,GAAI,yBAAAK,EAAAvN,OAAA,GAAA8M,EAAA,MACnB7M,MAAA,KAAAC,UAAA,CA1IDjB,qBAAU,WACmB,SAAAC,IAUxB,OAVwBA,EAAAC,YAAAC,cAAAC,MAAzB,SAAAC,IAAA,OAAAF,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACQV,EAAMa,IAAI6O,SACV9B,KAEA5N,EAAMa,IAAIC,YAAY8M,IACtB5N,EAAMa,IAAIO,iBAEV,kCAEJT,QAAQC,IAAI,YAAcU,GAAI,wBAAAd,EAAAQ,OAAA,GAAAV,EAAA,MACjCW,MAAA,KAAAC,UAAA,EAXkB,WACMhB,EAAAe,MAAC,KAADC,UAAA,CAWzBC,EAEJ,GAAG,IAEHlB,qBACI,WACIU,QAAQC,IAAI,eAAiBU,GAGzBgJ,EAFAhJ,GAMa,GAErB,GAAG,CAACA,IAGRrB,qBACI,WAAO,SACY0P,EAASC,GAAA,OAAAC,EAAA5O,MAAC,KAADC,UAAA,UAAA2O,IAoDvB,OApDuBA,EAAA1P,YAAAC,cAAAC,MAAxB,SAAAyP,EAAyBlO,GAAI,IAAAmO,EAAAC,EAAAC,EAAAC,EAAA/B,EAAA1L,EAAA6L,EAAA6B,EAAA5M,EAAAqL,EAAAwB,EAAA,OAAAhQ,cAAAG,MAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,OACR,GAAbqP,EAAU,IAEV/P,EAAMa,IAAIO,gBAAgB,CAADiP,EAAA3P,KAAA,SAQgC,OANzDC,QAAQC,IAAI6D,EAAO7C,IACnBjB,QAAQC,IAAI0P,KAAK7L,EAAO7C,KAClBoO,EAAM,WAAahQ,EAAMa,IAAI0P,WAAWC,QAAU,IACpDxQ,EAAMa,IAAI0P,WAAWE,KAAO,QAChC9P,QAAQC,IAAI,2BACZD,QAAQC,IAAI,qBACNqP,EAAQ,CAAC,KAAQK,KAAK7L,EAAO7C,IAAQ,OAAQ,GAAMyO,EAAA3P,KAAA,GAClCV,EAAMa,IAAI6P,WAAWV,EAAKC,GAAO,KAAD,GAClC,GADfC,EAAQG,EAAAM,KACdhQ,QAAQC,IAAIsP,GACN,UAAWA,EAASxI,KAAK5F,OAAO,CAADuO,EAAA3P,KAAA,gBAAA2P,EAAAO,OAAA,SAC1Bb,GAAO,QAElB,IADM5B,EAAQ+B,EAASxI,KAAK5F,OAAOqM,MAC1B1L,EAAI,EAAIA,EAAI0L,EAAMzL,OAASD,IAE1B6L,EAAOH,EAAM1L,GACb0N,EAAY,GAAAU,OAAMvC,EAAKwC,SAAQ,KAAAD,OAAIvC,EAAKyC,UACxCxN,EAAQ+K,EAAK0C,OACfpC,EAAU,GACA,IAAVrL,GAAyB,IAAVA,GAAyB,MAAVA,GAA2B,MAAVA,IAE/CqL,EAAU5O,EAAM4B,KAAKqP,WAAa,IAAM3C,EAAK4C,SAE7Cd,EAAe,CACfe,MAAO1O,EACPb,KAAMuO,EACNrB,KAAMR,EAAKwC,SACXpC,KAAMJ,EAAK8C,QACX5C,KAAM7K,EAAa3D,EAAM4B,KAAM0M,EAAK0C,OAAO1I,YAC3CsG,QAASA,EACTK,QAASX,EAAK+C,SACd/E,OAAQgC,EAAKgD,OACblC,UAAWd,EAAKiD,WAChBpC,UAAWb,EAAKkD,SAChBhC,QAASlB,EAAKmD,QACdzC,MAAOV,EAAKoD,MACZnO,MAAO+K,EAAK0C,OACZvB,KAAMnB,EAAKqD,MAEf5B,EAAQtB,KAAK2B,GAChBC,EAAA3P,KAAA,iBAIDqP,EAAU6B,GAAgBhH,GAAU,QAEsB,OAA9DmF,EAAQ8B,MAAK,SAASC,EAAEC,GAAK,OAAOD,EAAQ,KAAIC,EAAQ,IAAG,IAAG1B,EAAAO,OAAA,SACvDb,GAAO,yBAAAM,EAAArP,OAAA,GAAA8O,EAAA,MACjB7O,MAAA,KAAAC,UAAA,CACmB,SAAA8Q,IAgBnB,OAhBmBA,EAAA7R,YAAAC,cAAAC,MAApB,SAAA4R,IAAA,IAAAC,EAAA,OAAA9R,cAAAG,MAAA,SAAA4R,GAAA,cAAAA,EAAA1R,KAAA0R,EAAAzR,MAAA,OAC2B,GAAvBC,QAAQC,IAAI,YACRsL,EAAe,CAADiG,EAAAzR,KAAA,eAAAyR,EAAAvB,OAAA,qBAGdnG,EAAY,CAAD0H,EAAAzR,KAAA,gBAAAyR,EAAAzR,KAAA,EACIiP,EAAUlF,GAAa,KAAD,GAAjCyH,EAAEC,EAAAxB,MACCjO,OAAS,EACZ8D,EAAiB0L,GAEjB1L,EAAiB,IACH,IAAd0L,EAAGxP,SACHgI,EAAY0H,QAAUF,EAAG,GAAGxD,MAAKyD,EAAAzR,KAAA,iBAErC8F,EAAiB,IAAI,yBAAA2L,EAAAnR,OAAA,GAAAiR,EAAA,MAE5BhR,MAAA,KAAAC,UAAA,EAjBA,WACmB8Q,EAAA/Q,MAAC,KAADC,UAAA,CAiBpBmR,EACJ,GACA,CAAC5H,EAAaG,EAAUI,EAAUhL,EAAO6L,EAAcK,IAoC3D,IAAMoG,GAAQ,eAAAC,EAAApS,YAAAC,cAAAC,MAAG,SAAAmS,EAAO9D,GAAI,OAAAtO,cAAAG,MAAA,SAAAkS,GAAA,cAAAA,EAAAhS,KAAAgS,EAAA/R,MAAA,OACxBC,QAAQC,IAAI,QAAU8J,EAAY0H,UACL,IAAzB1H,EAAY0H,SAAkB1H,EAAY0H,UAAY1D,GAEtD/N,QAAQC,IAAI,UAAY8N,GACxBtH,EAAcsH,GACdhE,EAAY0H,QAAU1D,IAItB/N,QAAQC,IAAI,YAAc8N,GAC1BtH,GAAe,GACfsD,EAAY0H,SAAW,GAC1B,wBAAAK,EAAAzR,OAAA,GAAAwR,EAAA,KACJ,gBAdaE,GAAA,OAAAH,EAAAtR,MAAA,KAAAC,UAAA,KAgBd,SAASyR,GAASpP,GAEd5C,QAAQC,IAAI,aAAe2C,EAAM+E,YACjCoD,EAAe0G,SAAU,EACzB3G,GAAe,GACfL,EAAa7H,GACb8H,EAAa+G,QAAU7O,EACvB5C,QAAQC,IAAIuG,EAAWmB,WAAaoD,EAAe0G,QACvD,CAEA,SAASQ,GAAerP,GAEpB,IAAMsP,EAAWtP,EAAM+E,WACjBwK,EAAQC,SAASC,eAAeH,GAAUI,QAChDtS,QAAQC,IAAI,oBAAsBiS,EAAW,WAAaC,GACzC,SAAbD,GAEAE,SAASC,eAAe,QAAQC,QAAUH,EAC1CC,SAASC,eAAe,KAAKC,QAAUH,EACvCC,SAASC,eAAe,KAAKC,QAAUH,EACvCC,SAASC,eAAe,KAAKC,QAAUH,EACvCC,SAASC,eAAe,KAAKC,QAAUH,EACvCC,SAASC,eAAe,KAAKC,QAAUH,EACvCC,SAASC,eAAe,KAAKC,QAAUH,EACvCC,SAASC,eAAe,KAAKC,QAAUH,EACvCC,SAASC,eAAe,KAAKC,QAAUH,GAIvCC,SAASC,eAAeH,GAAUI,QAAUH,EAIhD,IADA,IAAII,EAAS,EACJzQ,EAAI,EAAIA,EAAI,EAAIA,IACzB,CACI,IAAM0Q,EAAM1Q,EAAE6F,WACR8K,EAAUL,SAASC,eAAeG,GACpCC,IACAF,GAAWE,EAAQH,QAAY,GAAKxQ,EAAK,EACjD,CACAkL,GAAeuF,GACfvS,QAAQC,IAAI,WAAasS,EAAO5K,WACpC,CAE4B,SAAA+K,KAqB3B,OArB2BA,GAAAlT,YAAAC,cAAAC,MAA5B,SAAAiT,IAAA,IAAAC,EAAAC,EAAAxD,EAAAyD,EAAA,OAAArT,cAAAG,MAAA,SAAAmT,GAAA,cAAAA,EAAAjT,KAAAiT,EAAAhT,MAAA,OAO8C,GAL1CC,QAAQC,IAAI,aACZ8K,EAAe0G,SAAU,EACzB3G,GAAe,GAET8H,EAASvT,EAAMa,IAAI0P,WAAWC,QAC9BgD,EAAUxT,EAAMa,IAAI0P,WAAWE,OACf,IAAlB8C,EAAO7Q,QAAgB8Q,GAAW,GAAC,CAAAE,EAAAhT,KAAA,eAAAgT,EAAA9C,OAAA,iBASN,OAN3BZ,EAAM,WAAauD,EAAS,IAC9BC,EAAU,SACVC,EAAM,CAAC,GACD,KAAI/I,EAAY0H,QAC1BqB,EAAW,MAAIpI,EAAa+G,QAC5BzR,QAAQC,IAAI,2BACZD,QAAQC,IAAI,qBAAqB8S,EAAAhT,KAAA,GAC3BV,EAAMa,IAAI8S,YAAY3D,EAAKyD,GAAK,KAAD,GAErC3H,GAAoBD,GAAc,yBAAA6H,EAAA1S,OAAA,GAAAsS,EAAA,MACrCrS,MAAA,KAAAC,UAAA,CASD,IAAM0H,GAAY,SAACC,GACf,IAAM+K,EAAU/K,EAAO6F,OAAShE,EAAY0H,QACtCyB,EAAWD,EAAU,eAAiB,uBACtCE,EAAQ,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAM9E,OALAA,EAAMjL,EAAOtF,QAAS,EACD,IAAjBsF,EAAOtF,OAAgC,IAAjBsF,EAAOtF,OAAgC,IAAjBsF,EAAOtF,QACnDuQ,EAAM,IAAK,GACVF,GACDjT,QAAQC,IAAIkT,GAEZzS,eAAA,OAAAE,SAAA,CACAC,cAAA,OAAKF,GAAIuS,EAAS7K,QAAO7I,YAAAC,cAAAC,MAAE,SAAA0T,IAAA,OAAA3T,cAAAG,MAAA,SAAAyT,GAAA,cAAAA,EAAAvT,KAAAuT,EAAAtT,MAAA,cAAAsT,EAAAtT,KAAA,EAAkB4R,GAASzJ,EAAO6F,MAAK,cAAAsF,EAAApD,OAAA,SAAAoD,EAAArD,MAAA,wBAAAqD,EAAAhT,OAAA,GAAA+S,EAAA,KAACxS,SAC/DC,cAAA,SAAAD,SAAOC,cAAA,SAAAD,SACHF,eAAA,MAAIK,UAAU,WAAUH,SAAA,CACpBF,eAAA,MAAIK,UAAU,cAAaH,SAAA,CAAC,IAAEsH,EAAOjH,QACrCP,eAAA,MAAIK,UAAU,aAAYH,SAAA,CAAC,IAAEsH,EAAO2F,KAAK,iBAInDoF,GACFvS,eAAA,OAAAE,SAAA,CACIC,cAAA,SAAAD,SAAOF,eAAA,SAAAE,SAAA,CACPF,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAKsH,EAAOyD,OAAO,OACnBjL,eAAA,MAAI0H,QAAQ,IAAIkL,QAAQ,IAAG1S,SAAA,CAAEsH,EAAOuG,UAAU,IAAC5N,cAAA,KAAAD,SAAIsH,EAAOiG,OAAS,IAAGjG,EAAOsG,UAAU,UAE3F3N,cAAA,MAAAD,SACIF,eAAA,MAAAE,SAAA,CAAKsH,EAAO6F,KAAK,SAErBrN,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAAD,SAAKsH,EAAO2G,UACZnO,eAAA,MAAI0H,QAASF,EAAO+F,QAAQlM,OAAS,EAAI,IAAI,IAAInB,SAAA,CAAEsH,EAAOmG,MAAM,OAC/DnG,EAAO+F,QAAQlM,OAAS,GAAKlB,cAAA,MAAAD,SAAKsH,EAAO+F,kBAG9CvN,eAAA,OAAKuS,QAAS5T,EAAMa,IAAIO,kBAAoBpB,EAAMa,IAAIqT,MAAM3S,SAAA,CACxDF,eAAA,UAAQK,UAAU,aAAaJ,GAAK,IAAI6S,SAAUL,EAAM,GAAI9K,QAAS,kBAAM2J,GAAS,EAAE,EAACpR,SAAA,CAAC,IAAEvB,EAAM4B,KAAKgC,UAAU,OAC/GvC,eAAA,UAAQK,UAAU,aAAaJ,GAAK,IAAI6S,SAAUL,EAAM,GAAI9K,QAAS,kBAAM2J,GAAS,EAAE,EAACpR,SAAA,CAAC,IAAEvB,EAAM4B,KAAKmC,KAAK,OAC1G1C,eAAA,UAAQK,UAAU,aAAaJ,GAAK,IAAI6S,SAAUL,EAAM,GAAI9K,QAAS,kBAAM2J,GAAS,EAAE,EAACpR,SAAA,CAAC,IAAEvB,EAAM4B,KAAKoC,QAAQ,OAC7G3C,eAAA,UAAQK,UAAU,aAAaJ,GAAK,IAAI6S,SAAUL,EAAM,GAAI9K,QAAS,kBAAM2J,GAAS,EAAE,EAACpR,SAAA,CAAC,IAAEvB,EAAM4B,KAAKqC,MAAM,OAC3G5C,eAAA,UAAQK,UAAU,aAAaJ,GAAK,IAAI6S,SAAUL,EAAM,GAAI9K,QAAS,kBAAM2J,GAAS,EAAE,EAACpR,SAAA,CAAC,IAAEvB,EAAM4B,KAAKsC,aAAa,OAClH7C,eAAA,UAAQK,UAAU,aAAaJ,GAAK,IAAI6S,SAAUL,EAAM,GAAI9K,QAAS,kBAAM2J,GAAS,EAAE,EAACpR,SAAA,CAAC,IAAEvB,EAAM4B,KAAKuC,QAAQ,UAEjH9C,eAAA,OAAKC,GAAG,YAAYsS,QAASlI,EAAe0G,QAAQ7Q,SAAA,CAChDF,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAEoC,EAAa3D,EAAM4B,KAAMyJ,EAAa+G,SAAS,OACpE/Q,eAAA,UAAQC,GAAG,UAAU0H,QAAS,kBA7E7C,WAE2B,OAAAqK,GAAApS,MAAC,KAADC,UAAA,CA2EwBkT,EAAe,EAAC7S,SAAA,CAAC,IAAEvB,EAAM4B,KAAKyS,QAAQ,OAC1EhT,eAAA,UAAQC,GAAG,SAAS0H,QAAS,kBAnDzCrI,QAAQC,IAAI,aACZ8K,EAAe0G,SAAU,OACzB3G,GAAe,EAiD8C,EAAClK,SAAA,CAAC,IAAEvB,EAAM4B,KAAK0S,OAAO,eApCrEzL,EAAO6F,KA0CzB,EAQA,SAAS6F,GAAUC,EAAM5S,GAEjB4S,EACA7H,GAAU/K,GAEVmL,GAAQnL,EAChB,CAEA,SAASgQ,GAAgBhH,GAErB,IAAImF,EAAU,GACdpP,QAAQC,IAAIsL,GACZ,IAAK,IAAIzJ,EAAI,EAAIA,EAAImI,EAASlI,OAASD,IAAK,CACxC,IAAMgS,EAAM7J,EAASnI,GACrB,GAAIsN,EAAQrN,QAAUP,EAAkB,MAExC,IAAMP,EAAOyI,EACb,KAAIzI,EAAKc,OAAS,GAAK+R,EAAI3F,OAAS2F,EAAI3F,KAAKxG,WAAWoM,SAAS9S,IAC7D6S,EAAI/F,OAAS9M,GAAQ6S,EAAIhF,OAAS7N,EADtC,CAGA,GAAIsK,EACJ,CACI,GAAII,GAAO5J,OAAS,GAAK+R,EAAInI,SAAWmI,EAAInI,OAAOhE,WAAWoM,SAASpI,IACnE,SAEJ,GAAII,GAAOhK,OAAS,GAAK+R,EAAI/F,KAAOhC,GAChC,SAEJ,GAAII,GAAKpK,OAAS,GAAK+R,EAAI/F,KAAO5B,GAC9B,SAEJ,IAAMmC,EAAUwF,EAAIxF,QAEpB,GAAIA,EAAU/B,IAAY+B,EAAU3B,GAChC,SAMJ,GALA3M,QAAQC,IAAI6T,GACZ9T,QAAQC,IAAIqO,GACZtO,QAAQC,IAAIqO,EAAU/B,IACtBvM,QAAQC,IAAIqO,EAAU3B,MAEhB,GAAImH,EAAIlR,MAASmK,IACnB,QACR,MACK,GAAmB,GAAf9L,EAAKc,OACV,SAEJ,IAG4BiS,EAHxBxE,EAAY,GAAAU,OAAM4D,EAAI3F,KAAI,KAAA+B,OAAI4D,EAAItF,WAClCP,EAAU,GACVrL,EAAQ,IAAIqR,EAAAC,YACI7J,GAAQ,IAA5B,IAAA4J,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MACA,CAAC,IADUC,EAAKN,EAAA7B,MAEZ,GAAImC,EAAMvG,OAAS+F,EAAI/F,KACvB,CAEkB,OADdnL,EAAQ0R,EAAM1R,QACiB,MAAVA,IAEjBqL,EAAU5O,EAAM4B,KAAKqP,WAAa,IAAMgE,EAAMrG,SAElD,KACJ,CACJ,CAAC,OAAAsG,GAAAN,EAAAO,EAAAD,EAAA,SAAAN,EAAAQ,GAAA,CACD,IAAIhF,EAAe,CACfe,MAAO1O,EACPb,KAAMuO,EACNrB,KAAM2F,EAAI3F,KACVJ,KAAM+F,EAAI/F,KAAKpG,WACfkG,KAAM7K,EAAa3D,EAAM4B,KAAM2B,GAC/BqL,QAASA,EACTK,QAASwF,EAAIxF,QACb3C,OAAQmI,EAAInI,OACZ8C,UAAWqF,EAAIrF,UACfD,UAAWsF,EAAItF,UACfK,QAASiF,EAAIjF,QACbR,MAAOyF,EAAIzF,MACXzL,MAAO8R,SAAS9R,GAChBkM,KAAMgF,EAAIhF,MAEdM,EAAQtB,KAAK2B,EA1DD,CA4DhB,CAGA,OAFAzP,QAAQC,IAAImP,EAAQrN,QAEbqN,CACX,CA8CA,OACI1O,eAAA,OAAKC,GAAG,SAAQC,SAAA,CACZC,cAAA,OAAKF,GAAG,QAAOC,SACXF,eAAA,MAAAE,SAAA,CAAI,IAAEvB,EAAM4B,KAAK0T,WAAW,SAEhCjU,eAAA,OAAKC,GAAG,iBAAgBC,SAAA,CACpBC,cAAA,SAAOF,GAAG,cACNiU,YAAavV,EAAM4B,KAAK4T,WACxB1C,MAAOzI,EACPoL,SAAU,SAACC,GACPpL,EAAaoL,EAAMC,OAAO7C,MAC9B,IACAzR,eAAA,OAAKuS,QAAS5T,EAAMa,IAAIqT,MAAM3S,SAAA,CAC1BC,cAAA,SAAOoU,KAAK,WAAWtU,GAAG,iBAAiB2R,QAAS/G,EAAgBuJ,SAAU,WAhB9FtJ,IAAmBD,EAgBuG,IAC1G1K,cAAA,SAAAD,SACKvB,EAAM4B,KAAKiU,eAGxBxU,eAAA,OAAKuS,QAAS1H,EAAe3K,SAAA,CACzBF,eAAA,OAAAE,SAAA,CACAF,eAAA,SAAAE,SAAA,CAAO,IAAEvB,EAAM4B,KAAK0K,OAAO,OAC3B9K,cAAA,SAAOoU,KAAK,OAAOtU,GAAG,SAASmU,SAAU,SAACC,GAAWnJ,GAAUmJ,EAAMC,OAAO7C,MAAM,OAElFzR,eAAA,OAAAE,SAAA,CACAF,eAAA,SAAAE,SAAA,CAAO,IAAEvB,EAAM4B,KAAKkU,SAAS,OAC7BtU,cAAA,SAAOoU,KAAK,OAAOtU,GAAG,aAAamU,SAAU,SAACC,GAAWnB,IAAU,EAAMmB,EAAMC,OAAO7C,MAAO,IAC7FtR,cAAA,SAAAD,SAAO,SACPC,cAAA,SAAOoU,KAAK,OAAOtU,GAAG,WAAWmU,SAAU,SAACC,GAAWnB,IAAU,EAAOmB,EAAMC,OAAO7C,MAAO,OAE5FzR,eAAA,OAAAE,SAAA,CACAF,eAAA,SAAAE,SAAA,CAAO,IAAEvB,EAAM4B,KAAKmU,eAAe,OACnCvU,cAACwU,KAAQ,CAACP,SA3E1B,SAAsB3M,GAElBnI,QAAQC,IAAIkI,GACZ,IAAMmN,EAAQnN,EAAK,GACboN,EAAQpN,EAAK,GAIbqN,EAHKF,EAAMG,cAAc9N,WAGT,KAFV2N,EAAMI,WAAa,GAAG/N,WAAWgO,SAAS,EAAG,KAExB,IADtBL,EAAMM,UAAUjO,WAAWgO,SAAS,EAAG,KAElD3V,QAAQC,IAAIuV,GACZhJ,GAAYgJ,GAEZ,IAGMK,EAHKN,EAAME,cAAc9N,WAGT,KAFV4N,EAAMG,WAAa,GAAG/N,WAAWgO,SAAS,EAAG,KAExB,IADtBJ,EAAMK,UAAUjO,WAAWgO,SAAS,EAAG,KAElD3V,QAAQC,IAAI4V,GACZjJ,GAAUiJ,EACd,EAyDkDC,YAAY,YAE9CjV,cAAA,OAAAD,SACAC,cAAA,SAAAD,SAAOF,eAAA,SAAAE,SAAA,CACHF,eAAA,MAAoBK,UAAU,WAAUH,SAAA,CACpCF,eAAA,MAAIK,UAAW,YAAWH,SAAA,CAAC,IAAEvB,EAAM4B,KAAK8U,IAAI,OAC5CrV,eAAA,MAAIK,UAAW,YAAWH,SAAA,CAAC,IAAEvB,EAAM4B,KAAKgC,UAAU,OAClDvC,eAAA,MAAIK,UAAW,YAAWH,SAAA,CAAC,IAAEvB,EAAM4B,KAAKiC,WAAW,OACnDxC,eAAA,MAAIK,UAAW,YAAWH,SAAA,CAAC,IAAEvB,EAAM4B,KAAK6B,QAAQ,OAChDpC,eAAA,MAAIK,UAAW,YAAWH,SAAA,CAAC,IAAEvB,EAAM4B,KAAKmC,KAAK,OAC7C1C,eAAA,MAAIK,UAAW,YAAWH,SAAA,CAAC,IAAEvB,EAAM4B,KAAKoC,QAAQ,OAChD3C,eAAA,MAAIK,UAAW,YAAWH,SAAA,CAAC,IAAEvB,EAAM4B,KAAKqC,MAAM,OAC9C5C,eAAA,MAAIK,UAAW,YAAWH,SAAA,CAAC,IAAEvB,EAAM4B,KAAKsC,aAAa,OACrD7C,eAAA,MAAIK,UAAW,YAAWH,SAAA,CAAC,IAAEvB,EAAM4B,KAAKuC,QAAQ,SAT5C,aAWR9C,eAAA,MAAsBK,UAAU,WAAUH,SAAA,CACtCC,cAAA,MAAIE,UAAW,cAAaH,SAC5BC,cAAA,SAAOoU,KAAK,WAAWlU,UAAU,aAAaJ,GAAK,OAAOmU,SAAU,kBAAM7C,GAAe,KAAK,MAE9FpR,cAAA,MAAIE,UAAW,cAAaH,SAC5BC,cAAA,SAAOoU,KAAK,WAAWlU,UAAU,aAAaJ,GAAK,IAAImU,SAAU,kBAAM7C,GAAe,EAAE,MAExFpR,cAAA,MAAIE,UAAW,cAAaH,SAC5BC,cAAA,SAAOoU,KAAK,WAAWlU,UAAU,aAAaJ,GAAK,IAAImU,SAAU,kBAAM7C,GAAe,EAAE,MAExFpR,cAAA,MAAIE,UAAW,cAAaH,SAC5BC,cAAA,SAAOoU,KAAK,WAAWlU,UAAU,aAAaJ,GAAK,IAAImU,SAAU,kBAAM7C,GAAe,EAAE,MAExFpR,cAAA,MAAIE,UAAW,cAAaH,SAC5BC,cAAA,SAAOoU,KAAK,WAAWlU,UAAU,aAAaJ,GAAK,IAAImU,SAAU,kBAAM7C,GAAe,EAAE,MAExFpR,cAAA,MAAIE,UAAW,cAAaH,SAC5BC,cAAA,SAAOoU,KAAK,WAAWlU,UAAU,aAAaJ,GAAK,IAAImU,SAAU,kBAAM7C,GAAe,EAAE,MAExFpR,cAAA,MAAIE,UAAW,cAAaH,SAC5BC,cAAA,SAAOoU,KAAK,WAAWlU,UAAU,aAAaJ,GAAK,IAAImU,SAAU,kBAAM7C,GAAe,EAAE,MAExFpR,cAAA,MAAIE,UAAW,cAAaH,SAC5BC,cAAA,SAAOoU,KAAK,WAAWlU,UAAU,aAAaJ,GAAK,IAAImU,SAAU,kBAAM7C,GAAe,EAAE,MAExFpR,cAAA,MAAIE,UAAW,cAAaH,SAC5BC,cAAA,SAAOoU,KAAK,WAAWlU,UAAU,aAAaJ,GAAK,IAAImU,SAAU,kBAAM7C,GAAe,EAAE,QA1BpF,sBA+BZpR,cAAA,OAAAD,SACAF,eAAA,UAAQC,GAAG,cAAc0H,QAtGzC,WAEIrI,QAAQC,IAAI,UACZD,QAAQC,IAAI8L,IACZ/L,QAAQC,IAAIkM,IACZnM,QAAQC,IAAIsM,IACZvM,QAAQC,IAAI0M,IACZ,IAAIyC,EAAU6B,GAAgBhH,GAC9BmF,EAAQ8B,MAAK,SAASC,EAAEC,GAAK,OAAOD,EAAQ,KAAIC,EAAQ,IAAG,IAE3D,IAAIG,EAAKnC,EACLmC,EAAGxP,OAAS,EACZ8D,EAAiB0L,GAEjB1L,EAAiB,IACH,IAAd0L,EAAGxP,SACHgI,EAAY0H,QAAUF,EAAG,GAAGxD,KACpC,EAqF8DnN,SAAA,CAAC,IAAEvB,EAAM4B,KAAK+U,OAAO,eAI3EnV,cAACmI,EAAQ,CAACM,SAAUQ,EAAaT,KAAMzD,EAAe2D,OAAQ/C,EAAaqE,EAAa9B,aAAc,SAACkN,EAAS1M,GAAa,OAzNhH6F,EAyNmI6G,EAvNpJjW,QAAQC,IAAI,UAAY8K,EAAe0G,SAChCrC,EAAQ3G,KAAI,SAACP,GAAM,OAAKD,GAAUC,EAAO,IAHpD,IAAqBkH,CAyN6I,MAGtK,E,SCthBM8G,GAAQ,CACVC,UAAW,EACXC,UAAW,EACXC,SAAW,GAsRAC,OAnRf,SAAwBjX,GACpB,IAAAmG,EAAgCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArC+Q,EAAQ7Q,EAAA,GAAE8Q,EAAW9Q,EAAA,GAC5BI,EAAwCL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA7C2Q,EAAY1Q,EAAA,GAAE2Q,EAAe3Q,EAAA,GACpCG,EAA0CT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAA/CN,EAAaO,EAAA,GAAEN,EAAgBM,EAAA,GACtCG,EAAsCb,oBAAS,GAAMc,EAAAZ,YAAAW,EAAA,GAA9CkD,EAAWjD,EAAA,GAAEoQ,EAAcpQ,EAAA,GAClC4D,EAA4B1E,mBAAS,IAAG2E,EAAAzE,YAAAwE,EAAA,GAAjCyM,EAAMxM,EAAA,GAAEyM,EAASzM,EAAA,GACxBG,EAA0B9E,mBAASyQ,GAAMC,WAAU3L,EAAA7E,YAAA4E,EAAA,GAA5C3H,EAAK4H,EAAA,GAAEwH,EAAQxH,EAAA,GACtBG,EAA8BlF,mBAAS,IAAGmF,EAAAjF,YAAAgF,EAAA,GAAnCmM,EAAOlM,EAAA,GAAEmM,EAAUnM,EAAA,GAC1BI,EAAkCvF,oBAAS,GAAMwF,EAAAtF,YAAAqF,EAAA,GAA1CgM,EAAS/L,EAAA,GAAEgM,EAAYhM,EAAA,GAC9B/D,EAAuCC,YAAaxC,EACnC,CAAE,UAAa,CAAE,IAAOiS,KAAWxP,EAAAzB,YAAAuB,EAAA,GAD7CgQ,EAAQ9P,EAAA,GAAU+P,EAAQ/P,EAAA,GAAdL,KAEnBqQ,EAA6CjQ,YAAatC,EACzC,CAAE,UAAa,CAAE,QAAW+R,KAAWS,GAAA1R,YAAAyR,EAAA,GADjDE,GAAWD,GAAA,GAAUE,GAAWF,GAAA,GAAjBtQ,KAEtBsE,GAAoC5F,mBAAS,IAAG6F,GAAA3F,YAAA0F,GAAA,GAAzCmM,GAAUlM,GAAA,GAAEmM,GAAanM,GAAA,GAChCG,GAA0BhG,mBAAS,IAAGiG,GAAA/F,YAAA8F,GAAA,GAA/B5H,GAAK6H,GAAA,GAAEgM,GAAQhM,GAAA,GAkFpB,SAEauB,KAAS,OAAAC,GAAA5M,MAAC,KAADC,UAAA,UAAA2M,KAgCvB,OAhCuBA,GAAA1N,YAAAC,cAAAC,MAAxB,SAAAyN,IAAA,IAAAwK,EAAA,OAAAlY,cAAAG,MAAA,SAAAgO,GAAA,cAAAA,EAAA9N,KAAA8N,EAAA7N,MAAA,OAEkD,GAA9CC,QAAQC,IAAI,mBAAqBuJ,IAC7BnK,EAAMa,IAAI0X,OAAO,CAADhK,EAAA7N,KAAA,SAKA,OAHhBiS,EAASkE,GAAMG,UACTO,EAASvX,EAAMa,IAAI2X,SAAc,IACvChB,EAAUD,GAAQhJ,EAAAkK,GAClBjS,EAAgB+H,EAAA7N,KAAA,EAAOV,EAAMa,IAAI6X,QAAQnB,GAAO,cAAAhJ,EAAAoK,GAAApK,EAAAoC,MAAA,EAAApC,EAAAkK,IAAAlK,EAAAoK,IAAApK,EAAA7N,KAAA,GAC1CuX,KAAc,KAAD,GAAA1J,EAAA7N,KAAA,iBAInBiS,EAASkE,GAAMC,WACfU,EAAU,IACVH,EAAgB,IAAI,QAGxB1W,QAAQC,IAAI,aAAeZ,EAAMa,IAAI0X,QACjCvY,EAAMa,IAAI0X,OAENvY,EAAMa,IAAI+X,UACVP,GAASrY,EAAM4B,KAAKiX,YAEpBR,GAASrY,EAAM4B,KAAKC,UAIxBwW,GAASrY,EAAM4B,KAAKkX,OAExBnY,QAAQC,IAAI,QACZ0W,GAAe,GAAM,yBAAA/I,EAAAvN,OAAA,GAAA8M,EAAA,MACxB7M,MAAA,KAAAC,UAAA,CAlHDjB,qBAAU,WACmB,SAAAC,IAuBxB,OAvBwBA,EAAAC,YAAAC,cAAAC,MAAzB,SAAAC,IAAA,IAAAyY,EAAAjQ,EAAA,OAAA1I,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACSV,EAAMa,IAAIsJ,YAAY,CAAD3J,EAAAE,KAAA,eAAAF,EAAAoQ,OAAA,iBAGtB5Q,EAAMa,IAAI6O,UACV9B,KACJjN,QAAQC,IAAI,2CACZD,QAAQC,IAAI,6BAERZ,EAAMa,IAAIO,iBAEV,kCAGA,cAAepB,EAAMgZ,QAAQC,SAEvBtB,EAAgD,SAAnC3X,EAAMgZ,QAAQC,OAAOtB,UACxCC,EAAaD,IAEX7O,EAAO,IAAIoQ,KACN,EACXpQ,EAAKqQ,QAAQrQ,EAAKsQ,UAAWC,QAC7BjB,GAActP,EAAKwQ,eAAe,yBAAA9Y,EAAAQ,OAAA,GAAAV,EAAA,MACrCW,MAAA,KAAAC,UAAA,EAxBkB,WACMhB,EAAAe,MAAC,KAADC,UAAA,CAyBzBC,EAEJ,GAAG,IAEHlB,qBACI,WACIU,QAAQC,IAAI,sBACZgN,IACJ,GAEA,CAAC5N,EAAMa,IAAI0X,SAGftY,qBAAU,WACiB,SAAAsZ,IAGlB,OAHkBA,EAAApZ,YAAAC,cAAAC,MAAnB,SAAAyP,IAAA,OAAA1P,cAAAG,MAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,OACsC,OAAlCC,QAAQC,IAAI,sBAAsByP,EAAA3P,KAAA,EAC5B8Y,KAAU,KAAD,mBAAAnJ,EAAArP,OAAA,GAAA8O,EAAA,MAClB7O,MAAA,KAAAC,UAAA,EAJQ,WACUqY,EAAAtY,MAAC,KAADC,UAAA,CAInBuY,EACJ,GAEA,CAAC3B,IAGL7X,qBACI,WACI,GAAKiY,IAAgBlY,EAAMa,IAAI6Y,WAAc1Z,EAAMa,IAAI8Y,UAAvD,CAEAhZ,QAAQC,IAAI,oBAIZ,IAHA,IAAIgZ,EAAO,GACLC,EAAW3B,GAAY2B,SAEpBpX,EAAI,EAAIA,EAAIoX,EAASnX,OAASD,IACvC,CACI,IAAMwS,EAAQ4E,EAASpX,GACvB,IAAyB,MAArBwS,EAAM6E,YAA2C,IAArB7E,EAAM6E,cAE/B,gBAAiB7E,GAAYA,EAAMpG,aAA1C,CAEAlO,QAAQC,IAAIqU,GACZ,IAAM3T,EAAK2T,EAAMtG,QACXnK,EAASlD,KAAMtB,EAAMa,IAAIyN,KAAQtO,EAAMa,IAAIyN,KAAKhN,GAAIkD,MAAQ,MAC5DsE,EAAOmM,EAAM8E,UAAUC,MAAM,KAAK,GAAGnX,QAAQ,IAAK,IAAK,GAAGA,QAAQ,IAAK,KACvE+L,EAAUqG,EAAMpG,YAChBG,EAAS1N,KAAMtB,EAAMa,IAAIyN,KAAQtO,EAAMa,IAAIyN,KAAKhN,GAAI0N,MAAQ,MAClE4K,EAAKnL,KAAK,CAAC,GAAMnN,EAAI,MAASkD,EAAO,SAAYsE,EAAM,QAAW8F,EAAS,MAASI,GAPxE,CAShB,CACA4K,EAAK/H,KAAKzN,GACVzD,QAAQC,IAAI,eACZ8W,EAAWkC,EAvBD,CAwBd,GAEA,CAAC1B,GAAalY,EAAMa,IAAI6Y,UAAW1Z,EAAMa,IAAI8Y,YAqCjD,IA8BMM,GAAc,SAACpR,EAAQqR,GACzB,OAAQ1Y,cAAA,OAAAD,SACIC,cAAA,SAAAD,SAAOF,eAAA,SAAAE,SAAA,CACPF,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,GAAG,KAAIC,SAAEvB,EAAM4B,KAAKN,KACxBE,cAAA,MAAIF,GAAG,WAAUC,SAAEvB,EAAM4B,KAAK2C,WAC9B/C,cAAA,MAAIF,GAAG,aAAYC,SAAE2Y,MAHjB,MAMJrR,EAAOO,KAAI,SAACoF,EAAM2C,GACd,OAxCL,SAAC3C,EAAM2C,GACtB,IAAM7P,EAAKkN,EAAS,GACdjK,EAAWiK,EAAe,SAC1BI,EAAUJ,EAAc,QACxB2L,EAAW3L,EAAY,MACvBQ,EAAQR,EAAY,MACpBH,EAAM8C,EAAM7I,WAClB,OAAQjH,eAAC+Y,IAAMC,SAAQ,CAAA9Y,SAAA,CACXF,eAAA,MAAcK,UAAU,WAAUH,SAAA,CAC9BC,cAAA,MAAIE,UAAU,WAAUH,SAACC,cAACC,IAAI,CAACE,GAAI,WAAWL,EAAGC,SAAED,MACnDE,cAAA,MAAIE,UAAU,WAAUH,SAAEgD,IAC1B/C,cAAA,MAAIE,UAAU,WAAUH,SAAEqN,MAHrBP,GAKThN,eAAA,MAAwBK,UAAU,WAAUH,SAAA,CACxCC,cAAA,MAAIE,UAAU,WAAUH,SAAEyN,IAC1BxN,cAAA,MAAIuH,QAAQ,IAAIrH,UAAU,WAAUH,SAAE4Y,MAFjC9L,EAAM,WANEA,EAAM,WAYvC,CAqB+BiM,CAAW9L,EAAM2C,EAC5B,IAGkB,IAAlBtI,EAAOnG,QAAgBlB,cAAA,MAAAD,SAAeC,cAAA,MAAIuH,QAAQ,IAAGxH,SAAEvB,EAAM4B,KAAK2Y,WAAnC,cAInD,EAEMzB,GAAK,eAAAvG,EAAApS,YAAAC,cAAAC,MAAG,SAAA4R,IAAA,OAAA7R,cAAAG,MAAA,SAAA4R,GAAA,cAAAA,EAAA1R,KAAA0R,EAAAzR,MAAA,OAEwB,OADlCiS,EAASkE,GAAME,WACfS,EAAUN,EAASsD,eAAerI,EAAAzR,KAAA,EAC5BmX,IAAW,KAAD,SAAA1F,EAAAzR,KAAA,EACVuX,KAAc,KAAD,EACG,OAAtBtX,QAAQC,IAAI,UAAUuR,EAAAzR,KAAA,EAChB8Y,KAAU,KAAD,mBAAArH,EAAAnR,OAAA,GAAAiR,EAAA,KAClB,kBAPU,OAAAM,EAAAtR,MAAA,KAAAC,UAAA,KASLsY,GAAO,eAAAiB,EAAAta,YAAAC,cAAAC,MAAG,SAAAmS,IAAA,IAAAkI,EAAA9Y,EAAA,OAAAxB,cAAAG,MAAA,SAAAkS,GAAA,cAAAA,EAAAhS,KAAAgS,EAAA/R,MAAA,UACPoX,GAAYvU,IAAUsT,GAAMC,UAAS,CAAArE,EAAA/R,KAAA,eAAA+R,EAAA7B,OAAA,iBAInB,GADvBjQ,QAAQC,IAAI+Z,KAAMC,SAAS/V,IACrB6V,EAAO5X,GAGT9C,EAAMgZ,QAAQ6B,WAAW/C,EAASgD,KAAM1D,GAAc,CAAD3E,EAAA/R,KAAA,SAIrC,OAFhBV,EAAMa,IAAIiY,MAAMhB,EAASgD,MAAMrI,EAAAgG,GAE/BjS,EAAgBiM,EAAA/R,KAAA,EAAOV,EAAMa,IAAI6X,QAAQnB,GAAO,OAAA9E,EAAAkG,GAAAlG,EAAA9B,MAAA,EAAA8B,EAAAgG,IAAAhG,EAAAkG,IAChDhG,EAASkE,GAAMG,UAEf0D,EAAK9E,KAAO+E,KAAMI,KAAKC,QACvBpZ,EAAO5B,EAAM4B,KAAKqZ,aAClBlI,SAASkG,OAAS,WAAa1B,EAAS,aAAeY,GAAa,IAAI1F,EAAA/R,KAAA,iBAIxEga,EAAK9E,KAAO+E,KAAMI,KAAKG,MACvBtZ,EAAO5B,EAAM4B,KAAKuZ,UAAU,QAEhCT,EAAKU,OAASxZ,EACd8Y,EAAK1X,UAAY,IACjB0X,EAAKW,QAAUxW,EACX8V,KAAMC,SAAS/V,IAEflE,QAAQC,IAAI,gBACZ+Z,KAAMW,OAAOzW,EAAW6V,KAIxB/Z,QAAQC,IAAI,aACZ+Z,KAAMY,KAAK3Z,EAAM8Y,IACpB,yBAAAjI,EAAAzR,OAAA,GAAAwR,EAAA,KACJ,kBArCY,OAAAiI,EAAAxZ,MAAA,KAAAC,UAAA,KAuCb,OAAKlB,EAAMa,IAAIsJ,YAIX9I,eAAA,OAAKC,GAAG,WAAUC,SAAA,CACdC,cAAA,OAAKF,GAAG,QAAOC,SACXC,cAAA,MAAAD,SACKiD,OAGTnD,eAAA,OAAKC,GAAG,gBAAgBsS,SAAUrQ,IAAUsT,GAAMG,UAAUzV,SAAA,CACxDC,cAAA,SAAOoU,KAAK,OAAOtU,GAAG,cAClBiU,YAAavV,EAAM4B,KAAK4Z,SACxB1I,MAAOoE,EACP/C,UAAWhK,EACXsR,QAAS,SAAC/F,GACNyB,EAAYzB,EAAMC,OAAO7C,MAC7B,IACJtR,cAAA,SAAOoU,KAAK,WAAWtU,GAAG,iBACtBiU,YAAavV,EAAM4B,KAAK8Z,SACxB5I,MAAOsE,EACPjD,UAAWhK,EACXsR,QAAS,SAAC/F,GACN2B,EAAgB3B,EAAMC,OAAO7C,MACjC,IACJzR,eAAA,OAAKC,GAAG,YAAWC,SAAA,CACfC,cAAA,SAAOoU,KAAK,WAAWtU,GAAG,kBAAkB2R,QAAS0E,EAAWlC,SAAU,kBAtGlE,WACpB9U,QAAQC,IAAI,oBACZ,IAAM+a,EAAe,cAAgBhE,EAAY,QAAQ,QAAU,aAAeQ,GAAa,IAE/FpF,SAASkG,OAAS0C,EAClB/D,GAAcD,EAClB,CAgGgGiE,EAAiB,IACjGpa,cAAA,SAAAD,SACSvB,EAAM4B,KAAK+V,eAGzBtW,eAAA,UAAQC,GAAG,QAAQ0H,QAAO7I,YAAAC,cAAAC,MAAE,SAAA0T,IAAA,OAAA3T,cAAAG,MAAA,SAAAyT,GAAA,cAAAA,EAAAvT,KAAAuT,EAAAtT,MAAA,cAAAsT,EAAApD,OAAA,SAAYkI,MAAO,wBAAA9E,EAAAhT,OAAA,GAAA+S,EAAA,KAACxS,SAAA,CAAC,IAAEvB,EAAM4B,KAAKkX,MAAM,UAEvEzX,eAAA,OAAKC,GAAG,iBAAiBsS,SAAUrQ,IAAUsT,GAAMG,UAAUzV,SAAA,CACzDC,cAAA,OAAAD,SACM0Y,GAAY1T,EAAevG,EAAM4B,KAAKia,WAG5Cra,cAAA,OAAKF,GAAG,OAAMC,SAAEvB,EAAM4B,KAAK6V,UAC3BjW,cAACmI,EAAQ,CAACK,KAAMyN,EAAS/N,aAAc,SAACkN,GAAc,OAAOqD,GAAYrD,EAAS5W,EAAM4B,KAAKqP,WAAa,UAtC3GzP,cAACsa,IAAQ,CAACna,GAAG,KA0C5B,ECxRMkV,GAAQ,CACVC,UAAW,EACXC,UAAW,EACXC,SAAW,EACX+E,WAAY,GA2aDC,OAxaf,SAAkBhc,GACd,IAAAmG,EAAgCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArC+Q,EAAQ7Q,EAAA,GAAE8Q,EAAW9Q,EAAA,GAC5BI,EAAgCL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAArCwV,EAAQvV,EAAA,GAAEwV,EAAWxV,EAAA,GAC5B6D,EAAsBC,YAAYyR,EAAU,KAArCxR,EAAyCnE,YAAAiE,EAAA,GAA9B,GAClB1D,EAA4BT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAAjC0Q,EAAMzQ,EAAA,GAAE0Q,EAAS1Q,EAAA,GACxBG,EAA0Bb,mBAASyQ,GAAMC,WAAU5P,EAAAZ,YAAAW,EAAA,GAA5C1D,EAAK2D,EAAA,GAAEyL,EAAQzL,EAAA,GACtB4D,EAAgC1E,mBAAS,CAAC,GAAE2E,EAAAzE,YAAAwE,EAAA,GAArCgN,EAAQ/M,EAAA,GAAEoR,EAAWpR,EAAA,GAC5BG,EAAsC9E,mBAAS,CAAC,GAAE+E,EAAA7E,YAAA4E,EAAA,GAA3CkR,EAAWjR,EAAA,GAAEkR,EAAclR,EAAA,GAClCG,EAAsClF,oBAAS,GAAMmF,EAAAjF,YAAAgF,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCI,EAA0CvF,mBAAS,CAAC,GAAEwF,EAAAtF,YAAAqF,EAAA,GAA/C2Q,EAAa1Q,EAAA,GAAE2Q,EAAgB3Q,EAAA,GACtCI,EAA8B5F,mBAAS,IAAG6F,EAAA3F,YAAA0F,EAAA,GAAnCwQ,EAAOvQ,EAAA,GAAEwQ,EAAUxQ,EAAA,GAC1BG,EAA4BhG,mBAAS,IAAGiG,EAAA/F,YAAA8F,EAAA,GAAjC6B,GAAM5B,EAAA,GAAEqQ,GAASrQ,EAAA,GAClBsQ,GAAWC,cAEjB3c,qBAAU,WACmB,SAAAC,IAcxB,OAdwBA,EAAAC,YAAAC,cAAAC,MAAzB,SAAAyP,IAAA,IAAA+M,EAAApa,EAAAnB,EAAA,OAAAlB,cAAAG,MAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,OAKI,IAJAC,QAAQC,IAAI,2CACZD,QAAQC,IAAI,uBACNic,EAAa9J,SAAS+J,kBAAkB,YAC/BN,EAAQO,UAAU,EAAG,GAC3Bta,EAAI,EAAIA,EAAIoa,EAAWna,OAASD,IAE/BnB,EAAKub,EAAWpa,GAAGnB,GAErBub,EAAWpa,GAAGwQ,QADd,OAAS3R,EAKhB,wBAAA+O,EAAArP,OAAA,GAAA8O,EAAA,MACJ7O,MAAA,KAAAC,UAAA,CAED,IAAM8b,EAAWC,YAAW9c,YAAAC,cAAAC,MAAC,SAAAC,IAAA,IAAAiT,EAAAC,EAAAxD,EAAAE,EAAAxB,EAAA,OAAAtO,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAEnB,YAAaV,EAAMa,IAAI0P,YAAiB,SAAUvQ,EAAMa,IAAI0P,WAAW,CAAA/P,EAAAE,KAAA,eAAAF,EAAAoQ,OAAA,qBAEzE5Q,EAAMa,IAAIqT,MAAM,CAAD1T,EAAAE,KAAA,eAAAF,EAAAoQ,OAAA,iBAIuB,GAF1C,kCACM2C,EAASvT,EAAMa,IAAI0P,WAAWC,QAC9BgD,EAAUxT,EAAMa,IAAI0P,WAAWE,OACjC8C,EAAO7Q,OAAS,GAAK8Q,EAAU,GAAC,CAAAhT,EAAAE,KAAA,SAGJ,OADtBsP,EAAM,WAAauD,EAAS,IAC9BC,EAAU,eAAchT,EAAAE,KAAA,GACLV,EAAMa,IAAI6P,WAAWV,GAAK,KAAD,GAA1CE,EAAQ1P,EAAAmQ,MACRjC,EAAOwB,EAASxI,KAAKwV,QAEvBvc,QAAQC,IAAI8N,GACZ+N,EAAW/N,IACd,yBAAAlO,EAAAQ,OAAA,GAAAV,EAAA,KAEN,KAGH,OAxCmB,WACMJ,EAAAe,MAAC,KAADC,UAAA,CAsCzBC,GACO,kBAAMgc,cAAcH,EAAU,CAEzC,GAAG,IAEH/c,qBACI,WACIU,QAAQC,IAAI,sBACZD,QAAQC,IAAI+Z,KAAMC,SAAS/V,IAC3B,IAEIjD,EAFE8Y,EAAO5X,EAGTsa,GAAS,EACT,cAAetF,GAAYvU,IAAUsT,GAAMG,UAE3CrE,EAASkE,GAAMG,UAEf0D,EAAK9E,KAAO+E,KAAMI,KAAKC,QACvBpZ,EAAO5B,EAAM4B,KAAKqZ,aAClBmC,GAAS,GAEF,cAAetF,IAEtBnF,EAASkE,GAAMC,WAEXvT,IAAUsT,GAAME,YAEhB2D,EAAK9E,KAAO+E,KAAMI,KAAKG,MACvBtZ,EAAO5B,EAAM4B,KAAKuZ,UAClBiC,GAAS,IAIbA,GAEAb,EAAiB,CAAC,GAAM3X,EACN,KAAQhD,EACR,KAAQ8Y,EAAK9E,MAEvC,GAEA,CAACkC,IAGL7X,qBACI,WACIU,QAAQC,IAAI,iBACR,YAAawb,EAEc,IAAvBA,EAAYpL,OAEZvF,GAAe,IAIf8Q,EAAiB,CAAC,GAAM3X,EACN,KAAQ5E,EAAM4B,KAAKyb,OACnB,KAAQ1C,KAAMI,KAAKG,QACrCzP,GAAe,KAKnBA,GAAe,GACfgR,EAAW,IAEnB,GAEA,CAACL,IAGLnc,qBACI,WACI,GAAO,SAAUqc,EAAjB,CAGA3B,KAAM2C,UACN3c,QAAQC,IAAI,gBAAkB0b,EAAc1a,MAC5C,IAAM8Y,EAAO5X,EACb4X,EAAK9E,KAAO0G,EAAc1G,KAC1B8E,EAAK1X,UAAY,IASb2X,KAAMY,KAAKe,EAAc1a,KAAM8Y,EAfzB,CAiBd,GACA,CAAC4B,IAGLrc,qBACI,WACI,GAAIsD,IAAUsT,GAAMG,SACpB,CAGI,IAFA,IASIwF,EATEK,EAAa9J,SAAS+J,kBAAkB,YAC1CS,EAAS,GACJ9a,EAAI,EAAIA,EAAIoa,EAAWna,OAASD,IAEjCoa,EAAWpa,GAAGwQ,UACdsK,EAASV,EAAWpa,GAAGnB,IACvBX,QAAQC,IAAI,YAAc6B,EAAE6F,WAAa,IAAMiV,EAAS,KAK5Df,EADgB,MAAhBtF,EAAS,IAA6B,KAAfA,EAAS,GACtBA,EAEAqG,EAASrG,EACvBuF,EAAWD,EACf,CACJ,GAAG,CAACjZ,EAAO2T,IAGf,IAAMsG,GAAU,eAAA/C,EAAAta,YAAAC,cAAAC,MAAG,SAAA4R,EAAOiF,GAAQ,IAAAlH,EAAAC,EAAAC,EAAA4K,EAAA,OAAA1a,cAAAG,MAAA,SAAA4R,GAAA,cAAAA,EAAA1R,KAAA0R,EAAAzR,MAAA,OAEoB,OAD5CsP,EAAM,WAAahQ,EAAMa,IAAI0P,WAAWC,QAAU,IAAMxQ,EAAMa,IAAI0P,WAAWE,KAAO,cAAgByG,EACpGjH,EAAQ,CAAC,KAAQiH,EAAU,KAAO,WAAU/E,EAAAzR,KAAA,EAC3BV,EAAMa,IAAI6P,WAAWV,EAAKC,GAAO,KAAD,EAAjDC,EAAQiC,EAAAxB,KACRmK,EAAO5K,EAASxI,KAAK5F,OAE3Bqa,EAAYrB,GACZna,QAAQC,IAAIka,GACZtD,EAAUsD,EAAK2C,WAAW,wBAAAtL,EAAAnR,OAAA,GAAAiR,EAAA,KAC7B,gBATerC,GAAA,OAAA6K,EAAAxZ,MAAA,KAAAC,UAAA,KAWV4X,GAAK,eAAA4E,EAAAvd,YAAAC,cAAAC,MAAG,SAAAmS,IAAA,IAAAlR,EAAA,OAAAlB,cAAAG,MAAA,SAAAkS,GAAA,cAAAA,EAAAhS,KAAAgS,EAAA/R,MAAA,OAEW,GADrBC,QAAQC,IAAI,SACZD,QAAQC,IAAI4b,GACW,IAAnBA,EAAQ9Z,OAAY,CAAA+P,EAAA/R,KAAA,eAAA+R,EAAA7B,OAAA,iBAExB+B,EAASkE,GAAME,WACTzV,EAAKkb,EAAQhC,cACnBgD,GAAWlc,GAAI,wBAAAmR,EAAAzR,OAAA,GAAAwR,EAAA,KAClB,kBARU,OAAAkL,EAAAzc,MAAA,KAAAC,UAAA,KAULyc,GAAM,eAAAC,EAAAzd,YAAAC,cAAAC,MAAG,SAAA0T,IAAA,OAAA3T,cAAAG,MAAA,SAAAyT,GAAA,cAAAA,EAAAvT,KAAAuT,EAAAtT,MAAA,OACXC,QAAQC,IAAI,UACZub,EAAY,CAAC,GACbhF,EAAY,IACZkF,EAAe,CAAC,GAChBI,EAAW,IACXC,GAAU,IACVC,GAAS,KAAI,wBAAA3I,EAAAhT,OAAA,GAAA+S,EAAA,KAChB,kBARW,OAAA6J,EAAA3c,MAAA,KAAAC,UAAA,KAwFV,SAEakT,KAAa,OAAAf,GAAApS,MAAC,KAADC,UAAA,UAAAmS,KAuC3B,OAvC2BA,GAAAlT,YAAAC,cAAAC,MAA5B,SAAAwd,IAAA,IAAA7N,EAAAC,EAAAC,EAAA4N,EAAAlc,EAAA,OAAAxB,cAAAG,MAAA,SAAAwd,GAAA,cAAAA,EAAAtd,KAAAsd,EAAArd,MAAA,OASK,OAPDC,QAAQC,IAAI,aACZ6K,GAAe,GACf9K,QAAQC,IAAIwb,GACNpM,EAAM,WAAahQ,EAAMa,IAAI0P,WAAWC,QAAU,IAAMxQ,EAAMa,IAAI0P,WAAWE,KAAO,YACpFR,EAAQ,CACV3B,KAAM8N,EAAYhL,QAClB0J,KAAMvD,GACTwG,EAAArd,KAAA,EACsBV,EAAMa,IAAI8S,YAAY3D,EAAKC,GAAO,KAAD,EAAlDC,EAAQ6N,EAAApN,KACRmN,EAAM5N,EAASxI,KAAK5F,OAC1BnB,QAAQC,IAAI,kBACZD,QAAQC,IAAIkd,GAEA,YAARA,GAEAvB,EAAiB,CAAC,GAAM3X,EACN,KAAQ5E,EAAM4B,KAAKoc,YACnB,KAAQrD,KAAMI,KAAKC,UACrC/M,GAAOQ,KAAK,CAAC,GAAM2N,EAAYhL,QAAS,KAAQgL,EAAYtL,WAC5DnQ,QAAQC,IAAIqN,IACZyO,GAAUzO,MAMNrM,EADAkc,KAAO9d,EAAM4B,KACN5B,EAAM4B,KAAKkc,GAEX9d,EAAM4B,KAAKqc,cACtBtd,QAAQC,IAAIgB,GACZ2a,EAAiB,CAAC,GAAM3X,EACN,KAAQhD,EACR,KAAQ+Y,KAAMI,KAAKG,SAEzCmB,EAAe,CAAC,GAChBI,EAAW,IACXe,GAAWjG,GAAQ,yBAAAwG,EAAA/c,OAAA,GAAA6c,EAAA,MACtB5c,MAAA,KAAAC,UAAA,CAoBD,SAASgd,GAAS/P,GAEd,OAAQ9M,eAAA,OAAKC,GAAG,WAAUC,SAAA,CACdF,eAAA,OAAKC,GAAG,UAASC,SAAA,CAChBvB,EAAM4B,KAAKia,QAAQ,MAAI7b,EAAMa,IAAIgb,WAEjC1N,EAAM/E,KAAI,SAACoF,EAAM2C,GAAY,OAxB9C,SAAmBA,EAAO3C,GAWtB,OAAQnN,eAAA,OAAKC,GAAG,YAAWC,SAAA,CACfF,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAEiN,EAAKlN,GAAG,OAC7BD,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAEiN,EAAKM,KAAK,SAFVN,EAAKlN,GAK1C,CAQqDsH,CAAUuI,EAAO3C,EAAM,MAE5E,CAiBA,OA3JAvO,oBAASE,YAAAC,cAAAC,MACL,SAAAyN,IAAA,IAAAqQ,EAAAnO,EAAAC,EAAAC,EAAA5B,EAAA,OAAAlO,cAAAG,MAAA,SAAAgO,GAAA,cAAAA,EAAA9N,KAAA8N,EAAA7N,MAAA,YACQub,EAASvZ,OAAS,GAAC,CAAA6L,EAAA7N,KAAA,SAW0B,OAPzCyd,EADAne,EAAMa,IAAIqT,MACD+H,EAEA,KAAOA,EACpBtb,QAAQC,IAAI,gBAAkBud,GACxBnO,EAAM,WAAahQ,EAAMa,IAAI0P,WAAWC,QAAU,IACpDxQ,EAAMa,IAAI0P,WAAWE,KAAO,QAE1BR,EAAQ,CAAC,KAAQkO,EAAQ,OAAS,GAAK5P,EAAA7N,KAAA,EACtBV,EAAMa,IAAI6P,WAAWV,EAAKC,GAAO,KAAD,EAAjDC,EAAQ3B,EAAAoC,KACRrC,EAAO4B,EAASxI,KAAK5F,OAC3BnB,QAAQC,IAAI0N,GAER,UAAWA,GAAQ,aAAcA,EAAKH,QAEtCxN,QAAQC,IAAI0N,EAAKH,OACjBkO,EAAe/N,EAAKH,QACvB,yBAAAI,EAAAvN,OAAA,GAAA8M,EAAA,KAGT,CAACrD,EAAazK,EAAMa,MAGxBZ,oBAASE,YAAAC,cAAAC,MACL,SAAAiT,IAAA,IAAAuJ,EAAAU,EAAA9a,EAAAnB,EAAA6c,EAAAnO,EAAAC,EAAAC,EAAA5B,EAAA,OAAAlO,cAAAG,MAAA,SAAAmT,GAAA,cAAAA,EAAAjT,KAAAiT,EAAAhT,MAAA,OAC2C,GAAvCC,QAAQC,IAAI,gBAAkB4b,GACP,IAAnBA,EAAQ9Z,OAAY,CAAAgR,EAAAhT,KAAA,eAAAgT,EAAA9C,OAAA,oBAEpBrN,IAAUsT,GAAMG,SAAQ,CAAAtD,EAAAhT,KAAA,QAExB,GAA6B,IAAzB8b,EAAQ7F,OAAO,OAAwC,IAAzB6F,EAAQ7F,OAAO,MACjD,CAGI,IAFMkG,EAAa9J,SAAS+J,kBAAkB,YACxCS,EAASf,EAAQO,UAAU,EAAG,GAC3Bta,EAAI,EAAIA,EAAIoa,EAAWna,OAASD,IAE/BnB,EAAKub,EAAWpa,GAAGnB,GAErBub,EAAWpa,GAAGwQ,QADdsK,IAAWjc,EAMnB6V,EAAYqF,EAAQO,UAAU,GAClC,CAACrJ,EAAAhT,KAAA,mBAE6B,IAAzB8b,EAAQ7F,OAAO,MAAW,CAAAjD,EAAAhT,KAAA,SAOc,OALvCyd,EAAS3B,EACf7b,QAAQC,IAAI,gBAAkBud,GACxBnO,EAAM,WAAahQ,EAAMa,IAAI0P,WAAWC,QAAU,IACpDxQ,EAAMa,IAAI0P,WAAWE,KAAO,QAE1BR,EAAQ,CAAC,KAAQkO,EAAQ,OAAS,GAAKzK,EAAAhT,KAAA,GACtBV,EAAMa,IAAI6P,WAAWV,EAAKC,GAAO,KAAD,GAAjDC,EAAQwD,EAAA/C,KACRrC,EAAO4B,EAASxI,KAAK5F,OAC3BnB,QAAQC,IAAI0N,GACR,UAAWA,GAAQ,aAAcA,EAAKH,OAEtCkO,EAAe/N,EAAKH,OACvB,yBAAAuF,EAAA1S,OAAA,GAAAsS,EAAA,KAGT,CAACkJ,EAASxc,EAAMa,IAAK0C,IAwFrBlC,eAAA,OAAKC,GAAG,WAAUC,SAAA,CACdC,cAAA,OAAKF,GAAG,QAAOC,SACXC,cAAA,MAAAD,SACKvB,EAAM4B,KAAKC,aAGpBR,eAAA,OAAKC,GAAG,gBAAgBsS,OAAQrQ,IAAUsT,GAAMG,SAASzV,SAAA,CACrDC,cAAA,SAAOoU,KAAK,QAAQtU,GAAK,KAAKwN,KAAK,aACnCtN,cAAA,SAAO4c,QAAQ,KAAK1c,UAAU,WAAWoN,KAAK,WAAUvN,SAAC,SACzDC,cAAA,SAAOoU,KAAK,QAAQtU,GAAK,KAAKwN,KAAK,aACnCtN,cAAA,SAAO4c,QAAQ,KAAK1c,UAAU,WAAWoN,KAAK,WAAUvN,SAAC,SACzDC,cAAA,SAAOoU,KAAK,OAAOtU,GAAG,cAAc+c,QAAQ,SAASC,UAAU,UAC3D/I,YAAavV,EAAM4B,KAAK4Z,SACxB1I,MAAOoE,EACPuE,QAAS,SAAC/F,GACNyB,EAAYzB,EAAMC,OAAO7C,MAC7B,IACLzR,eAAA,UAAQC,GAAG,QAAQ0H,QAAO7I,YAAAC,cAAAC,MAAE,SAAAke,IAAA,OAAAne,cAAAG,MAAA,SAAAie,GAAA,cAAAA,EAAA/d,KAAA+d,EAAA9d,MAAA,cAAA8d,EAAA5N,OAAA,SAAYkI,MAAO,wBAAA0F,EAAAxd,OAAA,GAAAud,EAAA,KAAChd,SAAA,CAAC,IAAEvB,EAAM4B,KAAKkX,MAAM,UAEvEzX,eAAA,OAAKC,GAAG,iBAAiBsS,OAAQrQ,IAAUsT,GAAMG,SAASzV,SAAA,CACrDuW,EAAS2F,WACNpc,eAAA,OAAKC,GAAG,WAAUC,SAAA,CACdC,cAAA,OAAKF,GAAG,WAAUC,SACbuW,EAAS2F,UAAY,MAAQ3F,EAAS2G,UAAYze,EAAM4B,KAAK8c,aAElErd,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAE+B,EAAatD,EAAM4B,KAAMkW,EAAS6G,YAAY,OACnEtd,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAEuW,EAAS8G,MAAMlc,OAAS,IAAM1C,EAAM4B,KAAKid,WAAW,UAGjFrd,cAAA,OAAKF,GAAG,YAAYsS,OAAQpI,EAAYjK,SACpCF,eAAA,SAAOC,GAAG,cAAaC,SAAA,CACnBC,cAAA,OAAKF,GAAG,WAAUC,SACjBvB,EAAM4B,KAAKkd,aAEZtd,cAAA,SAAO8c,UAAU,UAAUD,QAAQ,SAASzI,KAAK,OAAOtU,GAAG,cACvDiU,YAAavV,EAAM4B,KAAKmd,WACxBtD,QAAS,SAAC/F,GACNwG,EAAYxG,EAAMC,OAAO7C,MAC7B,SAGZzR,eAAA,OAAKC,GAAG,YAAYsS,QAASpI,EAAYjK,SAAA,CACrCF,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAEvB,EAAM4B,KAAKod,YAAY,OAC5C3d,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAE6a,EAAY9K,OAAS,IAAI,OAC9CjQ,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAE6a,EAAYtL,SAAS,OAC1CzP,eAAA,UAAQC,GAAG,UAAU0H,QAAO7I,YAAAC,cAAAC,MAAE,SAAA4e,IAAA,OAAA7e,cAAAG,MAAA,SAAA2e,GAAA,cAAAA,EAAAze,KAAAye,EAAAxe,MAAA,cAAAwe,EAAAtO,OAAA,SAAYwD,MAAe,wBAAA8K,EAAAle,OAAA,GAAAie,EAAA,KAAC1d,SAAA,CAAC,IAAEvB,EAAM4B,KAAKyS,QAAQ,OAChFhT,eAAA,UAAQC,GAAG,SAAS0H,QAAS,kBAvDzCrI,QAAQC,IAAI,aACZ6K,GAAe,GACf4Q,EAAe,CAAC,QAChBI,EAAW,GAoDkD,EAAClb,SAAA,CAAC,IAAEvB,EAAM4B,KAAK0S,OAAO,UAE1ErG,GAAOvL,OAAS,GACblB,cAACmI,EAAQ,CAACK,KAAMiE,GAAQvE,aAAc,SAACuL,GAAW,OAAOiJ,GAASjJ,EAAM,OAGhF5T,eAAA,UAAQC,GAAG,eAAe0H,QAAS,kBAAM2U,IAAQ,EAACpc,SAAA,CAAC,IAAEvB,EAAM4B,KAAKud,OAAO,SAGnF,E,qBCnGeC,OA1Uf,SAAgBpf,GACZ,IAAAmG,EAAgCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArC8V,EAAQ5V,EAAA,GAAE6V,EAAW7V,EAAA,GAC5BkE,EAAsBC,YAAYyR,EAAU,KAArCxR,EAAyCnE,YAAAiE,EAAA,GAA9B,GAQlB9D,EAAsCL,mBAAS,CAAC,GAAEM,EAAAJ,YAAAG,EAAA,GAA3C2V,EAAW1V,EAAA,GAAE2V,EAAc3V,EAAA,GAClCG,EAAsCT,oBAAS,GAAMU,EAAAR,YAAAO,EAAA,GAA9C2E,EAAW1E,EAAA,GAAE2E,EAAc3E,EAAA,GAClCG,EAA0Cb,mBAAS,CAAC,GAAEc,EAAAZ,YAAAW,EAAA,GAA/CqV,EAAapV,EAAA,GAAEqV,EAAgBrV,EAAA,GACtC4D,EAA8B1E,mBAAS,IAAG2E,EAAAzE,YAAAwE,EAAA,GAAnC0R,EAAOzR,EAAA,GAAE0R,EAAU1R,EAAA,GAC1BG,EAAgC9E,mBAAS,IAAG+E,EAAA7E,YAAA4E,EAAA,GAArCmU,EAAQlU,EAAA,GAAEmU,EAAWnU,EAAA,GACtBwR,EAAWC,cA+MW,SAAAvJ,IAoC3B,OApC2BA,EAAAlT,YAAAC,cAAAC,MAA5B,SAAAyN,IAAA,IAAAkC,EAAAC,EAAAC,EAAA4N,EAAAlc,EAAA,OAAAxB,cAAAG,MAAA,SAAAgO,GAAA,cAAAA,EAAA9N,KAAA8N,EAAA7N,MAAA,OASK,OAPDC,QAAQC,IAAI,aACZ6K,GAAe,GACf9K,QAAQC,IAAIwb,GAENpM,EAAM,WAAahQ,EAAMa,IAAI0P,WAAWC,QAAU,IAAMxQ,EAAMa,IAAI0P,WAAWE,KAAO,UACpFR,EAAQ,CACV3B,KAAM8N,EAAYhL,SACrB7C,EAAA7N,KAAA,EACsBV,EAAMa,IAAI8S,YAAY3D,EAAKC,GAAM,OAAlDC,EAAQ3B,EAAAoC,KACRmN,EAAM5N,EAASxI,KAAK5F,OAC1BnB,QAAQC,IAAIkd,GACA,YAARA,GAEAvB,EAAiB,CAAC,GAAM3X,EACN,KAAQ5E,EAAM4B,KAAK2d,cACnB,KAAQ5E,KAAMI,KAAKC,UACrCqE,EAAS5Q,KAAK,CAAC,GAAM2N,EAAYhL,QAAS,KAAQgL,EAAYtL,WAC9DnQ,QAAQC,IAAIye,GACZC,EAAYD,KAMRzd,EADAkc,KAAO9d,EAAM4B,KACN5B,EAAM4B,KAAKkc,GAEX9d,EAAM4B,KAAKqc,cACtBtd,QAAQC,IAAIgB,GACZ2a,EAAiB,CAAC,GAAM3X,EACN,KAAQhD,EACR,KAAQ+Y,KAAMI,KAAKG,SAEzCmB,EAAe,CAAC,GAChBI,EAAW,IAAG,yBAAAlO,EAAAvN,OAAA,GAAA8M,EAAA,MACjB7M,MAAA,KAAAC,UAAA,CAkBD,SAASgd,EAAS/P,GAEd,OAAQ3M,cAAA,OAAKF,GAAG,WAAUC,SACb4M,EAAM/E,KAAI,SAACoF,EAAM2C,GAAY,OAX9C,SAAmBA,EAAO3C,GAEtB,OAAQnN,eAAA,OAAKC,GAAG,YAAWC,SAAA,CACfF,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAEiN,EAAKlN,GAAG,OAC7BD,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAEiN,EAAKM,KAAK,SAFVN,EAAKlN,GAI1C,CAKqDsH,CAAUuI,EAAO3C,EAAM,KAE5E,CAxQAvO,qBAAU,WACmB,SAAAC,IAIxB,OAJwBA,EAAAC,YAAAC,cAAAC,MAAzB,SAAAyP,IAAA,OAAA1P,cAAAG,MAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,OACIV,EAAMa,IAAIC,iBAAYC,GACtBJ,QAAQC,IAAI,2CACZD,QAAQC,IAAI,qBAAqB,wBAAAyP,EAAArP,OAAA,GAAA8O,EAAA,MACpC7O,MAAA,KAAAC,UAAA,CAED,IAAM8b,EAAWC,YAAW9c,YAAAC,cAAAC,MAAC,SAAAC,IAAA,IAAAiT,EAAAC,EAAAxD,EAAAE,EAAA5B,EAAA,OAAAlO,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACnB,YAAaV,EAAMa,IAAI0P,YAAiB,SAAUvQ,EAAMa,IAAI0P,WAAW,CAAA/P,EAAAE,KAAA,eAAAF,EAAAoQ,OAAA,qBAEzE5Q,EAAMa,IAAIqT,MAAM,CAAD1T,EAAAE,KAAA,eAAAF,EAAAoQ,OAAA,iBAIuB,GAF1C,kCACM2C,EAASvT,EAAMa,IAAI0P,WAAWC,QAC9BgD,EAAUxT,EAAMa,IAAI0P,WAAWE,OACjC8C,GAAUA,EAAO7Q,OAAS,GAAK8Q,EAAU,GAAC,CAAAhT,EAAAE,KAAA,SAGd,OADtBsP,EAAM,WAAauD,EAAS,IAC9BC,EAAU,eAAchT,EAAAE,KAAA,GACLV,EAAMa,IAAI6P,WAAWV,GAAK,KAAD,GAA1CE,EAAQ1P,EAAAmQ,MACRrC,EAAO4B,EAASxI,KAAKwV,QAEvBvc,QAAQC,IAAI0N,EAAKqI,OAAO,OACE,IAAtBrI,EAAKqI,OAAO,QACZhW,QAAQC,IAAI4b,EAAU,OAASlO,GAC/BmO,EAAWnO,KAElB,yBAAA9N,EAAAQ,OAAA,GAAAV,EAAA,KAEN,KAGH,OAhCmB,WACMJ,EAAAe,MAAC,KAADC,UAAA,CA8BzBC,GACO,kBAAMgc,cAAcH,EAAU,CAEzC,GAAG,IA8CH/c,oBAASE,YAAAC,cAAAC,MACL,SAAA4R,IAAA,IAAAkM,EAAAnO,EAAAC,EAAAC,EAAA5B,EAAA,OAAAlO,cAAAG,MAAA,SAAA4R,GAAA,cAAAA,EAAA1R,KAAA0R,EAAAzR,MAAA,YACQub,EAASvZ,OAAS,GAAC,CAAAyP,EAAAzR,KAAA,SAW0B,OAPzCyd,EADAne,EAAMa,IAAIqT,MACD+H,EAEA,KAAOA,EACpBtb,QAAQC,IAAI,gBAAkBud,GACxBnO,EAAM,WAAahQ,EAAMa,IAAI0P,WAAWC,QAAU,IACpDxQ,EAAMa,IAAI0P,WAAWE,KAAO,QAE1BR,EAAQ,CAAC,KAAQkO,EAAQ,OAAS,GAAKhM,EAAAzR,KAAA,EACtBV,EAAMa,IAAI6P,WAAWV,EAAKC,GAAO,KAAD,EAAjDC,EAAQiC,EAAAxB,KAEV,UADErC,EAAO4B,EAASxI,KAAK5F,SACJ,aAAcwM,EAAKH,OAEtCkO,EAAe/N,EAAKH,OACvB,yBAAAgE,EAAAnR,OAAA,GAAAiR,EAAA,KAGT,CAACxH,EAAazK,EAAMa,MAGxBZ,oBAASE,YAAAC,cAAAC,MACL,SAAAmS,IAAA,IAAA2L,EAAAnO,EAAAC,EAAAC,EAAA5B,EAAA,OAAAlO,cAAAG,MAAA,SAAAkS,GAAA,cAAAA,EAAAhS,KAAAgS,EAAA/R,MAAA,OAC+B,GAA3BC,QAAQC,IAAI,IAAM4b,KACdA,EAAQ9Z,OAAS,GAAC,CAAA+P,EAAA/R,KAAA,SAM2B,OAJvCyd,EAAS3B,EACf7b,QAAQC,IAAI,gBAAkBud,GACxBnO,EAAM,WAAahQ,EAAMa,IAAI0P,WAAWC,QAAU,IACpDxQ,EAAMa,IAAI0P,WAAWE,KAAO,QAC1BR,EAAQ,CAAC,KAAQkO,EAAQ,OAAS,GAAK1L,EAAA/R,KAAA,EACtBV,EAAMa,IAAI6P,WAAWV,EAAKC,GAAO,KAAD,EAAjDC,EAAQuC,EAAA9B,KACRrC,EAAO4B,EAASxI,KAAK5F,OAC3BnB,QAAQC,IAAI0N,GACR,UAAWA,GAAQ,aAAcA,EAAKH,OAEtCkO,EAAe/N,EAAKH,OACvB,yBAAAsE,EAAAzR,OAAA,GAAAwR,EAAA,KAGT,CAACgK,EAASxc,EAAMa,MAYpBZ,qBACI,WACIU,QAAQC,IAAI,iBACR,YAAawb,EAEc,IAAvBA,EAAYpL,QAAuC,IAAvBoL,EAAYpL,OAExCvF,GAAe,IAIf9K,QAAQC,IAAI,cACZ2b,EAAiB,CAAC,GAAM3X,EACN,KAAQ5E,EAAM4B,KAAK4d,WACnB,KAAQ7E,KAAMI,KAAKG,QACrCnI,SAASC,eAAe,eAAeF,MAAO,KAC9CrH,GAAe,GACfgR,EAAW,KAKfhR,GAAe,EAEvB,GAEA,CAAC2Q,IAGLnc,qBACI,WACI,GAAO,SAAUqc,EAAjB,CAGA3B,KAAM2C,UACN,IAAM5C,EAAO5X,EACb4X,EAAK9E,KAAO0G,EAAc1G,KAC1B8E,EAAK1X,UAAY,IASb2X,KAAMY,KAAKe,EAAc1a,KAAM8Y,EAdzB,CAgBd,GACA,CAAC4B,IAGLrc,qBACI,WAGI,GAFAU,QAAQC,IAAI,oBACZD,QAAQC,IAAIye,GACN,YAAarf,EAAMa,IAAI0P,YAAiB,SAAUvQ,EAAMa,IAAI0P,WAAlE,CAEA5P,QAAQC,IAAI,sBACZ,IAAMud,EAAS,KAAOlC,EACtBtb,QAAQC,IAAI,gBAAkBud,GAC9B,IAAMnO,EAAM,WAAahQ,EAAMa,IAAI0P,WAAWC,QAAU,IACpDxQ,EAAMa,IAAI0P,WAAWE,KAAO,QAC1BR,EAAQ,CAAC,MAASoP,GACxBrf,EAAMa,IAAI6P,WAAWV,EAAKC,EAPhB,CAQd,GACA,CAACoP,IAgEL,IAAM1B,EAAM,eAAAC,EAAAzd,YAAAC,cAAAC,MAAG,SAAA0T,IAAA,OAAA3T,cAAAG,MAAA,SAAAyT,GAAA,cAAAA,EAAAvT,KAAAuT,EAAAtT,MAAA,OACXC,QAAQC,IAAI,UACZ+b,EAAS,KAAI,wBAAA3I,EAAAhT,OAAA,GAAA+S,EAAA,KAChB,kBAHW,OAAA6J,EAAA3c,MAAA,KAAAC,UAAA,KAKZ,OACIG,eAAA,OAAKC,GAAG,WAAUC,SAAA,CACdC,cAAA,OAAKF,GAAG,QAAOC,SACXC,cAAA,MAAAD,SACKvB,EAAM4B,KAAKE,WAGpBT,eAAA,OAAKC,GAAG,iBAAgBC,SAAA,CACpBF,eAAA,OAAKC,GAAG,YAAYsS,OAAQpI,EAAYjK,SAAA,CACxCF,eAAA,SAAOC,GAAG,cAAcsS,QAAM,EAAArS,SAAA,CAC1BC,cAACie,KAAa,CAACnW,SAAS,QAAQC,GAAI,CAACC,MAAO,aAC5ChI,cAAA,cAGJH,eAAA,SAAOC,GAAG,cAAaC,SAAA,CACnBC,cAAA,OAAKF,GAAG,WAAUC,SACbvB,EAAM4B,KAAKkd,aAEhBtd,cAAA,SAAO8c,UAAU,UAAUD,QAAQ,OAAMzI,KAAK,OAAOtU,GAAG,cACpDiU,YAAavV,EAAM4B,KAAKmd,WACxBtD,QAAS,SAAC/F,GACNwG,EAAYxG,EAAMC,OAAO7C,MAC7B,UAGRzR,eAAA,OAAKC,GAAG,cAAcsS,QAASpI,EAAYjK,SAAA,CACvCF,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAEvB,EAAM4B,KAAK8d,cAAc,OAC9Cre,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAE6a,EAAY9K,OAAS,IAAI,OAC9CjQ,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAE6a,EAAYtL,SAAS,OAC1CzP,eAAA,UAAQC,GAAG,UAAU0H,QAAS,kBAjG5C,WAE0B,OAAAqK,EAAApS,MAAC,KAADC,UAAA,CA+FwBkT,EAAe,EAAC7S,SAAA,CAAC,IAAEvB,EAAM4B,KAAKyS,QAAQ,OAC1EhT,eAAA,UAAQC,GAAG,SAAS0H,QAAS,kBAxDzCrI,QAAQC,IAAI,aACZ6K,GAAe,GACf4Q,EAAe,CAAC,QAChBI,EAAW,GAqDkD,EAAClb,SAAA,CAAC,IAAEvB,EAAM4B,KAAK0S,OAAO,UAE1E+K,EAAS3c,OAAS,GACflB,cAACmI,EAAQ,CAACK,KAAMqV,EAAU3V,aAAc,SAACuL,GAAW,OAAOiJ,EAASjJ,EAAM,OAGlF5T,eAAA,UAAQC,GAAG,eAAe0H,QAAS,kBAAM2U,GAAQ,EAACpc,SAAA,CAAC,IAAEvB,EAAM4B,KAAKud,OAAO,SAGnF,E,OC3LeQ,OAjJf,SAAkB3f,GACd,IAAAmG,EAAsCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA9CqF,EAAWnF,EAAA,GAAEoF,EAAcpF,EAAA,GAClCI,EAAgCL,oBAAS,GAAKM,EAAAJ,YAAAG,EAAA,GAAvC0N,EAAQzN,EAAA,GAAEkZ,EAAWlZ,EAAA,GAC5BG,EAAgCT,mBAAS,CAAC,GAAEU,EAAAR,YAAAO,EAAA,GAArC2R,EAAQ1R,EAAA,GAAE+Y,EAAW/Y,EAAA,GAgB5B,SAASgZ,EAAY3O,EAAO2B,GAExBnS,QAAQC,IAAIuQ,GACZxQ,QAAQC,IAAIkS,GACZ,IAAIyI,EAAO/C,EACX,OAAQrH,GAER,KAAK,EACDoK,EAAKkD,UAAY3L,EACjB,MACJ,KAAK,EACDyI,EAAKwE,aAAejN,EACpB,MACJ,KAAK,EACDyI,EAAKyE,MAAQlN,EACb,MACJ,KAAK,EACDyI,EAAK0E,QAAUnN,EACf,MACJ,KAAK,EACDyI,EAAK2E,WAAapN,EAClB,MACJ,KAAK,EACDyI,EAAK4E,OAASrN,EAKlB,IAAMpQ,EAAS0d,OAAOC,KAAK9E,GAAM7Y,OACjC/B,QAAQC,IAAI8B,GAERA,EAAS,GACTkd,GAAY,GAChBC,EAAYtE,EAChB,CAE4B,SAAAlI,IAsB3B,OAtB2BA,EAAAlT,YAAAC,cAAAC,MAA5B,SAAAyP,IAAA,IAAAyD,EAAAC,EAAAxD,EAAAyD,EAAApF,EAAA6B,EAAA,OAAA9P,cAAAG,MAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,OAK8C,GAH1CC,QAAQC,IAAI,qBACZD,QAAQC,IAAI4X,GACNjF,EAASvT,EAAMa,IAAI0P,WAAWC,QAC9BgD,EAAUxT,EAAMa,IAAI0P,WAAWE,OACf,IAAlB8C,EAAO7Q,QAAgB8Q,GAAW,GAAC,CAAAnD,EAAA3P,KAAA,eAAA2P,EAAAO,OAAA,iBAQvC,IAAWvC,KALL2B,EAAM,WAAauD,EAAS,IAC9BC,EAAU,QAEVC,EAAM,CAAC,EACX9S,QAAQC,IAAI4X,GACMA,EAEd/E,EAAIpF,GAAOiC,KAAK7L,EAAO+T,EAASnK,KACnC,OAAAgC,EAAA3P,KAAA,GACsBV,EAAMa,IAAI8S,YAAY3D,EAAKyD,GAAK,KAAD,GAAhDvD,EAAQG,EAAAM,KACdhQ,QAAQC,IAAIsP,GACZlQ,EAAMsgB,QAAQpQ,GACdzE,GAAe,GAAO,yBAAA4E,EAAArP,OAAA,GAAA8O,EAAA,MACzB7O,MAAA,KAAAC,UAAA,CAOD,OA/EAjB,qBAAU,WACNU,QAAQC,IAAI,aACZD,QAAQC,IAAIZ,EAAMub,MAClBxI,SAASC,eAAe,YAAYF,MAAQ9S,EAAMub,KAAKkD,UAAYze,EAAMub,KAAKkD,UAAY,GAC1F1L,SAASC,eAAe,SAASF,MAAQ9S,EAAMub,KAAKwE,aAAe/f,EAAMub,KAAKwE,aAAe,GAC7FhN,SAASC,eAAe,SAASF,MAAQ9S,EAAMub,KAAKyE,MAAQhgB,EAAMub,KAAKyE,MAAQ,GAC/EjN,SAASC,eAAe,WAAWF,MAAQ9S,EAAMub,KAAK0E,QAAUjgB,EAAMub,KAAK0E,QAAU,GACrFlN,SAASC,eAAe,WAAWF,MAAQ9S,EAAMub,KAAK4E,OAASngB,EAAMub,KAAK4E,OAAS,GACnFpN,SAASC,eAAe,cAAcF,MAAQ9S,EAAMub,KAAK2E,WACzDL,EAAY,CAAC,UAAa7f,EAAMub,KAAKkC,YACrCmC,GAAY,EAEhB,GAAG,CAAC5f,EAAMub,OAoENla,eAAA,OAAAE,SAAA,CACIC,cAAA,SAAAD,SAAOF,eAAA,SAAAE,SAAA,CACHF,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAI,IAAEvB,EAAM4B,KAAKkN,KAAK,OACtBtN,cAAA,MAAIuH,QAAQ,IAAGxH,SACXC,cAAA,SAAOoU,KAAK,OAAOlU,UAAU,QAAQJ,GAAG,WAAWmU,SAAU,SAACC,GAAWoK,EAAY,EAAGpK,EAAMC,OAAO7C,MAAO,QAH5G,QAMP,aAAc9S,EAAMub,MACjBla,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAI,IAAEvB,EAAM4B,KAAKmU,eAAe,OAChCvU,cAAA,MAAIuH,QAAQ,IAAIrH,UAAU,OAAMH,SAC3BvB,EAAMub,KAAKlK,aAHZ,YAOZhQ,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAI,IAAEvB,EAAM4B,KAAK2e,MAAM,OACvB/e,cAAA,MAAIuH,QAAQ,IAAGxH,SACXC,cAAA,SAAOoU,KAAK,OAAOlU,UAAU,QAAQJ,GAAG,QAAQmU,SAAU,SAACC,GAAWoK,EAAY,EAAGpK,EAAMC,OAAO7C,MAAO,QAHzG,SAMRzR,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAI,IAAEvB,EAAM4B,KAAK4e,MAAM,OACvBhf,cAAA,MAAIuH,QAAQ,IAAGxH,SACXC,cAAA,SAAOoU,KAAK,OAAOlU,UAAU,QAAQJ,GAAG,QAAQmU,SAAU,SAACC,GAAWoK,EAAY,EAAGpK,EAAMC,OAAO7C,MAAO,QAHzG,SAMRzR,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAI,IAAEvB,EAAM4B,KAAK6e,QAAQ,OACzBjf,cAAA,MAAIuH,QAAQ,IAAGxH,SACXC,cAAA,SAAOoU,KAAK,OAAOlU,UAAU,QAAQJ,GAAG,UAAUmU,SAAU,SAACC,GAAWoK,EAAY,EAAGpK,EAAMC,OAAO7C,MAAO,QAH3G,WAMRzR,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAI,IAAEvB,EAAM4B,KAAK8e,QAAQ,OACzBlf,cAAA,MAAIuH,QAAQ,IAAGxH,SACXC,cAAA,SAAOoU,KAAK,OAAOlU,UAAU,QAAQJ,GAAG,UAAUmU,SAAU,SAACC,GAAWoK,EAAY,EAAGpK,EAAMC,OAAO7C,MAAO,QAH3G,UAMRzR,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAI,IAAEvB,EAAM4B,KAAK+e,MAAM,OACvBnf,cAAA,MAAIuH,QAAQ,IAAIrH,UAAU,OAAMH,SAC5BF,eAAA,UAAQyN,KAAK,aAAaxN,GAAG,aAAaI,UAAU,WAAW+T,SAAU,SAACC,GAAWoK,EAAY,EAAGpK,EAAMC,OAAO7C,MAAO,EAAEvR,SAAA,CACtHF,eAAA,UAAQyR,MAAM,IAAGvR,SAAA,CAAC,IAAEvB,EAAM4B,KAAKgf,IAAI,OACnCvf,eAAA,UAAQyR,MAAM,IAAGvR,SAAA,CAAC,IAAEvB,EAAM4B,KAAKif,MAAM,OACrCxf,eAAA,UAAQyR,MAAM,IAAGvR,SAAA,CAAC,IAAEvB,EAAM4B,KAAKsS,MAAM,cANzC,cAWb7S,eAAA,UAAQC,GAAG,SAASsS,OAAQpI,EAAaxC,QAAO7I,YAAAC,cAAAC,MAAE,SAAAC,IAAA,OAAAF,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAoQ,OAAA,SAAYnF,GAAe,IAAK,wBAAAjL,EAAAQ,OAAA,GAAAV,EAAA,KAAE6T,SAAUA,EAAS5S,SAAA,CAAC,IAAEvB,EAAM4B,KAAKkf,KAAK,OACzHzf,eAAA,OAAKC,GAAG,cAAcsS,QAASpI,EAAYjK,SAAA,CACvCF,eAAA,OAAKC,GAAG,YAAWC,SAAA,CAAC,IAAEvB,EAAM4B,KAAKmf,YAAY,OAC7C1f,eAAA,UAAQC,GAAG,UAAU0H,QAAS,kBAtFzC,WAE2B,OAAAqK,EAAApS,MAAC,KAADC,UAAA,CAoFoBkT,EAAe,EAAC7S,SAAA,CAAC,IAAEvB,EAAM4B,KAAKyS,QAAQ,OAC1EhT,eAAA,UAAQC,GAAG,SAAS0H,QAAS,WA3DrCyC,GAAe,EA2D0C,EAAClK,SAAA,CAAC,IAAEvB,EAAM4B,KAAK0S,OAAO,YAIvF,ECkNe0H,OAxVf,SAAkBhc,GACd,IAAAmG,EAAgCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArC+Q,EAAQ7Q,EAAA,GAAE8Q,EAAW9Q,EAAA,GAC5BkE,EAAsBC,YAAY0M,EAAU,KAArCzM,EAAyCnE,YAAAiE,EAAA,GAA9B,GAClB9D,EAA2CL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAAnDoF,EAAYnF,EAAA,GAAEoF,EAAkBpF,EAAA,GACvCG,EAA0CT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAA/CN,EAAaO,EAAA,GAAEN,EAAgBM,EAAA,GACtCG,EAAsCb,oBAAS,GAAMc,EAAAZ,YAAAW,EAAA,GAA9CkD,EAAWjD,EAAA,GAAEoQ,EAAcpQ,EAAA,GAClCW,EAAkFC,YAAa1C,GAAY2C,EAAAzB,YAAAuB,EAAA,GAApGgQ,EAAQ9P,EAAA,GAAAE,EAAAF,EAAA,GAAYiZ,EAAW/Y,EAApBT,QAA4ByZ,EAAYhZ,EAAlBP,KAA2BwZ,EAASjZ,EAAhBL,MAC5DkD,EAAgC1E,mBAAS,CAAC,GAAE2E,EAAAzE,YAAAwE,EAAA,GAArCqW,EAAQpW,EAAA,GAAEqW,EAAWrW,EAAA,GAEtBL,EAAcC,iBAAO,KACnBrJ,EAAOyK,cAAPzK,GACR4J,EAAgC9E,mBAAS,IAAG+E,EAAA7E,YAAA4E,EAAA,GAArCF,EAAQG,EAAA,GAAEF,EAAWE,EAAA,GA8E1B,SAEayC,KAAS,OAAAC,GAAA5M,MAAC,KAADC,UAAA,UAAA2M,KAgBvB,OAhBuBA,GAAA1N,YAAAC,cAAAC,MAAxB,SAAAyN,IAAA,IAAAsP,EAAA1C,EAAA2G,EAAAngB,UAAA,OAAAd,cAAAG,MAAA,SAAAgO,GAAA,cAAAA,EAAA9N,KAAA8N,EAAA7N,MAAA,OAAyB0c,IAAMiE,EAAA3e,OAAA,QAAA3B,IAAAsgB,EAAA,KAAAA,EAAA,GAE3B1gB,QAAQC,IAAI,mBAAqBuJ,GAE7BiT,KAEM1C,EAAO5X,GACR8S,KAAO+E,KAAMI,KAAKC,QACvBN,EAAKU,OAASpb,EAAM4B,KAAK0f,gBACzB5G,EAAK1X,UAAY,IACjB0X,EAAKW,QAAU,GACfV,KAAMY,KAAKvb,EAAM4B,KAAK0f,gBAAiB5G,IAE3C/Z,QAAQC,IAAI,aAAeZ,EAAMuY,QACjC5X,QAAQC,IAAI,QACZ0W,GAAe,GAAM,wBAAA/I,EAAAvN,OAAA,GAAA8M,EAAA,KACxBD,GAAA5M,MAAA,KAAAC,UAAA,CAED,SAASof,GAAQpQ,GAEbvP,QAAQC,IAAI,gBAAkBiL,GAC9BlL,QAAQC,IAAIsP,GACZpE,GAAoBD,EACxB,CAEqB,SAAA0V,KA0BpB,OA1BoBA,GAAAphB,YAAAC,cAAAC,MAArB,SAAAiT,EAAsBjF,GAAG,IAAAkF,EAAAC,EAAAxD,EAAAyD,EAAAqK,EAAApD,EAAA,OAAAta,cAAAG,MAAA,SAAAmT,GAAA,cAAAA,EAAAjT,KAAAiT,EAAAhT,MAAA,OAIqB,GAF1CC,QAAQC,IAAI,UAAYyN,GAClBkF,EAASvT,EAAMa,IAAI0P,WAAWC,QAC9BgD,EAAUxT,EAAMa,IAAI0P,WAAWE,OACf,IAAlB8C,EAAO7Q,QAAgB8Q,GAAW,GAAC,CAAAE,EAAAhT,KAAA,eAAAgT,EAAA9C,OAAA,iBAMtB,OAHXZ,EAAM,WAAauD,EAAS,IAC9BC,EAAU,WACVC,EAAM,CAAC,GACD,KAAIpF,EAAGqF,EAAAhT,KAAA,GAECV,EAAMa,IAAI8S,YAAY3D,EAAKyD,GAAK,KAAD,GAA3CqK,EAAGpK,EAAA/C,KACThQ,QAAQC,IAAI,YACZD,QAAQC,IAAIkd,GACZxL,GAAS5H,EAAY0H,SAAS,GACN,YAApB0L,EAAIpW,KAAK5F,UAEH4Y,EAAO5X,GACR8S,KAAO+E,KAAMI,KAAKC,QACvBN,EAAKU,OAASpb,EAAM4B,KAAK0f,gBACzB5G,EAAK1X,UAAY,IACjB0X,EAAKW,QAAU,GACfV,KAAMY,KAAKvb,EAAM4B,KAAK4f,OAAQ9G,IACjC,yBAAAhH,EAAA1S,OAAA,GAAAsS,EAAA,MACJrS,MAAA,KAAAC,UAAA,CAjIDjB,qBAAU,WACmB,SAAAC,IAsBxB,OAtBwBA,EAAAC,YAAAC,cAAAC,MAAzB,SAAAC,IAAA,OAAAF,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACSV,EAAMa,IAAIsJ,YAAY,CAAD3J,EAAAE,KAAA,eAAAF,EAAAoQ,OAAA,iBAItB5Q,EAAMa,IAAI6O,SACV9B,IAAU,GAEV5N,EAAMa,IAAIC,YAAY8M,IAC1BjN,QAAQC,IAAI,2CACZD,QAAQC,IAAI,yBACZD,QAAQC,IAAI,YAAcU,GAEtBtB,EAAMa,IAAIO,gBAEV,mCAIAT,QAAQC,IAAI,cACZiX,KACH,wBAAArX,EAAAQ,OAAA,GAAAV,EAAA,MACJW,MAAA,KAAAC,UAAA,EAvBkB,WACMhB,EAAAe,MAAC,KAADC,UAAA,CAwBzBC,EAEJ,GAAG,IAEHlB,qBACI,WACIU,QAAQC,IAAI,eAAiBU,GAGzB6V,EAFA7V,GAMY,GAEpB,GAAG,CAACA,IAGRrB,qBACI,WACIU,QAAQC,IAAI,sBACZgN,IAAU,EACd,GAEA,CAAC5N,EAAMuY,SAGXtY,qBACI,WAII,GAHAU,QAAQC,IAAI,oBACZD,QAAQC,IAAIsgB,GACZvgB,QAAQC,IAAIogB,GACRC,EACJ,CACI,IAAMQ,EAAQR,EAAaQ,MAEvBzX,EAAO,GACXrJ,QAAQC,IAAI,uBACZ,IAAK,IAAI6B,EAAI,EAAGA,EAAIgf,EAAM/e,OAAQD,IAClC,CACI,IAAMqY,EAAO2G,EAAMhf,GACbwS,EAAQ,CAAC,GAAM6F,EAAK7R,IAAK,KAAQ6R,EAAKhM,KAAM,MAASgM,EAAK6F,MAAO,MAASrd,EAAatD,EAAM4B,KAAMkZ,EAAKvX,QAC9GyG,EAAKyE,KAAKwG,EACd,CACAtU,QAAQC,IAAIoJ,GACZhK,EAAMa,IAAI6gB,QAAQ1X,GAClBrJ,QAAQC,IAAIZ,EAAMa,IAAI8gB,WACtBP,EAAYphB,EAAMa,IAAI8gB,UAC1B,CACJ,GACA,CAACV,EAAcD,EAAaE,EAAWlhB,IAwD3C,IAAMsa,GAAa,SAAC9L,EAAM2C,GACtB,IAAM7P,EAAKkN,EAAS,GACdjK,EAAWiK,EAAe,SAC1BI,EAAUJ,EAAc,QACxB2L,EAAW3L,EAAY,MACvBoT,EAAcpT,EAAKoT,YACnBvT,EAAM8C,EAAM7I,WAElB,OAAQjH,eAAC+Y,IAAMC,SAAQ,CAAA9Y,SAAA,CACXF,eAAA,MAAcK,UAAU,WAAUH,SAAA,CAC9BC,cAAA,MAAIE,UAAU,WAAUH,SAACC,cAACC,IAAI,CAACE,GAAI,WAAWL,EAAGC,SAAED,MACnDE,cAAA,MAAIE,UAAU,WAAUH,SAAEgD,IAC1B/C,cAAA,MAAIE,UAAU,WAAUH,SAAEqN,MAHrBP,GAKThN,eAAA,MAAwBK,UAAU,WAAUH,SAAA,CACxCC,cAAA,MAAIuH,QAAS/I,EAAMa,IAAIO,gBAAgB,IAAI,IAAKM,UAAU,WAAUH,SAAE4Y,IACrEna,EAAMa,IAAIO,iBACPI,cAAA,MAAIE,UAAU,WAAUH,SAACC,cAAA,UAAQE,UAAU,SAASsH,QAAS,kBA/CpF,SAEoB4G,GAAA,OAAA2R,GAAAtgB,MAAC,KAADC,UAAA,CA6CsEsgB,CAAOlgB,EAAG,EAACC,SAAEvB,EAAM4B,KAAK4f,OAAS,KAAOI,EAAYtZ,WAAa,UAHnI+F,EAAM,WANEA,EAAM,WAcvC,EAEMiE,GAAQ,eAAAC,EAAApS,YAAAC,cAAAC,MAAG,SAAAyP,EAAOxO,GAAE,IAAAugB,EAAArT,EAAAsT,EAAA5gB,UAAA,OAAAd,cAAAG,MAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,OAAqB,OAAnBmhB,EAAWC,EAAApf,OAAA,QAAA3B,IAAA+gB,EAAA,IAAAA,EAAA,GAAQzR,EAAA3P,KAAA,EACxBV,EAAMa,IAAI6X,QAAQpX,GAAI,KAAD,EAAlCkN,EAAI6B,EAAAM,KACVhQ,QAAQC,IAAI4N,IACiB,IAAzB9D,EAAY0H,SAAkB1H,EAAY0H,UAAY9Q,GAAMugB,GAE5DlhB,QAAQC,IAAI,UAAYU,GAExBoJ,EAAY0H,QAAU9Q,EACtBX,QAAQC,IAAI,iBACZD,QAAQC,IAAI4N,GACZvD,EAAYuD,IAGPjI,EAAc7D,OAAS,IAE5B/B,QAAQC,IAAI,YAAcU,GAE1BoJ,EAAY0H,SAAW,EACvBnH,EAAY,KAEf,wBAAAoF,EAAArP,OAAA,GAAA8O,EAAA,KACJ,gBArBa4C,GAAA,OAAAH,EAAAtR,MAAA,KAAAC,UAAA,KAwCR6gB,GAAY,SAAClZ,EAAQqB,GACvB,OAAQ7I,eAAA,OAAAE,SAAA,CAEQsH,EAAOO,KAAI,SAAC0R,EAAM3J,GACd,OArBP,SAAC2J,EAAM5Q,EAAQiH,GAC5B,IAAM9C,EAAM8C,EAAM7I,WAClB,OACQjH,eAAA,OAAAE,SAAA,CACIC,cAAA,SAAAD,SAAOC,cAAA,SAAAD,SACHF,eAAA,MAAkBK,UAAU,WAAWsH,QAAO7I,YAAAC,cAAAC,MAAE,SAAA4R,IAAA,OAAA7R,cAAAG,MAAA,SAAA4R,GAAA,cAAAA,EAAA1R,KAAA0R,EAAAzR,MAAA,cAAAyR,EAAAzR,KAAA,EAAiB4R,GAASwI,EAAKxZ,IAAG,cAAA6Q,EAAAvB,OAAA,SAAAuB,EAAAxB,MAAA,wBAAAwB,EAAAnR,OAAA,GAAAiR,EAAA,KAAC1Q,SAAA,CAC/EC,cAAA,MAAIE,UAAU,WAAUH,SAAEuZ,EAAKxZ,KAC/BE,cAAA,MAAIE,UAAU,WAAUH,SAAEuZ,EAAKhM,OAC/BtN,cAAA,MAAIE,UAAU,WAAUH,SAAEuZ,EAAKvX,QAC/B/B,cAAA,MAAIE,UAAU,WAAUH,SAAEuZ,EAAKtM,SAJ1BsM,EAAKxZ,QAObwZ,EAAKxZ,KAAOoJ,EAAY0H,SAAW6H,GAAYa,EAAM5Q,KATpDmE,EAYtB,CAM+B2T,CAASlH,EAAM5Q,EAAQiH,EAClC,IAGkB,IAAlBtI,EAAOnG,QACPlB,cAAA,SAAAD,SAAOC,cAAA,SAAAD,SACHC,cAAA,MAAAD,SAAeC,cAAA,MAAIuH,QAAQ,IAAGxH,SAAEvB,EAAM4B,KAAK2Y,WAAnC,cAIhC,EAEMN,GAAc,SAACa,EAAM5Q,GAGvB,OAFAvJ,QAAQC,IAAI,UACZD,QAAQC,IAAIka,GACJzZ,eAAA4gB,WAAA,CAAA1gB,SAAA,CACKvB,EAAMa,IAAIO,iBACPI,cAACme,GAAQ,CAAC/d,KAAM5B,EAAM4B,KAAMf,IAAKb,EAAMa,IAAK0a,KAAMT,EAAMwF,QAASA,KAErE9e,cAAA,SAAAD,SAAOF,eAAA,SAAAE,SAAA,CACPF,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,GAAG,KAAIC,SAAEvB,EAAM4B,KAAKN,KACxBE,cAAA,MAAIF,GAAG,WAAUC,SAAEvB,EAAM4B,KAAK2C,WAC9B/C,cAAA,MAAIF,GAAG,aAAYC,SAAEvB,EAAM4B,KAAKia,YAH5B,MAMJ3R,EAAOd,KAAI,SAACoF,EAAM2C,GACd,OAAOmJ,GAAW9L,EAAM2C,EAC5B,IAGkB,IAAlBjH,EAAOxH,QAAgBlB,cAAA,MAAAD,SAAeC,cAAA,MAAIuH,QAAQ,IAAGxH,SAAEvB,EAAM4B,KAAK2Y,WAAnC,eAInD,EAwEA,OAvEAta,qBACI,WAAO,SACYiiB,EAASC,GAAA,OAAAC,EAAAnhB,MAAC,KAADC,UAAA,UAAAkhB,IAgBvB,OAhBuBA,EAAAjiB,YAAAC,cAAAC,MAAxB,SAAAmS,EAAyB5Q,GAAI,IAAAmO,EAAA1B,EAAAoG,EAAA,OAAArU,cAAAG,MAAA,SAAAkS,GAAA,cAAAA,EAAAhS,KAAAgS,EAAA/R,MAAA,OACrBqP,EAAU,GAE9B0C,EAAAgG,GAAArY,cAAAigB,KACoCc,GAAQ,WAAA1O,EAAAkG,GAAAlG,EAAAgG,MAAAzD,KAAC,CAADvC,EAAA/R,KAAA,SACE,GADjB2N,EAAGoE,EAAAkG,GAAA7F,MACN2B,EAAM0M,EAAS9S,KACjB0B,EAAQrN,QAAUP,GAAgB,CAAAsQ,EAAA/R,KAAA,eAAA+R,EAAA7B,OAAA,oBACjC6D,EAAI3F,MAAQ2F,EAAI3F,KAAKxG,WAAWoM,SAAS9S,IACzC6S,EAAInT,GAAG+gB,gBAAkBzgB,EAAKygB,gBAE/BtS,EAAQtB,KAAKgG,GAChBhC,EAAA/R,KAAA,gBAGgB,OADrBqP,EAAQ8B,MAAK,SAASC,EAAEC,GAAK,OAAOD,EAAEhD,KAAOiD,EAAEjD,IAAM,IACrDnO,QAAQC,IAAImP,GAAS0C,EAAA7B,OAAA,SACdb,GAAO,yBAAA0C,EAAAzR,OAAA,GAAAwR,EAAA,MACjBvR,MAAA,KAAAC,UAAA,CACmB,SAAA8Q,IA6CnB,OA7CmBA,EAAA7R,YAAAC,cAAAC,MAApB,SAAA0T,IAAA,IAAAuO,EAAApQ,EAAAlC,EAAAC,EAAAC,EAAAuR,EAAA7M,EAAAD,EAAAM,EAAA6F,EAAA,OAAA1a,cAAAG,MAAA,SAAAyT,GAAA,cAAAA,EAAAvT,KAAAuT,EAAAtT,MAAA,OAEqD,GAD3C4hB,EAAQpL,EAASqL,OACvB5hB,QAAQC,IAAI,SAAW0hB,EAAQ,IAAM7X,KACjC6X,EAAM5f,OAAS,GAAK+H,GAAW,CAAAuJ,EAAAtT,KAAA,aAG3BV,EAAMa,IAAIO,gBAAgB,CAAD4S,EAAAtT,KAAA,SAIkB,OAF3CC,QAAQC,IAAI,aACNoP,EAAM,WAAahQ,EAAMa,IAAI0P,WAAWC,QAAU,IAAMxQ,EAAMa,IAAI0P,WAAWE,KAAO,SACpFR,EAAQ,CAAC,KAAQK,KAAK7L,EAAO6d,KAAQtO,EAAAtT,KAAA,EACpBV,EAAMa,IAAI6P,WAAWV,EAAKC,GAAO,KAAD,EAIvD,GAJMC,EAAQ8D,EAAArD,KACR8Q,EAAQvR,EAASxI,KAAK5F,OAAO4F,KACnC/G,QAAQC,IAAIsP,EAASxI,KAAK5F,QAC1BoQ,EAAK,GACDuP,EAAO,CAAA7M,EAAAC,YACa3E,EAASxI,KAAK5F,OAAO4F,MAAI,IAA7C,IAAAkN,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAWC,EAAKN,EAAA7B,MAEZnS,QAAQC,IAAIqU,IACR6F,EAAO7F,GACN3T,GAAK2T,EAAMwI,UAChB3C,EAAKhM,KAAOmG,EAAMwJ,UAClB3D,EAAKvX,MAAQD,EAAatD,EAAM4B,KAAMqT,EAAM0J,YAC5C7D,EAAKtM,KAAOyG,EAAM2J,MAAMlc,OACxBwP,EAAGzD,KAAKqM,EACX,OAAA5F,GAAAN,EAAAO,EAAAD,EAAA,SAAAN,EAAAQ,GAAA,CACL,CAACpB,EAAAtT,KAAA,iBAIqB,OAAtBC,QAAQC,IAAI,WAAUoT,EAAAtT,KAAA,GACXwhB,EAAUzX,GAAa,KAAD,GAAjCyH,EAAE8B,EAAArD,KAAA,QAGFuB,EAAGxP,OAAS,EACZ8D,EAAiB0L,GAEjB1L,EAAiB,IACH,IAAd0L,EAAGxP,OACJ4P,GAASJ,EAAG,GAAG5Q,IAEfgR,GAAS,GAAG0B,EAAAtT,KAAA,iBAEf8F,EAAiB,IAAI,yBAAAwN,EAAAhT,OAAA,GAAA+S,EAAA,MAE5B9S,MAAA,KAAAC,UAAA,EA9CA,WACmB8Q,EAAA/Q,MAAC,KAADC,UAAA,CA8CpBmR,EACJ,GAED,CAAC5H,EAAazK,EAAOmhB,EAAUtV,EAAcqL,IAG3ClX,EAAMa,IAAIsJ,YAIX9I,eAAA,OAAKC,GAAG,WAAUC,SAAA,CACdC,cAAA,OAAKF,GAAG,QAAOC,SACXC,cAAA,MAAAD,SACKvB,EAAM4B,KAAKiX,eAGpBxX,eAAA,OAAKC,GAAG,gBAAgBsS,QAAS5T,EAAMa,IAAIqT,MAAM3S,SAAA,CAC7CC,cAAA,SAAOoU,KAAK,OAAOtU,GAAG,cAClBiU,YAAavV,EAAM4B,KAAK4Z,SACxB1I,MAAOoE,EACPzB,SAAU,SAACC,GACPyB,EAAYzB,EAAMC,OAAO7C,MAC7B,IACJtR,cAAA,OAAAD,SACIC,cAACmI,EAAQ,CAACM,SAAUQ,EAAaT,KAAMzD,EAAe2D,OAAQc,EAAUtB,aAAc,SAACkN,EAAS1M,GAAa,OAAO6X,GAAUnL,EAAS1M,EAAS,YAjBrJ1I,cAACsa,IAAQ,CAACna,GAAG,KAsB5B,EC1Ie6gB,OAhNf,SAAqBxiB,GACjB,IAAAmG,EAAgCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArC6E,EAAQ3E,EAAA,GAAE4E,EAAW5E,EAAA,GAC5BI,EAAsCL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAA9C0D,EAAWzD,EAAA,GAAE4Q,EAAc5Q,EAAA,GAClCmB,EAAkFC,YAAa1C,GAAY2C,EAAAzB,YAAAuB,EAAA,GAApGgQ,EAAQ9P,EAAA,GAAAE,EAAAF,EAAA,GAAYiZ,EAAW/Y,EAApBT,QAA4ByZ,EAAYhZ,EAAlBP,KAA2BwZ,EAASjZ,EAAhBL,MAC5Df,EAAgCT,mBAAS,CAAC,GAAEU,EAAAR,YAAAO,EAAA,GAArCsa,EAAQra,EAAA,GAAEsa,EAAWta,EAAA,GAuD5B,SAAS0S,EAAQnV,EAAIC,GAEjB,OAAOD,EAAGE,SAAWD,EAAGC,QAC5B,CAAC,SAEcqJ,IAAS,OAAAC,EAAA5M,MAAC,KAADC,UAAA,UAAA2M,IAqEvB,OArEuBA,EAAA1N,YAAAC,cAAAC,MAAxB,SAAAyP,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA/B,EAAA1L,EAAA6L,EAAA6B,EAAA5M,EAAAqL,EAAAwB,EAAA5B,EAAA2C,EAAAoG,EAAAkL,EAAA,OAAAriB,cAAAG,MAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,OAEkD,GAA9CC,QAAQC,IAAI,mBAAqBuJ,IAC7BnK,EAAMa,IAAIO,gBAAgB,CAADiP,EAAA3P,KAAA,SAMrC,OAJgBqP,EAAU,GACRC,EAAM,WAAahQ,EAAMa,IAAI0P,WAAWC,QAAU,IACpDxQ,EAAMa,IAAI0P,WAAWE,KAAO,QAC1BR,EAAQ,CAAC,KAAQ,IAAK,OAAQ,GAChDI,EAAA3P,KAAA,EACmCV,EAAMa,IAAI6P,WAAWV,EAAKC,GAAO,KAAD,EAKvD,IALMC,EAAQG,EAAAM,KAIRxC,EAAQ+B,EAASxI,KAAK5F,OAAOqM,MAC1B1L,EAAI,EAAIA,EAAI0L,EAAMzL,OAASD,IAE1B6L,EAAOH,EAAM1L,GACb0N,EAAY,GAAAU,OAAMvC,EAAKwC,SAAQ,KAAAD,OAAIvC,EAAKyC,UACxCxN,EAAQ+K,EAAK0C,OACfpC,EAAU,GACA,IAAVrL,GAAyB,IAAVA,GAAyB,MAAVA,GAA2B,MAAVA,IAE/CqL,EAAUN,EAAKoU,aAEftS,EAAe,CACfe,MAAO1O,EACPb,KAAMuO,EACN3L,MAAO8J,EAAKwC,SACZxP,GAAIgN,EAAK8C,QACT5C,KAAM7K,EAAa3D,EAAM4B,KAAM0M,EAAKqU,MAAMra,YAC1C/D,SAAU+J,EAAKsU,UACfhU,QAASA,EACTtC,OAAQgC,EAAKgD,OACblC,UAAWd,EAAKiD,WAChBpC,UAAWb,EAAKkD,SAChBhC,QAASlB,EAAKmD,QACdzC,MAAOV,EAAKoD,MACZoJ,KAAMxM,EAAKuU,KACXJ,SAAUnU,EAAKmQ,WAEnB1O,EAAQtB,KAAK2B,GAEjBL,EAAQ8B,KAAK2H,GACbvO,EAAY8E,GAASM,EAAA3P,KAAA,wBAAA2P,EAAA3P,KAAA,GAKFV,EAAMa,IAAI6X,UAAU,KAAD,GAItC,IAAWvH,KAJL3C,EAAI6B,EAAAM,KACVhQ,QAAQC,IAAI,QACZD,QAAQC,IAAI4N,GACZA,EAAKqD,KAAK2H,GACUhL,EAEV+I,EAAS/I,EAAK2C,GAAa,KAC7BsR,OAAQ,EAERA,EADAtB,GAAY5J,KAAU4J,EACXA,EAAS5J,GAAQzI,KAEjB,GACfN,EAAK2C,GAAiB,SAAIsR,EAG9BxX,EAAYuD,GAAM,QAGtB7N,QAAQC,IAAI,QACZ0W,GAAe,GAAM,yBAAAjH,EAAArP,OAAA,GAAA8O,EAAA,MACxB7O,MAAA,KAAAC,UAAA,CA/HDjB,qBAAU,WACmB,SAAAC,IAcxB,OAdwBA,EAAAC,YAAAC,cAAAC,MAAzB,SAAAC,IAAA,OAAAF,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACIC,QAAQC,IAAI,2CACZD,QAAQC,IAAI,0BAERZ,EAAMa,IAAIO,iBAEV,kCACAwM,MAIAjN,QAAQC,IAAI,cACZiX,KACH,wBAAArX,EAAAQ,OAAA,GAAAV,EAAA,MACJW,MAAA,KAAAC,UAAA,EAfkB,WACMhB,EAAAe,MAAC,KAADC,UAAA,CAgBzBC,EAEJ,GAAG,IAEHlB,qBACI,WAII,GAHAU,QAAQC,IAAI,oBACZD,QAAQC,IAAIsgB,GACZvgB,QAAQC,IAAIogB,GACRC,EACJ,CACI,IAAMQ,EAAQR,EAAaQ,MAEvBzX,EAAO,GACXrJ,QAAQC,IAAI,uBACZ,IAAK,IAAI6B,EAAI,EAAGA,EAAIgf,EAAM/e,OAAQD,IAClC,CACI,IAAMqY,EAAO2G,EAAMhf,GACbwS,EAAQ,CAAC,GAAM6F,EAAK7R,IAAK,KAAQ6R,EAAKhM,KAAM,MAASgM,EAAK6F,MAAO,MAASrd,EAAatD,EAAM4B,KAAMkZ,EAAKvX,QAC9GyG,EAAKyE,KAAKwG,EACd,CACAjV,EAAMa,IAAI6gB,QAAQ1X,GAClBoX,EAAYphB,EAAMa,IAAI8gB,UAC1B,CACJ,GACA,CAACV,EAAcD,EAAaE,EAAWlhB,EAAMa,IAAKb,EAAM4B,OAG5D3B,qBACI,WACI2N,GACJ,GAEA,CAACuT,IA+EL,IAkCMlH,EAAc,SAACpR,GACjB,OAAQrH,cAAA,OAAAD,SACIC,cAAA,SAAAD,SAAOF,eAAA,SAAAE,SAAA,CACPF,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,GAAG,KAAIC,SAAEvB,EAAM4B,KAAKN,KACxBE,cAAA,MAAIF,GAAG,WAAUC,SAAEvB,EAAM4B,KAAK2C,WAC9B/C,cAAA,MAAIF,GAAG,aAAYC,SAAEvB,EAAM4B,KAAKia,YAH5B,MAMJhT,GACAA,EAAOO,KAAI,SAACoF,EAAM2C,GACd,OA7CL,SAAC3C,EAAM2C,GACtB,IAAM7P,EAAKkN,EAAS,GACdjK,EAAWiK,EAAe,SAC1BI,EAAUJ,EAAc,QACxB2L,EAAW3L,EAAY,MACvB+I,EAAS/I,EAAW,KACpBiU,EAAWjU,EAAe,SAC1BH,EAAM8C,EAAM7I,WACZ0G,EAAQR,EAAY,MAQ1B,OAAQnN,eAAC+Y,IAAMC,SAAQ,CAAA9Y,SAAA,CACXF,eAAA,MAAcK,UAAU,UAASH,SAAA,CAC7BC,cAAA,MAAIE,UAAU,WAAUH,SAACC,cAACC,IAAI,CAACE,GAAI,WAAWL,EAAGC,SAAED,MACnDE,cAAA,MAAIE,UAAU,WAAUH,SAAEgD,IAC1B/C,cAAA,MAAIE,UAAU,WAAUH,SAAEqN,MAHrBP,GAKThN,eAAA,MAAwBK,UAAU,UAASH,SAAA,CACvCC,cAAA,MAAIE,UAAU,WAAUH,SAAEyN,IAC1BxN,cAAA,MAAIuH,QAAQ,IAAIrH,UAAU,WAAUH,SAAE4Y,MAFjC9L,EAAM,SAIfhN,eAAA,MAAyBK,UAAU,aAAYH,SAAA,CAC3CC,cAAA,MAAIE,UAAU,WAAUH,SAACF,eAACI,IAAI,CAACE,GAAI,eAAe4V,EAAOhW,SAAA,CAAC,IAAEgW,EAAO,SACnElW,eAAA,MAAI0H,QAAQ,IAAIrH,UAAU,WAAUH,SAAA,CAAC,IAAEkhB,EAAS,SAF3CpU,EAAM,YAVEA,EAAM,WAgBvC,CAa+BiM,CAAW9L,EAAM2C,EAC5B,IAGAtI,GAA4B,IAAlBA,EAAOnG,QAAgBlB,cAAA,MAAAD,SAAeC,cAAA,MAAIuH,QAAQ,IAAGxH,SAAEvB,EAAM4B,KAAK2Y,WAAnC,cAI7D,EAEA,OAAKva,EAAMa,IAAIsJ,YAIX9I,eAAA,OAAKC,GAAG,YAAWC,SAAA,CACfC,cAAA,OAAKF,GAAG,QAAOC,SACXC,cAAA,MAAAD,SACKvB,EAAM4B,KAAKkhB,cAGpBthB,cAAA,OAAKF,GAAG,iBAAgBC,SACpBC,cAACmI,EAAQ,CAACM,SAAS,GAAGD,KAAMgB,EAAUtB,aAAc,SAACkN,GAAc,OAAOqD,EAAYrD,EAAU,SAVjGpV,cAACsa,IAAQ,CAACna,GAAG,KAe5B,ECiOe6gB,OA5af,SAAqBxiB,GACjB,IAAAmG,EAAgCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArC6E,EAAQ3E,EAAA,GAAE4E,EAAW5E,EAAA,GAE5BI,EAAgCL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAArCsc,EAAQrc,EAAA,GAAEsc,EAAWtc,EAAA,GAC5BG,EAA4BT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAAjCoc,EAAMnc,EAAA,GAAEoc,EAASpc,EAAA,GACxBe,EAAkFC,YAAa1C,GAAY2C,EAAAzB,YAAAuB,EAAA,GAApGgQ,EAAQ9P,EAAA,GAAAE,EAAAF,EAAA,GAAYiZ,EAAW/Y,EAApBT,QAA4ByZ,EAAYhZ,EAAlBP,KAA2BwZ,EAASjZ,EAAhBL,MAC5DmQ,EAA0FjQ,YAAapC,EAC/F,CAAC,UAAa,CAAE,SAAaqd,EAAU,OAAUE,KAASjL,EAAA1R,YAAAyR,EAAA,GAD3DE,EAAWD,EAAA,GAAAmL,EAAAnL,EAAA,GAAYoL,EAAcD,EAAvB3b,QAA+B0Q,EAAWiL,EAAjBzb,KAA0B2b,EAAYF,EAAnBvb,MAEjEX,EAAgCb,mBAAS,CAAC,GAAEc,EAAAZ,YAAAW,EAAA,GAArCka,EAAQja,EAAA,GAAEka,EAAWla,EAAA,GAC5B4D,EAA6B1E,mBAAS,GAAE2E,EAAAzE,YAAAwE,EAAA,GAAjCwY,EAASvY,EAAA,GAAEwY,EAAOxY,EAAA,GACzBG,EAA+B9E,mBAAS,GAAE+E,GAAA7E,YAAA4E,EAAA,GAAnCsY,GAAUrY,GAAA,GAAEsY,GAAQtY,GAAA,GAC3BG,GAA0BlF,mBAAS,IAAGmF,GAAAjF,YAAAgF,GAAA,GAA/B+G,GAAK9G,GAAA,GAAEmY,GAAQnY,GAAA,GACtBhB,GAAsBC,YAAY6H,GAAO,KAAlC5H,GAAsCnE,YAAAiE,GAAA,GAA3B,GA2JlB,SAASiP,GAAQnV,EAAIC,GAEjB,OAAID,EAAGE,SAAWD,EAAGC,YAEZF,EAAGE,SAAWD,EAAGC,WAEnBF,EAAGG,MAAQF,EAAGE,KACzB,CAhKAvE,qBAAU,WACmB,SAAAC,IA6CxB,OA7CwBA,EAAAC,YAAAC,cAAAC,MAAzB,SAAAC,IAAA,IAAAmC,EAAAkhB,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA3jB,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAE0C,GADtCC,QAAQC,IAAI,2CACZD,QAAQC,IAAI,0BAEPZ,EAAMa,IAAIsJ,YAAY,CAAD3J,EAAAE,KAAA,eAAAF,EAAAoQ,OAAA,iBAO1B,IAFIgT,EAAO7Q,SAASC,eAAe,QAC/B6Q,EAAQ9Q,SAASC,eAAe,SAC/BvQ,EAAI,EAAGA,GAAK,GAAKA,KAElBkhB,EAAS5Q,SAASiR,cAAc,WACzBpiB,KAAOa,EAAE6F,WAChBub,EAAMI,IAAIN,EAAQlhB,GAMtB,IAJMqhB,GAAW,IAAI5K,MAAO9C,cACtB2N,GAAY,IAAI7K,MAAO7C,WAAa,EACzB,KAEZ5T,EAFY,KAEGA,GAAKqhB,EAAWrhB,KAEhCkhB,EAAS5Q,SAASiR,cAAc,WACzBpiB,KAAOa,EAAE6F,WAChBsb,EAAKK,IAAIN,EAAQlhB,GAGrB9B,QAAQC,IAAIkjB,GACZnjB,QAAQC,IAAImjB,GACZR,EAAQO,GACRL,GAASM,GACThR,SAASC,eAAe,QAAQF,MAAQgR,EACxC/Q,SAASC,eAAe,SAASF,MAAQiR,EAErC/jB,EAAMa,IAAIO,gBAEV,mCAKAT,QAAQC,IAAI,cACZiX,KACH,yBAAArX,EAAAQ,OAAA,GAAAV,EAAA,MACJW,MAAA,KAAAC,UAAA,EA9CkB,WACMhB,EAAAe,MAAC,KAADC,UAAA,CA+CzBC,EAEJ,GAAG,IAEHlB,qBACI,WAII,GAHAU,QAAQC,IAAI,oBACZD,QAAQC,IAAIsgB,GACZvgB,QAAQC,IAAIogB,GACRC,EACJ,CACI,IAAMQ,EAAQR,EAAaQ,MAEvBzX,EAAO,GACXrJ,QAAQC,IAAI,uBACZ,IAAK,IAAI6B,EAAI,EAAGA,EAAIgf,EAAM/e,OAAQD,IAClC,CACI,IAAMqY,EAAO2G,EAAMhf,GACbwS,EAAQ,CAAC,GAAM6F,EAAK7R,IAAK,KAAQ6R,EAAKhM,KAAM,MAASgM,EAAK6F,MAAO,MAASrd,EAAatD,EAAM4B,KAAMkZ,EAAKvX,QAC9GyG,EAAKyE,KAAKwG,EACd,CACAjV,EAAMa,IAAI6gB,QAAQ1X,GAClBoX,EAAYphB,EAAMa,IAAI8gB,UAC1B,CACJ,GACA,CAACV,EAAcD,EAAaE,EAAWlhB,EAAMa,IAAKb,EAAM4B,OAG5D3B,qBACI,WAGI,GAFAU,QAAQC,IAAI,kBAEPsX,EAAL,CASA,IAJA,IAAM/J,EAAQ+J,EAAY2B,SAEtB9J,EAAU,GACVnB,EAAU,GACLnM,EAAI,EAAIA,EAAI0L,EAAMzL,OAASD,IACpC,CACI,IAAM6L,EAAOH,EAAM1L,GACbc,EAAQ+K,EAAKwL,WACnB,IAAc,MAAVvW,GAA2B,IAAVA,KAEhB+K,EAAKO,aAA2C,IAA5BP,EAAKO,YAAYnM,QAA1C,CAGA,IAEI+f,EAKAyB,EAPE/F,EAAS7P,EAAKK,QACd4I,EAASjJ,EAAK6V,QAGhB1B,EADAtB,GAAY5J,KAAU4J,EACXA,EAAS5J,GAAQzI,KAEjB,GAEXqP,KAAUne,EAAMa,IAAIyN,KAEpB4V,EAAWlkB,EAAMa,IAAIyN,KAAK6P,KAI1B+F,EAAW,CAAC,GACH5X,OAAS,GAClB4X,EAAS9U,UAAY,GACrB8U,EAAS/U,UAAY,GACrB+U,EAAS1U,QAAU,GACnB0U,EAAS1f,MAAQ,IAErB,IAAM2L,EAAY,GAAAU,OAAMqT,EAAS1f,MAAK,KAAAqM,OAAIqT,EAAS/U,WACnDP,EAAUN,EAAKO,YACf,IAAIuB,EAAe,CACfe,MAAO1O,EACPb,KAAMuO,EACN3L,MAAO0f,EAAS1f,MAChBlD,GAAI6c,EACJ5Z,SAAU+J,EAAKyL,UACfnL,QAASA,EACTtC,OAAQ4X,EAAS5X,OACjB6C,UAAW+U,EAAS/U,UACpBK,QAAS0U,EAAS3U,UAClBP,MAAOkV,EAASlV,MAChB8L,KAAMvD,EACNkL,SAAUA,GAEd1S,EAAQtB,KAAK2B,EAvCD,CAwChB,CACAL,EAAQ8B,KAAKzN,GAEb6G,EAAY8E,EA1DF,CA2Dd,GAEA,CAACmI,EAAakL,EAAgBC,IA2BlC,IAkCMpJ,GAAc,SAACpR,GACjB,OAAQrH,cAAA,OAAAD,SACIC,cAAA,SAAAD,SAAOF,eAAA,SAAAE,SAAA,CACPF,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,GAAG,KAAIC,SAAEvB,EAAM4B,KAAKN,KACxBE,cAAA,MAAIF,GAAG,WAAUC,SAAEvB,EAAM4B,KAAK2C,WAC9B/C,cAAA,MAAIF,GAAG,aAAYC,SAAEvB,EAAM4B,KAAKqP,eAH5B,MAMJpI,GACAA,EAAOO,KAAI,SAACoF,EAAM2C,GACd,OA7CL,SAAC3C,EAAM2C,GACtB,IAAM7P,EAAKkN,EAAS,GACdjK,EAAWiK,EAAe,SAC1BI,EAAUJ,EAAc,QACxB2L,EAAW3L,EAAY,MACvBQ,EAAQR,EAAY,MACpB+I,EAAS/I,EAAW,KACpBiU,EAAWjU,EAAe,SAC1BH,EAAM8C,EAAM7I,WAQlB,OAAQjH,eAAC+Y,IAAMC,SAAQ,CAAA9Y,SAAA,CACXF,eAAA,MAAcK,UAAU,UAASH,SAAA,CAC7BC,cAAA,MAAIE,UAAU,WAAUH,SAACC,cAACC,IAAI,CAACE,GAAI,WAAWL,EAAGC,SAAED,MACnDE,cAAA,MAAIE,UAAU,WAAUH,SAAEgD,IAC1B/C,cAAA,MAAIE,UAAU,WAAUH,SAAEqN,MAHrBP,GAKThN,eAAA,MAAwBK,UAAU,UAASH,SAAA,CACvCC,cAAA,MAAIE,UAAU,WAAUH,SAAEyN,IAC1BxN,cAAA,MAAIuH,QAAQ,IAAIrH,UAAU,WAAUH,SAAE4Y,MAFjC9L,EAAM,SAIfhN,eAAA,MAAyBK,UAAU,aAAYH,SAAA,CAC3CC,cAAA,MAAIE,UAAU,WAAUH,SAACF,eAACI,IAAI,CAACE,GAAI,eAAe4V,EAAOhW,SAAA,CAAC,IAAEgW,EAAO,SACnElW,eAAA,MAAI0H,QAAQ,IAAIrH,UAAU,WAAUH,SAAA,CAAC,IAAEkhB,EAAS,SAF3CpU,EAAM,YAVEA,EAAM,WAgBvC,CAa+BiM,CAAW9L,EAAM2C,EAC5B,IAGAtI,GAA4B,IAAlBA,EAAOnG,QAAgBlB,cAAA,MAAAD,SAAeC,cAAA,MAAIuH,QAAQ,IAAGxH,SAAEvB,EAAM4B,KAAK2Y,WAAnC,cAI7D,EACA,SAASuF,GAAY3O,EAAO2B,GAIxB,OAFAnS,QAAQC,IAAIuQ,GACZxQ,QAAQC,IAAIkS,GACJ3B,GAEJ,KAAK,EACDoS,EAAQzQ,GACR,MACJ,KAAK,EACD2Q,GAASpO,SAASvC,IAK9B,CAqJA,OAnJA7S,qBAAU,WACNyjB,GAASJ,EAAUhb,WAAa,IAAMkb,GAAWlb,WAAWgO,SAAS,EAAG,KAE5E,GAAG,CAACgN,EAAWE,KAGfvjB,qBAAU,WACe,SAAAmkB,IA6EpB,OA7EoBA,EAAAjkB,YAAAC,cAAAC,MAArB,SAAAyP,IAAA,IAAAE,EAAAC,EAAAC,EAAA/B,EAAA4B,EAAAnB,EAAAnM,EAAA6L,EAAA6B,EAAAC,EAAAiU,EAAAC,EAAA,OAAAlkB,cAAAG,MAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,OAEyB,GAArBC,QAAQC,IAAI,WAERZ,EAAMa,IAAIO,gBAAgB,CAADiP,EAAA3P,KAAA,SAIM,OAFzBsP,EAAM,WAAahQ,EAAMa,IAAI0P,WAAWC,QAAU,IACpDxQ,EAAMa,IAAI0P,WAAWE,KAAO,WAC1BR,EAAQ,CAAC,OAAUoC,IAAMhC,EAAA3P,KAAA,EACRV,EAAMa,IAAI6P,WAAWV,EAAKC,GAAO,KAAD,EAMvD,IANMC,EAAQG,EAAAM,KACdhQ,QAAQC,IAAIsP,GAEN/B,EAAQ+B,EAASxI,KAAK5F,OAAOqM,MAC/B4B,EAAU,GACVnB,EAAU,GACLnM,EAAI,EAAIA,EAAI0L,EAAMzL,OAASD,IAE1B6L,EAAOH,EAAM1L,GACb0N,EAAY,GAAAU,OAAMvC,EAAKwC,SAAQ,KAAAD,OAAIvC,EAAKyC,UAC1C,iBAAkBzC,IAElBM,EAAUN,EAAKiW,cAEfnU,EAAe,CACfe,MAAO1O,EACPb,KAAMuO,EACN3L,MAAO8J,EAAKwC,SACZxP,GAAIgN,EAAK8C,QAET7M,SAAU+J,EAAKkW,UACf5V,QAASA,EACTtC,OAAQgC,EAAKgD,OACblC,UAAWd,EAAKiD,WAChBpC,UAAWb,EAAKkD,SAChBhC,QAASlB,EAAKmD,QACdzC,MAAOV,EAAKoD,MACZoJ,KAAMxM,EAAKuU,KACXJ,SAAUnU,EAAKmQ,WAEnB1O,EAAQtB,KAAK2B,GAEjBL,EAAQ8B,KAAK2H,IACbvO,EAAY8E,GAASM,EAAA3P,KAAA,iBAUD,OALd4jB,EAAYd,GAAa,EAC/Ba,EAAUf,EAAUhb,WAAa,IAAMgc,EAAUhc,WAAWgO,SAAS,EAAG,KACxE0M,EAAY3Q,IACZ6Q,EAAUmB,GACV1jB,QAAQC,IAAIyR,IACZ1R,QAAQC,IAAIyjB,GAAQhU,EAAA5P,KAAA,GAAA4P,EAAA3P,KAAA,GAGVuX,IAAc,KAAD,GAAA5H,EAAA3P,KAAA,iBAAA2P,EAAA5P,KAAA,GAAA4P,EAAAoI,GAAApI,EAAA,UAInB1P,QAAQ8jB,KAAKpU,EAAAoI,GAAE3J,MAAM,yBAAAuB,EAAArP,OAAA,GAAA8O,EAAA,qBAkBhC7O,MAAA,KAAAC,UAAA,EA9EkB,WACEkjB,EAAAnjB,MAAC,KAADC,UAAA,CA8ErByV,EACA,GAEA,CAAClM,KA2DAzK,EAAMa,IAAIsJ,YAIX9I,eAAA,OAAKC,GAAG,WAAUC,SAAA,CACdC,cAAA,OAAKF,GAAG,QAAOC,SACXC,cAAA,MAAAD,SACKvB,EAAM4B,KAAK6V,YAGpBpW,eAAA,OAAKC,GAAG,cAAaC,SAAA,CACjBC,cAAA,OAAKE,UAAU,OAAOJ,GAAK,OAAMC,SAC7BC,cAAC6H,IAAkB,CAACC,SAAS,QAAQC,GAAI,CAACC,MAAO,WAAYR,QAAS,YApEtF,WAEI,IAAI4a,EAAON,EACPO,EAAQL,GACQ,kBAATI,IACPA,EAAOvO,SAASuO,IACC,kBAAVC,IACPA,EAAQxO,SAASwO,IAErBljB,QAAQC,IAAIgjB,GACZjjB,QAAQC,IAAIijB,GACZljB,QAAQC,WAAWgjB,GACnBjjB,QAAQC,WAAWijB,GACfA,EAAQ,EAERA,GAAS,GAITD,GAAQ,EACRC,EAAQ,IAEZN,EAAQK,GACRH,GAASI,GACT9Q,SAASC,eAAe,QAAQF,MAAQ8Q,EACxC7Q,SAASC,eAAe,SAASF,MAAQ+Q,CAC7C,CA0C6Fa,EAAW,MAE5FljB,cAAA,UAAQsN,KAAK,OAAOxN,GAAG,OAAOI,UAAU,WAAW+T,SAAU,SAACC,GAAWoK,GAAY,EAAGpK,EAAMC,OAAO7C,MAAO,IAC5GtR,cAAA,UAAQsN,KAAK,QAAQxN,GAAG,QAAQI,UAAU,WAAW+T,SAAU,SAACC,GAAWoK,GAAY,EAAGpK,EAAMC,OAAO7C,MAAO,IAC1GtR,cAAA,OAAKE,UAAU,OAAOJ,GAAK,OAAMC,SAC7BC,cAACiI,IAAgB,CAACH,SAAS,QAAQC,GAAI,CAACC,MAAO,WAAYR,QAAS,YA7CxF,WAEI,IAAI4a,EAAON,EACPO,EAAQL,GACQ,kBAATI,IACPA,EAAOvO,SAASuO,IACC,kBAAVC,IACPA,EAAQxO,SAASwO,IACrBljB,QAAQC,IAAIgjB,GACZjjB,QAAQC,IAAIijB,GACZljB,QAAQC,WAAWgjB,GACnBjjB,QAAQC,WAAWijB,GACfA,EAAQ,GAERA,GAAS,GAITD,GAAQ,EACRC,EAAQ,GAEZN,EAAQK,GACRH,GAASI,GAET9Q,SAASC,eAAe,QAAQF,MAAQ8Q,EACxC7Q,SAASC,eAAe,SAASF,MAAQ+Q,CAC7C,CAmB+Fc,EAAW,SAGlGnjB,cAAA,OAAKF,GAAG,iBAAgBC,SACpBC,cAACmI,EAAQ,CAACM,SAAUQ,GAAaT,KAAMgB,EAAUtB,aAAc,SAACkN,GAAc,OAAOqD,GAAYrD,EAAU,SApB5GpV,cAACsa,IAAQ,CAACna,GAAG,KAwB5B,ECxTeijB,OAxHf,SAAmB5kB,GAEf,IAAAmG,EAAgCC,mBAAS,CAAC,GAAEC,EAAAC,YAAAH,EAAA,GAArCqS,EAAQnS,EAAA,GAAEwZ,EAAWxZ,EAAA,GAC5BI,EAA2CL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAAnDoF,EAAYnF,EAAA,GAAEoF,EAAkBpF,EAAA,GAqCvC,SAASme,IAEL,IAAItJ,EAAO,CACXA,UAAiB,GACjBA,UAAiB,GACjBA,aAAoB,GACpBA,MAAa,GACbA,QAAe,GACfA,OAAc,GACdA,YAAmB,GACnBsE,EAAYtE,EAChB,CAkDA,OA7FAtb,qBAAU,WACmB,SAAAC,IASxB,OATwBA,EAAAC,YAAAC,cAAAC,MAAzB,SAAAC,IAAA,OAAAF,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACSV,EAAMa,IAAIsJ,aAAgBnK,EAAMa,IAAIO,gBAAe,CAAAZ,EAAAE,KAAA,eAAAF,EAAAoQ,OAAA,iBAIxD,kCACAjQ,QAAQC,IAAI,2CACZD,QAAQC,IAAI,wBACZikB,IAAmB,wBAAArkB,EAAAQ,OAAA,GAAAV,EAAA,MACtBW,MAAA,KAAAC,UAAA,EAVkB,WACMhB,EAAAe,MAAC,KAADC,UAAA,CAWzBC,EAEJ,GAAG,IA+EEnB,EAAMa,IAAIsJ,aAAgBnK,EAAMa,IAAIO,gBAIrCC,eAAA,OAAKC,GAAG,WAAUC,SAAA,CACdC,cAAA,OAAKF,GAAG,QAAOC,SACXC,cAAA,MAAAD,SACKvB,EAAM4B,KAAKkjB,cAGpBtjB,cAAA,OAAKF,GAAG,gBAAgBsS,QAAS5T,EAAMa,IAAIqT,MAAM3S,SAC5CvB,EAAMa,IAAIO,iBACPI,cAACme,GAAQ,CAAC/d,KAAM5B,EAAM4B,KAAMf,IAAKb,EAAMa,IAAK0a,KAAM/C,EAAU8H,QAlC5E,SAAiBpQ,GAEbvP,QAAQC,IAAI,gBAAkBiL,GAC9BlL,QAAQC,IAAIsP,GACZpE,GAAoBD,GAEpB,IACIjK,EADE8Y,EAAO5X,EAEgB,OAAzBoN,EAASxI,KAAK5F,QAEd4Y,EAAK9E,KAAO+E,KAAMI,KAAKC,QACvBpZ,EAAO5B,EAAM4B,KAAKmjB,WAClBF,MAIAnK,EAAK9E,KAAO+E,KAAMI,KAAKG,MACvBtZ,EAAO5B,EAAM4B,KAAKojB,SAEtBtK,EAAK1X,UAAY,IACjB2X,KAAMY,KAAK3Z,EAAM8Y,EACrB,SAEWlZ,cAACsa,IAAQ,CAACna,GAAG,KAgB5B,E,qCC1HMsjB,GAAG,WACL,SAAAA,IAAcC,aAAA,KAAAD,GACVtkB,QAAQC,IAAI,oBACZ4B,KAAK2H,aAAc,EACnB3H,KAAKkX,WAAY,EACjBlX,KAAKmX,WAAY,EACjBnX,KAAK2iB,WAAY,EACjB3iB,KAAK+V,QAAS,EACd/V,KAAKgW,SAAW,CAAC,EACjBhW,KAAK8L,KAAO,CAAC,EACb9L,KAAKgM,KAAO,CAAC,EACbhM,KAAK4iB,iBAAcrkB,EACnByB,KAAK0R,OAAQ,EACb1R,KAAKqZ,QAAU,GACfrZ,KAAK+N,WAAa,CAAC,EACnB/N,KAAKpB,iBAAkB,EACvBoB,KAAK+Q,OAAS,EAClB,CA0PC,OA1PA8R,aAAAJ,EAAA,EAAA5W,IAAA,aAAAyE,MAAA,eAAAwS,EAAAnlB,YAAAC,cAAAC,MAED,SAAAC,EAAiB0P,EAAKC,GAAK,IAAAwD,EAAAvD,EAAA,OAAA9P,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKN,OAHjBuP,EAAMsV,GAAKC,UAAUC,SACfhS,EAAM,CAAC,OAAUxD,GACvBtP,QAAQC,IAAI,iBAAmBoP,GAC/BrP,QAAQC,IAAI6S,GAAKjT,EAAAE,KAAA,EACMglB,KAAMC,IAAI3V,EAAKyD,GAAK,KAAD,EAA5B,OAARvD,EAAQ1P,EAAAmQ,KAAAnQ,EAAAoQ,OAAA,SACPV,GAAQ,wBAAA1P,EAAAQ,OAAA,GAAAV,EAAA,KAClB,gBAAAsP,EAAA8C,GAAA,OAAA4S,EAAArkB,MAAA,KAAAC,UAAA,EAVA,IAUA,CAAAmN,IAAA,cAAAyE,MAAA,eAAA8S,EAAAzlB,YAAAC,cAAAC,MAED,SAAAyP,EAAkBE,EAAKC,GAAK,IAAAC,EAAA,OAAA9P,cAAAG,MAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,OAIL,OAFnBC,QAAQC,IAAI,iBAAmBoP,GAC/BC,EAAMsV,GAAKC,UAAUC,SACrB9kB,QAAQC,IAAIqP,GAAOI,EAAA3P,KAAA,EACIglB,KAAMG,KAAK7V,EAAKC,GAAO,KAAD,EAA/B,OAARC,EAAQG,EAAAM,KAAAN,EAAAO,OAAA,SAEPV,GAAQ,wBAAAG,EAAArP,OAAA,GAAA8O,EAAA,KAClB,gBAAAqS,EAAA2D,GAAA,OAAAF,EAAA3kB,MAAA,KAAAC,UAAA,EAVA,IAUA,CAAAmN,IAAA,eAAAyE,MAAA,eAAAiT,EAAA5lB,YAAAC,cAAAC,MAED,SAAA4R,IAAA,IAAA/B,EAAAqD,EAAA,OAAAnT,cAAAG,MAAA,SAAA4R,GAAA,cAAAA,EAAA1R,KAAA0R,EAAAzR,MAAA,cAAAyR,EAAAzR,KAAA,EAG2BglB,KAAMC,IAAI,sCAAqC,OAAhEzV,EAAQiC,EAAAxB,KACdhQ,QAAQC,IAAI,kBACZD,QAAQC,IAAIsP,EAASxI,MACf6L,EAASrD,EAASxI,KAAKse,GAC7BrlB,QAAQC,IAAI,mBAAqB2S,GACjC/Q,KAAK+Q,OAASA,EACd/Q,KAAKyjB,gBAAe,wBAAA9T,EAAAnR,OAAA,GAAAiR,EAAA,UACvB,yBAAA8T,EAAA9kB,MAAA,KAAAC,UAAA,EAZA,IAYA,CAAAmN,IAAA,gBAAAyE,MAED,WACC,IAADoT,EAAA,KACI,GAA2B,IAAvB1jB,KAAK+Q,OAAO7Q,QAAiBF,KAAK+N,WAAW4V,UAE7C3jB,KAAK+N,WAAW4V,WAAa3jB,KAAK+Q,OACtC,CACI5S,QAAQC,IAAI,wBAA0B4B,KAAK+N,WAAWC,SACtD,IAAM6B,EAAQ,WAAa7P,KAAK+N,WAAWC,QAAU,IAAMhO,KAAK+N,WAAWE,KAAO,SAClFjO,KAAKpB,iBAAkB,EACvBskB,KAAMC,IAAItT,EAAO,CAAC,OAAU,CAAC,GAAMmT,UAAUC,YACxCW,MAAM,SAAClW,GACJvP,QAAQC,IAAI,oBACZD,QAAQC,IAAIsP,EAASxI,MACrBwe,EAAKhS,MAAQhE,EAASxI,KAAKwM,MAC3BgS,EAAKrK,QAAU3L,EAASxI,KAAKmU,QAC7BqK,EAAK/b,aAAc,CACvB,IACCkc,OAAM,SAAAze,GACL,IAAMyK,EAAQ,WAAa6T,EAAK3V,WAAWC,QAAU,IAAM0V,EAAK3V,WAAWE,KAAO,SAClF6V,OAAOC,KAAKlU,EACd,GACR,CACJ,GAAC,CAAAhE,IAAA,aAAAyE,MAGD,WACQtQ,KAAKkX,WAAalX,KAAKmX,YACvBnX,KAAK2H,aAAc,EACnBwQ,KAAM2C,UACF9a,KAAKgkB,UACLhkB,KAAKgkB,WAIjB,GAAC,CAAAnY,IAAA,iBAAAyE,MAED,SAAe0T,GACXhkB,KAAK4iB,YAAcoB,CACvB,GAAC,CAAAnY,IAAA,UAAAyE,MAED,SAAQtE,GACJhM,KAAKgM,KAAOA,EACZhM,KAAKmX,WAAY,EACjBnX,KAAKikB,aACLjkB,KAAKkkB,WACT,GAAC,CAAArY,IAAA,gBAAAyE,MAED,SAAcvC,GAEV5P,QAAQC,IAAI2P,GACZ/N,KAAK+N,WAAaA,EAClB/N,KAAK+N,WAAa,CAAC,EACnB/N,KAAK+N,WAAW4V,SAAW5V,EAAW4V,SAElC5V,EAAWoW,OAEXnkB,KAAK+N,WAAWC,QAAU,qCAC1BhO,KAAK+N,WAAWE,KAAO,MAIvBjO,KAAK+N,WAAWC,QAAUD,EAAWC,QACrChO,KAAK+N,WAAWE,KAAOF,EAAWE,MAItC9P,QAAQC,IAAI4B,KAAK+N,WAAW4V,UAC5B3jB,KAAKyjB,eACT,GAAC,CAAA5X,IAAA,UAAAyE,MAED,SAAQ3E,GACJ3L,KAAK8L,KAAO,CAAC,EACb,IAAK,IAAI7L,EAAI,EAAIA,EAAI0L,EAAMzL,OAASD,IACpC,CACI,IAAM6L,EAAOH,EAAM1L,GACbnB,EAAKgN,EAAU,IACrB9L,KAAK8L,KAAKhN,GAAMgN,CACpB,CACA9L,KAAKkX,WAAY,EACjBlX,KAAKikB,YACT,GAAC,CAAApY,IAAA,UAAAyE,MAED,SAAQ2O,GACJjf,KAAKsY,KAAO,CAAC,EACb,IAAK,IAAIrY,EAAI,EAAIA,EAAIgf,EAAM/e,OAASD,IACpC,CACI,IAAMqY,EAAO2G,EAAMhf,GACbnB,EAAKwZ,EAAKxZ,GAChBkB,KAAKsY,KAAKxZ,GAAMwZ,EAChBtY,KAAKsY,KAAKxZ,GAAU,KAAI,CAC5B,CACAkB,KAAK2iB,WAAY,EACjB3iB,KAAKkkB,WACT,GAAC,CAAArY,IAAA,YAAAyE,MAED,WACI,GAAKtQ,KAAK2iB,WAAc3iB,KAAKmX,UAA7B,CAMA,IAAK,IAAIlX,EAAI,EAAIA,EAAID,KAAKgM,KAAK9L,OAASD,IACxC,CACI,IAAMc,EAAQf,KAAKgM,KAAK/L,GAAGc,MAG3B,GAAc,MAAVA,GAA2B,MAAVA,GAA2B,IAAVA,GAAyB,IAAVA,EAArD,CAGA,IAAMgU,EAAS/U,KAAKgM,KAAK/L,GAAG0hB,QAIxB5M,GAAUA,EAAO7U,OAAS,GAAK6U,KAAU/U,KAAKsY,KAC9CtY,KAAKsY,KAAKvD,GAAc,MAAK,EAE7B/U,KAAKsY,KAAKvD,GAAc,KAAI,CATpB,CAUhB,CACA5W,QAAQC,IAAI4B,KAAKsY,KAnBjB,MAFIna,QAAQC,IAAI,oBAsBpB,GAAC,CAAAyN,IAAA,QAAAyE,MAED,SAAM0F,GACF7X,QAAQC,IAAI,cAAgB4X,EAAc,KAC1ChW,KAAK+V,QAAS,EACd/V,KAAKgW,SAAWA,EACU,MAAtBA,EAAgB,OACM,IAAtBA,EAAgB,QAChBhW,KAAK0R,OAAQ,GACb1R,KAAK4iB,aACL5iB,KAAK4iB,aAAY,EACzB,GAAC,CAAA/W,IAAA,SAAAyE,MAED,WACInS,QAAQC,IAAI,cACZ4B,KAAK+V,QAAS,EACd/V,KAAKgW,SAAW,CAAC,EACbhW,KAAK4iB,aACL5iB,KAAK4iB,aAAY,EACzB,GAAC,CAAA/W,IAAA,UAAAyE,MAAA,eAAA8T,EAAAzmB,YAAAC,cAAAC,MAED,SAAAmS,IAAA,IAAA+E,EAAAuG,EAAA9N,EAAAC,EAAApH,EAAA+L,EAAAD,EAAAM,EAAA3G,EAAA7L,EAAAokB,EAAAvlB,EAAAwlB,EAAAC,EAAAC,EAAA9lB,UAAA,OAAAd,cAAAG,MAAA,SAAAkS,GAAA,cAAAA,EAAAhS,KAAAgS,EAAA/R,MAAA,OACiB,GADH6W,EAAMyP,EAAAtkB,OAAA,QAAA3B,IAAAimB,EAAA,GAAAA,EAAA,QAAGjmB,EACf+c,EAAM,IACNtb,KAAKpB,gBAAgB,CAADqR,EAAA/R,KAAA,SAGU,OAFxBsP,EAAM,WAAaxN,KAAK+N,WAAWC,QAAU,IAC/ChO,KAAK+N,WAAWE,KAAO,QACrBR,EAAQ,CAAC,KAAQsH,GAAO9E,EAAA/R,KAAA,EACT8B,KAAKkO,WAAWV,EAAKC,GAAO,KAAD,EAEhD,GAFMpH,EAAM4J,EAAA9B,KACZhQ,QAAQC,IAAIiI,GACR,UAAWA,EAAOnB,KAAK5F,OAC3B,CAEI8S,EAAAC,YACoBhM,EAAOnB,KAAK5F,OAAOqM,OAAK,IAA5C,IAAAyG,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAWC,EAAKN,EAAA7B,MAEZnS,QAAQC,IAAIqU,GACN3G,EAAO,CAAC,GAAM2G,EAAM7D,QAAS,MAAS6D,EAAMnE,SAAU,MAASmE,EAAMvD,MAAO,SAAYuD,EAAM2N,UAAW,QAAW3N,EAAMyN,YAAa,KAAQzN,EAAM0N,MAAO,YAAe1N,EAAMgS,eACvLnJ,EAAIrP,KAAKH,EAE7B,OAAA4G,GAAAN,EAAAO,EAAAD,EAAA,SAAAN,EAAAQ,GAAA,CACY,CAAC3C,EAAA/R,KAAA,iBAI2B,GAD5BC,QAAQC,IAAI,SAAW2W,GACvB5W,QAAQC,IAAI4B,KAAKkX,WACZlX,KAAKkX,UAAU,CAADjH,EAAA/R,KAAA,gBAAA+R,EAAA7B,OAAA,SACRkN,GAAG,QAELrb,EAAI,EAAC,aAAGA,EAAID,KAAKgM,KAAK9L,QAAM,CAAA+P,EAAA/R,KAAA,SACN,GAArBuU,EAAQzS,KAAKgM,KAAK/L,QACT1B,IAAXwW,GAAwBtC,EAAMkP,UAAY5M,EAAM,CAAA9E,EAAA/R,KAAA,gBAAA+R,EAAA7B,OAAA,0BAGhC,MAAhBqE,EAAM1R,OAAiC,MAAhB0R,EAAM1R,OAAiC,IAAhB0R,EAAM1R,OAA+B,IAAhB0R,EAAM1R,MAAW,CAAAkP,EAAA/R,KAAA,gBAAA+R,EAAA7B,OAAA,uBAGlFtP,EAAK2T,EAAe,QACpB3G,EAAO9L,KAAK8L,KAAKhN,IAEnBylB,EAAW,CAAC,GACH,GAAIzY,EAAKrF,IACtB8d,EAAgB,MAAIzY,EAAK9J,MACzBuiB,EAAmB,SAAI9R,EAAMiS,UAAUlN,MAAM,KAAK,GAAGnX,QAAQ,IAAI,IAAI,GAAGA,QAAQ,IAAK,KACrFkkB,EAAkB,QAAI9R,EAAMpG,YAAYmL,MAAM,KAAK,GAAGnX,QAAQ,IAAI,IAAI,GAAGA,QAAQ,IAAK,KACtFkkB,EAAgB,MAAIzY,EAAKU,MACzB+X,EAAe,KAAI9R,EAAMkP,QACzBrG,EAAIrP,KAAKsY,GAAS,QAlBkBtkB,IAAGgQ,EAAA/R,KAAA,wBAAA+R,EAAA7B,OAAA,SAqBxCkN,GAAG,yBAAArL,EAAAzR,OAAA,GAAAwR,EAAA,UACb,yBAAAoU,EAAA3lB,MAAA,KAAAC,UAAA,EAnDA,IAmDA,CAAAmN,IAAA,UAAAyE,MAED,WACI,OAAOtQ,KAAKsY,IAChB,GAAC,CAAAzM,IAAA,UAAAyE,MAAA,eAAAqU,EAAAhnB,YAAAC,cAAAC,MAED,SAAA0T,IAAA,OAAA3T,cAAAG,MAAA,SAAAyT,GAAA,cAAAA,EAAAvT,KAAAuT,EAAAtT,MAAA,OAAAsT,EAAAvT,KAAA,EAEQ+B,KAAK2H,aAAc,EAAK6J,EAAAtT,KAAA,eAIL,OAJKsT,EAAAvT,KAAA,EAAAuT,EAAAyE,GAAAzE,EAAA,SAIxBrT,QAAQC,IAAGoT,EAAAyE,IAAQzE,EAAApD,OAAA,UACZ,GAAK,cAAAoD,EAAApD,OAAA,UAET,GAAI,wBAAAoD,EAAAhT,OAAA,GAAA+S,EAAA,kBACd,yBAAAoT,EAAAlmB,MAAA,KAAAC,UAAA,EAZA,IAYA,CAAAmN,IAAA,SAAAyE,MAED,WACI,OAAOtQ,KAAK2H,WAChB,GAAC,CAAAkE,IAAA,cAAAyE,MAED,SAAYsU,GAERzmB,QAAQC,IAAI,8BACZ4B,KAAKgkB,SAAWY,CACpB,KAACnC,CAAA,CA3QI,GA8QMA,M,UC7QToC,GAAM,IAFIC,EAAQ,KAEZ,CAAYC,GAAmB,YAyE5BC,GAvEF,WACT,SAAAA,IAActC,aAAA,KAAAsC,GACV7mB,QAAQC,IAAI,kBAEZD,QAAQC,IAAI,WACZ,IAAM6mB,EAAY1U,SAASkG,OAC3BzW,KAAKyW,OAASwO,EACTzN,MAAM,KACN5Q,KAAI,SAAAse,GAAC,OAAIA,EAAE1N,MAAM,IAAI,IACrB2N,QAAO,SAACC,EAAKF,GACV,IAAMrZ,EAAMqZ,EAAEG,QAAQtF,OAChBzP,EAAQ4U,EAAEI,KAAK,KAAKvF,OAE1B,OADAqF,EAAIG,mBAAmB1Z,IAAQ0Z,mBAAmBjV,GAC3C8U,CACX,GAAG,CAAC,EACZ,CAqDC,OArDAvC,aAAAmC,EAAA,EAAAnZ,IAAA,aAAAyE,MAED,SAAWgI,EAAM1D,GACb,IACI4Q,EADAC,GAAU,EAEd,GAAInN,GAAQ1D,EAAa1U,OAAS,EAAG,CACjC/B,QAAQC,IAAI,uBACZ,IAAMsnB,EAAUpN,EAAsB,gBAChCqN,EAAUrN,EAAsB,gBAGtC,GADAkN,EAAgBX,GAAIe,KAAKhR,EAAc,UACnCA,IAAiB8Q,GACjB9Q,IAAiB+Q,EAEjBH,EAAgB5Q,EAChB6Q,GAAU,OAET,GAAIC,IAAYF,EAGjBC,GAAU,MAGd,CAEI,IADA,IAAII,EAAe,GACV5lB,EAAI,EAAIA,EAAI2U,EAAa1U,OAASD,IAElC6lB,MAAMlR,EAAa3U,MACpB4lB,GAAgBjR,EAAa3U,KAErCulB,EAAgBX,GAAIe,KAAKC,EAAc,aACjBF,IAGlBF,GAAU,EAMlB,CAGJ,CACA,GAAIA,EACJ,CACI,IAAMnf,EAAO,IAAIoQ,KAEjBpQ,EAAKqQ,QAAQrQ,EAAKsQ,UAAWC,QAC7B,IAAMlB,EAAarP,EAAKwQ,cACxBvG,SAASkG,OAAS,YAAe+O,EAAgB,aAAe7P,EAAa,mBACjF,CACA,OAAO8P,CACX,KAACT,CAAA,CApEQ,G,kCCiHEe,OAnHf,SAAkBvoB,GAEd,IAAAmG,EAAgCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAxCqiB,EAAQniB,EAAA,GAAEoiB,EAAWpiB,EAAA,GAC5BI,EAA0BL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAAlCiiB,EAAKhiB,EAAA,GAAEiiB,EAAQjiB,EAAA,GAsCtB,OApCAzG,qBACI,WACQD,EAAMa,IAAIO,iBAEV,kCAEAonB,IAAaxoB,EAAMwoB,WAEnB7nB,QAAQC,IAAI,gBAAkBZ,EAAMa,IAAI0X,QACxC5X,QAAQC,IAAIZ,EAAMwoB,UAClBG,GAAUD,GACVD,EAAYzoB,EAAMwoB,WAEtB,IAAMI,EAAO7V,SAASC,eAAe,iBAEhC0V,EAMFE,EAAKC,UAAU5E,IAAI,WAJnB2E,EAAKC,UAAUC,OAAO,UAO7B,GAAG,CAAC9oB,EAAMwoB,SAAUA,EAAUE,EAAO1oB,EAAMa,IAAI0X,SAa3ClX,eAAA,OAAKC,GAAG,gBAAgB0H,QAAS,WAAQ2f,GAAUD,EAAM,EAAGhnB,UAAU,gBAAeH,SAAA,EAC/EvB,EAAMa,IAAIO,iBAAmBpB,EAAMa,IAAI0X,QACrClX,eAAA4gB,WAAA,CAAA1gB,SAAA,CACAC,cAAA,OAAKE,UAAU,aAAYH,SACtBvB,EAAMa,IAAI2X,SAAc,IAAI,MAAQxY,EAAMa,IAAI2X,SAAe,KAAIxY,EAAM4B,KAAK8c,aAEjFld,cAAA,MAAIE,UAAU,aAGlBF,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,IAAIqH,QAAS,kBAAM2f,GAAS,EAAM,EAACpnB,SAC9DvB,EAAM4B,KAAKmnB,OAEhBvnB,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,UAAUqH,QAAS,kBAAM2f,GAAS,EAAM,EAACpnB,SACpEvB,EAAM4B,KAAKsH,SAEhB1H,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,UAAUqH,QAAS,kBAAM2f,GAAS,EAAM,EAACpnB,SACpEvB,EAAM4B,KAAK0T,aAEftV,EAAMa,IAAIO,iBACPC,eAAA4gB,WAAA,CAAA1gB,SAAA,CACIC,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,YAAYqH,QAAS,kBAAM2f,GAAS,EAAM,EAACpnB,SACtEvB,EAAM4B,KAAKC,WAEhBL,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,UAAUqH,QAAS,kBAAM2f,GAAS,EAAM,EAACpnB,SACpEvB,EAAM4B,KAAKE,aAItB9B,EAAMa,IAAIO,iBAAmBpB,EAAMa,IAAI0X,QACrC/W,cAAAygB,WAAA,CAAA1gB,SACIC,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,kBAAkBqH,QAAS,kBAAM2f,GAAS,EAAM,EAACpnB,SAC5EvB,EAAM4B,KAAKonB,mBAIvBhpB,EAAMa,IAAIqT,OACP7S,eAAA4gB,WAAA,CAAA1gB,SAAA,CACAC,cAAA,MAAIE,UAAU,UACdF,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,cAAcqH,QAAS,kBAAM2f,GAAS,EAAM,EAACpnB,SACxEvB,EAAM4B,KAAKiX,aAEhBrX,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,mBAAmBqH,QAAS,kBAAM2f,GAAS,EAAM,EAACpnB,SAC7EvB,EAAM4B,KAAKkhB,YAEhBthB,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,eAAeqH,QAAS,kBAAM2f,GAAS,EAAM,EAACpnB,SACzEvB,EAAM4B,KAAK6V,aAInBzX,EAAMa,IAAIO,iBAAmBpB,EAAMa,IAAIqT,OACpC1S,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,aAAaqH,QAAS,kBAAM2f,GAAS,EAAM,EAACpnB,SACvEvB,EAAM4B,KAAKkjB,aAGlB9kB,EAAMa,IAAIO,iBAAmBpB,EAAMa,IAAI0X,QACrClX,eAAA4gB,WAAA,CAAA1gB,SAAA,CACIC,cAAA,MAAIE,UAAU,UACdF,cAAA,OAAKE,UAAU,aAAasH,QAAS,kBAjErD2f,GAAS,GACT3oB,EAAMa,IAAI8c,SACV5K,SAASkG,OAAS,WAClBlG,SAASkG,OAAS,iBAClBlG,SAASkG,OAAS,kBA6DiD,EAAC1X,SAC/CvB,EAAM4B,KAAK+b,aAItB3d,EAAMa,IAAIO,kBAAoBpB,EAAMa,IAAI0X,QACtC/W,cAAAygB,WAAA,CAAA1gB,SACIC,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,kBAAkBqH,QAAS,kBAAM2f,GAAS,EAAM,EAACpnB,SAC5EvB,EAAM4B,KAAKkX,YAMxC,E,qBCtFemQ,OAzBf,SAAgBjpB,GACZ,IAAAmG,EAAgCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAxCqiB,EAAQniB,EAAA,GAAEoiB,EAAWpiB,EAAA,GAUhC,OACI7E,cAAAygB,WAAA,CAAA1gB,SACIF,eAAA,OAAKC,GAAG,SAASI,UAAU,SAAQH,SAAA,CAC/BC,cAAA,OAAKE,UAAU,QAAOH,SACjB2nB,YAAW1nB,cAAA,MAAAD,SAAKvB,EAAM4B,KAAiB,aAAYJ,cAAA,MAAAD,SAAKvB,EAAM4B,KAAgB,cAEnFJ,cAAA,OAAKE,UAAU,OAAOsH,QAdd,WACZ,IAAMmgB,EAAWpW,SAASC,eAAe,UAAUoW,MAAMD,SACzDxoB,QAAQC,IAAI,YACZD,QAAQC,IAAIuoB,GACZxoB,QAAQC,IAAImS,SAASC,eAAe,UAAUoW,MAAMC,OACpDZ,GAAaD,EACjB,EAQ+CjnB,SACnCC,cAAC8nB,KAAQ,CAAC5nB,UAAU,MAAM4H,SAAS,QAAQC,GAAI,CAAEC,MAAO,eAE5DhI,cAAC+mB,GAAQ,CAAC3mB,KAAM5B,EAAM4B,KAAMf,IAAKb,EAAMa,IAAK2nB,SAAUA,QAIlE,ECAM3nB,GAAM,IAAIokB,GACVjM,GAAU,IAAIwO,GAEd+B,GAAa,CAAC,EAChBC,GAAS,GAiMEC,OAhMf,WAGI,IAAAtjB,EAAsCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA9CgE,EAAW9D,EAAA,GAAEiR,EAAcjR,EAAA,GAClCI,EAA4BL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAApC8R,EAAM7R,EAAA,GAAEgjB,EAAShjB,EAAA,GACxBG,EAA4BT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAAjC0Q,EAAMzQ,EAAA,GAAE0Q,EAAS1Q,EAAA,GACxBO,EAAmEC,YAASpC,GAA3DykB,EAAWtiB,EAApBG,QAA6BoiB,EAASviB,EAAhBO,MAAwBiiB,EAAQxiB,EAAdK,KAChDoiB,EAAyExiB,YAAStB,GAAjE+jB,EAAaD,EAAtBtiB,QAA+BwiB,EAAWF,EAAlBliB,MAA0BqiB,EAAUH,EAAhBpiB,KACpDG,EAA+EC,YAAahD,GAAWiD,EAAAzB,YAAAuB,EAAA,GAAhGqiB,EAAQniB,EAAA,GAAAE,EAAAF,EAAA,GAAaoiB,EAAWliB,EAApBT,QAA6B4iB,EAASniB,EAAhBL,MAAwByiB,EAAQpiB,EAAdP,KAC3DqQ,EAAuCjQ,YAAaxC,EAAY,CAAE,UAAa,CAAE,IAAOiS,KAAWS,EAAA1R,YAAAyR,EAAA,GAA5FF,EAAQG,EAAA,GAAUF,EAAQE,EAAA,GAAdtQ,KAkInB,SAAS4iB,IAEL,IAAM5P,EAAO5X,EACb4X,EAAK9E,KAAO+E,KAAMI,KAAKC,QACvBN,EAAKU,OAASmO,GAAWjI,gBACzB5G,EAAK1X,UAAY,IACjB0X,EAAKW,QAAU,GACfV,KAAMY,KAAKgO,GAAWjI,gBAAiB5G,EAC3C,CAEA,SAAS6P,EAAUhS,GACf5X,QAAQC,IAAI,6BAA+BC,GAAI0X,QAE/CmR,EAAU7oB,GAAI0X,OAClB,CAEA,OAhJAtY,qBAAU,WACmB,SAAAC,IAiCxB,OAjCwBA,EAAAC,YAAAC,cAAAC,MAAzB,SAAAC,IAAA,IAAAkqB,EAAAC,EAAApc,EAAA,OAAAjO,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAkBI,IAAS2N,KAjBT1N,QAAQC,IAAI,kBACZD,QAAQC,IAAI,cACZD,QAAQC,IAAI4kB,UAAUC,UACtB+D,IAAkB,wBAClB7oB,QAAQC,IAAI8pB,+LAAYC,UACxBhqB,QAAQC,IAAI8pB,+LAAYE,aAClBJ,EAAOhF,UAAUqF,UACvBlqB,QAAQC,IAAI4pB,GACRC,EAAK,CAAC,EAGNA,EAFAD,EAAK9nB,OAAQ,IAAM8nB,EAAK,GAAGnI,cAAc3N,SAAS,OAAS8V,EAAK,GAAGnI,cAAc3N,SAAS,OAErF9S,GAAKkpB,GAILlpB,GAAKmpB,GAIVxB,GAAWlb,GAAOoc,EAAGpc,GACxB,OAAA7N,EAAAE,KAAA,GAEKG,GAAImqB,eAAe,KAAD,GAEpB,cAAehS,GAAQC,QAAwC,SAA7BD,GAAQC,OAAOtB,YAEjDhX,QAAQC,IAAI,eAAiBoY,GAAQC,OAAOkL,SAC5C3M,EAAUwB,GAAQC,OAAOkL,SACzBxjB,QAAQC,IAAIoY,GAAQC,OAAOgS,SAC3BpT,KAEJP,GAAe,GAAM,yBAAA9W,EAAAQ,OAAA,GAAAV,EAAA,MACxBW,MAAA,KAAAC,UAAA,EAlCkB,WACMhB,EAAAe,MAAC,KAADC,UAAA,CAkCzBC,EACJ,GAAG,CAAC0W,IAEJ5X,qBACI,WAEI,GADAU,QAAQC,IAAI,oBACPkX,EAAL,CAMA,IAAMgD,EAAOhD,EAASgD,KAGlB9B,GAAQC,OAAOiS,UAAYlS,GAAQ6B,WAAWC,EAAM9B,GAAQC,OAAOiS,YAEnEvqB,QAAQC,IAAI,kBACZC,GAAIiY,MAAMgC,GATd,CAcJ,GAAG,CAAChD,IAER7X,qBACI,WACIU,QAAQC,IAAI,sBACZ4oB,GAASA,GAAS,yBAA2BG,EAAc,IAAMC,EAAY,OAC7EjpB,QAAQC,IAAI+oB,GACZhpB,QAAQC,IAAI,cACZD,QAAQC,IAAIgpB,GACRC,IAEAlpB,QAAQC,IAAI,kBACZ4oB,IAAkB,wBAElB3oB,GAAIsqB,QAAQtB,EAASuB,OAEjBvqB,GAAIsJ,aACJmgB,IAEZ,GAAG,CAACX,EAAaC,EAAWC,IAGhC5pB,qBACI,WACIU,QAAQC,IAAI,sBACZ4oB,IAAkB,4BAClB7oB,QAAQC,IAAIupB,GACZxpB,QAAQC,IAAIwpB,GACRC,IAEA1pB,QAAQC,IAAI,kBACZ4oB,IAAkB,wBAElB3oB,GAAIwqB,QAAQhB,EAASlc,OAEjBtN,GAAIsJ,aACJmgB,IAEZ,GAAG,CAACH,EAAaC,EAAWC,IAGhCpqB,qBACI,WAMI,GALAU,QAAQC,IAAI,wBACZ4oB,IAAkB,8BAElB7oB,QAAQC,IAAIqpB,GACZtpB,QAAQC,IAAIuJ,GACP8f,GAAe9f,IAGpBxJ,QAAQC,IAAI,yBACZ4oB,IAAkB,+BAClB7oB,QAAQC,IAAIqpB,GACZppB,GAAIyqB,cAAcrB,EAAW1Z,aAExB1P,GAAIO,iBACT,CACIT,QAAQC,IAAI,qDACZspB,IACA,IAAMxP,EAAO5X,EACb4X,EAAK9E,KAAO+E,KAAMI,KAAKwQ,QACvB7Q,EAAK1X,WAAY,EACjB0X,EAAKW,QAAUzW,EACf+V,KAAMnT,QAAQ+hB,GAAW/hB,QAASkT,GAClC7Z,GAAI2qB,eAAejB,EACvB,CACJ,GAAG,CAACR,EAAeC,EAAaC,EAAYC,EAAU/f,IAoB1D3I,cAACiqB,IAAM,CAAAlqB,SACHF,eAAA,OAAKK,UAAU,MAAKH,SAAA,CAChBC,cAAA,OAAAD,SACIC,cAACkqB,KAAc,CACXC,aAAW,EACXzoB,cAAY,EACZ0oB,KAAK,EACLxoB,WAAS,EACTD,cAAY,EACZ0oB,kBAAkB,EAClBC,WAAYC,KACZC,MAAO,OAGfxqB,cAACynB,GAAM,CAACpoB,IAAKA,GAAKe,KAAM2nB,KACxBloB,eAAC4qB,IAAM,CAAA1qB,SAAA,CACHC,cAAC0qB,IAAK,CAACC,KAAK,IAAI/Y,QAAS5R,cAACzB,EAAI,CAACc,IAAKA,GAAKe,KAAM2nB,OAC/C/nB,cAAC0qB,IAAK,CAACC,KAAK,UAAU/Y,QAAS5R,cAAC0E,EAAM,CAACrF,IAAKA,GAAKe,KAAM2nB,OACvD/nB,cAAC0qB,IAAK,CAACC,KAAK,eAAe/Y,QAAS5R,cAAC4I,GAAM,CAACvJ,IAAKA,GAAKe,KAAM2nB,OAC5D/nB,cAAC0qB,IAAK,CAACC,KAAK,kBAAkB/Y,QAAS5R,cAACyV,GAAc,CAAC+B,QAASA,GAASnY,IAAKA,GAAKe,KAAM2nB,GAAYhR,OAAQA,MAC7G/W,cAAC0qB,IAAK,CAACC,KAAK,mBAAmB/Y,QAAS5R,cAAC4qB,GAAU,CAACpT,QAASA,GAASnY,IAAKA,GAAKe,KAAM2nB,OACtF/nB,cAAC0qB,IAAK,CAACC,KAAK,YAAY/Y,QAAS5R,cAACwa,GAAQ,CAAChD,QAASA,GAASnY,IAAKA,GAAKe,KAAM2nB,OAC7E/nB,cAAC0qB,IAAK,CAACC,KAAK,UAAU/Y,QAAS5R,cAAC4d,GAAM,CAACpG,QAASA,GAASnY,IAAKA,GAAKe,KAAM2nB,OACzE/nB,cAAC0qB,IAAK,CAACC,KAAK,mBAAmB/Y,QAAS5R,cAAC6qB,GAAe,CAACrT,QAASA,GAASnY,IAAKA,GAAKe,KAAM2nB,OAC3F/nB,cAAC0qB,IAAK,CAACC,KAAK,eAAe/Y,QAAS5R,cAACghB,GAAW,CAACxJ,QAASA,GAASnY,IAAKA,GAAKe,KAAM2nB,OACnF/nB,cAAC0qB,IAAK,CAACC,KAAK,aAAa/Y,QAAS5R,cAACojB,GAAS,CAAC5L,QAASA,GAASnY,IAAKA,GAAKe,KAAM2nB,UAGnFloB,eAAA,MAAAE,SAAA,CAAI,KACGmpB,eAKnB,ECrNe4B,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBpG,MAAK,SAAA7T,GAAkD,IAA/Cka,EAAMla,EAANka,OAAQC,EAAMna,EAANma,OAAQC,EAAMpa,EAANoa,OAAQC,EAAMra,EAANqa,OAAQC,EAAOta,EAAPsa,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACV,GAEJ,E,kDCIMO,GAAS,aACTC,GAAU,iDAAAlc,OAAoDic,GAAM,YACpEE,GAAM,IAAIC,KAAUH,IAE1B,SACeI,KAAmB,OAAAC,GAAAlsB,MAAC,KAADC,UAAA,CAiBlC,SAAAisB,KAFC,OAEDA,GAAAhtB,YAAAC,cAAAC,MAjBA,SAAAyP,IAAA,OAAA1P,cAAAG,MAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,UAESssB,GAAII,YAAY,CAAD/c,EAAA3P,KAAA,eAAA2P,EAAA3P,KAAA,EAGVssB,GAAIlU,MAAMmU,KAAkBI,aAAa,KAAD,EAAAhd,EAAA3P,KAAA,sBAAA2P,EAAA3P,KAAA,EAKxCssB,GAAII,YAAYE,qBAAqB,KAAD,SAAAjd,EAAAO,OAAA,SAIvCoc,GAAII,YAAYG,aAAW,wBAAAld,EAAArP,OAAA,GAAA8O,EAAA,MACrC7O,MAAA,KAAAC,UAAA,CAGD,IAAMssB,GAAS,IAAIC,KAAa,CAC5BC,KAAM,IAAIC,KAAS,CACfC,IAAKb,GAILc,MAAM,SAADC,GAAA,SAAAD,EAAAje,EAAA8C,GAAA,OAAAob,EAAA7sB,MAAA,KAAAC,UAAA,QAAA2sB,EAAAvlB,SAAA,kBAAAwlB,EAAAxlB,UAAA,EAAAulB,CAAA,CAAC,CAAD,eAAAtb,EAAApS,YAAAC,cAAAC,MAAE,SAAAC,EAAOstB,EAAKG,GAAO,IAAAR,EAAA,OAAAntB,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACIwsB,KAAsB,KAAD,EACS,OADlDK,EAAW/sB,EAAAmQ,KACjBod,EAAQC,QAAQC,cAAa,UAAApd,OAAa0c,GAAc/sB,EAAAoQ,OAAA,SACjDid,MAAMD,EAAKG,IAAQ,wBAAAvtB,EAAAQ,OAAA,GAAAV,EAAA,KAC7B,gBAAA6hB,EAAA2D,GAAA,OAAAvT,EAAAtR,MAAA,KAAAC,UAAA,EAJI,MAMTgtB,MAAO,IAAIC,OAGfC,IAAShT,OACP5Z,cAAC4Y,IAAMiU,WAAU,CAAA9sB,SACfC,cAAC8sB,KAAc,CAACd,OAAQA,GAAOjsB,SAC7BC,cAACioB,GAAG,QAGR1W,SAASC,eAAe,SAM1BsZ,I","file":"static/js/main.5a10e7ff.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport \"./Home.css\";\r\n\r\nfunction Home(props) {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Home\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    if (!props.doc.serverAvailable)\r\n    {\r\n        return (<div id=\"home\" dangerouslySetInnerHTML={{__html:props.text.homeText}}></div>);\r\n    }\r\n    else\r\n    {\r\n        import(\"./PageServer.css\");\r\n        return (<div id=\"home\">\r\n                    <Link className='home-items' to=\"/checkOut\">\r\n                        {props.text.checkOut}\r\n                    </Link>\r\n                    <Link className='home-items' to=\"/return\">\r\n                        {props.text.return}\r\n                    </Link>\r\n                </div>);\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","export const SEARCH_PER_SCREEN = 10;\r\nexport const MAX_SEARCH_ENTRY = 500;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n\r\nexport const getUserState = function(text, state) {\r\n    if (state === \"0\" || state === 0)\r\n        return text.normal;\r\n    else if (state === \"1\" || state === 1)\r\n        return text.overDue;\r\n    else if (state === \"2\" || state === 2)\r\n        return text.stopped;\r\n}\r\n\r\nexport const getBookState = function(text, state) {\r\n    switch (state)\r\n    {\r\n        case \"0\":\r\n        case 0:\r\n            return text.available;\r\n        case \"1\":\r\n        case 1:\r\n            return text.checkedOut;\r\n        case \"2\":\r\n        case 2:\r\n            return text.reserved;\r\n        case \"3\":\r\n        case 3:\r\n            return text.overDue;\r\n        case \"4\":\r\n        case 4:\r\n            return text.lost;\r\n        case \"5\":\r\n        case 5:\r\n            return text.damaged;\r\n        case \"6\":\r\n        case 6:\r\n            return text.given;\r\n        case \"7\":\r\n        case 7:\r\n        default:\r\n            return text.notAvailable;\r\n        case \"8\":\r\n        case 8:\r\n            return text.deleted;\r\n    }\r\n}\r\n\r\nexport const compareRent = function(a1, a2)\r\n{\r\n    if (a1.rentDate > a2.rentDate)\r\n        return true;\r\n    else if (a1.rentDate < a2.rentDate)\r\n        return false;\r\n    return a1.title > a2.title;\r\n}\r\n\r\nexport const toUtf8 = function(text) {\r\n    return unescape(encodeURIComponent(text));\r\n};\r\n\r\nexport const fromUtf8 = function(text) {\r\n    return decodeURIComponent(escape(text));\r\n};\r\n\r\nexport const loadingId = \"custom-loading-id\";\r\nexport const loggingId = \"custom-logging-id\";\r\n","import gql from \"graphql-tag\";\n\nexport const BOOK_QUERY = gql`\n    query AllBook{\n        books (sortBy: TITLE_ASC, limit:20000) {\n            _id\n            author\n            title\n            claim_num\n            num\n            series\n            category\n            claim\n            publisher\n            seqnum\n            registration_date\n            isbn\n        }\n    }\n`;\n\nexport const RENT_QUERY = gql`\n    query AllRent{\n        rents (limit:20000) {\n            _id\n            book_id\n            user_id\n            rent_date\n            return_date\n            state\n        }\n    }\n`;\n\nexport const USERS_QUERY = gql`\n    query AllUser {\n        users (limit: 20000) {\n            _id\n            name\n            state\n            level\n        }\n    }`;\n\nexport const USER_QUERY = gql`\n    query FindUser($_id: String!){\n        user (query: {_id:$_id}) {\n            _id\n            name\n            state\n            level\n            encrypted_email\n            encrypted_phone\n        }\n    }`;\n\nexport const HISTORY_QUERY = gql`\n    query findLogs($user_id: String!){\n        rentLogs (limit: 20000, query: {user_id: $user_id}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_date\n            user_id\n        }\n    }`;\n\nexport const HISTORY_PERIOD_QUERY = gql`\n    query findLogs ($fromTime: String!, $toTime: String!) {\n        rentLogs(limit: 20000, query: {AND: [{timestamp_gte: $fromTime}, {timestamp_lt: $toTime}]}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_date\n            user_id\n        }\n    }`;\n\nexport const NOTICE_QUERY = gql`\n    query GetNotices {\n        notices (sortBy: _ID_DESC, limit:20000) {\n            _id\n            date\n            title\n        }\n    }`;\n\nexport const CONTENT_QUERY = gql`\n    query GetContent ($_id: String!) {\n        notice (query: {_id: $_id}) {\n            _id\n            date\n            title\n            content\n        }\n    }`;\n\nexport const SERVER_QUERY = gql`\n    query GetServerInfo {\n        serverInfo {\n            _id\n            globalIp\n            localIp\n            port\n        }\n    }`;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { SEARCH_PER_SCREEN } from \"../Util\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport {NOTICE_QUERY, CONTENT_QUERY} from \"../api/query.js\";\r\n\r\nfunction Notice(props) {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(-1);\r\n    const { loading: noticeLoading, data: noticeData, error: noticeError } = useQuery(NOTICE_QUERY);\r\n    const [loadSelected, { loading: selectedLoading, data: selectedData, error: selectedError}] = useLazyQuery(CONTENT_QUERY,\r\n            {\"variables\": {\"_id\": selectedId}});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Notice\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Notice\");\r\n//            console.log(noticeData);\r\n//            console.log(noticeError);\r\n//            console.log(noticeLoading);\r\n            if (noticeData)\r\n            {\r\n                setSearchResults(noticeData.notices);\r\n            }\r\n        }, [noticeData, noticeError, noticeLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Content\");\r\n//            console.log(selectedData);\r\n//            console.log(selectedError);\r\n//            console.log(selectedLoading);\r\n            if (selectedData)\r\n            {\r\n//                setSearchResults(selectedData.content);\r\n            }\r\n        }, [selectedData, selectedError, selectedLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n            console.log(\"Page num \" + pageNum.toString() + \" \");\r\n            console.log(length);\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n//           console.log(displayedCodes);\r\n        }, [displayedCodes]\r\n    );\r\n\r\n    const selectEntry = (id) => {\r\n        console.log(\"selected \" + id.toString());\r\n        if (selectedId === id)\r\n        {\r\n            setSelectedId(-1);\r\n        }\r\n        else\r\n        {\r\n            setSelectedId(id);\r\n        }\r\n        loadSelected();\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n//        console.log(result);\r\n        return (\r\n                <tr className=\"\" key={result._id}>\r\n                    <td className=\"\"> {result.date} </td>\r\n                    <td className=\"noticeEntry\" colSpan=\"2\" onClick={() => selectEntry(result._id)}> {result.title}</td>\r\n                </tr>\r\n        );\r\n    }\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (searchResults.length > (pageNum + 1) * SEARCH_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div id=\"notice\">\r\n                <div id=\"title\">\r\n                    <h2>\r\n                        {props.text.notice}\r\n                    </h2>\r\n                </div>\r\n                {selectedId > 0 && selectedData &&\r\n                <div id=\"noticeContent\">\r\n                    <table className=\"content\"><tbody>\r\n                           {showEntry(selectedData.notice)}\r\n                        <tr>\r\n                            <td className=\"content\" colSpan=\"3\">\r\n                                {selectedData.notice.content}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                </div>\r\n                }\r\n                <div id=\"noticeList\">\r\n                    <table><tbody>\r\n                       {displayedCodes.length > 0 && displayedCodes.map((result) => showEntry(result))}\r\n                    </tbody></table>\r\n                </div>\r\n                {searchResults.length > SEARCH_PER_SCREEN && (\r\n                    <div id=\"pageControl\">\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={movePrev}/>\r\n                        </div>\r\n                        <div className=\"pageNum\" id=\"pageNum\">\r\n                            {pageNum+1}\r\n                        </div>\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateNextIcon fontSize=\"large\" sx={{color: (searchResults.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={moveNext}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default Notice;\r\n","import { useEffect, useState } from \"react\";\nimport { SEARCH_PER_SCREEN } from \"./Util\";\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\n\nfunction doNothing() {\n    console.log(\"Do nothing...\");\n}\n\nvar showCallback = doNothing;\nfunction ListView(props) {\n        const [itemList, setItemList] = useState([]);\n//        const [showCallback, setShowCallback] = useState(doNothing);\n        const [pageNum, setPageNum] = useState(0);\n        const [displayList, setDisplayList] = useState([]);\n\n    useEffect(function () {\n        console.log(\"Init List View\");\n    }, []);\n\n    useEffect(function () {\n//        console.log(\"Set Item List\");\n        setItemList(props.list);\n    }, [props.list]);\n\n    useEffect(function () {\n        setPageNum(0);\n    }, [props.keyValue]);\n\n    useEffect(function () {\n        if (props.showCallback)\n        {\n//            console.log(\"Set show callback\");\n //           setShowCallback(props.showCallback);\n            showCallback = props.showCallback;\n        }\n    }, [props.showCallback]);\n\n    useEffect(function () {\n        const length = itemList.length;\n //       console.log(\"Page num \" + pageNum.toString());\n        if (length > SEARCH_PER_SCREEN)\n        {\n            const startIdx = pageNum * SEARCH_PER_SCREEN;\n            const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\n            setDisplayList(itemList.slice(startIdx,startIdx+count));\n        }\n        else\n        {\n            setDisplayList(itemList)\n        }\n    }, [itemList, pageNum]);\n\n    function movePrev() {\n        console.log(\"Prev\");\n        if (pageNum > 0)\n        {\n            setPageNum(pageNum - 1);\n        }\n    }\n\n    function moveNext() {\n        console.log(\"Next\");\n        if (itemList.length > (pageNum + 1) * SEARCH_PER_SCREEN)\n        {\n            setPageNum(pageNum + 1);\n        }\n    }\n\n    return (\n        <div id=\"listView\">\n            {showCallback(displayList, props.detail)}\n            {itemList && itemList.length > SEARCH_PER_SCREEN && (\n                <div id=\"pageControl\">\n                    <div className=\"page\" id = \"page\">\n                        <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={() => {movePrev();} }/>\n                    </div>\n                    <div className=\"pageNum\" id=\"pageNum\">\n                        {pageNum+1}\n                    </div>\n                    <div className=\"page\" id = \"page\">\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: (itemList.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={() => {moveNext();} }/>\n                    </div>\n                </div>)\n            }\n        </div>\n    );\n}\nexport default ListView;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { MAX_SEARCH_ENTRY, getBookState, toUtf8 } from \"../Util\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ListView from \"../ListView\";\r\nimport Calendar from \"react-calendar\";\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nlet initialized = false;\r\n\r\nfunction Search(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(inputText, 300);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n\r\n    const [bookList, setBookList] = useState([]);\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    const [bookState, setBookState] = useState(0);\r\n    const bookStateRef = useRef(0);\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const needConfirmRef = useRef(false);\r\n\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n\r\n    const { id } = useParams();\r\n\r\n    const [advancedSearch, setAdvancedSearch] = useState(false);\r\n\r\n    const [author, setAuthor] = useState(\"\");\r\n    const [fromId, setFromId] = useState(\"\");\r\n    const [toId, setToId] = useState(\"\");\r\n    const [fromDate, setFromDate] = useState(\"\");\r\n    const [toDate, setToDate] = useState(\"\");\r\n\r\n    const [stateFilter, setStateFilter] = useState(0);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n            console.log(\"BOOK ID: \" + id);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setInputText(id);\r\n            }\r\n            else\r\n            {\r\n                setInputText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findBooks(text) {\r\n                let results = [];\r\n\r\n                if (props.doc.serverAvailable)\r\n                {\r\n                    console.log(toUtf8(text));\r\n                    console.log(btoa(toUtf8(text)));\r\n                    const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                        props.doc.serverInfo.port + \"/book\";\r\n                    console.log(\"=======================\");\r\n                    console.log(\"Request book list\");\r\n                    const param = {\"book\": btoa(toUtf8(text)), \"match\":false};\r\n                    const response = await props.doc.requestGet(url, param);\r\n                    console.log(response)\r\n                    if (!(\"books\" in response.data.return))\r\n                        return results;\r\n                    const books = response.data.return.books;\r\n                    for (let i = 0 ; i < books.length ; i++)\r\n                    {\r\n                        const book = books[i];\r\n                        const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                        const state = book._STATE;\r\n                        let retDate = \"\";\r\n                        if (state === 1 || state === 3 || state === \"1\" || state === \"3\")\r\n                        {\r\n                            retDate = props.text.returnDate + \" \" + book._RETURN;\r\n                        }\r\n                        let resultObject = {\r\n                            index: i,\r\n                            text: resultString,\r\n                            name: book.BOOKNAME,\r\n                            code: book.BARCODE,\r\n                            rent: getBookState(props.text, book._STATE.toString()),\r\n                            retDate: retDate,\r\n                            regDate: book.REG_DATE,\r\n                            author: book.AUTHOR,\r\n                            totalName: book.TOTAL_NAME,\r\n                            claim_num: book.CLAMENUM,\r\n                            publish: book.PUBLISH,\r\n                            claim: book.CLAIM,\r\n                            state: book._STATE,\r\n                            isbn: book.ISBN\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    results = findBookLocally(bookList);\r\n                }\r\n                results.sort(function(a,b) { return a['text'] > b['text']; });\r\n                return results;\r\n            }\r\n            async function query() {\r\n                console.log(\"Refresh\");\r\n                if (advancedSearch) {\r\n                    return;\r\n                }\r\n                if (searchQuery) {\r\n                    let sr = await findBooks(searchQuery);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        selectedRef.current = sr[0].code;\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, bookList, rentList, props, queryRequest, advancedSearch]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        initialized = true;\r\n\r\n        let rl = [];\r\n        let rm = {};\r\n        const rented = props.doc.rent;\r\n        for (let i = 0 ; i < rented.length; i++)\r\n        {\r\n           rl.push({code:rented[i].book_id, retDate:rented[i].return_date, state:rented[i].state});\r\n           rm[rented[i].book_id] = rented[i].state;\r\n        }\r\n        setRentList(rl);\r\n\r\n        let bl = [];\r\n        const books = props.doc.book\r\n        var lastKey;\r\n        for (const key in books)\r\n        {\r\n           const book = books[key];\r\n           const state = (key in rm) ? rm[key] : 0;\r\n           bl.push({code: book._id, name: book.title, state: state, num: book.num, author: book.author, claim: book.claim,\r\n                    regDate: book.registration_date,\r\n                    claim_num: book.claim_num, totalName: book.series, category: book.publisher, publish: book.publisher, isbn: book.isbn});\r\n            lastKey = key;\r\n        }\r\n        console.log(books[lastKey])\r\n        console.log(\"Load\");\r\n        console.log(books.length);\r\n        setBookList(bl);\r\n    }\r\n\r\n    const selectId = async (code) => {\r\n        console.log(\"Prev \" + selectedRef.current);\r\n        if (selectedRef.current === -1 || selectedRef.current !== code)\r\n        {\r\n            console.log(\"Select \" + code);\r\n            setSelectedId(code);\r\n            selectedRef.current = code;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + code);\r\n            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n        }\r\n    }\r\n\r\n    function setState(state)\r\n    {\r\n        console.log(\"Set state \" + state.toString());\r\n        needConfirmRef.current = true;\r\n        setNeedConfirm(true);\r\n        setBookState(state);\r\n        bookStateRef.current = state;\r\n        console.log(selectedId.toString() + needConfirmRef.current);\r\n    }\r\n\r\n    function setSearchState(state)\r\n    {\r\n        const stateStr = state.toString()\r\n        const value = document.getElementById(stateStr).checked;\r\n        console.log(\"Set Search state \" + stateStr + \" Value: \" + value);\r\n        if (stateStr === \"1023\")\r\n        {\r\n            document.getElementById(\"1023\").checked = value;\r\n            document.getElementById(\"0\").checked = value;\r\n            document.getElementById(\"1\").checked = value;\r\n            document.getElementById(\"3\").checked = value;\r\n            document.getElementById(\"4\").checked = value;\r\n            document.getElementById(\"5\").checked = value;\r\n            document.getElementById(\"6\").checked = value;\r\n            document.getElementById(\"7\").checked = value;\r\n            document.getElementById(\"8\").checked = value;\r\n        }\r\n        else\r\n        {\r\n            document.getElementById(stateStr).checked = value;\r\n        }\r\n\r\n        var filter = 0;\r\n        for (var i = 0 ; i < 9 ; i++)\r\n        {\r\n            const idx = i.toString();\r\n            const element = document.getElementById(idx);\r\n            if (element)\r\n                filter |= (element.checked) ? (1 << i) : 0;\r\n        }\r\n        setStateFilter(filter);\r\n        console.log(\"Filter: \" + filter.toString());\r\n    }\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n\r\n        const ipAddr = props.doc.serverInfo.localIp;\r\n        const portNum = props.doc.serverInfo.port;\r\n        if (ipAddr.length === 0 || portNum <= 0)\r\n            return;\r\n\r\n        const url = \"https://\" + ipAddr + \":\" +\r\n            portNum + \"/book\";\r\n        var obj = {};\r\n        obj[\"book\"] = selectedRef.current;\r\n        obj[\"state\"] = bookStateRef.current;\r\n        console.log(\"=======================\");\r\n        console.log(\"Change book state\");\r\n        await props.doc.requestPost(url, obj);\r\n\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n        const hidden = (result.code !== selectedRef.current);\r\n        const entryId = (hidden) ? \"searchResult\" : \"selectedSearchResult\";\r\n        const flags = [false, false, false, false, false, false, false, false, false, false]\r\n        flags[result.state] = true;\r\n        if (result.state === 1 || result.state === 2 || result.state === 3)\r\n            flags[0] = true;\r\n        if (!hidden)\r\n            console.log(flags)\r\n        return (\r\n            <div key={result.code}>\r\n            <div id={entryId} onClick={async () => await selectId(result.code)}>\r\n                <table><tbody>\r\n                    <tr className=\"searchTr\">\r\n                        <td className=\"searchTitle\"> {result.text}</td>\r\n                        <td className=\"searchRent\"> {result.rent} </td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {!hidden &&\r\n            <div>\r\n                <table><tbody>\r\n                <tr>\r\n                    <td>{result.author} </td>\r\n                    <td colSpan=\"2\" rowSpan=\"2\">{result.totalName} <b>{result.name}</b> { result.claim_num} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.code} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.publish}</td>\r\n                    <td colSpan={result.retDate.length > 0 ? \"1\":\"2\"}>{result.claim} </td>\r\n                    {result.retDate.length > 0 && <td>{result.retDate}</td> }\r\n                </tr>\r\n                </tbody></table>\r\n                <div hidden={!props.doc.serverAvailable || !props.doc.admin}>\r\n                    <button className=\"bookStates\" id = \"0\" disabled={flags[0]} onClick={() => setState(0)}> {props.text.available} </button>\r\n                    <button className=\"bookStates\" id = \"4\" disabled={flags[4]} onClick={() => setState(4)}> {props.text.lost} </button>\r\n                    <button className=\"bookStates\" id = \"5\" disabled={flags[5]} onClick={() => setState(5)}> {props.text.damaged} </button>\r\n                    <button className=\"bookStates\" id = \"6\" disabled={flags[6]} onClick={() => setState(6)}> {props.text.given} </button>\r\n                    <button className=\"bookStates\" id = \"7\" disabled={flags[7]} onClick={() => setState(7)}> {props.text.notAvailable} </button>\r\n                    <button className=\"bookStates\" id = \"8\" disabled={flags[8]} onClick={() => setState(8)}> {props.text.deleted} </button>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirmRef.current}>\r\n                    <div id=\"bookName\"> {getBookState(props.text, bookStateRef.current)} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n            </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function showEntries(results)\r\n    {\r\n        console.log(\"Redraw \" + needConfirmRef.current);\r\n        return results.map((result) => showEntry(result))\r\n    }\r\n\r\n    function setPeriod(from, text)\r\n    {\r\n        if (from)\r\n            setFromId(text)\r\n        else\r\n            setToId(text)\r\n    }\r\n\r\n    function findBookLocally(bookList)\r\n    {\r\n        let results = [];\r\n        console.log(advancedSearch);\r\n        for (let i = 0 ; i < bookList.length ; i++) {\r\n            const row = bookList[i];\r\n            if (results.length >= MAX_SEARCH_ENTRY) break;\r\n\r\n            const text = inputText;\r\n            if (text.length > 0 && row.name && !row.name.toString().includes(text) &&\r\n                row.code !== text && row.isbn !== text)\r\n                continue\r\n            if (advancedSearch)\r\n            {\r\n                if (author.length > 0 && row.author && !row.author.toString().includes(author))\r\n                    continue;\r\n\r\n                if (fromId.length > 0 && row.code < fromId)\r\n                    continue;\r\n\r\n                if (toId.length > 0 && row.code > toId)\r\n                    continue;\r\n\r\n                const regDate = row.regDate;\r\n\r\n                if (regDate < fromDate || regDate > toDate)\r\n                    continue;\r\n                console.log(row);\r\n                console.log(regDate);\r\n                console.log(regDate < fromDate);\r\n                console.log(regDate > toDate);\r\n\r\n                if (!(1<<(row.state) & stateFilter))\r\n                    continue;\r\n            }\r\n            else if (text.length == 0)\r\n                continue;\r\n\r\n            let resultString = `${row.name} ${row.claim_num}`;\r\n            let retDate = \"\";\r\n            let state = \"0\";\r\n            for (const entry of rentList)\r\n            {\r\n                if (entry.code === row.code)\r\n                {\r\n                    state = entry.state;\r\n                    if (state === \"1\" || state === \"3\")\r\n                    {\r\n                        retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            let resultObject = {\r\n                index: i,\r\n                text: resultString,\r\n                name: row.name,\r\n                code: row.code.toString(),\r\n                rent: getBookState(props.text, state),\r\n                retDate: retDate,\r\n                regDate: row.regDate,\r\n                author: row.author,\r\n                totalName: row.totalName,\r\n                claim_num: row.claim_num,\r\n                publish: row.publish,\r\n                claim: row.claim,\r\n                state: parseInt(state),\r\n                isbn: row.isbn\r\n            };\r\n            results.push(resultObject);\r\n//            console.log(resultObject);\r\n        }\r\n        console.log(results.length);\r\n\r\n        return results;\r\n    }\r\n\r\n    function onChangeDate(date)\r\n    {\r\n        console.log(date);\r\n        const date1 = date[0]\r\n        const date2 = date[1]\r\n        const y1 = date1.getFullYear().toString();\r\n        const m1 = (date1.getMonth() + 1).toString().padStart(2, \"0\")\r\n        const d1 = date1.getDate().toString().padStart(2, \"0\");\r\n        const dateStr1 = y1 + \"-\" + m1 + \"-\" + d1;\r\n        console.log(dateStr1);\r\n        setFromDate(dateStr1);\r\n\r\n        const y2 = date2.getFullYear().toString();\r\n        const m2 = (date2.getMonth() + 1).toString().padStart(2, \"0\")\r\n        const d2 = date2.getDate().toString().padStart(2, \"0\");\r\n        const dateStr2 = y2 + \"-\" + m2 + \"-\" + d2;\r\n        console.log(dateStr2);\r\n        setToDate(dateStr2);\r\n    }\r\n\r\n    function searchEntry()\r\n    {\r\n        console.log(\"Search\");\r\n        console.log(fromId);\r\n        console.log(toId);\r\n        console.log(fromDate);\r\n        console.log(toDate);\r\n        let results = findBookLocally(bookList);\r\n        results.sort(function(a,b) { return a['code'] > b['code']; });\r\n\r\n        let sr = results;\r\n        if (sr.length > 0)\r\n            setSearchResults(sr);\r\n        else\r\n            setSearchResults([]);\r\n        if (sr.length === 1)\r\n            selectedRef.current = sr[0].code;\r\n    }\r\n\r\n    function toggleAdvancedSearch()\r\n    {\r\n        setAdvancedSearch(!advancedSearch);\r\n    }\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <div id=\"title\">\r\n                <h2> {props.text.bookSearch} </h2>\r\n            </div>\r\n            <div id=\"searchContents\">\r\n                <input id=\"searchInput\"\r\n                    placeholder={props.text.searchBook}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n                    <div hidden={!props.doc.admin}>\r\n                        <input type=\"checkbox\" id=\"advancedSearch\" checked={advancedSearch} onChange={() => toggleAdvancedSearch()}/>\r\n                        <label>\r\n                            {props.text.advSearch}\r\n                        </label>\r\n                    </div>\r\n                <div hidden={!advancedSearch}>\r\n                    <div>\r\n                    <label> {props.text.author} </label>\r\n                    <input type=\"text\" id=\"author\" onChange={(event) => {setAuthor(event.target.value)}} />\r\n                    </div>\r\n                    <div>\r\n                    <label> {props.text.bookCode} </label>\r\n                    <input type=\"text\" id=\"fromPeriod\" onChange={(event) => {setPeriod(true, event.target.value);}} />\r\n                    <label> ~  </label>\r\n                    <input type=\"text\" id=\"toPeriod\" onChange={(event) => {setPeriod(false, event.target.value);}} />\r\n                    </div>\r\n                    <div>\r\n                    <label> {props.text.registeredDate} </label>\r\n                    <Calendar onChange={onChangeDate} selectRange=\"true\"/>\r\n                    </div>\r\n                    <div>\r\n                    <table><tbody>\r\n                        <tr key=\"stateName\" className=\"bookData\">\r\n                            <td className =\"stateName\"> {props.text.all} </td>\r\n                            <td className =\"stateName\"> {props.text.available} </td>\r\n                            <td className =\"stateName\"> {props.text.checkedOut} </td>\r\n                            <td className =\"stateName\"> {props.text.overDue} </td>\r\n                            <td className =\"stateName\"> {props.text.lost} </td>\r\n                            <td className =\"stateName\"> {props.text.damaged} </td>\r\n                            <td className =\"stateName\"> {props.text.given} </td>\r\n                            <td className =\"stateName\"> {props.text.notAvailable} </td>\r\n                            <td className =\"stateName\"> {props.text.deleted} </td>\r\n                        </tr>\r\n                        <tr key=\"stateButton\" className=\"bookData\">\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"1023\" onChange={() => setSearchState(1023)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"0\" onChange={() => setSearchState(0)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"1\" onChange={() => setSearchState(1)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"3\" onChange={() => setSearchState(3)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"4\" onChange={() => setSearchState(4)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"5\" onChange={() => setSearchState(5)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"6\" onChange={() => setSearchState(6)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"7\" onChange={() => setSearchState(7)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"8\" onChange={() => setSearchState(8)}/>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                    </div>\r\n                    <div>\r\n                    <button id=\"searchEntry\" onClick={searchEntry}> {props.text.search} </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ListView keyValue={searchQuery} list={searchResults} detail={selectedId + needConfirm} showCallback={(entries, detail) => { return showEntries(entries); }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, compareRent } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USER_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\n//import {USER_QUERY, HISTORY_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction CheckOutStatus(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [expireDate, setExpireDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOutStatus initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n\r\n            if (\"autoLogin\" in props.context.cookie)\r\n            {\r\n                const autoLogin = (props.context.cookie.autoLogin === \"true\") ? true : false;\r\n                setAutoLogin(autoLogin);\r\n            }\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            setExpireDate(date.toGMTString());\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.doc.logged]\r\n    );\r\n\r\n    useEffect(() => {\r\n            async function func() {\r\n                console.log(\"User data updated \");\r\n                await compare();\r\n            }\r\n            func();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n            let hist = [];\r\n            const rentLogs = historyData.rentLogs;\r\n//            const rentLogs = historyData.rentLog_tests;\r\n            for (let i = 0 ; i < rentLogs.length ; i++)\r\n            {\r\n                const entry = rentLogs[i];\r\n                if (entry.book_state !== \"1\" && entry.book_state !== 1)\r\n                    continue;\r\n                if (! (\"return_date\" in entry) || ! entry.return_date)\r\n                    continue;\r\n                console.log(entry);\r\n                const id = entry.book_id;\r\n                const title = (id in props.doc.book) ? props.doc.book[id].title : \"N/A\";\r\n                const date = entry.timestamp.split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                const retDate = entry.return_date;\r\n                const claim = (id in props.doc.book) ? props.doc.book[id].claim : \"N/A\";\r\n                hist.push({\"id\": id, \"title\": title, \"rentDate\": date, \"retDate\": retDate, \"claim\": claim});\r\n\r\n            }\r\n            hist.sort(compareRent);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.logged)\r\n        {\r\n            setState(State.LoggedIn);\r\n            const userId = props.doc.userInfo['_id'];\r\n            setUserId(userId);\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            await loadHistory();\r\n        }\r\n        else\r\n        {\r\n            setState(State.LoggedOut);\r\n            setUserId(\"\");\r\n            setPasswordText(\"\");\r\n        }\r\n\r\n        console.log(\"Set title \" + props.doc.logged)\r\n        if (props.doc.logged)\r\n        {\r\n            if (props.doc.adminMode)\r\n                setTitle(props.text.userSearch);\r\n            else\r\n                setTitle(props.text.checkOut);\r\n        }\r\n        else\r\n        {\r\n            setTitle(props.text.logIn);\r\n        }\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const claim = rent[\"claim\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const toggleAutoLogin = () => {\r\n        console.log(\"Toggle autoLogin\");\r\n        const cookieString = \"autoLogin=\" + (autoLogin ? \"false\":\"true\") + \"; expires=\" + expireDate + \";\";\r\n//        console.log(cookieString);\r\n        document.cookie = cookieString;\r\n        setAutoLogin(!autoLogin);\r\n    }\r\n\r\n    const showEntries = (result, retText) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{retText}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        setState(State.LoggingIn);\r\n        setUserId(userText.toUpperCase());\r\n        await loadUser();\r\n        await loadHistory();\r\n        console.log(\"Log In\");\r\n        await compare();\r\n    }\r\n\r\n    const compare = async () => {\r\n        if (!userData || state === State.LoggedOut)\r\n            return;\r\n\r\n        console.log(toast.isActive(loggingId));\r\n        const prop = toastProp;\r\n\r\n        let text;\r\n        if (props.context.checkLogIn(userData.user, passwordText))\r\n        {\r\n            props.doc.logIn(userData.user);\r\n\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            setState(State.LoggedIn);\r\n\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            document.cookie = \"user_id=\" + userId + \"; expires=\" + expireDate + \";\";\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.render = text;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = loggingId;\r\n        if (toast.isActive(loggingId))\r\n        {\r\n            console.log(\"update toast\");\r\n            toast.update(loggingId, prop);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"New toast\");\r\n            toast.info(text, prop);\r\n        }\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {title}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!(state !== State.LoggedIn)}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <input type=\"password\" id=\"searchPassword\"\r\n                    placeholder={props.text.pwHolder}\r\n                    value={passwordText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setPasswordText(event.target.value);\r\n                    }} />\r\n                <div id=\"autoLogin\">\r\n                    <input type=\"checkbox\" id=\"autoLoginButton\" checked={autoLogin} onChange={() => toggleAutoLogin()}/>\r\n                    <label>\r\n                            {props.text.autoLogin}\r\n                    </label>\r\n                </div>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={!(state === State.LoggedIn)}>\r\n                <div>\r\n                    { showEntries(searchResults, props.text.dueDate) }\r\n                </div>\r\n\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <ListView list={history} showCallback={(entries) => { return showEntries(entries, props.text.returnDate); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOutStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, loadingId, getUserState } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport ListView from \"../ListView\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2,\r\n    LoggingOut: 3\r\n}\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 300);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [userData, setUserData] = useState({});\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n    const [rented, setRented] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOut initialize\");\r\n            const prefixList = document.getElementsByName(\"idPrefix\");\r\n            const prefix = barcode.substring(0, 2);\r\n            for (var i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                const id = prefixList[i].id\r\n                if (\"AB\" === id)\r\n                    prefixList[i].checked = true\r\n                else\r\n                    prefixList[i].checked = false\r\n\r\n            }\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n//            console.log(props.doc.serverInfo);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            if (props.doc.admin)\r\n                return;\r\n            import(\"./PageServer.css\");\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                const response = await props.doc.requestGet(url);\r\n                const code = response.data.scan;\r\n                if (code) {\r\n                    console.log(code)\r\n                    setBarcode(code)\r\n                }\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            console.log(toast.isActive(loggingId));\r\n            const prop = toastProp;\r\n\r\n            let text;\r\n            let notify = false;\r\n            if (\"USER_CODE\" in userData && state !== State.LoggedIn)\r\n            {\r\n                setState(State.LoggedIn);\r\n\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                text = props.text.logInSucceed;\r\n                notify = true;\r\n            }\r\n            else if (!(\"USER_CODE\" in userData))\r\n            {\r\n                setState(State.LoggedOut);\r\n\r\n                if (state === State.LoggingIn)\r\n                {\r\n                    prop.type = toast.TYPE.ERROR;\r\n                    text = props.text.logInFail;\r\n                    notify = true;\r\n                }\r\n            }\r\n\r\n            if (notify)\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": prop.type})\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 0)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    setNeedConfirm(false);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n                setBarcode(\"\")\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            console.log(\"Notification \" + notifyRequest.text)\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//            if (\"id\" in notifyRequest)\r\n//                id = notifyRequest.id\r\n\r\n//            prop.toastId = id\r\n//            if (toast.isActive(id))\r\n//                toast.update(id, notifyRequest.text, prop);\r\n//            else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (state !== State.LoggedIn)\r\n            {\r\n                const prefixList = document.getElementsByName(\"idPrefix\");\r\n                var prefix = \"\"\r\n                for (var i = 0 ; i < prefixList.length ; i++)\r\n                {\r\n                    if (prefixList[i].checked)\r\n                        prefix = prefixList[i].id\r\n                        console.log(\"Pressed [\" + i.toString() + \" \" + prefix + \"]\")\r\n\r\n                }\r\n                let barcode;\r\n                if (userText[0] === \"A\" || userText[0] == \"a\")\r\n                    barcode = userText;\r\n                else\r\n                    barcode = prefix + userText;\r\n                setBarcode(barcode);\r\n            }\r\n        }, [state, userText]\r\n    );\r\n\r\n    const updateUser = async (userText) => {\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/user?user=\" + userText;\r\n        const param = {\"user\": userText, \"data\":\"nothing\"};\r\n        const response = await props.doc.requestGet(url, param);\r\n        const user = response.data.return;\r\n\r\n        setUserData(user);\r\n        console.log(user);\r\n        setUserId(user.USER_CODE);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        console.log(\"LOGIN\");\r\n        console.log(barcode);\r\n        if (barcode.length === 0)\r\n            return;\r\n        setState(State.LoggingIn);\r\n        const id = barcode.toUpperCase();\r\n        updateUser(id);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Finish\")\r\n        setUserData({});\r\n        setUserText(\"\");\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n        setRented([])\r\n        navigate(\"/\")\r\n    }\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    useEffect(\r\n        async () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                var bookId;\r\n                if (props.doc.admin)\r\n                    bookId = bookText;\r\n                else\r\n                    bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const param = {\"book\": bookId, \"match\": true};\r\n                const response = await props.doc.requestGet(url, param);\r\n                const book = response.data.return;\r\n                console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                if ('books' in book && 'BOOKNAME' in book.books)\r\n                {\r\n                    console.log(book.books)\r\n                    setScannedBook(book.books)\r\n                }\r\n            }\r\n        },\r\n        [searchQuery, props.doc]\r\n    );\r\n\r\n    useEffect(\r\n        async () => {\r\n            console.log(\"Set barcode: \" + barcode);\r\n            if (barcode.length === 0)\r\n                return;\r\n            if (state !== State.LoggedIn)\r\n            {\r\n                if (barcode.search(\"AA\") === 0 || barcode.search(\"AB\") === 0 )\r\n                {\r\n                    const prefixList = document.getElementsByName(\"idPrefix\");\r\n                    const prefix = barcode.substring(0, 2);\r\n                    for (var i = 0 ; i < prefixList.length ; i++)\r\n                    {\r\n                        const id = prefixList[i].id\r\n                        if (prefix === id)\r\n                            prefixList[i].checked = true\r\n                        else\r\n                            prefixList[i].checked = false\r\n\r\n                    }\r\n                    setUserText(barcode.substring(2));\r\n                }\r\n            }\r\n            else if (barcode.search(\"HK\") === 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const param = {\"book\": bookId, \"match\": true};\r\n                const response = await props.doc.requestGet(url, param);\r\n                const book = response.data.return;\r\n                console.log(book)\r\n                if ('books' in book && 'BOOKNAME' in book.books)\r\n                {\r\n                    setScannedBook(book.books)\r\n                }\r\n            }\r\n        },\r\n        [barcode, props.doc, state]\r\n    );\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/checkOut\"\r\n        const param = {\r\n            book: scannedBook.BARCODE,\r\n            user: userId\r\n        };\r\n        const response = await props.doc.requestPost(url, param);\r\n        const ret = response.data.return\r\n        console.log(\"Rent confirmed\");\r\n        console.log(ret)\r\n\r\n        if (ret === \"SUCCESS\")\r\n        {\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.rentSucceed,\r\n                              \"type\": toast.TYPE.SUCCESS})\r\n            rented.push({\"id\": scannedBook.BARCODE, \"name\": scannedBook.BOOKNAME})\r\n            console.log(rented)\r\n            setRented(rented)\r\n        }\r\n        else\r\n        {\r\n            let text\r\n            if (ret in props.text)\r\n                text = props.text[ret];\r\n            else\r\n                text = props.text.NOT_AVAILABLE;\r\n            console.log(text)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": text,\r\n                              \"type\": toast.TYPE.ERROR})\r\n        }\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n        updateUser(userId);\r\n    }\r\n\r\n    function showEntry(index, rent)\r\n    {\r\n    /*\r\n        return (<React.Fragment key={index + \"Fragment\"}>\r\n                    <tr key={index}>\r\n                        <td className=\"bookCell\"> {rent.id} </td>\r\n                        <td colSpan=\"3\" className=\"bookCell\"> {rent.name} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    */\r\n        return (<div id=\"bookEntry\" key={rent.id}>\r\n                    <div id=\"bookItem\"> {rent.id} </div>\r\n                    <div id=\"bookItem\"> {rent.name} </div>\r\n                </div>);\r\n\r\n    }\r\n\r\n    function showBook(books)\r\n    {\r\n        return (<div id=\"bookList\">\r\n                    <div id=\"dueDate\">\r\n                    {props.text.dueDate} : {props.doc.dueDate}\r\n                    </div>\r\n                    {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                </div>);\r\n    }\r\n    /*\r\n                    <table><tbody>\r\n                        {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                    </tbody></table>\r\n    */\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n//            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn ? true : false }>\r\n//            <div id=\"checkOutResult\" hidden={true}>\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.checkOut}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={state === State.LoggedIn}>\r\n                <input type=\"radio\" id = \"AA\" name=\"idPrefix\"/>\r\n                <label htmlFor=\"AA\" className=\"idPrefix\" name=\"idPrefix\"> AA </label>\r\n                <input type=\"radio\" id = \"AB\" name=\"idPrefix\"/>\r\n                <label htmlFor=\"AB\" className=\"idPrefix\" name=\"idPrefix\"> AB </label>\r\n                <input type=\"text\" id=\"searchInput\" pattern=\"[0-9]*\" inputMode=\"numeric\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn}>\r\n                {userData.USER_CODE && (\r\n                    <div id=\"userInfo\">\r\n                        <div id=\"userItem\">\r\n                            {userData.USER_CODE + \" : \" + userData.USER_NAME + props.text.nameSuffix}\r\n                        </div>\r\n                        <div id=\"userItem\"> {getUserState(props.text, userData.USER_STATE)} </div>\r\n                        <div id=\"userItem\"> {userData._RENT.length + \" \" + props.text.rentSuffix} </div>\r\n                    </div>\r\n                )}\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                    <label id=\"manualInput\">\r\n                        <div id=\"hkPrefix\">\r\n                        {props.text.numberOnly}\r\n                        </div>\r\n                        <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n                            placeholder={props.text.bookHolder}\r\n                            onInput={(event) => {\r\n                                setBookText(event.target.value);\r\n                            }} />\r\n                    </label>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmRent} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\"} </div>\r\n                    <div id=\"bookName\"> {scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={async () => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                {rented.length > 0 &&\r\n                    <ListView list={rented} showCallback={(entry) => {return showBook(entry)}}/>\r\n                }\r\n            </div>\r\n            <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.finish} </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport ListView from \"../ListView\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Return(props) {\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 300);\r\n//    const [initialized, setInitialized] = useState(false);\r\n//    const [userId, setUserId] = useState(\"\");\r\n//    const [state, setState] = useState(State.LoggedOut);\r\n//    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n//                     { \"variables\": { \"_id\": userId } });\r\n//    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n//                     { \"variables\": { \"user_id\": userId } });\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n    const [returned, setReturned] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            props.doc.setCallback(undefined);\r\n            console.log(\"=======================================\");\r\n            console.log(\"Return initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            if (props.doc.admin)\r\n                return;\r\n            import(\"./PageServer.css\")\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr && ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                const response = await props.doc.requestGet(url);\r\n                const book = response.data.scan;\r\n                if (book) {\r\n                    console.log(book.search(\"HK\"))\r\n                    if (book.search(\"HK\") === 0) {\r\n                        console.log(barcode + \" -> \" + book)\r\n                        setBarcode(book)\r\n                    }\r\n                }\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n*/\r\n\r\n    useEffect(\r\n        async () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                var bookId;\r\n                if (props.doc.admin)\r\n                    bookId = bookText;\r\n                else\r\n                    bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const param = {\"book\": bookId, \"match\": true};\r\n                const response = await props.doc.requestGet(url, param);\r\n                const book = response.data.return;\r\n                if ('books' in book && 'BOOKNAME' in book.books)\r\n                {\r\n                    setScannedBook(book.books)\r\n                }\r\n            }\r\n        },\r\n        [searchQuery, props.doc]\r\n    );\r\n\r\n    useEffect(\r\n        async () => {\r\n            console.log(\"B\" + barcode);\r\n            if (barcode.length > 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n                const param = {\"book\": bookId, \"match\": true};\r\n                const response = await props.doc.requestGet(url, param);\r\n                const book = response.data.return;\r\n                console.log(book)\r\n                if ('books' in book && 'BOOKNAME' in book.books)\r\n                {\r\n                    setScannedBook(book.books)\r\n                }\r\n            }\r\n        },\r\n        [barcode, props.doc]\r\n    );\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 1 || scannedBook._STATE === 3)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    console.log(\"Not rented\")\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.NOT_RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                    setBarcode(\"\")\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//           if (\"id\" in notifyRequest)\r\n//               id = notifyRequest.id\r\n\r\n//           prop.toastId = id\r\n //          if (toast.isActive(id))\r\n//               toast.update(id, notifyRequest.text, prop);\r\n//           else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Returned updated\");\r\n            console.log(returned);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            console.log(\"Update return list\");\r\n            const bookId = \"HK\" + bookText;\r\n            console.log(\"Search book1 \" + bookId);\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n            const param = {\"books\": returned};\r\n            props.doc.requestGet(url, param);\r\n        },\r\n        [returned]\r\n    );\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/return\"\r\n        const param = {\r\n            book: scannedBook.BARCODE\r\n        }\r\n        const response = await props.doc.requestPost(url, param)\r\n        const ret = response.data.return;\r\n        console.log(ret);\r\n        if (ret === \"SUCCESS\")\r\n        {\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.returnSucceed,\r\n                              \"type\": toast.TYPE.SUCCESS})\r\n            returned.push({\"id\": scannedBook.BARCODE, \"name\": scannedBook.BOOKNAME})\r\n            console.log(returned)\r\n            setReturned(returned)\r\n        }\r\n        else\r\n        {\r\n            let text\r\n            if (ret in props.text)\r\n                text = props.text[ret];\r\n            else\r\n                text = props.text.NOT_AVAILABLE;\r\n            console.log(text)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": text,\r\n                              \"type\": toast.TYPE.ERROR})\r\n        }\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    function showEntry(index, rent)\r\n    {\r\n        return (<div id=\"bookEntry\" key={rent.id}>\r\n                    <div id=\"bookItem\"> {rent.id} </div>\r\n                    <div id=\"bookItem\"> {rent.name} </div>\r\n                </div>);\r\n    }\r\n\r\n    function showBook(books)\r\n    {\r\n        return (<div id=\"bookList\">\r\n                    {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                </div>);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Finish\")\r\n        navigate(\"/\")\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.return}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                <label id=\"barcodeScan\" hidden>\r\n                    <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                    <span>\r\n                    </span>\r\n                </label>\r\n                <label id=\"manualInput\">\r\n                    <div id=\"hkPrefix\">\r\n                        {props.text.numberOnly}\r\n                    </div>\r\n                    <input inputMode=\"numeric\" pattern=\"\\d*\" type=\"text\" id=\"searchInput\"\r\n                        placeholder={props.text.bookHolder}\r\n                        onInput={(event) => {\r\n                            setBookText(event.target.value);\r\n                        }} />\r\n                </label>\r\n                </div>\r\n                <div id=\"checkReturn\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmReturn} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\"} </div>\r\n                    <div id=\"bookName\"> {scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                {returned.length > 0 &&\r\n                    <ListView list={returned} showCallback={(entry) => {return showBook(entry)}}/>\r\n                }\r\n            </div>\r\n            <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.finish} </button>\r\n        </div>\r\n    );\r\n}\r\n//                    <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n\r\nexport default Return;\r\n","import { useEffect, useState } from \"react\";\nimport { toUtf8 } from \"./Util\";\nimport \"./UserInfo.css\";\n\nfunction UserInfo(props) {\n    const [needConfirm, setNeedConfirm] = useState(false);\n    const [disabled, setDisabled] = useState(true);\n    const [userInfo, setUserInfo] = useState({});\n\n    useEffect(function() {\n        console.log(\"User Info\");\n        console.log(props.info);\n        document.getElementById('userName').value = props.info.USER_NAME ? props.info.USER_NAME : \"\";\n        document.getElementById('phone').value = props.info.PHONE_NUMBER ? props.info.PHONE_NUMBER : \"\";\n        document.getElementById('email').value = props.info.EMAIL ? props.info.EMAIL : \"\";\n        document.getElementById('address').value = props.info.ADDRESS ? props.info.ADDRESS : \"\";\n        document.getElementById('notice_').value = props.info.NOTICE ? props.info.NOTICE : \"\";\n        document.getElementById('user_level').value = props.info.USER_LEVEL;\n        setUserInfo({\"USER_CODE\": props.info.USER_CODE});\n        setDisabled(true);\n\n    }, [props.info]);\n\n    function setProperty(index, value)\n    {\n        console.log(index);\n        console.log(value);\n        var info = userInfo;\n        switch (index)\n        {\n        case 0:\n            info.USER_NAME = value;\n            break;\n        case 1:\n            info.PHONE_NUMBER = value;\n            break;\n        case 2:\n            info.EMAIL = value;\n            break;\n        case 3:\n            info.ADDRESS = value;\n            break;\n        case 4:\n            info.USER_LEVEL = value;\n            break;\n        case 5:\n            info.NOTICE = value;\n            break;\n        default:\n            break;\n        }\n        const length = Object.keys(info).length;\n        console.log(length);\n//        if (length >= 1 && \"USER_LEVEL\" in info && info.USER_LEVEL >= 0 && info.USER_LEVEL <= 2)\n        if (length > 1)\n            setDisabled(false);\n        setUserInfo(info);\n    }\n\n    async function confirmAction()\n    {\n        console.log(\"Save modification\");\n        console.log(userInfo);\n        const ipAddr = props.doc.serverInfo.localIp;\n        const portNum = props.doc.serverInfo.port;\n        if (ipAddr.length === 0 || portNum <= 0)\n            return;\n\n        const url = \"https://\" + ipAddr + \":\" +\n            portNum + \"/user\";\n\n        var obj = {};\n        console.log(userInfo)\n        for (const key in userInfo)\n        {\n            obj[key] = btoa(toUtf8(userInfo[key]));\n        }\n        const response = await props.doc.requestPost(url, obj);\n        console.log(response);\n        props.refresh(response);\n        setNeedConfirm(false);\n    }\n\n    function cancelAction()\n    {\n        setNeedConfirm(false);\n    }\n\n    return (\n        <div>\n            <table><tbody>\n                <tr key=\"Name\">\n                    <td> {props.text.name} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"userName\" onChange={(event) => {setProperty(0, event.target.value);}} />\n                    </td>\n                </tr>\n                {\"REG_DATE\" in props.info &&\n                    <tr key=\"Register\">\n                        <td> {props.text.registeredDate} </td>\n                        <td colSpan=\"3\" className=\"data\">\n                            {props.info.REG_DATE}\n                        </td>\n                    </tr>\n                }\n                <tr key=\"Phone\">\n                    <td> {props.text.phone} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"phone\" onChange={(event) => {setProperty(1, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Email\">\n                    <td> {props.text.email} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"email\" onChange={(event) => {setProperty(2, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Address\">\n                    <td> {props.text.address} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"address\" onChange={(event) => {setProperty(3, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Notice\">\n                    <td> {props.text.notice_} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"notice_\" onChange={(event) => {setProperty(5, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Level\">\n                    <td> {props.text.level} </td>\n                    <td colSpan=\"3\" className=\"cell\">\n                        <select name=\"User Level\" id=\"user_level\" className=\"dropdown\" onChange={(event) => {setProperty(4, event.target.value);}}>\n                            <option value=\"0\"> {props.text.kid} </option>\n                            <option value=\"1\"> {props.text.adult} </option>\n                            <option value=\"2\"> {props.text.admin} </option>\n                        </select>\n                    </td>\n                </tr>\n            </tbody></table>\n           <button id=\"modify\" hidden={needConfirm} onClick={async () => setNeedConfirm(true)} disabled={disabled}> {props.text.save} </button>\n            <div id=\"checkModify\" hidden={!needConfirm}>\n                <div id=\"noticeMsg\"> {props.text.confirmSave} </div>\n                <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\n                <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\n            </div>\n        </div>\n    );\n}\nexport default UserInfo;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp, MAX_SEARCH_ENTRY, getUserState, toUtf8 } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate, useParams } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport UserInfo from \"../UserInfo\";\r\n\r\n//var rentList = [];\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(userText, 300);\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n//    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n    const { id } = useParams();\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n            {\r\n                return;\r\n            }\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"UserSearch initialize\");\r\n            console.log(\"User ID: \" + id);\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc(false);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.users;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n\r\n        if (notify)\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Set title \" + props.logged)\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    async function extend(key)\r\n    {\r\n        console.log(\"Extend \" + key);\r\n        const ipAddr = props.doc.serverInfo.localIp;\r\n        const portNum = props.doc.serverInfo.port;\r\n        if (ipAddr.length === 0 || portNum <= 0)\r\n            return;\r\n\r\n        const url = \"https://\" + ipAddr + \":\" +\r\n            portNum + \"/extend\";\r\n        var obj = {};\r\n        obj[\"book\"] = key\r\n\r\n        const ret = await props.doc.requestPost(url, obj);\r\n        console.log(\"Extended\")\r\n        console.log(ret)\r\n        selectId(selectedRef.current, true);\r\n        if (ret.data.return === \"SUCCESS\")\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.extend, prop);\r\n        }\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const extendCount = rent.extendCount;\r\n        const key = index.toString();\r\n//                        <td colSpan={props.doc.serverAvailable?\"3\":\"2\"} className=\"bookName\">{bookName}</td>\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan={props.doc.serverAvailable?\"2\":\"3\"} className=\"bookName\">{bookName}</td>\r\n                        {props.doc.serverAvailable &&\r\n                            <td className=\"bookName\"><button className=\"extend\" onClick={() => extend(id)}>{props.text.extend + \" (\" + extendCount.toString() + \")\"}</button></td>\r\n                        }\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const selectId = async (id, forceSelect = false) => {\r\n        const rent = await props.doc.getRent(id);\r\n        console.log(rent);\r\n        if (selectedRef.current === -1 || selectedRef.current !== id || forceSelect )\r\n        {\r\n            console.log(\"Select \" + id);\r\n//            setSelectedId(id);\r\n            selectedRef.current = id;\r\n            console.log(\"Set Rent List\");\r\n            console.log(rent)\r\n            setRentList(rent);\r\n//            rentList = rent;\r\n        }\r\n        else if (searchResults.length > 1)\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n//            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n            setRentList([]);\r\n//            rentList = [];\r\n        }\r\n    }\r\n\r\n    const showUser = (user, detail, index) => {\r\n        const key = index.toString();\r\n        return (\r\n                <div key={key}>\r\n                    <table><tbody>\r\n                        <tr key={user.id} className=\"searchTr\" onClick={async ()=> await selectId(user.id)}>\r\n                            <td className=\"bookData\">{user.id}</td>\r\n                            <td className=\"bookData\">{user.name}</td>\r\n                            <td className=\"bookData\">{user.state}</td>\r\n                            <td className=\"bookData\">{user.rent}</td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                        {user.id === selectedRef.current && showEntries(user, detail) }\r\n                </div>\r\n                );\r\n    }\r\n\r\n    const showUsers = (result, detail) => {\r\n        return (<div>\r\n                    {\r\n                        result.map((user, index) => {\r\n                            return showUser(user, detail, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 &&\r\n                        <table><tbody>\r\n                            <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                        </tbody></table>\r\n                    }\r\n                </div>);\r\n    }\r\n\r\n    const showEntries = (user, detail) => {\r\n        console.log(\"Detail\");\r\n        console.log(user);\r\n        return (<>\r\n                    {props.doc.serverAvailable &&\r\n                        <UserInfo text={props.text} doc={props.doc} info={user} refresh={refresh}/>\r\n                    }\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        detail.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        detail.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </>);\r\n    }\r\n    useEffect(\r\n        () => {\r\n            async function findUsers(text) {\r\n                let results = [];\r\n\r\n//                for (let i = 0 ; i < userList.length ; i++) {\r\n                  for (const key in userList) {\r\n                    const row = userList[key];\r\n                    if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                    if ((row.name && row.name.toString().includes(text)) ||\r\n                        (row.id.toLowerCase() === text.toLowerCase()))\r\n                    {\r\n                        results.push(row);\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a.name > b.name; });\r\n                console.log(results);\r\n                return results;\r\n            }\r\n            async function query() {\r\n                const input = userText.trim()\r\n                console.log(\"Query \" + input + \" \" + searchQuery)\r\n                if (input.length > 0 && searchQuery) {\r\n\r\n                    let sr;\r\n                    if (props.doc.serverAvailable)\r\n                    {\r\n                        console.log(\"from CLIB\")\r\n                        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/users\";\r\n                        const param = {\"user\": btoa(toUtf8(input))};\r\n                        const response = await props.doc.requestGet(url, param);\r\n                        const users = response.data.return.data;\r\n                        console.log(response.data.return);\r\n                        sr = [];\r\n                        if (users) {\r\n                            for (const entry of response.data.return.data)\r\n                            {\r\n                                console.log(entry);\r\n                                let user = entry;\r\n                                user.id = entry.USER_CODE;\r\n                                user.name = entry.USER_NAME;\r\n                                user.state = getUserState(props.text, entry.USER_STATE);\r\n                                user.rent = entry._RENT.length;\r\n                                sr.push(user);\r\n                            }\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log(\"from DB\")\r\n                        sr = await findUsers(searchQuery);\r\n                    }\r\n\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                       selectId(sr[0].id);\r\n                   else\r\n                       selectId(0);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n       [searchQuery, props, userList, queryRequest, userText]\r\n    );\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.userSearch}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onChange={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <div>\r\n                    <ListView keyValue={searchQuery} list={searchResults} detail={rentList} showCallback={(entries, detail) => { return showUsers(entries, detail); }}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getBookState } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.users;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userList]\r\n    );\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        return a1.rentDate > a2.rentDate;\r\n    }\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.serverAvailable)\r\n        {\r\n            let results = [];\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n            const param = {\"user\": \"*\", \"match\":false};\r\n//            console.log(obj);\r\n            const response = await props.doc.requestGet(url, param);\r\n//           console.log(response)\r\n//            if (!(\"books\" in response.data.return))\r\n//                return results;\r\n            const books = response.data.return.books;\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                const state = book._STATE;\r\n                let retDate = \"\";\r\n                if (state === 1 || state === 3 || state === \"1\" || state === \"3\")\r\n                {\r\n                    retDate = book.RETURN_DATE;\r\n                }\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: book.BOOKNAME,\r\n                    id: book.BARCODE,\r\n                    rent: getBookState(props.text, book.STATS.toString()),\r\n                    rentDate: book.LENT_DATE,\r\n                    retDate: retDate,\r\n                    author: book.AUTHOR,\r\n                    totalName: book.TOTAL_NAME,\r\n                    claim_num: book.CLAMENUM,\r\n                    publish: book.PUBLISH,\r\n                    claim: book.CLAIM,\r\n                    user: book.USER,\r\n                    userName: book.USER_NAME\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compare);\r\n            setRentList(results);\r\n        }\r\n        else\r\n        {\r\n\r\n            const rent = await props.doc.getRent();\r\n            console.log(\"Rent\");\r\n            console.log(rent);\r\n            rent.sort(compare);\r\n            for (const index in rent)\r\n            {\r\n                const userId = rent[index][\"user\"];\r\n                let userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                rent[index][\"userName\"] = userName;\r\n//                console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n            }\r\n            setRentList(rent);\r\n        }\r\n\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        const claim = rent[\"claim\"];\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"situation\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.situation}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue=\"\" list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { compareRent } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n//    const [initialized, setInitialized] = useState(false);\r\n    const [fromTime, setFromTime] = useState(\"\");\r\n    const [toTime, setToTime] = useState(\"\");\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [loadHistory, {loading: historyLoading, data: historyData, error: historyError }] = useLazyQuery(HISTORY_PERIOD_QUERY,\r\n            {\"variables\": { \"fromTime\" : fromTime, \"toTime\": toTime}});\r\n    const [userList, setUserList] = useState({});\r\n    const [yearValue, setYear] = useState(0);\r\n    const [monthValue, setMonth] = useState(0);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [searchQuery] = useDebounce(query, 300);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            var i;\r\n            var option;\r\n            var year = document.getElementById('year')\r\n            var month = document.getElementById('month')\r\n            for (i = 1; i <= 12 ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                month.add(option, i);\r\n            }\r\n            const thisYear = new Date().getFullYear();\r\n            const thisMonth = new Date().getMonth() + 1;\r\n            const fromYear = 2017;\r\n\r\n            for (i = fromYear ; i <= thisYear ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                year.add(option, i);\r\n            }\r\n\r\n            console.log(thisYear);\r\n            console.log(thisMonth);\r\n            setYear(thisYear);\r\n            setMonth(thisMonth);\r\n            document.getElementById('year').value = thisYear;\r\n            document.getElementById('month').value = thisMonth;\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n//                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.users;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"History update\")\r\n\r\n            if (!historyData)\r\n                return\r\n\r\n//            console.log(historyData.rentLog_tests)\r\n\r\n            const books = historyData.rentLogs;\r\n//            const books = historyData.rentLog_tests;\r\n            let results = [];\r\n            let retDate = \"\";\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const state = book.book_state;\r\n                if (state !== \"1\" && state !== 1)\r\n                    continue\r\n                if (!book.return_date || book.return_date.length === 0)\r\n                    continue\r\n//                console.log(book)\r\n                const bookId = book.book_id;\r\n                const userId = book.user_id;\r\n                var userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                var bookInfo;\r\n                if (bookId in props.doc.book)\r\n                {\r\n                    bookInfo = props.doc.book[bookId];\r\n                }\r\n                else\r\n                {\r\n                    bookInfo = {}\r\n                    bookInfo.author = \"\"\r\n                    bookInfo.totalName = \"\"\r\n                    bookInfo.claim_num = \"\"\r\n                    bookInfo.publish = \"\"\r\n                    bookInfo.title = \"\"\r\n                }\r\n                const resultString = `${bookInfo.title} ${bookInfo.claim_num}`;\r\n                retDate = book.return_date;\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: bookInfo.title,\r\n                    id: bookId,\r\n                    rentDate: book.timestamp,\r\n                    retDate: retDate,\r\n                    author: bookInfo.author,\r\n                    claim_num: bookInfo.claim_num,\r\n                    publish: bookInfo.publisher,\r\n                    claim: bookInfo.claim,\r\n                    user: userId,\r\n                    userName: userName\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compareRent);\r\n//            console.log(results);\r\n            setRentList(results);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, historyLoading, historyError]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        }, [userList]\r\n    );\r\n*/\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        if (a1.rentDate > a2.rentDate)\r\n            return true;\r\n        else if (a1.rentDate < a2.rentDate)\r\n            return false;\r\n        return a1.title > a2.title;\r\n    }\r\n\r\n/*\r\n    async function updateDoc()\r\n    {\r\n        setInitialized(true);\r\n    }\r\n*/\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const claim = rent[\"claim\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookCell\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n    function setProperty(index, value)\r\n    {\r\n        console.log(index);\r\n        console.log(value);\r\n        switch (index)\r\n        {\r\n            case 0:\r\n                setYear(value);\r\n                break;\r\n            case 1:\r\n                setMonth(parseInt(value));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(function () {\r\n        setQuery(yearValue.toString() + \"-\" + monthValue.toString().padStart(2, \"0\"))\r\n\r\n    }, [yearValue, monthValue]\r\n    );\r\n\r\n    useEffect(function () {\r\n        async function search()\r\n        {\r\n            console.log(\"Search\")\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/history\";\r\n                const param = {\"period\": query};\r\n                const response = await props.doc.requestGet(url, param);\r\n                console.log(response);\r\n\r\n                const books = response.data.return.books;\r\n                let results = [];\r\n                let retDate = \"\";\r\n                for (let i = 0 ; i < books.length ; i++)\r\n                {\r\n                    const book = books[i];\r\n                    const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                    if (\"_RETURN_DATE\" in book)\r\n                    {\r\n                        retDate = book._RETURN_DATE;\r\n                    }\r\n                    let resultObject = {\r\n                        index: i,\r\n                        text: resultString,\r\n                        title: book.BOOKNAME,\r\n                        id: book.BARCODE,\r\n        //                rent: getBookState(props.text, book..toString()),\r\n                        rentDate: book.RENT_DATE,\r\n                        retDate: retDate,\r\n                        author: book.AUTHOR,\r\n                        totalName: book.TOTAL_NAME,\r\n                        claim_num: book.CLAMENUM,\r\n                        publish: book.PUBLISH,\r\n                        claim: book.CLAIM,\r\n                        user: book.USER,\r\n                        userName: book.USER_NAME\r\n                    };\r\n                    results.push(resultObject);\r\n                }\r\n                results.sort(compare);\r\n                setRentList(results);\r\n            }\r\n            else\r\n            {\r\n                var queryTo;\r\n                const nextMonth = monthValue + 1\r\n                queryTo = yearValue.toString() + \"-\" + nextMonth.toString().padStart(2, \"0\")\r\n                setFromTime(query)\r\n                setToTime(queryTo)\r\n                console.log(query)\r\n                console.log(queryTo)\r\n\r\n                try {\r\n                    await loadHistory();\r\n                }\r\n                catch (e)\r\n                {\r\n                    console.warn(e.name);\r\n                }\r\n\r\n    /*\r\n                for (const index in rent)\r\n                {\r\n                    const userId = rent[index][\"user\"];\r\n                    let userName;\r\n                    if (userList && userId in userList)\r\n                        userName = userList[userId].name;\r\n                    else\r\n                        userName = \"\"\r\n                    rent[index][\"userName\"] = userName;\r\n                    console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n                }\r\n                setRentList(rent);\r\n    */\r\n            }\r\n        }\r\n        search();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [searchQuery]\r\n    );\r\n\r\n    function movePrev()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month > 1)\r\n        {\r\n            month -= 1\r\n        }\r\n        else\r\n        {\r\n            year -= 1;\r\n            month = 12;\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    function moveNext()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month < 12)\r\n        {\r\n            month += 1\r\n        }\r\n        else\r\n        {\r\n            year += 1\r\n            month = 1\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.history}\r\n                </h2>\r\n            </div>\r\n            <div id=\"searchRange\">\r\n                <div className=\"page\" id = \"page\">\r\n                    <NavigateBeforeIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {movePrev();} }/>\r\n                </div>\r\n                <select name=\"year\" id=\"year\" className=\"dropdown\" onChange={(event) => {setProperty(0, event.target.value);}}/>\r\n                <select name=\"month\" id=\"month\" className=\"dropdown\" onChange={(event) => {setProperty(1, event.target.value);}}/>\r\n                    <div className=\"page\" id = \"page\">\r\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {moveNext();} }/>\r\n                    </div>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue={searchQuery} list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp } from \"../Util\";\r\nimport { Navigate } from 'react-router-dom'\r\nimport UserInfo from \"../UserInfo\";\r\n\r\nfunction NewMember(props) {\r\n//    const [userText, setUserText] = useState(\"\");\r\n    const [userInfo, setUserInfo] = useState({});\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n//    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n//    const [userList, setUserList] = useState({});\r\n//    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized || !props.doc.serverAvailable)\r\n            {\r\n                return;\r\n            }\r\n            import(\"./PageServer.css\");\r\n            console.log(\"=======================================\");\r\n            console.log(\"NewMember initialize\");\r\n            prepareNewMember();\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n*/\r\n\r\n    function prepareNewMember()\r\n    {\r\n        var info = {};\r\n        info.USER_CODE = \"\";\r\n        info.USER_NAME = \"\";\r\n        info.PHONE_NUMBER = \"\";\r\n        info.EMAIL = \"\";\r\n        info.ADDRESS = \"\";\r\n        info.NOTICE = \"\";\r\n        info.USER_LEVEL = -1;\r\n        setUserInfo(info);\r\n    }\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n*/\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n\r\n        const prop = toastProp;\r\n        var text\r\n        if (response.data.return === \"OK\")\r\n        {\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.regSuccess;\r\n            prepareNewMember()\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.regFail;\r\n        }\r\n        prop.autoClose = 3000;\r\n        toast.info(text, prop);\r\n    }\r\n    if (!props.doc.initialized || !props.doc.serverAvailable)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.newMember}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                {props.doc.serverAvailable &&\r\n                    <UserInfo text={props.text} doc={props.doc} info={userInfo} refresh={refresh}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewMember;\r\n","import { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        this.initialized = false;\r\n        this.bookReady = false;\r\n        this.rentReady = false;\r\n        this.userReady = false;\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        this.book = {};\r\n        this.rent = {};\r\n        this.logCallback = undefined;\r\n        this.admin = false;\r\n        this.dueDate = \"\";\r\n        this.serverInfo = {};\r\n        this.serverAvailable = false;\r\n        this.ipAddr = \"\"\r\n    }\r\n\r\n    async requestGet(url, param)\r\n    {\r\n        param.os = navigator.platform;\r\n        const obj = {\"params\": param};\r\n        console.log(\"Request GET : \" + url);\r\n        console.log(obj);\r\n        const response = await axios.get(url, obj);\r\n        return response;\r\n    }\r\n\r\n    async requestPost(url, param)\r\n    {\r\n        console.log(\"Request POST: \" + url);\r\n        param.os = navigator.platform;\r\n        console.log(param);\r\n        const response = await axios.post(url, param);\r\n\r\n        return response;\r\n    }\r\n\r\n    async updateIpAddr()\r\n    {\r\n//        const response = await axios.get(\"https://ipv4.seeip.org/jsonip\");\r\n        const response = await axios.get(\"https://api.ipify.org/?format=json\")\r\n        console.log(\"Get IP Address\");\r\n        console.log(response.data);\r\n        const ipAddr = response.data.ip;\r\n        console.log(\"IP addr updated \" + ipAddr)\r\n        this.ipAddr = ipAddr;\r\n        this.checkServerIp()\r\n    }\r\n\r\n    checkServerIp()\r\n    {\r\n        if (this.ipAddr.length === 0 || !this.serverInfo.globalIp)\r\n            return;\r\n        if (this.serverInfo.globalIp === this.ipAddr)\r\n        {\r\n            console.log(\"Server is accessible \" + this.serverInfo.localIp);\r\n            const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n            this.serverAvailable = true;\r\n            axios.get(query, {\"params\": {\"os\": navigator.platform, }})\r\n                .then( (response) => {\r\n                    console.log(\"Server connected\");\r\n                    console.log(response.data);\r\n                    this.admin = response.data.admin;\r\n                    this.dueDate = response.data.dueDate;\r\n                    this.initialized = true;\r\n                })\r\n                .catch(error => {\r\n                  const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n                  window.open(query);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    checkState() {\r\n        if (this.bookReady && this.rentReady) {\r\n            this.initialized = true;\r\n            toast.dismiss();\r\n            if (this.callback) {\r\n                this.callback();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setLogCallback(callback) {\r\n        this.logCallback = callback;\r\n    }\r\n\r\n    setRent(rent) {\r\n        this.rent = rent\r\n        this.rentReady = true;\r\n        this.checkState();\r\n        this.checkRent();\r\n    }\r\n\r\n    setServerInfo(serverInfo)\r\n    {\r\n        console.log(serverInfo)\r\n        this.serverInfo = serverInfo;\r\n        this.serverInfo = {}\r\n        this.serverInfo.globalIp = serverInfo.globalIp;\r\n\r\n        if (serverInfo.proxy)\r\n        {\r\n            this.serverInfo.localIp = \"libserver.hkmcclibrary.duckdns.org\";\r\n            this.serverInfo.port = 443;\r\n        }\r\n        else\r\n        {\r\n            this.serverInfo.localIp = serverInfo.localIp;\r\n            this.serverInfo.port = serverInfo.port;\r\n        }\r\n\r\n\r\n        console.log(this.serverInfo.globalIp);\r\n        this.checkServerIp()\r\n    }\r\n\r\n    setBook(books) {\r\n        this.book = {};\r\n        for (let i = 0 ; i < books.length ; i++)\r\n        {\r\n            const book = books[i];\r\n            const id = book['_id'];\r\n            this.book[id] = book;\r\n        }\r\n        this.bookReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setUser(users) {\r\n        this.user = {};\r\n        for (let i = 0 ; i < users.length ; i++)\r\n        {\r\n            const user = users[i];\r\n            const id = user.id;\r\n            this.user[id] = user;\r\n            this.user[id][\"rent\"] = 0;\r\n        }\r\n        this.userReady = true;\r\n        this.checkRent();\r\n    }\r\n\r\n    checkRent() {\r\n        if (!this.userReady || !this.rentReady)\r\n        {\r\n            console.log(\"Cannot check rent\");\r\n            return;\r\n        }\r\n//        console.log(this.rent);\r\n        for (let i = 0 ; i < this.rent.length ; i++)\r\n        {\r\n            const state = this.rent[i].state;\r\n\r\n//            console.log(state);\r\n            if (state !== \"1\" && state !== \"3\" && state !== 1 && state !== 3)\r\n                continue;\r\n\r\n            const userId = this.rent[i].user_id;\r\n//            console.log(this.rent[i]);\r\n//           console.log(userId);\r\n//           console.log(userId.length);\r\n            if (userId && userId.length > 0 && userId in this.user)\r\n                this.user[userId][\"rent\"] += 1;\r\n            else\r\n                this.user[userId][\"rent\"] = 1;\r\n        }\r\n        console.log(this.user);\r\n    }\r\n\r\n    logIn(userInfo) {\r\n        console.log(\"Logged in: \" + userInfo['_id']);\r\n        this.logged = true;\r\n        this.userInfo = userInfo;\r\n        if (userInfo['level'] === \"2\" ||\r\n            userInfo['level'] === 2)\r\n            this.admin = true;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n    }\r\n\r\n    logOut() {\r\n        console.log(\"Logged out\");\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        if (this.logCallback)\r\n            this.logCallback(false);\r\n    }\r\n\r\n    async getRent(userId = undefined) {\r\n        let ret = [];\r\n        if (this.serverAvailable) {\r\n            const url = \"https://\" + this.serverInfo.localIp + \":\" +\r\n                this.serverInfo.port + \"/book\";\r\n            const param = {\"user\": userId};\r\n            const result = await this.requestGet(url, param);\r\n            console.log(result);\r\n            if (\"books\" in result.data.return)\r\n            {\r\n                // BARCODE, BOOKNAME, LENT_DATE, RETURN_DATE, STATS\r\n                // id, title, rentDate, retData,  stat\r\n                for (const entry of result.data.return.books)\r\n                {\r\n                    console.log(entry);\r\n                    const book = {'id': entry.BARCODE, 'title': entry.BOOKNAME, 'claim': entry.CLAIM, 'rentDate': entry.LENT_DATE, 'retDate': entry.RETURN_DATE, 'stat': entry.STATS, 'extendCount': entry._EXTEND_COUNT}\r\n                    ret.push(book);\r\n                }\r\n//                ret = result.data.return.books;\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"Check \" + userId);\r\n            console.log(this.bookReady);\r\n            if (!this.bookReady)\r\n                return ret;\r\n    //        console.log(this.rent.length);\r\n            for (let i = 0 ; i < this.rent.length ; i++) {\r\n                const entry = this.rent[i];\r\n                if (userId !== undefined && entry.user_id !== userId)\r\n                    continue;\r\n    //            console.log(entry)\r\n                if (entry.state !== \"1\" && entry.state !== \"3\" && entry.state !== 1 && entry.state !== 3)\r\n                    continue;\r\n    //            console.log(entry);\r\n                const id = entry[\"book_id\"];\r\n                const book = this.book[id];\r\n    //            console.log(book)\r\n                let retEntry = {}\r\n                retEntry[\"id\"] = book._id\r\n                retEntry[\"title\"] = book.title\r\n                retEntry[\"rentDate\"] = entry.rent_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"retDate\"] = entry.return_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"claim\"] = book.claim\r\n                retEntry[\"user\"] = entry.user_id;\r\n                ret.push(retEntry)\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n\r\n    async openDoc() {\r\n        try {\r\n            this.initialized = true;\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.initialized;\r\n    }\r\n\r\n    setCallback(updateFunc)\r\n    {\r\n        console.log(\"Update function registered\");\r\n        this.callback = updateFunc;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","import config from \"./api/key\";\n\nconst NodeRSA = require('node-rsa');\n\nconst prk = new NodeRSA(config[\"privateKey\"]);\n\nclass Context {\n    constructor() {\n        console.log(\"Create Context\");\n\n        console.log(\"Cookies\");\n        const rawCookie = document.cookie;\n        this.cookie = rawCookie\n            .split(\";\")\n            .map(v => v.split(\"=\"))\n            .reduce((acc, v) => {\n                const key = v.shift().trim();\n                const value = v.join(\"=\").trim();\n                acc[decodeURIComponent(key)] = decodeURIComponent(value);\n                return acc;\n            }, {});\n    }\n\n    checkLogIn(user, passwordText) {\n        var matched = false;\n        var passwordTyped;\n        if (user && passwordText.length > 0) {\n            console.log(\"User data available\");\n            const emailDb = user[\"encrypted_email\"];\n            const phoneDb = user[\"encrypted_phone\"];\n\n            passwordTyped = prk.sign(passwordText, 'base64');\n            if (passwordText === emailDb ||\n                passwordText === phoneDb )\n            {\n                passwordTyped = passwordText;\n                matched = true;\n            }\n            else if (emailDb === passwordTyped)\n            {\n//                console.log(\"Email match\");\n                matched = true;\n            }\n            else\n            {\n                var numberString = \"\";\n                for (let i = 0 ; i < passwordText.length ; i++)\n                {\n                    if (!isNaN(passwordText[i]))\n                        numberString += passwordText[i];;\n                }\n                passwordTyped = prk.sign(numberString, 'base64');\n                if (passwordTyped === phoneDb)\n                {\n//                    console.log(\"Phone match\");\n                    matched = true;\n                }\n                else\n                {\n//                    console.log(\"Nothing matched\");\n                }\n            }\n\n//            console.log(\"toast available\");\n        }\n        if (matched)\n        {\n            const date = new Date();\n            const days=2;\n            date.setTime(date.getTime()+(days*24*60*60*1000));\n            const expireDate = date.toGMTString();\n            document.cookie = \"password=\" +  passwordTyped + \"; expires=\" + expireDate + \" ; SameSite=Lax ;\" ;\n        }\n        return matched\n    }\n}\n\nexport default Context;\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Dropdown.css'\r\n\r\nfunction DropDown(props) {\r\n\r\n    const [dropdown, setDropdown] = useState(false);\r\n    const [click, setClick] = useState(false)\r\n\r\n    useEffect(\r\n        () => {\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./DropdownServer.css\");\r\n            }\r\n            if (dropdown !== props.dropdown)\r\n            {\r\n                console.log(\"User clicked \" + props.doc.logged);\r\n                console.log(props.dropdown);\r\n                setClick(!click);\r\n                setDropdown(props.dropdown);\r\n            }\r\n            const menu = document.getElementById(\"dropdown-menu\");\r\n//            menu.hidden = !click;\r\n            if (!click)\r\n            {\r\n               menu.classList.remove('is-show');\r\n            }\r\n            else\r\n            {\r\n               menu.classList.add('is-show');\r\n            }\r\n\r\n        }, [props.dropdown, dropdown, click, props.doc.logged]\r\n    );\r\n\r\n    const logOut = () =>\r\n    {\r\n        setClick(false);\r\n        props.doc.logOut();\r\n        document.cookie = \"user_id=\";\r\n        document.cookie = \"password=\";\r\n        document.cookie = \"autoLogin=false\";\r\n    }\r\n\r\n    return (\r\n            <div id='dropdown-menu' onClick={() => { setClick(!click)}} className='dropdown-menu'>\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                    <div className='menu-items'>\r\n                        {props.doc.userInfo[\"_id\"] + \" : \" + props.doc.userInfo[\"name\"] + props.text.nameSuffix}\r\n                    </div>\r\n                    <hr className=\"hline\"/>\r\n                    </>\r\n                }\r\n                <Link className='menu-items' to=\"/\" onClick={() => setClick(false)}>\r\n                    {props.text.home}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/notice\" onClick={() => setClick(false)}>\r\n                    {props.text.notice}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/search\" onClick={() => setClick(false)}>\r\n                    {props.text.bookSearch}\r\n                </Link>\r\n                {props.doc.serverAvailable &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOut\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOut}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/return\" onClick={() => setClick(false)}>\r\n                            {props.text.return}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOutStatus}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {props.doc.admin &&\r\n                    <>\r\n                    <hr className=\"hline\"/>\r\n                    <Link className='menu-items' to=\"/userSearch\" onClick={() => setClick(false)}>\r\n                        {props.text.userSearch}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentalSituation\" onClick={() => setClick(false)}>\r\n                        {props.text.situation}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentHistory\" onClick={() => setClick(false)}>\r\n                        {props.text.history}\r\n                    </Link>\r\n                    </>\r\n                }\r\n                {props.doc.serverAvailable && props.doc.admin &&\r\n                    <Link className='menu-items' to=\"/newMember\" onClick={() => setClick(false)}>\r\n                        {props.text.newMember}\r\n                    </Link>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <hr className=\"hline\"/>\r\n                        <div className='menu-items' onClick={() => logOut()}>\r\n                            {props.text.logOut}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && !props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.logIn}\r\n                        </Link>\r\n                    </>\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default DropDown;\r\n","import React, { useState } from 'react';\r\nimport {isMobile} from \"react-device-detect\";\r\nimport \"./Navbar.css\";\r\nimport DropDown from \"./Dropdown\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction Navbar(props) {\r\n    const [dropdown, setDropdown] = useState(false)\r\n\r\n    const onClick = () => {\r\n        const maxWidth = document.getElementById(\"navbar\").style.maxWidth;\r\n        console.log(\"maxWidth\");\r\n        console.log(maxWidth);\r\n        console.log(document.getElementById(\"navbar\").style.width);\r\n        setDropdown(!dropdown);\r\n    }\r\n\r\nreturn (\r\n    <>\r\n        <div id=\"navbar\" className=\"navbar\">\r\n            <div className='title'>\r\n                {isMobile? (<h1>{props.text[\"titleShort\"]}</h1>) : (<h1>{props.text[\"titleLong\"]}</h1>)}\r\n            </div>\r\n            <div className='menu' onClick={onClick} >\r\n                <MenuIcon className=\"img\" fontSize=\"large\" sx={{ color: \"#ffffff\"}}/>\r\n            </div>\r\n            <DropDown text={props.text} doc={props.doc} dropdown={dropdown}/>\r\n        </div>\r\n    </>\r\n)\r\n}\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Notice from \"./pages/Notice\";\r\nimport Search from \"./pages/Search\";\r\nimport CheckOutStatus from \"./pages/CheckOutStatus\";\r\nimport CheckOut from \"./pages/CheckOut\";\r\nimport Return from \"./pages/Return\";\r\nimport UserSearch from \"./pages/UserSearch\";\r\nimport RentalSituation from \"./pages/RentalSituation\";\r\nimport RentHistory from \"./pages/RentHistory\";\r\nimport NewMember from \"./pages/NewMember\";\r\n//import Reader from \"./pages/Reader\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\nimport Context from \"./Context\";\r\nimport text from \"./api/text\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"./Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport Navbar from \"./Navbar\";\r\nimport {SERVER_QUERY} from \"./api/query.js\";\r\nimport {BOOK_QUERY, RENT_QUERY, USER_QUERY} from \"./api/query.js\";\r\n//import {BOOK_QUERY, RENT_QUERY, USER_QUERY} from \"./api/query_test.js\";\r\n\r\nconst doc = new Doc();\r\nconst context = new Context();\r\n\r\nconst textString = {};\r\nlet logMsg = \"\"\r\nfunction App() {\r\n\r\n//    const [checkOutStr, setCheckOutStr] = useState(\"\");\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [logged, setLogged] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const { loading: rentLoading, error: rentError, data: rentData } = useQuery(RENT_QUERY);\r\n    const { loading: serverLoading, error: serverError, data: serverData } = useQuery(SERVER_QUERY);\r\n    const [loadBook, { loading: bookLoading, error: bookError, data: bookData }] = useLazyQuery(BOOK_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY, { \"variables\": { \"_id\": userId } });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            console.log(\"Platform: \");\r\n            console.log(navigator.platform);\r\n            logMsg = logMsg + \"<p>Initialize app</p>\";\r\n            console.log(process.env.APP_NAME);\r\n            console.log(process.env.APP_VERSION);\r\n            const lang = navigator.languages;\r\n            console.log(lang);\r\n            let ts = {}\r\n            if (lang.length> 0 && (lang[0].toLowerCase().includes(\"kr\") || lang[0].toLowerCase().includes(\"ko\")))\r\n            {\r\n                ts = text.kr;\r\n            }\r\n            else\r\n            {\r\n                ts = text.en;\r\n            }\r\n            for (let key in ts)\r\n            {\r\n                textString[key] = ts[key];\r\n            }\r\n\r\n            await doc.updateIpAddr();\r\n\r\n            if (\"autoLogin\" in context.cookie &&  context.cookie.autoLogin === \"true\")\r\n            {\r\n                console.log(\"Auto Login: \" + context.cookie.user_id);\r\n                setUserId(context.cookie.user_id);\r\n                console.log(context.cookie.nothing);\r\n                loadUser();\r\n            }\r\n            setInitialized(true);\r\n        }\r\n        initialize();\r\n    }, [loadUser]);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data loaded\");\r\n            if (!userData)\r\n            {\r\n                return;\r\n            }\r\n\r\n//            console.log(\"Login check \" + context.cookie.password);\r\n            const user = userData.user\r\n//            const user = userData.user_test\r\n//            console.log(user);\r\n            if (context.cookie.password && context.checkLogIn(user, context.cookie.password))\r\n            {\r\n                console.log(\"Login suceeded\");\r\n                doc.logIn(user);\r\n            }\r\n\r\n\r\n\r\n        }, [userData]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Rent Query Updated\");\r\n            logMsg = logMsg + \"<p>Rent Query Updated \" + rentLoading + \" \" + rentError + \"</p>\";\r\n            console.log(rentLoading);\r\n            console.log(\"Rent Error\");\r\n            console.log(rentError);\r\n            if (rentData)\r\n            {\r\n                console.log(\"Rent available\");\r\n                logMsg = logMsg + \"<p>Rent available</p>\"\r\n//                console.log(rentData.rents)\r\n                doc.setRent(rentData.rents)\r\n//                doc.setRent(rentData.rent_tests)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [rentLoading, rentError, rentData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Book Query Updated\");\r\n            logMsg = logMsg + \"<p>Book Query Updated</p>\";\r\n            console.log(bookLoading)\r\n            console.log(bookError)\r\n            if (bookData)\r\n            {\r\n                console.log(\"Book available\")\r\n                logMsg = logMsg + \"<p>Book available</p>\";\r\n//                console.log(bookData.books)\r\n                doc.setBook(bookData.books)\r\n//                doc.setBook(bookData.book_tests)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [bookLoading, bookError, bookData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Server Query Updated\");\r\n            logMsg = logMsg + \"<p>Server Query Updated</p>\";\r\n\r\n            console.log(serverData);\r\n            console.log(initialized);\r\n            if (!serverData || !initialized)\r\n                return\r\n\r\n            console.log(\"Server info available\")\r\n            logMsg = logMsg + \"<p>Server info available</p>\";\r\n            console.log(serverData)\r\n            doc.setServerInfo(serverData.serverInfo)\r\n\r\n            if (!doc.serverAvailable)\r\n            {\r\n                console.log(\"Server is not available. Load books from cloud DB\");\r\n                loadBook();\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.LOADING;\r\n                prop.autoClose = false;\r\n                prop.toastId = loadingId;\r\n                toast.loading(textString.loading, prop);\r\n                doc.setLogCallback(updateLog);\r\n            }\r\n        }, [serverLoading, serverError, serverData, loadBook, initialized]\r\n    );\r\n\r\n    function notifyInit()\r\n    {\r\n        const prop = toastProp;\r\n        prop.type = toast.TYPE.SUCCESS;\r\n        prop.render = textString.succeededToOpen;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = \"\";\r\n        toast.info(textString.succeededToOpen, prop);\r\n    }\r\n\r\n    function updateLog(logged) {\r\n        console.log(\"==== Update logging state \" + doc.logged);\r\n//        console.log(doc.userInfo);\r\n        setLogged(doc.logged);\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n        <div className=\"App\">\r\n            <div>\r\n                <ToastContainer\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    limit={10}\r\n                />\r\n            </div>\r\n            <Navbar doc={doc} text={textString}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home doc={doc} text={textString}/>} />\r\n                <Route path=\"/notice\" element={<Notice doc={doc} text={textString} />} />\r\n                <Route path=\"/search/:id?\" element={<Search doc={doc} text={textString}/>} />\r\n                <Route path=\"/checkOutStatus\" element={<CheckOutStatus context={context} doc={doc} text={textString} logged={logged}/>} />\r\n                <Route path=\"/userSearch/:id?\" element={<UserSearch context={context} doc={doc} text={textString} />} />\r\n                <Route path=\"/checkOut\" element={<CheckOut context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/return\" element={<Return context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentalSituation\" element={<RentalSituation context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentHistory\" element={<RentHistory context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/newMember\" element={<NewMember context={context} doc={doc} text={textString}/>} />\r\n            </Routes>\r\n\r\n            <h3>\r\n                v {process.env.REACT_APP_VERSION}\r\n            </h3>\r\n        </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport * as Realm from \"realm-web\";\r\nimport {\r\n    ApolloClient,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    InMemoryCache,\r\n} from \"@apollo/client\";\r\n\r\nconst APP_ID = 'data-xaque';\r\nconst graphqlUri = `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\r\nconst app = new Realm.App(APP_ID);\r\n\r\n// Gets a valid Realm user access token to authenticate requests\r\nasync function getValidAccessToken() {\r\n    // Guarantee that there's a logged in user with a valid access token\r\n    if (!app.currentUser) {\r\n        // If no user is logged in, log in an anonymous user. The logged in user will have a valid\r\n        // access token.\r\n        await app.logIn(Realm.Credentials.anonymous());\r\n//        await app.logIn(apiKey);\r\n    } else {\r\n        // An already logged in user's access token might be stale. Tokens must be refreshed after\r\n        // 30 minutes. To guarantee that the token is valid, we refresh the user's access token.\r\n        await app.currentUser.refreshAccessToken();\r\n    }\r\n//    console.log(\"AccessToken: [\" + app.currentUser.accessToken + \"]\");\r\n\r\n    return app.currentUser.accessToken;\r\n}\r\n\r\n// Configure the ApolloClient to connect to your app's GraphQL endpoint\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\r\n        // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\r\n        // access token before sending the request.\r\n        fetch: async (uri, options) => {\r\n            const accessToken = await getValidAccessToken();\r\n            options.headers.Authorization = `Bearer ${accessToken}`;\r\n            return fetch(uri, options);\r\n        },\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}