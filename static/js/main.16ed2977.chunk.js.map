{"version":3,"sources":["pages/Home.js","Util.js","ListView.js","api/query.js","pages/Notice.js","pages/Search.js","pages/CheckOutStatus.js","pages/CheckOut.js","pages/Return.js","UserInfo.js","pages/UserSearch.js","pages/RentalSituation.js","pages/RentHistory.js","pages/NewMember.js","Doc.js","Context.js","Dropdown.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useEffect","_initialize","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","console","log","doc","setCallback","undefined","stop","apply","arguments","initialize","serverAvailable","_jsxs","id","children","_jsx","Link","className","to","text","checkOut","return","dangerouslySetInnerHTML","__html","homeText","SEARCH_PER_SCREEN","MAX_SEARCH_ENTRY","String","prototype","format","formatted","this","i","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","getUserState","state","normal","overDue","stopped","getBookState","available","checkedOut","reserved","lost","damaged","given","notAvailable","deleted","compareBook","book1","book2","name","claim1","parseInt","claim_num","claim2","compareUser","a1","a2","compareRent","rentDate","title","toUtf8","unescape","encodeURIComponent","loadingId","loggingId","showCallback","ListView","_useState","useState","_useState2","_slicedToArray","itemList","setItemList","_useState3","_useState4","pageNum","setPageNum","_useState5","_useState6","displayList","setDisplayList","list","keyValue","startIdx","count","Math","min","slice","detail","NavigateBeforeIcon","fontSize","sx","color","onClick","NavigateNextIcon","RENT_QUERY","gql","_templateObject","_taggedTemplateLiteral","_templateObject2","USERS_QUERY","_templateObject3","USER_QUERY","_templateObject4","HISTORY_QUERY","_templateObject5","HISTORY_BOOK_QUERY","_templateObject6","HISTORY_PERIOD_QUERY","_templateObject7","NOTICE_QUERY","_templateObject8","CONTENT_QUERY","_templateObject9","SERVER_QUERY","_templateObject10","REQUEST_QUERY","_templateObject11","Notice","searchResults","setSearchResults","displayedCodes","setDisplayedCodes","_useQuery","useQuery","noticeLoading","loading","noticeData","data","noticeError","error","useParams","_useLazyQuery","useLazyQuery","_useLazyQuery2","loadSelected","_useLazyQuery2$","selectedLoading","selectedData","selectedError","notice","toString","showEntry","result","date","colSpan","_id","content","entries","map","initialized","Search","inputText","setInputText","selectedId","setSelectedId","_useState7","_useState8","bookList","setBookList","_useState9","_useState10","rentList","setRentList","_useState11","_useState12","bookState","setBookState","_useState13","_useState14","needConfirm","setNeedConfirm","_useState15","_useState16","queryRequest","toggleQueryRequest","_useState17","_useState18","bookId","setBookId","_useState19","_useState20","advancedSearch","setAdvancedSearch","_useState21","_useState22","author","setAuthor","_useState23","_useState24","fromId","setFromId","_useState25","_useState26","toId","setToId","_useState27","_useState28","fromDate","setFromDate","_useState29","_useState30","toDate","setToDate","_useState31","_useState32","stateFilter","setStateFilter","_useState33","_useState34","rentHistory","setRentHistory","_useDebounce","useDebounce","searchQuery","loadHistory","historyData","selectedRef","useRef","needConfirmRef","bookStateRef","historyAvailable","updateDoc","_updateDoc","_callee6","rl","rm","rented","bl","books","key","book","_context6","rent","push","code","book_id","retDate","return_date","num","claim","regDate","registration_date","totalName","series","category","publisher","publish","isbn","isOpen","findBooks","_x","_findBooks","_callee2","results","url","param","response","resultString","resultObject","_context2","btoa","serverInfo","localIp","port","requestGet","sent","abrupt","concat","BOOKNAME","CLAIMNUM","_STATE","returnDate","_RETURN","index","BARCODE","REG_DATE","AUTHOR","TOTAL_NAME","PUBLISH","CLAIM","ISBN","findBookLocally","sort","_query","_callee3","keyword","sr","_context3","current","query","history","rentLog","book_state","pair","timestamp","selectId","_ref","_callee4","_context4","_x2","setState","setSearchState","stateStr","value","document","getElementById","checked","filter","idx","element","_confirmAction","_callee7","ipAddr","portNum","obj","_context7","requestPost","hidden","entryId","flags","_callee5","_context5","rowSpan","entry","showHistoryEntry","admin","disabled","confirmAction","confirm","cancel","setPeriod","from","toLowerCase","row","includes","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","bookSearch","placeholder","searchBook","onChange","event","target","type","advSearch","bookCode","registeredDate","Calendar","date1","date2","dateStr1","getFullYear","getMonth","padStart","getDate","dateStr2","selectRange","all","search","showEntries","State","LoggedOut","LoggingIn","LoggedIn","MAX_EXTEND","CheckOutStatus","userText","setUserText","passwordText","setPasswordText","setInitialized","userId","setUserId","setHistory","extendCount","setExtendCount","autoLogin","setAutoLogin","loadUser","userData","_useLazyQuery3","_useLazyQuery4","_useLazyQuery5","_useLazyQuery6","loadRequest","requestData","expireDate","setExpireDate","setTitle","_callee8","_userId","_context8","logged","userInfo","t0","getRent","t1","adminMode","userSearch","logIn","_autoLogin","context","cookie","Date","setTime","getTime","days","toGMTString","_func","compare","func","bookReady","rentReady","hist","rentLogs","split","setRequest","request","retText","dueDate","titleRowSpan","extending","maxExtended","hasRequest","React","Fragment","extend","maxExtend","showRented","noEntry","_ref2","toUpperCase","_ref3","toISOString","sendRequest","addRequest","_ref4","prop","user","toast","isActive","checkLogIn","TYPE","SUCCESS","logInSucceed","ERROR","logInFail","render","toastId","update","info","idHolder","onInput","pwHolder","cookieString","toggleAutoLogin","Navigate","LoggingOut","CheckOut","bookText","setBookText","bookValue","barcode","setBarcode","notifyRequest","setNotifyRequest","setRented","setUserData","bookData","setBookData","navigate","useNavigate","prefixList","prefix","getElementsByName","interval","setInterval","scan","clearInterval","notify","RENTED","dismiss","getUserData","USER_CODE","inputId","found","userValue","_args4","substring","logOut","_callee11","ret","_context11","rentSucceed","NOT_AVAILABLE","showBook","_setBookValue","_bookId","setBookValue","_setBookId","_setUserId","_id2","htmlFor","pattern","inputMode","onKeyDown","setUserKeyDown","_callee9","_context9","USER_NAME","nameSuffix","USER_STATE","_RENT","rentSuffix","numberOnly","bookHolder","confirmRent","_callee10","_context10","finish","Return","scannedBook","setScannedBook","returned","setReturned","returnSucceed","_setBarcode","NOT_RENTED","CameraAltIcon","confirmReturn","UserInfo","setDisabled","setUserInfo","setProperty","PHONE_NUMBER","EMAIL","ADDRESS","USER_LEVEL","NOTICE","Object","keys","refresh","phone","email","address","notice_","level","kid","adult","save","confirmSave","userLoading","userListData","userError","userList","setUserList","_args6","succeededToOpen","_extend","users","setUser","getUser","bookName","forceSelect","_args2","showUsers","showUser","_Fragment","findUsers","_x3","_findUsers","input","trim","RentHistory","userName","RETURN_DATE","STATS","LENT_DATE","CLAMENUM","USER","situation","fromTime","setFromTime","toTime","setToTime","_useLazyQuery4$","historyLoading","historyError","yearValue","setYear","monthValue","setMonth","setQuery","option","year","month","thisYear","thisMonth","createElement","add","bookInfo","user_id","_search","queryTo","nextMonth","_RETURN_DATE","RENT_DATE","warn","movePrev","moveNext","NewMember","prepareNewMember","newMember","regSuccess","regFail","Doc","_classCallCheck","userReady","Set","logCallback","_createClass","_requestGet","os","navigator","platform","axios","get","_requestPost","post","_x4","_updateIpAddr","callback","checkState","checkRent","has","globalIp","proxy","checkServerIp","_objectSpread","clear","_getRent","_iterator2","_step2","_entry","_book","retEntry","_EXTEND_COUNT","rent_date","extend_count","_openDoc","updateFunc","prk","require","config","queueUri","Context","env","rawCookie","v","reduce","acc","shift","join","decodeURIComponent","aws_key","REACT_APP_AWSS_KEY1","REACT_APP_AWSS_KEY2","aws_sec","REACT_APP_AWSS_SECRET1","REACT_APP_AWSS_SECRET2","configObject","region","credentials","accessKeyId","secretAccessKey","sqsClient","SQSClient","passwordTyped","matched","emailDb","phoneDb","sign","numberString","isNaN","_sendRequest","body","deduplicationId","command","floor","random","SendMessageCommand","MessageBody","QueueUrl","MessageGroupId","MessageDeduplicationId","send","_receiveRequest","requests","msg","ReceiveMessageCommand","AttributeNames","MessageAttributeNames","MaxNumberOfMessages","VisibilityTimeout","WaitTimeSeconds","Messages","JSON","parse","Body","DropDown","dropdown","setDropdown","setTimeout","window","addEventListener","close","menu","classList","remove","removeEventListener","MenuIcon","home","checkOutStatus","Navbar","isMobile","process","textString","logMsg","App","setLogged","rentLoading","rentError","rentData","_useQuery2","serverLoading","serverError","serverData","notifyInit","updateLog","lang","ts","REACT_APP_QUEUE_URL","languages","kr","en","updateIpAddr","nothing","password","setRent","setServerInfo","LOADING","setLogCallback","then","setBook","Router","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","limit","Routes","Route","path","UserSearch","RentalSituation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","link","HttpLink","uri","headers","cache","InMemoryCache","container","createRoot","StrictMode","ApolloProvider"],"mappings":"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","file":"static/js/main.16ed2977.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport \"./Home.css\";\r\n\r\nfunction Home(props) {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Home\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    if (!props.doc.serverAvailable)\r\n    {\r\n        return (<div id=\"home\" dangerouslySetInnerHTML={{__html:props.text.homeText}}></div>);\r\n    }\r\n    else\r\n    {\r\n        import(\"./PageServer.css\");\r\n        return (<div id=\"home\">\r\n                    <Link className='home-items' to=\"/checkOut\">\r\n                        {props.text.checkOut}\r\n                    </Link>\r\n                    <Link className='home-items' to=\"/return\">\r\n                        {props.text.return}\r\n                    </Link>\r\n                </div>);\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","export const SEARCH_PER_SCREEN = 10;\r\nexport const MAX_SEARCH_ENTRY = 500;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n\r\nexport const getUserState = function(text, state) {\r\n    if (state === \"0\" || state === 0)\r\n        return text.normal;\r\n    else if (state === \"1\" || state === 1)\r\n        return text.overDue;\r\n    else if (state === \"2\" || state === 2)\r\n        return text.stopped;\r\n}\r\n\r\nexport const getBookState = function(text, state) {\r\n    switch (state)\r\n    {\r\n        case \"0\":\r\n        case 0:\r\n            return text.available;\r\n        case \"1\":\r\n        case 1:\r\n            return text.checkedOut;\r\n        case \"2\":\r\n        case 2:\r\n            return text.reserved;\r\n        case \"3\":\r\n        case 3:\r\n            return text.overDue;\r\n        case \"4\":\r\n        case 4:\r\n            return text.lost;\r\n        case \"5\":\r\n        case 5:\r\n            return text.damaged;\r\n        case \"6\":\r\n        case 6:\r\n            return text.given;\r\n        case \"7\":\r\n        case 7:\r\n        default:\r\n            return text.notAvailable;\r\n        case \"8\":\r\n        case 8:\r\n            return text.deleted;\r\n    }\r\n}\r\n\r\nexport const compareBook = function(book1, book2)\r\n{\r\n    if (book1.name > book2.name)\r\n        return 1;\r\n    else if (book1.name < book2.name)\r\n        return -1;\r\n    const claim1 = parseInt(book1.claim_num);\r\n    const claim2 = parseInt(book2.claim_num);\r\n    if (claim1 > claim2)\r\n        return 1;\r\n    else if (claim1 < claim2)\r\n        return -1;\r\n\r\n    return 0;\r\n}\r\n\r\nexport const compareUser = function(a1, a2)\r\n{\r\n    if (a1.name > a2.name)\r\n        return 1;\r\n    else if (a1.name < a2.name)\r\n        return -1;\r\n    else\r\n        return 0;\r\n}\r\n\r\nexport const compareRent = function(a1, a2)\r\n{\r\n    if (a1.rentDate > a2.rentDate)\r\n        return 1;\r\n    else if (a1.rentDate < a2.rentDate)\r\n        return -1;\r\n    if (a1.title > a2.title)\r\n        return 1;\r\n    else if (a1.title < a2.title)\r\n        return -1;\r\n    else\r\n        return 0;\r\n}\r\n\r\nexport const toUtf8 = function(text) {\r\n    return unescape(encodeURIComponent(text));\r\n};\r\n\r\nexport const fromUtf8 = function(text) {\r\n    return decodeURIComponent(escape(text));\r\n};\r\n\r\nexport const loadingId = \"custom-loading-id\";\r\nexport const loggingId = \"custom-logging-id\";\r\n","import { useEffect, useState } from \"react\";\nimport { SEARCH_PER_SCREEN } from \"./Util\";\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\n\nfunction doNothing() {\n    console.log(\"Do nothing...\");\n}\n\nvar showCallback = doNothing;\nfunction ListView(props) {\n        const [itemList, setItemList] = useState([]);\n//        const [showCallback, setShowCallback] = useState(doNothing);\n        const [pageNum, setPageNum] = useState(0);\n        const [displayList, setDisplayList] = useState([]);\n\n    useEffect(function () {\n        console.log(\"Init List View\");\n    }, []);\n\n    useEffect(function () {\n//        console.log(\"Set Item List\");\n        setItemList(props.list);\n    }, [props.list]);\n\n    useEffect(function () {\n        setPageNum(0);\n    }, [props.keyValue]);\n\n    useEffect(function () {\n        if (props.showCallback)\n        {\n//            console.log(\"Set show callback\");\n //           setShowCallback(props.showCallback);\n            showCallback = props.showCallback;\n        }\n    }, [props.showCallback]);\n\n    useEffect(function () {\n        const length = itemList.length;\n //       console.log(\"Page num \" + pageNum.toString());\n        if (length > SEARCH_PER_SCREEN)\n        {\n            const startIdx = pageNum * SEARCH_PER_SCREEN;\n            const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\n            setDisplayList(itemList.slice(startIdx,startIdx+count));\n        }\n        else\n        {\n            setDisplayList(itemList)\n        }\n    }, [itemList, pageNum]);\n\n    function movePrev() {\n        console.log(\"Prev\");\n        if (pageNum > 0)\n        {\n            setPageNum(pageNum - 1);\n        }\n    }\n\n    function moveNext() {\n        console.log(\"Next\");\n        if (itemList.length > (pageNum + 1) * SEARCH_PER_SCREEN)\n        {\n            setPageNum(pageNum + 1);\n        }\n    }\n\n    return (\n        <div id=\"listView\">\n            {showCallback(displayList, props.detail)}\n            {itemList && itemList.length > SEARCH_PER_SCREEN && (\n                <div id=\"pageControl\">\n                    <div className=\"page\" id = \"page\">\n                        <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={() => {movePrev();} }/>\n                    </div>\n                    <div className=\"pageNum\" id=\"pageNum\">\n                        {pageNum+1}\n                    </div>\n                    <div className=\"page\" id = \"page\">\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: (itemList.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={() => {moveNext();} }/>\n                    </div>\n                </div>)\n            }\n        </div>\n    );\n}\nexport default ListView;\n","import gql from \"graphql-tag\";\n\nexport const BOOK_QUERY = gql`\n    query AllBook{\n        book (limit:20000) {\n            _id\n            author\n            title\n            claim_num\n            num\n            series\n            category\n            claim\n            publisher\n            seqnum\n            registration_date\n            isbn\n            deleted\n        }\n    }\n`;\n\nexport const RENT_QUERY = gql`\n    query AllRent{\n        rent (limit:20000) {\n            _id\n            book_id\n            user_id\n            rent_date\n            return_date\n            extend_count\n            state\n        }\n    }\n`;\n\nexport const USERS_QUERY = gql`\n    query AllUser {\n        user (limit: 20000) {\n            _id\n            name\n            state\n            level\n        }\n    }`;\n\nexport const USER_QUERY = gql`\n    query FindUser($_id: string){\n        user (where: {_id: {_eq: $_id}}) {\n            _id\n            name\n            state\n            level\n            encrypted_email\n            encrypted_phone\n        }\n    }`;\n\nexport const HISTORY_QUERY = gql`\n    query findLogs($user_id: string){\n        rentLog (limit: 20000, where: {user_id: {_eq: $user_id}}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_date\n            user_id\n        }\n    }`;\n\nexport const HISTORY_BOOK_QUERY = gql`\n    query findLogs($book_id: string){\n        rentLog (limit: 20000, where: {book_id: {_eq: $book_id}}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_date\n            user_id\n        }\n    }`;\n\nexport const HISTORY_PERIOD_QUERY = gql`\n    query findLogs ($fromTime: string, $toTime: string) {\n        rentLog(limit: 20000, where: {timestamp: {_gte: $fromTime, _lt: $toTime}}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_date\n            user_id\n        }\n    }`;\n\nexport const NOTICE_QUERY = gql`\n    query GetNotices {\n        notice (order_by: {date: asc}, limit:20000) {\n            _id\n            date\n            title\n        }\n    }`;\n\nexport const CONTENT_QUERY = gql`\n    query GetContent ($_id: string) {\n        notice (where: {_id: {_eq: $_id}}) {\n            _id\n            date\n            title\n            content\n        }\n    }`;\n\nexport const SERVER_QUERY = gql`\n    query GetServerInfo {\n        serverInfo {\n            _id\n            globalIp\n            localIp\n            port\n            proxy\n        }\n    }`;\n\nexport const REQUEST_QUERY = gql`\n    query GetRequests($user_id: string) {\n        request (limit: 20000, where: {user_id: {_eq: $user_id}}) {\n            _id\n            user_id\n            action\n            state\n            book_id\n        }\n    }`;\n\n\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { SEARCH_PER_SCREEN } from \"../Util\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport ListView from \"../ListView\";\r\nimport {NOTICE_QUERY, CONTENT_QUERY} from \"../api/query.js\";\r\n\r\nfunction Notice(props) {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const { loading: noticeLoading, data: noticeData, error: noticeError } = useQuery(NOTICE_QUERY);\r\n    const { id } = useParams();\r\n    const [loadSelected, { loading: selectedLoading, data: selectedData, error: selectedError}] = useLazyQuery(CONTENT_QUERY,\r\n            {\"variables\": {\"_id\": id}});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Notice\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Notice\");\r\n//            console.log(noticeData);\r\n//            console.log(noticeError);\r\n//            console.log(noticeLoading);\r\n            if (noticeData)\r\n            {\r\n                setSearchResults(noticeData.notice);\r\n            }\r\n        }, [noticeData, noticeError, noticeLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Content\");\r\n//            console.log(selectedData);\r\n//            console.log(selectedError);\r\n//            console.log(selectedLoading);\r\n            if (selectedData)\r\n            {\r\n//                setSearchResults(selectedData.content);\r\n            }\r\n        }, [selectedData, selectedError, selectedLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n            console.log(\"Page num \" + pageNum.toString() + \" \");\r\n            console.log(length);\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n//           console.log(displayedCodes);\r\n        }, [displayedCodes]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Select id: \" + id);\r\n            if (id)\r\n            {\r\n                loadSelected();\r\n            }\r\n        }, [id, loadSelected]\r\n    );\r\n\r\n    const showEntries = (entries) => {\r\n        return (\r\n            <div id=\"noticeList\">\r\n                <table><tbody>\r\n                   {displayedCodes.length > 0 && displayedCodes.map((result) => showEntry(result))}\r\n                </tbody></table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n//        console.log(result);\r\n        return (\r\n                <tr className=\"\" key={result._id}>\r\n                    <td className=\"\"> {result.date} </td>\r\n                    <td className=\"noticeEntry\" colSpan=\"2\">\r\n                        {id !== result._id &&\r\n                            (<Link to={\"/notice/\"+result._id}>{result.title}</Link>)}\r\n                        {id === result._id &&\r\n                            (<Link to={\"/notice\"}>{result.title}</Link>)}\r\n                    </td>\r\n                </tr>\r\n        );\r\n    }\r\n\r\n    return (\r\n            <div id=\"notice\">\r\n                <div id=\"title\">\r\n                    <h2>\r\n                        {props.text.notice}\r\n                    </h2>\r\n                </div>\r\n                {id && selectedData &&\r\n                    <div id=\"noticeContent\">\r\n                        <table className=\"content\"><tbody>\r\n                               {showEntry(selectedData.notice[0])}\r\n                            <tr>\r\n                                <td className=\"content\" colSpan=\"3\">\r\n                                    {selectedData.notice[0].content}\r\n                                </td>\r\n                            </tr>\r\n                        </tbody></table>\r\n                    </div>\r\n                }\r\n                <ListView list={searchResults} showCallback={(entries) => { return showEntries(entries); }}/>\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default Notice;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { MAX_SEARCH_ENTRY, getBookState, toUtf8, compareBook } from \"../Util\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport {HISTORY_BOOK_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\nimport Calendar from \"react-calendar\";\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nlet initialized = false;\r\n\r\nfunction Search(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n\r\n    const [bookList, setBookList] = useState([]);\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    const [bookState, setBookState] = useState(0);\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n\r\n    const [bookId, setBookId] = useState(\"\");\r\n\r\n    const [advancedSearch, setAdvancedSearch] = useState(false);\r\n\r\n    const [author, setAuthor] = useState(\"\");\r\n    const [fromId, setFromId] = useState(\"\");\r\n    const [toId, setToId] = useState(\"\");\r\n    const [fromDate, setFromDate] = useState(\"\");\r\n    const [toDate, setToDate] = useState(\"\");\r\n\r\n    const [stateFilter, setStateFilter] = useState(0);\r\n    const [rentHistory, setRentHistory] = useState([]);\r\n\r\n    const [searchQuery] = useDebounce(inputText, 300);\r\n    const [loadHistory, {data: historyData}] = useLazyQuery(HISTORY_BOOK_QUERY,\r\n            {\"variables\": { \"book_id\": bookId }});\r\n    const selectedRef = useRef(\"0\");\r\n    const needConfirmRef = useRef(false);\r\n    const bookStateRef = useRef(0);\r\n    const historyAvailable = useRef(false);\r\n    const { id } = useParams();\r\n\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n            console.log(\"BOOK ID: \" + id);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                console.log(\"Set Book ID \" + id);\r\n //               setInputText(id);\r\n                setBookId(id);\r\n                loadHistory();\r\n            }\r\n            else\r\n            {\r\n//                setInputText(\"\");\r\n                setBookId(\"\");\r\n            }\r\n        }, [id, loadHistory]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findBooks(text) {\r\n                let results = [];\r\n\r\n                if (props.doc.serverAvailable)\r\n                {\r\n                    console.log(toUtf8(text));\r\n                    console.log(btoa(toUtf8(text)));\r\n                    const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                        props.doc.serverInfo.port + \"/book\";\r\n                    console.log(\"=======================\");\r\n                    console.log(\"Request book list\");\r\n                    const param = {\"book\": btoa(toUtf8(text)), \"match\":false};\r\n                    const response = await props.doc.requestGet(url, param);\r\n                    console.log(response)\r\n                    if (!(\"books\" in response.data.return))\r\n                        return results;\r\n                    const books = response.data.return.books;\r\n                    for (let i = 0 ; i < books.length ; i++)\r\n                    {\r\n                        const book = books[i];\r\n                        const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                        const state = book._STATE;\r\n                        let retDate = \"\";\r\n                        if (state === 1 || state === 3 || state === \"1\" || state === \"3\")\r\n                        {\r\n                            retDate = props.text.returnDate + \" \" + book._RETURN;\r\n                        }\r\n                        let resultObject = {\r\n                            index: i,\r\n                            text: resultString,\r\n                            name: book.BOOKNAME,\r\n                            code: book.BARCODE,\r\n                            rent: getBookState(props.text, book._STATE.toString()),\r\n                            retDate: retDate,\r\n                            regDate: book.REG_DATE,\r\n                            author: book.AUTHOR,\r\n                            totalName: book.TOTAL_NAME,\r\n                            claim_num: book.CLAIMNUM,\r\n                            publish: book.PUBLISH,\r\n                            claim: book.CLAIM,\r\n                            state: book._STATE,\r\n                            isbn: book.ISBN\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    results = findBookLocally(text, bookList);\r\n                }\r\n                results.sort(compareBook);\r\n                return results;\r\n            }\r\n            async function query() {\r\n                console.log(\"Refresh\");\r\n                if (advancedSearch) {\r\n                    return;\r\n                }\r\n                var keyword;\r\n                if (bookId !== \"\")\r\n                    keyword = bookId;\r\n                else\r\n                    keyword = searchQuery;\r\n                console.log(keyword)\r\n                if (keyword) {\r\n                    let sr = await findBooks(keyword);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        selectedRef.current = sr[0].code;\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [searchQuery, bookId, bookList, rentList, props, queryRequest, advancedSearch]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"History update\");\r\n            console.log(historyData);\r\n            if (!historyData)\r\n            {\r\n                setRentHistory([])\r\n                historyAvailable.current = false;\r\n                return;\r\n            }\r\n            let history = [];\r\n            for (let i = 0 ; i < historyData.rentLog.length ; i++)\r\n            {\r\n                const rent = historyData.rentLog[i];\r\n                if (rent.book_state !== 1)\r\n                    continue;\r\n                let pair = [rent.timestamp];\r\n                if ( \"return_date\" in rent)\r\n                    pair.push(rent.return_date)\r\n                else\r\n                    pair.push(rent.return_date)\r\n                history.push(pair);\r\n            }\r\n            console.log(history.length);\r\n            setRentHistory(history);\r\n            historyAvailable.current = (history.length > 0);\r\n        },\r\n        [historyData]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        initialized = true;\r\n\r\n        let rl = [];\r\n        let rm = {};\r\n        const rented = props.doc.rent;\r\n        for (let i = 0 ; i < rented.length; i++)\r\n        {\r\n           rl.push({code:rented[i].book_id, retDate:rented[i].return_date, state:rented[i].state});\r\n           rm[rented[i].book_id] = rented[i].state;\r\n        }\r\n        setRentList(rl);\r\n\r\n        let bl = [];\r\n        const books = props.doc.book\r\n        for (const key in books)\r\n        {\r\n           const book = books[key];\r\n           const state = (key in rm) ? rm[key] : 0;\r\n           bl.push({code: book._id, name: book.title, state: state, num: book.num, author: book.author, claim: book.claim,\r\n                    regDate: book.registration_date,\r\n                    claim_num: book.claim_num, totalName: book.series, category: book.publisher, publish: book.publisher, isbn: book.isbn, deleted: book.deleted});\r\n        }\r\n        console.log(\"Load\");\r\n        console.log(bl.length);\r\n        setBookList(bl);\r\n\r\n        console.log(bookId);\r\n        if (bookId !== \"\")\r\n        {\r\n            console.log(\"Load history\");\r\n            loadHistory();\r\n        }\r\n    }\r\n\r\n    const selectId = async (code) => {\r\n        console.log(\"Prev \" + selectedRef.current);\r\n        if (searchResults.length === 1 || selectedRef.current === -1 || selectedRef.current !== code)\r\n        {\r\n            console.log(\"Select \" + code);\r\n            setSelectedId(code);\r\n            selectedRef.current = code;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + code);\r\n            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n        }\r\n    }\r\n\r\n    function setState(state)\r\n    {\r\n        console.log(\"Set state \" + bookState + \" to \" + state.toString());\r\n        needConfirmRef.current = true;\r\n        setNeedConfirm(true);\r\n        setBookState(state);\r\n        bookStateRef.current = state;\r\n        console.log(selectedId.toString() + needConfirmRef.current);\r\n    }\r\n\r\n    function setSearchState(state)\r\n    {\r\n        const stateStr = state.toString()\r\n        const value = document.getElementById(stateStr).checked;\r\n        console.log(\"Set Search state \" + stateStr + \" Value: \" + value);\r\n        if (stateStr === \"1023\")\r\n        {\r\n            document.getElementById(\"1023\").checked = value;\r\n            document.getElementById(\"0\").checked = value;\r\n            document.getElementById(\"1\").checked = value;\r\n            document.getElementById(\"3\").checked = value;\r\n            document.getElementById(\"4\").checked = value;\r\n            document.getElementById(\"5\").checked = value;\r\n            document.getElementById(\"6\").checked = value;\r\n            document.getElementById(\"7\").checked = value;\r\n            document.getElementById(\"8\").checked = value;\r\n        }\r\n        else\r\n        {\r\n            document.getElementById(stateStr).checked = value;\r\n        }\r\n\r\n        var filter = 0;\r\n        for (var i = 0 ; i < 9 ; i++)\r\n        {\r\n            const idx = i.toString();\r\n            const element = document.getElementById(idx);\r\n            if (element)\r\n                filter |= (element.checked) ? (1 << i) : 0;\r\n        }\r\n        setStateFilter(filter);\r\n        console.log(\"Filter: \" + filter.toString());\r\n    }\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n\r\n        const ipAddr = props.doc.serverInfo.localIp;\r\n        const portNum = props.doc.serverInfo.port;\r\n        if (ipAddr.length === 0 || portNum <= 0)\r\n            return;\r\n\r\n        const url = \"https://\" + ipAddr + \":\" +\r\n            portNum + \"/book\";\r\n        var obj = {};\r\n        obj[\"book\"] = selectedRef.current;\r\n        obj[\"state\"] = bookStateRef.current;\r\n        console.log(\"=======================\");\r\n        console.log(\"Change book state\");\r\n        await props.doc.requestPost(url, obj);\r\n\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n    }\r\n\r\n    const showHistoryEntry = (entry) => {\r\n        return (<tr key={entry[0]}><td key={entry[0] + \"x\"}>{entry[0]}</td><td>{entry[1]}</td></tr>);\r\n    }\r\n\r\n    const showEntry = (result, detail) => {\r\n        const hidden = (result.code !== selectedRef.current);\r\n        const entryId = (hidden) ? \"searchResult\" : \"selectedSearchResult\";\r\n        const flags = [false, false, false, false, false, false, false, false, false, false]\r\n        flags[result.state] = true;\r\n        if (result.state === 1 || result.state === 2 || result.state === 3)\r\n            flags[0] = true;\r\n//        if (!hidden)\r\n//        {\r\n//            console.log(detail);\r\n//            console.log(flags);\r\n//        }\r\n        const rentHistory = detail[2];\r\n        return (\r\n            <div key={result.code}>\r\n            <div id={entryId} onClick={async () => await selectId(result.code)}>\r\n                <table><tbody>\r\n                    <tr className=\"searchTr\">\r\n                        <td className=\"searchTitle\">{result.text}</td>\r\n                        <td className=\"searchRent\">{result.rent}</td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {!hidden &&\r\n            <div>\r\n                <table><tbody>\r\n                <tr key=\"row1\">\r\n                    <td>{result.author} </td>\r\n                    <td colSpan=\"2\" rowSpan=\"2\">{result.totalName + \" \"}<b>{result.name}</b>{\" \" + result.claim_num}</td>\r\n                </tr>\r\n                <tr key=\"row2\">\r\n                    <td>\r\n                        <Link to={\"/search/\"+result.code}>{result.code}</Link>\r\n                    </td>\r\n                </tr>\r\n                <tr key=\"row3\">\r\n                    <td>{result.publish}</td>\r\n                    <td colSpan={result.retDate.length > 0 ? \"1\":\"2\"}>{result.claim}</td>\r\n                    {result.retDate.length > 0 && <td>{result.retDate}</td> }\r\n                </tr>\r\n                </tbody></table>\r\n                <table className=\"rentHistory\" hidden={!historyAvailable.current}><tbody>\r\n                    <tr id=\"titles\"><td>{props.text.rentDate}</td><td>{props.text.returnDate}</td></tr>\r\n                    {rentHistory.map(entry => showHistoryEntry(entry))}\r\n                </tbody></table>\r\n                <div hidden={!props.doc.serverAvailable || !props.doc.admin}>\r\n                    <button className=\"bookStates\" id = \"0\" disabled={flags[0]} onClick={() => setState(0)}> {props.text.available} </button>\r\n                    <button className=\"bookStates\" id = \"4\" disabled={flags[4]} onClick={() => setState(4)}> {props.text.lost} </button>\r\n                    <button className=\"bookStates\" id = \"5\" disabled={flags[5]} onClick={() => setState(5)}> {props.text.damaged} </button>\r\n                    <button className=\"bookStates\" id = \"6\" disabled={flags[6]} onClick={() => setState(6)}> {props.text.given} </button>\r\n                    <button className=\"bookStates\" id = \"7\" disabled={flags[7]} onClick={() => setState(7)}> {props.text.notAvailable} </button>\r\n                    <button className=\"bookStates\" id = \"8\" disabled={flags[8]} onClick={() => setState(8)}> {props.text.deleted} </button>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirmRef.current}>\r\n                    <div id=\"bookName\"> {getBookState(props.text, bookStateRef.current)} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n            </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function showEntries(results, detail)\r\n    {\r\n        console.log(\"Redraw \" + needConfirmRef.current);\r\n        console.log(historyAvailable.current);\r\n        console.log(detail);\r\n        return results.map((result) => showEntry(result, detail))\r\n    }\r\n\r\n    function setPeriod(from, text)\r\n    {\r\n        if (from)\r\n            setFromId(text)\r\n        else\r\n            setToId(text)\r\n    }\r\n\r\n    function findBookLocally(keyword, bookList)\r\n    {\r\n        let results = [];\r\n        console.log(advancedSearch);\r\n        const text = keyword.toLowerCase();\r\n        console.log(text);\r\n        for (let i = 0 ; i < bookList.length ; i++) {\r\n            const row = bookList[i];\r\n            if (results.length >= MAX_SEARCH_ENTRY) break;\r\n\r\n            if (text.length > 0 &&\r\n                (!row.name || !row.name.toString().toLowerCase().includes(text)) &&\r\n                (!row.totalName || !row.totalName.toString().toLowerCase().includes(text)) &&\r\n                (!row.author || !row.author.toString().toLowerCase().includes(text)) &&\r\n                row.code.toLowerCase() !== text && row.isbn !== text)\r\n                continue\r\n            if (row.deleted && row.deleted === \"Y\")\r\n                continue\r\n//            console.log(row)\r\n\r\n            if (advancedSearch)\r\n            {\r\n                if (author.length > 0 && row.author && !row.author.toString().toLowerCase().includes(author.toLowerCase()))\r\n                    continue;\r\n\r\n                if (fromId.length > 0 && row.code < fromId)\r\n                    continue;\r\n\r\n                if (toId.length > 0 && row.code > toId)\r\n                    continue;\r\n\r\n                const regDate = row.regDate;\r\n\r\n                if (regDate < fromDate || regDate > toDate)\r\n                    continue;\r\n                console.log(row);\r\n                console.log(regDate);\r\n                console.log(regDate < fromDate);\r\n                console.log(regDate > toDate);\r\n\r\n                if (!((1<<row.state) & stateFilter))\r\n                    continue;\r\n            }\r\n            else if (text.length === 0)\r\n                continue;\r\n\r\n            let resultString = `${row.name} ${row.claim_num}`;\r\n            let retDate = \"\";\r\n            let state = \"0\";\r\n            for (const entry of rentList)\r\n            {\r\n                if (entry.code === row.code)\r\n                {\r\n                    state = entry.state;\r\n                    if (state === \"1\" || state === \"3\")\r\n                    {\r\n                        retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            let resultObject = {\r\n                index: i,\r\n                text: resultString,\r\n                name: row.name,\r\n                code: row.code.toString(),\r\n                rent: getBookState(props.text, state),\r\n                retDate: retDate,\r\n                regDate: row.regDate,\r\n                author: row.author,\r\n                totalName: row.totalName,\r\n                claim_num: row.claim_num,\r\n                publish: row.publish,\r\n                claim: row.claim,\r\n                state: parseInt(state),\r\n                isbn: row.isbn\r\n            };\r\n            results.push(resultObject);\r\n//            console.log(resultObject);\r\n        }\r\n        console.log(results.length);\r\n\r\n        return results;\r\n    }\r\n\r\n    function onChangeDate(date)\r\n    {\r\n        console.log(date);\r\n        const date1 = date[0]\r\n        const date2 = date[1]\r\n        const y1 = date1.getFullYear().toString();\r\n        const m1 = (date1.getMonth() + 1).toString().padStart(2, \"0\")\r\n        const d1 = date1.getDate().toString().padStart(2, \"0\");\r\n        const dateStr1 = y1 + \"-\" + m1 + \"-\" + d1;\r\n        console.log(dateStr1);\r\n        setFromDate(dateStr1);\r\n\r\n        const y2 = date2.getFullYear().toString();\r\n        const m2 = (date2.getMonth() + 1).toString().padStart(2, \"0\")\r\n        const d2 = date2.getDate().toString().padStart(2, \"0\");\r\n        const dateStr2 = y2 + \"-\" + m2 + \"-\" + d2;\r\n        console.log(dateStr2);\r\n        setToDate(dateStr2);\r\n    }\r\n\r\n    function searchEntry()\r\n    {\r\n        console.log(\"Search\");\r\n        console.log(fromId);\r\n        console.log(toId);\r\n        console.log(fromDate);\r\n        console.log(toDate);\r\n        let results = findBookLocally(inputText, bookList);\r\n        results.sort(compareBook);\r\n\r\n        let sr = results;\r\n        if (sr.length > 0)\r\n            setSearchResults(sr);\r\n        else\r\n            setSearchResults([]);\r\n        if (sr.length === 1)\r\n            selectedRef.current = sr[0].code;\r\n    }\r\n\r\n    function toggleAdvancedSearch()\r\n    {\r\n        setAdvancedSearch(!advancedSearch);\r\n    }\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <div id=\"title\">\r\n                <h2> {props.text.bookSearch} </h2>\r\n            </div>\r\n            <div id=\"searchContents\" hidden={bookId !== \"\"}>\r\n                <input id=\"searchInput\"\r\n                    placeholder={props.text.searchBook}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n                    <div hidden={!props.doc.admin}>\r\n                        <input type=\"checkbox\" id=\"advancedSearch\" checked={advancedSearch} onChange={() => toggleAdvancedSearch()}/>\r\n                        <label>\r\n                            {props.text.advSearch}\r\n                        </label>\r\n                    </div>\r\n                <div hidden={!advancedSearch}>\r\n                    <div>\r\n                    <label> {props.text.author} </label>\r\n                    <input type=\"text\" id=\"author\" onChange={(event) => {setAuthor(event.target.value)}} />\r\n                    </div>\r\n                    <div>\r\n                    <label> {props.text.bookCode} </label>\r\n                    <input type=\"text\" id=\"fromPeriod\" onChange={(event) => {setPeriod(true, event.target.value);}} />\r\n                    <label> ~  </label>\r\n                    <input type=\"text\" id=\"toPeriod\" onChange={(event) => {setPeriod(false, event.target.value);}} />\r\n                    </div>\r\n                    <div>\r\n                    <label> {props.text.registeredDate} </label>\r\n                    <Calendar onChange={onChangeDate} selectRange={true}/>\r\n                    </div>\r\n                    <div>\r\n                    <table><tbody>\r\n                        <tr key=\"stateName\" className=\"bookData\">\r\n                            <td className =\"stateName\">{props.text.all}</td>\r\n                            <td className =\"stateName\">{props.text.available}</td>\r\n                            <td className =\"stateName\">{props.text.checkedOut}</td>\r\n                            <td className =\"stateName\">{props.text.overDue}</td>\r\n                            <td className =\"stateName\">{props.text.lost}</td>\r\n                            <td className =\"stateName\">{props.text.damaged}</td>\r\n                            <td className =\"stateName\">{props.text.given}</td>\r\n                            <td className =\"stateName\">{props.text.notAvailable}</td>\r\n                            <td className =\"stateName\">{props.text.deleted}</td>\r\n                        </tr>\r\n                        <tr key=\"stateButton\" className=\"bookData\">\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"1023\" onChange={() => setSearchState(1023)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"0\" onChange={() => setSearchState(0)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"1\" onChange={() => setSearchState(1)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"3\" onChange={() => setSearchState(3)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"4\" onChange={() => setSearchState(4)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"5\" onChange={() => setSearchState(5)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"6\" onChange={() => setSearchState(6)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"7\" onChange={() => setSearchState(7)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"8\" onChange={() => setSearchState(8)}/>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                    </div>\r\n                    <div>\r\n                    <button id=\"searchEntry\" onClick={searchEntry}> {props.text.search} </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ListView keyValue={searchQuery} list={searchResults} detail={[selectedId, needConfirm, rentHistory]} showCallback={(entries, detail) => { return showEntries(entries, detail); }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, compareRent } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USER_QUERY, HISTORY_QUERY, REQUEST_QUERY} from \"../api/query.js\";\r\n//import {USER_QUERY, HISTORY_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nconst MAX_EXTEND = 1;\r\n\r\nfunction CheckOutStatus(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [extendCount, setExtendCount] = useState(0);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [loadRequest, { data: requestData }] = useLazyQuery(REQUEST_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [expireDate, setExpireDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOutStatus initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n\r\n            if (\"autoLogin\" in props.context.cookie)\r\n            {\r\n                const autoLogin = (props.context.cookie.autoLogin === \"true\") ? true : false;\r\n                setAutoLogin(autoLogin);\r\n            }\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            setExpireDate(date.toGMTString());\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.doc.logged]\r\n    );\r\n\r\n    useEffect(() => {\r\n            async function func() {\r\n                console.log(\"User data updated \");\r\n                await compare();\r\n            }\r\n            func();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData)\r\n            let hist = [];\r\n            const rentLogs = historyData.rentLog;\r\n//            const rentLogs = historyData.rentLog_tests;\r\n            for (let i = 0 ; i < rentLogs.length ; i++)\r\n            {\r\n                const entry = rentLogs[i];\r\n                if (entry.book_state !== \"1\" && entry.book_state !== 1)\r\n                    continue;\r\n                if (! (\"return_date\" in entry) || ! entry.return_date)\r\n                    continue;\r\n//                console.log(entry);\r\n                const id = entry.book_id;\r\n                if (!(id in props.doc.book))\r\n                    continue;\r\n\r\n                const book = props.doc.book[id];\r\n//                console.log(book)\r\n                const title = book.title;\r\n                const claim = book.claim;\r\n                const date = entry.timestamp.split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                const retDate = entry.return_date.split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                hist.push(\r\n                    {\"id\": id, \"title\": title, \"rentDate\": date, \"retDate\": retDate, \"claim\": claim,\r\n                     \"totalName\": book.series, \"claim_num\": book.claim_num\r\n                    }\r\n                );\r\n\r\n            }\r\n            hist.sort(compareRent);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Request data\");\r\n            if (requestData)\r\n            {\r\n                console.log(\"Request available\");\r\n                props.doc.setRequest(requestData.request)\r\n            }\r\n        },\r\n        [requestData]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.logged)\r\n        {\r\n            setState(State.LoggedIn);\r\n            const userId = props.doc.userInfo['_id'];\r\n            setUserId(userId);\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            console.log(props.doc.getRent(userId));\r\n            await loadHistory();\r\n            await loadRequest();\r\n        }\r\n        else\r\n        {\r\n            setState(State.LoggedOut);\r\n            setUserId(\"\");\r\n            setPasswordText(\"\");\r\n        }\r\n\r\n        console.log(\"Set title \" + props.doc.logged)\r\n        if (props.doc.logged)\r\n        {\r\n            if (props.doc.adminMode)\r\n                setTitle(props.text.userSearch);\r\n            else\r\n                setTitle(props.text.checkOut);\r\n        }\r\n        else\r\n        {\r\n            setTitle(props.text.logIn);\r\n        }\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index, history) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const claim = rent[\"claim\"];\r\n        const key = index.toString();\r\n        const extendCount = rent.extendCount;\r\n        const maxExtended = extendCount >= MAX_EXTEND;\r\n        let titleRowSpan;\r\n        let extending;\r\n        if (history)\r\n        {\r\n            titleRowSpan = \"1\"\r\n        }\r\n        else\r\n        {\r\n            extending = props.doc.hasRequest(id);\r\n            titleRowSpan = \"2\"\r\n        }\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" rowSpan={titleRowSpan} className=\"bookName\">\r\n                            {rent.totalName + \" \"}<b>{rent.title}</b>{\" \" + rent.claim_num}\r\n                        </td>\r\n                    </tr>\r\n                    {!history &&\r\n                        <tr key={key + \"Extend\"} className=\"bookExtend\">\r\n                            <td className=\"bookExtend\"> <button id=\"extend\" onClick={async () => extend(id)}\r\n                                disabled={extending || maxExtended}>\r\n                                {maxExtended && props.text.maxExtend}\r\n                                {(extending && !maxExtended) && props.text.extending}\r\n                                {!(extending || maxExtended) && props.text.extend}\r\n                                ({extendCount})\r\n                            </button></td>\r\n                        </tr>\r\n                    }\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const toggleAutoLogin = () => {\r\n        console.log(\"Toggle autoLogin\");\r\n        const cookieString = \"autoLogin=\" + (autoLogin ? \"false\":\"true\") + \"; expires=\" + expireDate + \";\";\r\n//        console.log(cookieString);\r\n        document.cookie = cookieString;\r\n        setAutoLogin(!autoLogin);\r\n    }\r\n\r\n    const showEntries = (result, history) => {\r\n        let retText;\r\n        if (history)\r\n            retText = props.text.returnDate;\r\n        else\r\n            retText = props.text.dueDate;\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{retText}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index, history);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        setState(State.LoggingIn);\r\n        setUserId(userText.toUpperCase());\r\n        await loadUser();\r\n        await loadHistory();\r\n        await loadRequest();\r\n        console.log(\"Log In\");\r\n        await compare();\r\n    }\r\n\r\n    const extend = async (bookId) => {\r\n        console.log(\"Extend\");\r\n        const date = new Date().toISOString().replace(\"T\", \" \").replace(\"Z\", \"\");\r\n        console.log(date);\r\n        const request =\r\n            \"{\\n\" +\r\n            \" \\\"user_id\\\": \\\"\" + userId + \"\\\",\\n\" +\r\n            \" \\\"book_id\\\": \\\"\" + bookId + \"\\\",\\n\" +\r\n            \" \\\"date\\\": \\\"\" + date + \"\\\",\\n\" +\r\n            \" \\\"action\\\": \\\"extend\\\"\\n\" +\r\n            \"}\\n\"\r\n\r\n        props.context.sendRequest(request);\r\n        props.doc.addRequest(bookId);\r\n        setExtendCount(extendCount + 1);\r\n    }\r\n\r\n    const compare = async () => {\r\n        if (!userData || state === State.LoggedOut)\r\n            return;\r\n\r\n        console.log(toast.isActive(loggingId));\r\n        const prop = toastProp;\r\n\r\n        console.log(passwordText);\r\n        let text;\r\n        const user = userData.user[0];\r\n        if (props.context.checkLogIn(user, passwordText))\r\n        {\r\n            props.doc.logIn(user);\r\n\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            setState(State.LoggedIn);\r\n\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            document.cookie = \"user_id=\" + userId + \"; expires=\" + expireDate + \";\";\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.render = text;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = loggingId;\r\n        if (toast.isActive(loggingId))\r\n        {\r\n            console.log(\"update toast\");\r\n            toast.update(loggingId, prop);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"New toast\");\r\n            toast.info(text, prop);\r\n        }\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {title}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!(state !== State.LoggedIn)}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <input type=\"password\" id=\"searchPassword\"\r\n                    placeholder={props.text.pwHolder}\r\n                    value={passwordText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setPasswordText(event.target.value);\r\n                    }} />\r\n                <div id=\"autoLogin\">\r\n                    <input type=\"checkbox\" id=\"autoLoginButton\" checked={autoLogin} onChange={() => toggleAutoLogin()}/>\r\n                    <label>\r\n                            {props.text.autoLogin}\r\n                    </label>\r\n                </div>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={!(state === State.LoggedIn)}>\r\n                <div>\r\n                    { showEntries(searchResults, false) }\r\n                </div>\r\n\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <ListView list={history} showCallback={(entries) => { return showEntries(entries, true); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOutStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, loadingId, getUserState } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\n//import CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport ListView from \"../ListView\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2,\r\n    LoggingOut: 3\r\n}\r\n\r\nfunction CheckOut(props) {\r\n    const [userId, setUserId] = useState(\"\");\r\n\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [bookValue] = useDebounce(bookText, 500);\r\n    const [bookId, setBookId] = useState(\"\");\r\n\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n\r\n    const [barcode, setBarcode] = useState(\"\");\r\n\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n\r\n    const [rented, setRented] = useState([]);\r\n    const [userData, setUserData] = useState({});\r\n    const [bookData, setBookData] = useState({});\r\n    const [state, setState] = useState(State.LoggedOut);\r\n\r\n    const { id } = useParams();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOut initialize\");\r\n            const prefixList = document.getElementsByName(\"idPrefix\");\r\n            for (var i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                const prefix = prefixList[i].id\r\n                if (\"AB\" === prefix)\r\n                    prefixList[i].checked = true\r\n                else\r\n                    prefixList[i].checked = false\r\n\r\n            }\r\n            console.log(\"ID: \" + id);\r\n            if (id && id.length !== 0)\r\n            {\r\n//                setBarcode(id)\r\n                setUserId(id);\r\n                logIn(id);\r\n            }\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n//            console.log(props.doc.serverInfo);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            if (props.doc.admin)\r\n                return;\r\n            import(\"./PageServer.css\");\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                const response = await props.doc.requestGet(url, {});\r\n                const code = response.data.scan;\r\n                if (code) {\r\n                    console.log(code)\r\n                    console.log(state)\r\n                    setBarcode(code)\r\n                }\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!barcode)\r\n                return;\r\n            console.log(\"Updated barcode: \" + barcode);\r\n            console.log(\"state : \" + state);\r\n            if (state === State.LoggedIn)\r\n                setBookId(barcode);\r\n            else if (state === State.LoggedOut)\r\n                logIn(barcode);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [barcode]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            console.log(toast.isActive(loggingId));\r\n            const prop = toastProp;\r\n\r\n            let text;\r\n            let notify = false;\r\n            if (\"USER_CODE\" in userData && state !== State.LoggedIn)\r\n            {\r\n                console.log(\"Set state to LoggedIn from \" + state);\r\n                setState(State.LoggedIn);\r\n\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                text = props.text.logInSucceed;\r\n                notify = true;\r\n            }\r\n            else if (!(\"USER_CODE\" in userData))\r\n            {\r\n                console.log(\"Set state to LoggedOut from \" + state);\r\n\r\n                if (state === State.LoggingIn)\r\n                {\r\n                    prop.type = toast.TYPE.ERROR;\r\n                    text = props.text.logInFail;\r\n                    notify = true;\r\n                }\r\n                setState(State.LoggedOut);\r\n            }\r\n\r\n            if (notify)\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": prop.type})\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in bookData)\r\n            {\r\n                if (bookData._STATE === 0)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    setNeedConfirm(false);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n//                setBarcode(\"\")\r\n                setBookId(\"\");\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [bookData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            console.log(\"Notification \" + notifyRequest.text)\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//            if (\"id\" in notifyRequest)\r\n//                id = notifyRequest.id\r\n\r\n//            prop.toastId = id\r\n//            if (toast.isActive(id))\r\n//                toast.update(id, notifyRequest.text, prop);\r\n//            else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            if (state === State.LoggedIn)\r\n                return;\r\n\r\n            const prefixList = document.getElementsByName(\"idPrefix\");\r\n            var prefix = \"\"\r\n            for (var i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                if (prefixList[i].checked)\r\n                    prefix = prefixList[i].id\r\n                    console.log(\"Pressed [\" + i.toString() + \" \" + prefix + \"]\")\r\n\r\n            }\r\n            let _userId;\r\n            if (userValue[0] === \"A\" || userValue[0] === \"a\")\r\n                _userId = userValue;\r\n            else\r\n                _userId = prefix + userValue;\r\n//                setBarcode(_userId);\r\n            setUserId(_userId);\r\n\r\n        }, [state, userValue]\r\n    );\r\n*/\r\n\r\n    const getUserData = async (userText) => {\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/user?user=\" + userText;\r\n        const param = {\"user\": userText, \"data\":\"nothing\"};\r\n        const response = await props.doc.requestGet(url, param);\r\n        const user = response.data.return;\r\n\r\n        setUserData(user);\r\n        console.log(user);\r\n        setUserId(user.USER_CODE);\r\n    }\r\n\r\n    const logIn = async (inputId = undefined) => {\r\n        var userId;\r\n        var prefix = \"\";\r\n        var i;\r\n        const prefixList = document.getElementsByName(\"idPrefix\");\r\n        if (inputId)\r\n        {\r\n            if (inputId.length <= 2)\r\n                return;\r\n            prefix = inputId.substring(0, 2);\r\n            var found = false;\r\n            for (i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                if (prefix === prefixList[i].id)\r\n                {\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!found)\r\n                return;\r\n            userId = inputId;\r\n        }\r\n        else\r\n        {\r\n            const userValue = document.getElementById('userInput').value;\r\n            for (i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                if (prefixList[i].checked)\r\n                    prefix = prefixList[i].id\r\n                    console.log(\"Pressed [\" + i.toString() + \" \" + prefix + \"]\")\r\n\r\n            }\r\n            if (userValue[0] === \"A\" || userValue[0] === \"a\")\r\n                userId = userValue;\r\n            else\r\n                userId = prefix + userValue;\r\n        }\r\n        console.log(\"LOGIN\");\r\n        console.log(userId);\r\n        if (userId.length === 0)\r\n            return;\r\n        console.log(\"Set state to LoggingIn from \" + state );\r\n        setState(State.LoggingIn);\r\n        const _id = userId.toUpperCase();\r\n        getUserData(_id);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Finish\")\r\n        setUserData({});\r\n        setBookData({});\r\n//        setBarcode(\"\");\r\n        setUserId(\"\");\r\n        setBookId(\"\");\r\n        setRented([])\r\n        navigate(\"/\")\r\n    }\r\n\r\n/*\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n*/\r\n\r\n    useEffect(() => {\r\n        async function setBookValue() {\r\n            if (bookValue.length <= 0)\r\n                return;\r\n            var _bookId;\r\n            if (props.doc.admin)\r\n                _bookId = bookValue;\r\n            else\r\n                _bookId = \"HK\" + bookValue;\r\n            console.log(\"Search book1 \" + _bookId);\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(_bookId)), \"match\": true}};\r\n            const param = {\"book\": _bookId, \"match\": true};\r\n            const response = await props.doc.requestGet(url, param);\r\n            const book = response.data.return;\r\n            console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n            if ('books' in book && 'BOOKNAME' in book.books)\r\n            {\r\n                console.log(book.books)\r\n                setBookData(book.books)\r\n            }\r\n        }\r\n        setBookValue()\r\n    }, [bookValue, props.doc]);\r\n\r\n    useEffect(() => {\r\n        async function setBookId() {\r\n            console.log(\"Set bookId: \" + bookId);\r\n            if (bookId.length === 0)\r\n                return;\r\n            console.log(\"Search book2 \" + bookId);\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n            const param = {\"book\": bookId, \"match\": true};\r\n            const response = await props.doc.requestGet(url, param);\r\n            const book = response.data.return;\r\n            console.log(book)\r\n            if ('books' in book && 'BOOKNAME' in book.books)\r\n            {\r\n                setBookData(book.books)\r\n            }\r\n        }\r\n        setBookId();\r\n    }, [bookId, props.doc]);\r\n\r\n    useEffect(() => {\r\n        async function setUserId() {\r\n            console.log(\"Set userId: \" + userId);\r\n            if (!userId || userId.length === 0)\r\n                return;\r\n            if (userId.search(\"AA\") === 0 || userId.search(\"AB\") === 0 )\r\n            {\r\n                const prefixList = document.getElementsByName(\"idPrefix\");\r\n                const prefix = userId.substring(0, 2);\r\n                for (var i = 0 ; i < prefixList.length ; i++)\r\n                {\r\n                    const id = prefixList[i].id\r\n                    if (prefix === id)\r\n                        prefixList[i].checked = true\r\n                    else\r\n                        prefixList[i].checked = false\r\n\r\n                }\r\n            }\r\n        }\r\n    setUserId();\r\n    }, [userId]);\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(bookData);\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/checkOut\"\r\n        const param = {\r\n            book: bookData.BARCODE,\r\n            user: userId\r\n        };\r\n        const response = await props.doc.requestPost(url, param);\r\n        const ret = response.data.return\r\n        console.log(\"Rent confirmed\");\r\n        console.log(ret)\r\n\r\n        if (ret === \"SUCCESS\")\r\n        {\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.rentSucceed,\r\n                              \"type\": toast.TYPE.SUCCESS})\r\n            rented.push({\"id\": bookData.BARCODE, \"name\": bookData.BOOKNAME})\r\n            console.log(rented)\r\n            setRented(rented)\r\n        }\r\n        else\r\n        {\r\n            let text\r\n            if (ret in props.text)\r\n                text = props.text[ret];\r\n            else\r\n                text = props.text.NOT_AVAILABLE;\r\n            console.log(text)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": text,\r\n                              \"type\": toast.TYPE.ERROR})\r\n        }\r\n        setBookData({});\r\n//        setBarcode(\"\");\r\n        setBookId(\"\");\r\n        getUserData(userId);\r\n    }\r\n\r\n    function showEntry(index, rent)\r\n    {\r\n    /*\r\n        return (<React.Fragment key={index + \"Fragment\"}>\r\n                    <tr key={index}>\r\n                        <td className=\"bookCell\"> {rent.id} </td>\r\n                        <td colSpan=\"3\" className=\"bookCell\"> {rent.name} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    */\r\n        return (<div id=\"bookEntry\" key={rent.id}>\r\n                    <div id=\"bookItem\"> {rent.id} </div>\r\n                    <div id=\"bookItem\"> {rent.name} </div>\r\n                </div>);\r\n\r\n    }\r\n\r\n    function showBook(books)\r\n    {\r\n        return (<div id=\"bookList\">\r\n                    <div id=\"dueDate\">\r\n                    {props.text.dueDate} : {props.doc.dueDate}\r\n                    </div>\r\n                    {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                </div>);\r\n    }\r\n    /*\r\n                    <table><tbody>\r\n                        {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                    </tbody></table>\r\n    */\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setBookData({});\r\n//        setBarcode(\"\")\r\n        setBookId(\"\");\r\n    }\r\n\r\n    function setUserKeyDown(event)\r\n    {\r\n        if (event.key === \"Enter\")\r\n        {\r\n            console.log(event);\r\n            console.log(document.getElementById('userInput').value);\r\n            logIn();\r\n        }\r\n    }\r\n\r\n//            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn ? true : false }>\r\n//            <div id=\"checkOutResult\" hidden={true}>\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.checkOut}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={state === State.LoggedIn}>\r\n                <input type=\"radio\" id = \"AA\" name=\"idPrefix\"/>\r\n                <label htmlFor=\"AA\" className=\"idPrefix\" name=\"idPrefix\"> AA </label>\r\n                <input type=\"radio\" id = \"AB\" name=\"idPrefix\"/>\r\n                <label htmlFor=\"AB\" className=\"idPrefix\" name=\"idPrefix\"> AB </label>\r\n                <input type=\"text\" id=\"userInput\" pattern=\"[0-9]*\" inputMode=\"numeric\"\r\n                    placeholder={props.text.idHolder}\r\n                    onKeyDown={(event) => {\r\n                        setUserKeyDown(event);\r\n                    }}/>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn}>\r\n                {userData.USER_CODE && (\r\n                    <div id=\"userInfo\">\r\n                        <div id=\"userItem\">\r\n                            {userData.USER_CODE + \" : \" + userData.USER_NAME + props.text.nameSuffix}\r\n                        </div>\r\n                        <div id=\"userItem\"> {getUserState(props.text, userData.USER_STATE)} </div>\r\n                        <div id=\"userItem\"> {userData._RENT.length + \" \" + props.text.rentSuffix} </div>\r\n                    </div>\r\n                )}\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                    <label id=\"manualInput\">\r\n                        <div id=\"hkPrefix\">\r\n                        {props.text.numberOnly}\r\n                        </div>\r\n                        <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"bookInput\"\r\n                            placeholder={props.text.bookHolder}\r\n                            onInput={(event) => {\r\n                                setBookText(event.target.value);\r\n                            }} />\r\n                    </label>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmRent} </div>\r\n                    <div id=\"bookName\"> {bookData.AUTHOR + \":\"} </div>\r\n                    <div id=\"bookName\"> {bookData.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={async () => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                {rented.length > 0 &&\r\n                    <ListView list={rented} showCallback={(entry) => {return showBook(entry)}}/>\r\n                }\r\n            </div>\r\n            <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.finish} </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport ListView from \"../ListView\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Return(props) {\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 300);\r\n//    const [initialized, setInitialized] = useState(false);\r\n//    const [userId, setUserId] = useState(\"\");\r\n//    const [state, setState] = useState(State.LoggedOut);\r\n//    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n//                     { \"variables\": { \"_id\": userId } });\r\n//    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n//                     { \"variables\": { \"user_id\": userId } });\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n    const [returned, setReturned] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            props.doc.setCallback(undefined);\r\n            console.log(\"=======================================\");\r\n            console.log(\"Return initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            if (props.doc.admin)\r\n                return;\r\n            import(\"./PageServer.css\")\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr && ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                const response = await props.doc.requestGet(url, {});\r\n                const book = response.data.scan;\r\n                if (book) {\r\n                    console.log(book.search(\"HK\"))\r\n                    if (book.search(\"HK\") === 0) {\r\n                        console.log(barcode + \" -> \" + book)\r\n                        setBarcode(book)\r\n                    }\r\n                }\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n*/\r\n\r\n    useEffect(() => {\r\n        async function setBookId() {\r\n            if (bookText.length > 0)\r\n            {\r\n                var bookId;\r\n                if (props.doc.admin)\r\n                    bookId = bookText;\r\n                else\r\n                    bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const param = {\"book\": bookId, \"match\": true};\r\n                const response = await props.doc.requestGet(url, param);\r\n                const book = response.data.return;\r\n                if ('books' in book && 'BOOKNAME' in book.books)\r\n                {\r\n                    setScannedBook(book.books)\r\n                }\r\n            }\r\n        }\r\n        setBookId();\r\n    }, [searchQuery, props.doc, bookText]);\r\n\r\n    useEffect(() => {\r\n        async function setBarcode()  {\r\n            console.log(\"B\" + barcode);\r\n            if (barcode.length > 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n                const param = {\"book\": bookId, \"match\": true};\r\n                const response = await props.doc.requestGet(url, param);\r\n                const book = response.data.return;\r\n                console.log(book)\r\n                if ('books' in book && 'BOOKNAME' in book.books)\r\n                {\r\n                    setScannedBook(book.books)\r\n                }\r\n            }\r\n        }\r\n        setBarcode();\r\n    }, [barcode, props.doc]);\r\n\r\n/*\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n*/\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 1 || scannedBook._STATE === 3)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    console.log(\"Not rented\")\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.NOT_RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                    setBarcode(\"\")\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//           if (\"id\" in notifyRequest)\r\n//               id = notifyRequest.id\r\n\r\n//           prop.toastId = id\r\n //          if (toast.isActive(id))\r\n//               toast.update(id, notifyRequest.text, prop);\r\n//           else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Returned updated\");\r\n            console.log(returned);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            console.log(\"Update return list\");\r\n            const bookId = \"HK\" + bookText;\r\n            console.log(\"Search book1 \" + bookId);\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n            const param = {\"books\": returned};\r\n            props.doc.requestGet(url, param);\r\n        },\r\n        [returned, bookText, props.doc]\r\n    );\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/return\"\r\n        const param = {\r\n            book: scannedBook.BARCODE\r\n        }\r\n        const response = await props.doc.requestPost(url, param)\r\n        const ret = response.data.return;\r\n        console.log(ret);\r\n        if (ret === \"SUCCESS\")\r\n        {\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.returnSucceed,\r\n                              \"type\": toast.TYPE.SUCCESS})\r\n            returned.push({\"id\": scannedBook.BARCODE, \"name\": scannedBook.BOOKNAME})\r\n            console.log(returned)\r\n            setReturned(returned)\r\n        }\r\n        else\r\n        {\r\n            let text\r\n            if (ret in props.text)\r\n                text = props.text[ret];\r\n            else\r\n                text = props.text.NOT_AVAILABLE;\r\n            console.log(text)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": text,\r\n                              \"type\": toast.TYPE.ERROR})\r\n        }\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    function showEntry(index, rent)\r\n    {\r\n        return (<div id=\"bookEntry\" key={rent.id}>\r\n                    <div id=\"bookItem\"> {rent.id} </div>\r\n                    <div id=\"bookItem\"> {rent.name} </div>\r\n                </div>);\r\n    }\r\n\r\n    function showBook(books)\r\n    {\r\n        return (<div id=\"bookList\">\r\n                    {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                </div>);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Finish\")\r\n        navigate(\"/\")\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.return}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                <label id=\"barcodeScan\" hidden>\r\n                    <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                    <span>\r\n                    </span>\r\n                </label>\r\n                <label id=\"manualInput\">\r\n                    <div id=\"hkPrefix\">\r\n                        {props.text.numberOnly}\r\n                    </div>\r\n                    <input inputMode=\"numeric\" pattern=\"\\d*\" type=\"text\" id=\"searchInput\"\r\n                        placeholder={props.text.bookHolder}\r\n                        onInput={(event) => {\r\n                            setBookText(event.target.value);\r\n                        }} />\r\n                </label>\r\n                </div>\r\n                <div id=\"checkReturn\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmReturn} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\"} </div>\r\n                    <div id=\"bookName\"> {scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                {returned.length > 0 &&\r\n                    <ListView list={returned} showCallback={(entry) => {return showBook(entry)}}/>\r\n                }\r\n            </div>\r\n            <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.finish} </button>\r\n        </div>\r\n    );\r\n}\r\n//                    <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n\r\nexport default Return;\r\n","import { useEffect, useState } from \"react\";\nimport { toUtf8 } from \"./Util\";\nimport \"./UserInfo.css\";\n\nfunction UserInfo(props) {\n    const [needConfirm, setNeedConfirm] = useState(false);\n    const [disabled, setDisabled] = useState(true);\n    const [userInfo, setUserInfo] = useState({});\n\n    useEffect(function() {\n        console.log(\"User Info\");\n        console.log(props.info);\n        document.getElementById('userName').value = props.info.USER_NAME ? props.info.USER_NAME : \"\";\n        document.getElementById('phone').value = props.info.PHONE_NUMBER ? props.info.PHONE_NUMBER : \"\";\n        document.getElementById('email').value = props.info.EMAIL ? props.info.EMAIL : \"\";\n        document.getElementById('address').value = props.info.ADDRESS ? props.info.ADDRESS : \"\";\n        document.getElementById('notice_').value = props.info.NOTICE ? props.info.NOTICE : \"\";\n        document.getElementById('user_level').value = props.info.USER_LEVEL;\n        setUserInfo({\"USER_CODE\": props.info.USER_CODE});\n        setDisabled(true);\n\n    }, [props.info]);\n\n    function setProperty(index, value)\n    {\n        console.log(index);\n        console.log(value);\n        var info = userInfo;\n        switch (index)\n        {\n        case 0:\n            info.USER_NAME = value;\n            break;\n        case 1:\n            info.PHONE_NUMBER = value;\n            break;\n        case 2:\n            info.EMAIL = value;\n            break;\n        case 3:\n            info.ADDRESS = value;\n            break;\n        case 4:\n            info.USER_LEVEL = value;\n            break;\n        case 5:\n            info.NOTICE = value;\n            break;\n        default:\n            break;\n        }\n        const length = Object.keys(info).length;\n        console.log(length);\n//        if (length >= 1 && \"USER_LEVEL\" in info && info.USER_LEVEL >= 0 && info.USER_LEVEL <= 2)\n        if (length > 1)\n            setDisabled(false);\n        setUserInfo(info);\n    }\n\n    async function confirmAction()\n    {\n        console.log(\"Save modification\");\n        console.log(userInfo);\n        const ipAddr = props.doc.serverInfo.localIp;\n        const portNum = props.doc.serverInfo.port;\n        if (ipAddr.length === 0 || portNum <= 0)\n            return;\n\n        const url = \"https://\" + ipAddr + \":\" +\n            portNum + \"/user\";\n\n        var obj = {};\n        console.log(userInfo)\n        for (const key in userInfo)\n        {\n            obj[key] = btoa(toUtf8(userInfo[key]));\n        }\n        const response = await props.doc.requestPost(url, obj);\n        console.log(response);\n        props.refresh(response);\n        setNeedConfirm(false);\n    }\n\n    function cancelAction()\n    {\n        setNeedConfirm(false);\n    }\n\n    return (\n        <div>\n            <table><tbody>\n                <tr key=\"Name\">\n                    <td> {props.text.name} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"userName\" onChange={(event) => {setProperty(0, event.target.value);}} />\n                    </td>\n                </tr>\n                {\"REG_DATE\" in props.info &&\n                    <tr key=\"Register\">\n                        <td> {props.text.registeredDate} </td>\n                        <td colSpan=\"3\" className=\"data\">\n                            {props.info.REG_DATE}\n                        </td>\n                    </tr>\n                }\n                <tr key=\"Phone\">\n                    <td> {props.text.phone} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"phone\" onChange={(event) => {setProperty(1, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Email\">\n                    <td> {props.text.email} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"email\" onChange={(event) => {setProperty(2, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Address\">\n                    <td> {props.text.address} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"address\" onChange={(event) => {setProperty(3, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Notice\">\n                    <td> {props.text.notice_} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"notice_\" onChange={(event) => {setProperty(5, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Level\">\n                    <td> {props.text.level} </td>\n                    <td colSpan=\"3\" className=\"cell\">\n                        <select name=\"User Level\" id=\"user_level\" className=\"dropdown\" onChange={(event) => {setProperty(4, event.target.value);}}>\n                            <option value=\"0\"> {props.text.kid} </option>\n                            <option value=\"1\"> {props.text.adult} </option>\n                            <option value=\"2\"> {props.text.admin} </option>\n                        </select>\n                    </td>\n                </tr>\n            </tbody></table>\n           <button id=\"modify\" hidden={needConfirm} onClick={async () => setNeedConfirm(true)} disabled={disabled}> {props.text.save} </button>\n            <div id=\"checkModify\" hidden={!needConfirm}>\n                <div id=\"noticeMsg\"> {props.text.confirmSave} </div>\n                <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\n                <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\n            </div>\n        </div>\n    );\n}\nexport default UserInfo;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp, MAX_SEARCH_ENTRY, getUserState, toUtf8, compareUser } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { useNavigate, Link, Navigate, useParams } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport UserInfo from \"../UserInfo\";\r\n\r\n//var rentList = [];\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(userText, 300);\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n//    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n    const { id } = useParams();\r\n    const [rentList, setRentList] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n            {\r\n                return;\r\n            }\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"UserSearch initialize\");\r\n            console.log(\"User ID: \" + id);\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc(false);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.user;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n\r\n        if (notify)\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Set title \" + props.logged)\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    async function extend(key)\r\n    {\r\n        console.log(\"Extend \" + key);\r\n        const ipAddr = props.doc.serverInfo.localIp;\r\n        const portNum = props.doc.serverInfo.port;\r\n        if (ipAddr.length === 0 || portNum <= 0)\r\n            return;\r\n\r\n        const url = \"https://\" + ipAddr + \":\" +\r\n            portNum + \"/extend\";\r\n        var obj = {};\r\n        obj[\"book\"] = key\r\n\r\n        const ret = await props.doc.requestPost(url, obj);\r\n        console.log(\"Extended\")\r\n        console.log(ret)\r\n        selectId(selectedRef.current, true);\r\n        if (ret.data.return === \"SUCCESS\")\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.extend, prop);\r\n        }\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const extendCount = rent.extendCount;\r\n        const key = index.toString();\r\n//                        <td colSpan={props.doc.serverAvailable?\"3\":\"2\"} className=\"bookName\">{bookName}</td>\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan={props.doc.serverAvailable?\"2\":\"3\"} className=\"bookName\">{bookName}</td>\r\n                        {props.doc.serverAvailable &&\r\n                            <td className=\"bookName\"><button className=\"extend\" onClick={() => extend(id)}>{props.text.extend + \" (\" + extendCount.toString() + \")\"}</button></td>\r\n                        }\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const selectId = async (id, forceSelect = false) => {\r\n        const rent = await props.doc.getRent(id);\r\n        console.log(rent);\r\n        if (selectedRef.current === -1 || selectedRef.current !== id || forceSelect )\r\n        {\r\n            console.log(\"Select \" + id);\r\n//            setSelectedId(id);\r\n            selectedRef.current = id;\r\n            console.log(\"Set Rent List\");\r\n            console.log(rent)\r\n            setRentList(rent);\r\n//            rentList = rent;\r\n        }\r\n        else if (searchResults.length > 1)\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n//            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n            setRentList([]);\r\n//            rentList = [];\r\n        }\r\n    }\r\n\r\n    const showUser = (user, detail, index) => {\r\n        const key = index.toString();\r\n        return (\r\n                <div key={key}>\r\n                    <table><tbody>\r\n                        <tr key={user.id} className=\"searchTr\" onClick={async ()=> await selectId(user.id)}>\r\n                            <td className=\"bookData\">{user.id}</td>\r\n                            <td className=\"bookData\">{user.name}</td>\r\n                            <td className=\"bookData\">{user.state}</td>\r\n                            <td className=\"bookData\">{user.rent}</td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                        {user.id === selectedRef.current && showEntries(user, detail) }\r\n                </div>\r\n                );\r\n    }\r\n\r\n    const showUsers = (result, detail) => {\r\n        return (<div>\r\n                    {\r\n                        result.map((user, index) => {\r\n                            return showUser(user, detail, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 &&\r\n                        <table><tbody>\r\n                            <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                        </tbody></table>\r\n                    }\r\n                </div>);\r\n    }\r\n\r\n    const showEntries = (user, detail) => {\r\n        console.log(\"Detail\");\r\n        console.log(user);\r\n        return (<>\r\n                    {props.doc.serverAvailable &&\r\n                        <div>\r\n                        <UserInfo text={props.text} doc={props.doc} info={user} refresh={refresh}/>\r\n                        <button id=\"modify\" onClick={() => navigate(\"/checkOut/\" + user.USER_CODE)}> {props.text.checkOut} </button>\r\n                        </div>\r\n                    }\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        detail.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        detail.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </>);\r\n    }\r\n    useEffect(\r\n        () => {\r\n            async function findUsers(text) {\r\n                let results = [];\r\n\r\n//                for (let i = 0 ; i < userList.length ; i++) {\r\n                  for (const key in userList) {\r\n                    const row = userList[key];\r\n                    if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                    if ((row.name && row.name.toString().includes(text)) ||\r\n                        (row.id.toLowerCase() === text.toLowerCase()))\r\n                    {\r\n                        results.push(row);\r\n                    }\r\n                }\r\n                results.sort(compareUser);\r\n                console.log(results);\r\n                return results;\r\n            }\r\n            async function query() {\r\n                const input = userText.trim()\r\n                console.log(\"Query \" + input + \" \" + searchQuery)\r\n                if (input.length > 0 && searchQuery) {\r\n\r\n                    let sr;\r\n                    if (props.doc.serverAvailable)\r\n                    {\r\n                        console.log(\"from CLIB\")\r\n                        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/users\";\r\n                        const param = {\"user\": btoa(toUtf8(input))};\r\n                        const response = await props.doc.requestGet(url, param);\r\n                        const users = response.data.return.data;\r\n                        console.log(response.data.return);\r\n                        sr = [];\r\n                        if (users) {\r\n                            for (const entry of response.data.return.data)\r\n                            {\r\n                                console.log(entry);\r\n                                let user = entry;\r\n                                user.id = entry.USER_CODE;\r\n                                user.name = entry.USER_NAME;\r\n                                user.state = getUserState(props.text, entry.USER_STATE);\r\n                                user.rent = entry._RENT.length;\r\n                                sr.push(user);\r\n                            }\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log(\"from DB\")\r\n                        sr = await findUsers(searchQuery);\r\n                    }\r\n\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                       selectId(sr[0].id);\r\n                   else\r\n                       selectId(0);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n       [searchQuery, props, userList, queryRequest, userText]\r\n    );\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.userSearch}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onChange={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <div>\r\n                    <ListView keyValue={searchQuery} list={searchResults} detail={rentList} showCallback={(entries, detail) => { return showUsers(entries, detail); }}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getBookState, compareRent } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.user;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userList]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.serverAvailable)\r\n        {\r\n            let results = [];\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n            const param = {\"user\": \"*\", \"match\":false};\r\n//            console.log(obj);\r\n            const response = await props.doc.requestGet(url, param);\r\n//           console.log(response)\r\n//            if (!(\"books\" in response.data.return))\r\n//                return results;\r\n            const books = response.data.return.books;\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                const state = book._STATE;\r\n                let retDate = \"\";\r\n                if (state === 1 || state === 3 || state === \"1\" || state === \"3\")\r\n                {\r\n                    retDate = book.RETURN_DATE;\r\n                }\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: book.BOOKNAME,\r\n                    id: book.BARCODE,\r\n                    rent: getBookState(props.text, book.STATS.toString()),\r\n                    rentDate: book.LENT_DATE,\r\n                    retDate: retDate,\r\n                    author: book.AUTHOR,\r\n                    totalName: book.TOTAL_NAME,\r\n                    claim_num: book.CLAMENUM,\r\n                    publish: book.PUBLISH,\r\n                    claim: book.CLAIM,\r\n                    user: book.USER,\r\n                    userName: book.USER_NAME\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compareRent);\r\n            setRentList(results);\r\n        }\r\n        else\r\n        {\r\n\r\n            const rent = await props.doc.getRent();\r\n            console.log(\"Rent\");\r\n            console.log(rent);\r\n            rent.sort(compareRent);\r\n            for (const index in rent)\r\n            {\r\n                const userId = rent[index][\"user\"];\r\n                let userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                rent[index][\"userName\"] = userName;\r\n//                console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n            }\r\n            setRentList(rent);\r\n        }\r\n\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n//        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        const claim = rent[\"claim\"];\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookName\">\r\n                        {rent.totalName + \" \"}<b>{rent.title}</b>{\" \" + rent.claim_num}\r\n                        </td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"situation\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.situation}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue=\"\" list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { compareRent } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n//    const [initialized, setInitialized] = useState(false);\r\n    const [fromTime, setFromTime] = useState(\"\");\r\n    const [toTime, setToTime] = useState(\"\");\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [loadHistory, {loading: historyLoading, data: historyData, error: historyError }] = useLazyQuery(HISTORY_PERIOD_QUERY,\r\n            {\"variables\": { \"fromTime\" : fromTime, \"toTime\": toTime}});\r\n    const [userList, setUserList] = useState({});\r\n    const [yearValue, setYear] = useState(0);\r\n    const [monthValue, setMonth] = useState(0);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [searchQuery] = useDebounce(query, 300);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            var i;\r\n            var option;\r\n            var year = document.getElementById('year')\r\n            var month = document.getElementById('month')\r\n            for (i = 1; i <= 12 ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                month.add(option, i);\r\n            }\r\n            const thisYear = new Date().getFullYear();\r\n            const thisMonth = new Date().getMonth() + 1;\r\n            const fromYear = 2017;\r\n\r\n            for (i = fromYear ; i <= thisYear ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                year.add(option, i);\r\n            }\r\n\r\n            console.log(thisYear);\r\n            console.log(thisMonth);\r\n            setYear(thisYear);\r\n            setMonth(thisMonth);\r\n            document.getElementById('year').value = thisYear;\r\n            document.getElementById('month').value = thisMonth;\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n//                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.user;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"History update\")\r\n\r\n            if (!historyData)\r\n                return\r\n\r\n//            console.log(historyData.rentLog_tests)\r\n\r\n            const books = historyData.rentLog;\r\n//            const books = historyData.rentLog_tests;\r\n            let results = [];\r\n            let retDate = \"\";\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const state = book.book_state;\r\n                if (state !== \"1\" && state !== 1)\r\n                    continue\r\n                if (!book.return_date || book.return_date.length === 0)\r\n                    continue\r\n//                console.log(book)\r\n                const bookId = book.book_id;\r\n                const userId = book.user_id;\r\n                var userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                var bookInfo;\r\n                if (bookId in props.doc.book)\r\n                {\r\n                    bookInfo = props.doc.book[bookId];\r\n                }\r\n                else\r\n                {\r\n                    bookInfo = {}\r\n                    bookInfo.author = \"\"\r\n                    bookInfo.totalName = \"\"\r\n                    bookInfo.claim_num = \"\"\r\n                    bookInfo.publish = \"\"\r\n                    bookInfo.title = \"\"\r\n                }\r\n//                console.log(bookInfo)\r\n                const resultString = `${bookInfo.title} ${bookInfo.claim_num}`;\r\n                retDate = book.return_date;\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: bookInfo.title,\r\n                    id: bookId,\r\n                    rentDate: book.timestamp,\r\n                    retDate: retDate,\r\n                    author: bookInfo.author,\r\n                    totalName: bookInfo.series,\r\n                    claim_num: bookInfo.claim_num,\r\n                    publish: bookInfo.publisher,\r\n                    claim: bookInfo.claim,\r\n                    user: userId,\r\n                    userName: userName\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compareRent);\r\n            console.log(results);\r\n            setRentList(results);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, historyLoading, historyError]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        }, [userList]\r\n    );\r\n*/\r\n\r\n/*\r\n    async function updateDoc()\r\n    {\r\n        setInitialized(true);\r\n    }\r\n*/\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n//        const bookName = rent.totalName + \" \" + rent.title + \" \" + rent.claim_num\r\n        const claim = rent.claim;\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookCell\">\r\n                        {rent.totalName + \" \"}<b>{rent.title}</b>{\" \" + rent.claim_num}\r\n                        </td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n    function setProperty(index, value)\r\n    {\r\n        console.log(index);\r\n        console.log(value);\r\n        switch (index)\r\n        {\r\n            case 0:\r\n                setYear(value);\r\n                break;\r\n            case 1:\r\n                setMonth(parseInt(value));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(function () {\r\n        setQuery(yearValue.toString() + \"-\" + monthValue.toString().padStart(2, \"0\"))\r\n\r\n    }, [yearValue, monthValue]\r\n    );\r\n\r\n    useEffect(function () {\r\n        async function search()\r\n        {\r\n            console.log(\"Search\")\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/history\";\r\n                const param = {\"period\": query};\r\n                const response = await props.doc.requestGet(url, param);\r\n                console.log(response);\r\n\r\n                const books = response.data.return.books;\r\n                let results = [];\r\n                let retDate = \"\";\r\n                for (let i = 0 ; i < books.length ; i++)\r\n                {\r\n                    const book = books[i];\r\n                    const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                    if (\"_RETURN_DATE\" in book)\r\n                    {\r\n                        retDate = book._RETURN_DATE;\r\n                    }\r\n                    let resultObject = {\r\n                        index: i,\r\n                        text: resultString,\r\n                        title: book.BOOKNAME,\r\n                        id: book.BARCODE,\r\n        //                rent: getBookState(props.text, book..toString()),\r\n                        rentDate: book.RENT_DATE,\r\n                        retDate: retDate,\r\n                        author: book.AUTHOR,\r\n                        totalName: book.TOTAL_NAME,\r\n                        claim_num: book.CLAMENUM,\r\n                        publish: book.PUBLISH,\r\n                        claim: book.CLAIM,\r\n                        user: book.USER,\r\n                        userName: book.USER_NAME\r\n                    };\r\n                    results.push(resultObject);\r\n                }\r\n                results.sort(compareRent);\r\n                setRentList(results);\r\n            }\r\n            else\r\n            {\r\n                var queryTo;\r\n                const nextMonth = monthValue + 1\r\n                queryTo = yearValue.toString() + \"-\" + nextMonth.toString().padStart(2, \"0\")\r\n                setFromTime(query)\r\n                setToTime(queryTo)\r\n                console.log(query)\r\n                console.log(queryTo)\r\n\r\n                try {\r\n                    await loadHistory();\r\n                }\r\n                catch (e)\r\n                {\r\n                    console.warn(e.name);\r\n                }\r\n\r\n    /*\r\n                for (const index in rent)\r\n                {\r\n                    const userId = rent[index][\"user\"];\r\n                    let userName;\r\n                    if (userList && userId in userList)\r\n                        userName = userList[userId].name;\r\n                    else\r\n                        userName = \"\"\r\n                    rent[index][\"userName\"] = userName;\r\n                    console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n                }\r\n                setRentList(rent);\r\n    */\r\n            }\r\n        }\r\n        search();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [searchQuery]\r\n    );\r\n\r\n    function movePrev()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month > 1)\r\n        {\r\n            month -= 1\r\n        }\r\n        else\r\n        {\r\n            year -= 1;\r\n            month = 12;\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    function moveNext()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month < 12)\r\n        {\r\n            month += 1\r\n        }\r\n        else\r\n        {\r\n            year += 1\r\n            month = 1\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.history}\r\n                </h2>\r\n            </div>\r\n            <div id=\"searchRange\">\r\n                <div className=\"page\" id = \"page\">\r\n                    <NavigateBeforeIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {movePrev();} }/>\r\n                </div>\r\n                <select name=\"year\" id=\"year\" className=\"dropdown\" onChange={(event) => {setProperty(0, event.target.value);}}/>\r\n                <select name=\"month\" id=\"month\" className=\"dropdown\" onChange={(event) => {setProperty(1, event.target.value);}}/>\r\n                    <div className=\"page\" id = \"page\">\r\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {moveNext();} }/>\r\n                    </div>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue={searchQuery} list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp } from \"../Util\";\r\nimport { Navigate } from 'react-router-dom'\r\nimport UserInfo from \"../UserInfo\";\r\n\r\nfunction NewMember(props) {\r\n//    const [userText, setUserText] = useState(\"\");\r\n    const [userInfo, setUserInfo] = useState({});\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n//    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n//    const [userList, setUserList] = useState({});\r\n//    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized || !props.doc.serverAvailable)\r\n            {\r\n                return;\r\n            }\r\n            import(\"./PageServer.css\");\r\n            console.log(\"=======================================\");\r\n            console.log(\"NewMember initialize\");\r\n            prepareNewMember();\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n*/\r\n\r\n    function prepareNewMember()\r\n    {\r\n        var info = {};\r\n        info.USER_CODE = \"\";\r\n        info.USER_NAME = \"\";\r\n        info.PHONE_NUMBER = \"\";\r\n        info.EMAIL = \"\";\r\n        info.ADDRESS = \"\";\r\n        info.NOTICE = \"\";\r\n        info.USER_LEVEL = -1;\r\n        setUserInfo(info);\r\n    }\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n*/\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n\r\n        const prop = toastProp;\r\n        var text\r\n        if (response.data.return === \"OK\")\r\n        {\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.regSuccess;\r\n            prepareNewMember()\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.regFail;\r\n        }\r\n        prop.autoClose = 3000;\r\n        toast.info(text, prop);\r\n    }\r\n    if (!props.doc.initialized || !props.doc.serverAvailable)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.newMember}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                {props.doc.serverAvailable &&\r\n                    <UserInfo text={props.text} doc={props.doc} info={userInfo} refresh={refresh}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewMember;\r\n","import { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        this.initialized = false;\r\n        this.bookReady = false;\r\n        this.rentReady = false;\r\n        this.userReady = false;\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        this.book = {};\r\n        this.rent = {};\r\n        this.request = new Set();\r\n        this.logCallback = undefined;\r\n        this.admin = false;\r\n        this.dueDate = \"\";\r\n        this.serverInfo = {};\r\n        this.serverAvailable = false;\r\n        this.ipAddr = \"\"\r\n    }\r\n\r\n    async requestGet(url, param)\r\n    {\r\n        param.os = navigator.platform;\r\n        const obj = {\"params\": param};\r\n        console.log(\"Request GET : \" + url);\r\n//        console.log(obj);\r\n        const response = await axios.get(url, obj);\r\n        return response;\r\n    }\r\n\r\n    async requestPost(url, param)\r\n    {\r\n        console.log(\"Request POST: \" + url);\r\n        param.os = navigator.platform;\r\n//        console.log(param);\r\n        const response = await axios.post(url, param);\r\n\r\n        return response;\r\n    }\r\n\r\n    async updateIpAddr()\r\n    {\r\n        return;\r\n//        const response = await axios.get(\"https://ipv4.seeip.org/jsonip\");\r\n/*\r\n        const response = await axios.get(\"https://api.ipify.org/?format=json\")\r\n        console.log(\"Get IP Address\");\r\n        console.log(response.data);\r\n        const ipAddr = response.data.ip;\r\n        console.log(\"IP addr updated \" + ipAddr)\r\n        this.ipAddr = ipAddr;\r\n        this.checkServerIp()\r\n*/\r\n    }\r\n\r\n    checkServerIp()\r\n    {\r\n        return;\r\n/*\r\n        if (this.ipAddr.length === 0 || !this.serverInfo.globalIp)\r\n            return;\r\n        if (this.serverInfo.globalIp === this.ipAddr)\r\n        {\r\n            console.log(\"Server is accessible \" + this.serverInfo.localIp);\r\n            const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n            this.serverAvailable = true;\r\n            axios.get(query, {\"params\": {\"os\": navigator.platform, }})\r\n                .then( (response) => {\r\n                    console.log(\"Server connected\");\r\n                    console.log(response.data);\r\n                    this.admin = response.data.admin;\r\n                    this.dueDate = response.data.dueDate;\r\n                    this.initialized = true;\r\n                })\r\n                .catch(error => {\r\n                  const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n                  window.open(query);\r\n                });\r\n        }\r\n*/\r\n    }\r\n\r\n\r\n    checkState() {\r\n        if (this.bookReady && this.rentReady) {\r\n            this.initialized = true;\r\n            toast.dismiss();\r\n            if (this.callback) {\r\n                this.callback();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setLogCallback(callback) {\r\n        this.logCallback = callback;\r\n    }\r\n\r\n    setRent(rent) {\r\n        this.rent = rent\r\n        this.rentReady = true;\r\n        this.checkState();\r\n        this.checkRent();\r\n    }\r\n\r\n    setRequest(request) {\r\n//        console.log(request);\r\n        for (const entry of request)\r\n        {\r\n            this.request.add(entry.book_id);\r\n        }\r\n    }\r\n\r\n    hasRequest(entry)\r\n    {\r\n//        console.log(this.request);\r\n        return this.request.has(entry);\r\n    }\r\n\r\n    addRequest(entry)\r\n    {\r\n        this.request.add(entry)\r\n    }\r\n\r\n    setServerInfo(serverInfo)\r\n    {\r\n        console.log(serverInfo)\r\n        this.serverInfo = serverInfo;\r\n        this.serverInfo = {}\r\n        this.serverInfo.globalIp = serverInfo.globalIp;\r\n\r\n        if (serverInfo.proxy)\r\n        {\r\n            this.serverInfo.localIp = \"libserver.hkmcclibrary.duckdns.org\";\r\n            this.serverInfo.port = 443;\r\n        }\r\n        else\r\n        {\r\n            this.serverInfo.localIp = serverInfo.localIp;\r\n            this.serverInfo.port = serverInfo.port;\r\n        }\r\n\r\n\r\n        console.log(this.serverInfo);\r\n        this.checkServerIp()\r\n    }\r\n\r\n    setBook(books) {\r\n        this.book = {};\r\n        console.log(\"Register \" + books.length + \" books\");\r\n        for (let i = 0 ; i < books.length ; i++)\r\n        {\r\n            const book = books[i];\r\n            const id = book['_id'];\r\n            this.book[id] = {...book};\r\n            this.book[id].claim = book.claim.replace(/_/g, \" \");\r\n        }\r\n        this.bookReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setUser(users) {\r\n        this.user = {};\r\n        for (let i = 0 ; i < users.length ; i++)\r\n        {\r\n            const user = users[i];\r\n            const id = user.id;\r\n            this.user[id] = user;\r\n            this.user[id][\"rent\"] = 0;\r\n        }\r\n        this.userReady = true;\r\n        this.checkRent();\r\n    }\r\n\r\n    checkRent() {\r\n        if (!this.userReady || !this.rentReady)\r\n        {\r\n            console.log(\"Cannot check rent\");\r\n            return;\r\n        }\r\n//        console.log(this.rent);\r\n        for (let i = 0 ; i < this.rent.length ; i++)\r\n        {\r\n            const state = this.rent[i].state;\r\n\r\n//            console.log(state);\r\n            if (state !== \"1\" && state !== \"3\" && state !== 1 && state !== 3)\r\n                continue;\r\n\r\n            const userId = this.rent[i].user_id;\r\n//            console.log(this.rent[i]);\r\n//           console.log(userId);\r\n//           console.log(userId.length);\r\n            if (userId && userId.length > 0 && userId in this.user)\r\n            {\r\n                if (\"rent\" in this.user[userId])\r\n                    this.user[userId][\"rent\"] += 1;\r\n                else\r\n                    this.user[userId][\"rent\"] = 1;\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Invalid user\")\r\n                console.log(this.rent[i])\r\n            }\r\n        }\r\n//        console.log(this.user);\r\n    }\r\n\r\n    logIn(userInfo) {\r\n        console.log(\"Logged in: \" + userInfo['_id']);\r\n        this.logged = true;\r\n        this.userInfo = userInfo;\r\n        if (userInfo['level'] === \"2\" ||\r\n            userInfo['level'] === 2)\r\n            this.admin = true;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n        const userId = userInfo['_id'];\r\n        console.log(userId);\r\n        /*\r\n        for (const entry of this.request)\r\n        {\r\n            console.log(entry);\r\n        }\r\n        */\r\n    }\r\n\r\n    logOut() {\r\n        console.log(\"Logged out\");\r\n        this.logged = false;\r\n        this.admin = false;\r\n        this.userInfo = {};\r\n        this.request.clear();\r\n        if (this.logCallback)\r\n            this.logCallback(false);\r\n    }\r\n\r\n    async getRent(userId = undefined) {\r\n        let ret = [];\r\n        if (this.serverAvailable) {\r\n            const url = \"https://\" + this.serverInfo.localIp + \":\" +\r\n                this.serverInfo.port + \"/book\";\r\n            const param = {\"user\": userId};\r\n            const result = await this.requestGet(url, param);\r\n            console.log(result);\r\n            if (\"books\" in result.data.return)\r\n            {\r\n                // BARCODE, BOOKNAME, LENT_DATE, RETURN_DATE, STATS\r\n                // id, title, rentDate, retData,  stat\r\n                for (const entry of result.data.return.books)\r\n                {\r\n                    console.log(entry);\r\n                    const book = {\r\n                        'id': entry.BARCODE,\r\n                        'title': entry.BOOKNAME,\r\n                        'claim': entry.CLAIM,\r\n                        'claim_num': entry.CLAMENUM,\r\n                        'totalName': entry.TOTAL_NAME,\r\n                        'rentDate': entry.LENT_DATE,\r\n                        'retDate': entry.RETURN_DATE,\r\n                        'stat': entry.STATS,\r\n                        'extendCount': entry._EXTEND_COUNT\r\n                    };\r\n                    ret.push(book);\r\n                }\r\n//                ret = result.data.return.books;\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"Check \" + userId);\r\n            console.log(this.bookReady);\r\n            if (!this.bookReady)\r\n                return ret;\r\n    //        console.log(this.rent.length);\r\n            for (let i = 0 ; i < this.rent.length ; i++) {\r\n                const entry = this.rent[i];\r\n                if (userId !== undefined && entry.user_id !== userId)\r\n                    continue;\r\n    //            console.log(entry)\r\n                if (entry.state !== \"1\" && entry.state !== \"3\" && entry.state !== 1 && entry.state !== 3)\r\n                    continue;\r\n    //            console.log(entry);\r\n                const id = entry[\"book_id\"];\r\n                const book = this.book[id];\r\n//                console.log(book)\r\n                let retEntry = {};\r\n                retEntry[\"id\"] = book._id;\r\n                retEntry[\"title\"] = book.title;\r\n                retEntry['claim_num'] = book.claim_num;\r\n                retEntry['totalName'] = book.series;\r\n                retEntry[\"rentDate\"] = entry.rent_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\");\r\n                retEntry[\"retDate\"] = entry.return_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\");\r\n                retEntry[\"claim\"] = book.claim;\r\n                retEntry[\"user\"] = entry.user_id;\r\n                retEntry['extendCount'] = entry.extend_count;\r\n                ret.push(retEntry)\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n\r\n    async openDoc() {\r\n        try {\r\n            this.initialized = true;\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.initialized;\r\n    }\r\n\r\n    setCallback(updateFunc)\r\n    {\r\n        console.log(\"Update function registered\");\r\n        this.callback = updateFunc;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","import {SQSClient, SendMessageCommand, ReceiveMessageCommand} from '@aws-sdk/client-sqs'\nimport config from \"./api/key\";\n\nconst NodeRSA = require('node-rsa');\n\n\nconst prk = new NodeRSA(config[\"privateKey\"]);\n\nconst queueUri = config[\"queue_url\"];\n\nclass Context {\n    constructor(env) {\n        console.log(\"Create Context\");\n\n        console.log(\"Cookies\");\n        const rawCookie = document.cookie;\n        this.cookie = rawCookie\n            .split(\";\")\n            .map(v => v.split(\"=\"))\n            .reduce((acc, v) => {\n                const key = v.shift().trim();\n                const value = v.join(\"=\").trim();\n                acc[decodeURIComponent(key)] = decodeURIComponent(value);\n                return acc;\n            }, {});\n        const aws_key = env.REACT_APP_AWSS_KEY1 + env.REACT_APP_AWSS_KEY2;\n        const aws_sec = env.REACT_APP_AWSS_SECRET1 + env.REACT_APP_AWSS_SECRET2;\n        const configObject =\n        {\n            region: config[\"region\"],\n            credentials: {\n                accessKeyId: aws_key,\n                secretAccessKey: aws_sec\n            },\n        }\n        this.sqsClient = new SQSClient(configObject);\n    }\n\n    checkLogIn(user, passwordText) {\n        var matched = false;\n        var passwordTyped;\n        if (user && passwordText.length > 0) {\n            console.log(\"User data available\");\n            const emailDb = user[\"encrypted_email\"];\n            const phoneDb = user[\"encrypted_phone\"];\n\n            passwordTyped = prk.sign(passwordText, 'base64');\n            if (passwordText === emailDb ||\n                passwordText === phoneDb )\n            {\n                passwordTyped = passwordText;\n                matched = true;\n            }\n            else if (emailDb === passwordTyped)\n            {\n//                console.log(\"Email match\");\n                matched = true;\n            }\n            else\n            {\n                var numberString = \"\";\n                for (let i = 0 ; i < passwordText.length ; i++)\n                {\n                    if (!isNaN(passwordText[i]))\n                        numberString += passwordText[i];;\n                }\n                passwordTyped = prk.sign(numberString, 'base64');\n                if (passwordTyped === phoneDb)\n                {\n//                    console.log(\"Phone match\");\n                    matched = true;\n                }\n                else\n                {\n//                    console.log(\"Nothing matched\");\n                }\n            }\n\n//            console.log(\"toast available\");\n        }\n        if (matched)\n        {\n            const date = new Date();\n            const days=2;\n            date.setTime(date.getTime()+(days*24*60*60*1000));\n            const expireDate = date.toGMTString();\n            document.cookie = \"password=\" +  passwordTyped + \"; expires=\" + expireDate + \" ; SameSite=Lax ;\" ;\n        }\n        return matched\n    }\n\n    async sendRequest(body)\n    {\n        const deduplicationId = Math.floor(Math.random() * 100000000).toString();\n        try\n        {\n            const command = new SendMessageCommand({\n                MessageBody: body,\n                QueueUrl: queueUri,\n                MessageGroupId: \"1\",\n                MessageDeduplicationId: deduplicationId\n            });\n            await this.sqsClient.send(command);\n        }\n        catch (error)\n        {\n            console.log(error);\n        }\n    };\n\n    async receiveRequest()\n    {\n        console.log(\"Read request\")\n        var requests = [];\n        try\n        {\n            const command = new ReceiveMessageCommand({\n                QueueUrl: queueUri,\n                AttributeNames: [\"\"], // AttributeNameList\n                MessageAttributeNames: [ // MessageAttributeNameList\n                \"STRING_VALUE\",\n                ],\n                MaxNumberOfMessages: 100,\n                VisibilityTimeout: 5,\n                WaitTimeSeconds: 5\n            });\n            const results = await this.sqsClient.send(command);\n            console.log(results);\n            if (results.Messages !== undefined)\n            {\n                for (const result of results.Messages)\n                {\n                    const msg = JSON.parse(result.Body);\n                    requests.push(msg);\n                }\n            }\n        }\n        catch (error)\n        {\n            console.log(error);\n        }\n\n        return requests;\n    }\n}\n\nexport default Context;\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Dropdown.css'\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction DropDown(props) {\r\n\r\n    const [dropdown, setDropdown] = useState(false);\r\n\r\n    useEffect(\r\n        () => {\r\n            function registerClose() {\r\n                console.log(\"Register close\");\r\n                window.addEventListener(\"click\", close);\r\n            };\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./DropdownServer.css\");\r\n            }\r\n\r\n            if (dropdown)\r\n            {\r\n                setTimeout(registerClose, 100.);\r\n            }\r\n\r\n            const menu = document.getElementById(\"dropdown-menu\");\r\n            if (!dropdown)\r\n            {\r\n               menu.classList.remove('is-show');\r\n            }\r\n            else\r\n            {\r\n               menu.classList.add('is-show');\r\n            }\r\n\r\n            return () => {\r\n                window.removeEventListener(\"click\", close);\r\n            }\r\n\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [dropdown, props.doc.logged, props.doc.serverAvailable]\r\n    );\r\n\r\n    const close = () => {\r\n        console.log(\"Close\")\r\n        console.log(dropdown)\r\n        setDropdown(false);\r\n        window.removeEventListener(\"click\", close);\r\n    };\r\n\r\n\r\n    const toggleMenu = () => {\r\n        console.log(\"Click menu\")\r\n        setDropdown(!dropdown);\r\n        console.log(dropdown)\r\n        if (dropdown)\r\n            window.removeEventListener(\"click\", close);\r\n    }\r\n\r\n    const logOut = () =>\r\n    {\r\n        props.doc.logOut();\r\n        document.cookie = \"user_id=\";\r\n        document.cookie = \"password=\";\r\n        document.cookie = \"autoLogin=false\";\r\n    }\r\n\r\n    return (<div>\r\n            <div className='menu' onClick={toggleMenu} >\r\n                <MenuIcon className=\"img\" fontSize=\"large\" sx={{ color: \"#ffffff\"}}/>\r\n            </div>\r\n            <div id='dropdown-menu' onClick={() => { close() }} className='dropdown-menu'>\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                    <div className='menu-items'>\r\n                        {props.doc.userInfo[\"_id\"] + \" : \" + props.doc.userInfo[\"name\"] + props.text.nameSuffix}\r\n                    </div>\r\n                    <hr className=\"hline\"/>\r\n                    </>\r\n                }\r\n                <Link className='menu-items' to=\"/\">\r\n                    {props.text.home}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/notice\">\r\n                    {props.text.notice}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/search\">\r\n                    {props.text.bookSearch}\r\n                </Link>\r\n                {props.doc.serverAvailable &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOut\">\r\n                            {props.text.checkOut}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/return\">\r\n                            {props.text.return}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\">\r\n                            {props.text.checkOutStatus}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {props.doc.admin &&\r\n                    <>\r\n                    <hr className=\"hline\"/>\r\n                    <Link className='menu-items' to=\"/userSearch\">\r\n                        {props.text.userSearch}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentalSituation\">\r\n                        {props.text.situation}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentHistory\">\r\n                        {props.text.history}\r\n                    </Link>\r\n                    </>\r\n                }\r\n                {props.doc.serverAvailable && props.doc.admin &&\r\n                    <Link className='menu-items' to=\"/newMember\">\r\n                        {props.text.newMember}\r\n                    </Link>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <hr className=\"hline\"/>\r\n                        <div className='menu-items' onClick={logOut}>\r\n                            {props.text.logOut}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && !props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\">\r\n                            {props.text.logIn}\r\n                        </Link>\r\n                    </>\r\n                }\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DropDown;\r\n","import {isMobile} from \"react-device-detect\";\r\nimport \"./Navbar.css\";\r\nimport DropDown from \"./Dropdown\";\r\n\r\nfunction Navbar(props) {\r\n\r\nreturn (\r\n    <>\r\n        <div id=\"navbar\" className=\"navbar\">\r\n            <div className='title'>\r\n                {isMobile? (<h1>{props.text[\"titleShort\"]}</h1>) : (<h1>{props.text[\"titleLong\"]}</h1>)}\r\n            </div>\r\n            <DropDown text={props.text} doc={props.doc}/>\r\n        </div>\r\n    </>\r\n)\r\n}\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Notice from \"./pages/Notice\";\r\nimport Search from \"./pages/Search\";\r\nimport CheckOutStatus from \"./pages/CheckOutStatus\";\r\nimport CheckOut from \"./pages/CheckOut\";\r\nimport Return from \"./pages/Return\";\r\nimport UserSearch from \"./pages/UserSearch\";\r\nimport RentalSituation from \"./pages/RentalSituation\";\r\nimport RentHistory from \"./pages/RentHistory\";\r\nimport NewMember from \"./pages/NewMember\";\r\n//import Reader from \"./pages/Reader\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\nimport Context from \"./Context\";\r\nimport text from \"./api/text\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"./Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport Navbar from \"./Navbar\";\r\nimport {SERVER_QUERY} from \"./api/query.js\";\r\nimport {RENT_QUERY, USER_QUERY, REQUEST_QUERY} from \"./api/query.js\";\r\n//import {BOOK_QUERY, RENT_QUERY, USER_QUERY} from \"./api/query_test.js\";\r\n\r\nconst doc = new Doc();\r\nconst context = new Context(process.env);\r\n\r\nconst textString = {};\r\nlet logMsg = \"\"\r\nfunction App() {\r\n\r\n//    const [checkOutStr, setCheckOutStr] = useState(\"\");\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [logged, setLogged] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const { loading: rentLoading, error: rentError, data: rentData } = useQuery(RENT_QUERY);\r\n    const [loadRequest, { data: requestData }] = useLazyQuery(REQUEST_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const { loading: serverLoading, error: serverError, data: serverData } = useQuery(SERVER_QUERY);\r\n//    const [loadBook, { loading: bookLoading, error: bookError, data: bookData }] = useLazyQuery(BOOK_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY, { \"variables\": { \"_id\": userId } });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            console.log(\"Platform: \");\r\n            console.log(navigator.platform);\r\n            logMsg = logMsg + \"<p>Initialize app</p>\";\r\n            console.log(process.env.REACT_APP_NAME);\r\n            console.log(process.env.REACT_APP_VERSION);\r\n            console.log(process.env.REACT_APP_QUEUE_URL);\r\n            const lang = navigator.languages;\r\n            console.log(lang);\r\n            let ts = {}\r\n            if (lang.length> 0 && (lang[0].toLowerCase().includes(\"kr\") || lang[0].toLowerCase().includes(\"ko\")))\r\n            {\r\n                ts = text.kr;\r\n            }\r\n            else\r\n            {\r\n                ts = text.en;\r\n            }\r\n            for (let key in ts)\r\n            {\r\n                textString[key] = ts[key];\r\n            }\r\n\r\n            await doc.updateIpAddr();\r\n\r\n            if (\"autoLogin\" in context.cookie &&  context.cookie.autoLogin === \"true\")\r\n            {\r\n                console.log(\"Auto Login: \" + context.cookie.user_id);\r\n                setUserId(context.cookie.user_id);\r\n                console.log(context.cookie.nothing);\r\n                loadUser();\r\n            }\r\n            setInitialized(true);\r\n        }\r\n        initialize();\r\n    }, [loadUser]);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data loaded\");\r\n            if (!userData)\r\n            {\r\n                return;\r\n            }\r\n\r\n//            console.log(\"Login check \" + context.cookie.password);\r\n            const user = userData.user[0]\r\n//            const user = userData.user_test\r\n//            console.log(user);\r\n            if (context.cookie.password && context.checkLogIn(user, context.cookie.password))\r\n            {\r\n                console.log(\"Login suceeded\");\r\n                doc.logIn(user);\r\n                loadRequest();\r\n            }\r\n\r\n\r\n\r\n        }, [userData]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Rent Query Updated\");\r\n            logMsg = logMsg + \"<p>Rent Query Updated \" + rentLoading + \" \" + rentError + \"</p>\";\r\n            console.log(rentLoading);\r\n            console.log(\"Rent Error\");\r\n            console.log(rentError);\r\n            if (rentData)\r\n            {\r\n                console.log(\"Rent available\");\r\n                logMsg = logMsg + \"<p>Rent available</p>\"\r\n//                console.log(rentData.rent)\r\n                doc.setRent(rentData.rent)\r\n//                doc.setRent(rentData.rent_tests)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [rentLoading, rentError, rentData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Request Query Updated\");\r\n            if (requestData)\r\n            {\r\n                console.log(\"Request available\");\r\n                doc.setRequest(requestData.request)\r\n//                doc.setRent(rentData.rent_tests)\r\n            }\r\n        }, [requestData]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Book Query Updated\");\r\n            logMsg = logMsg + \"<p>Book Query Updated</p>\";\r\n            console.log(bookLoading)\r\n            console.log(bookError)\r\n            if (bookData)\r\n            {\r\n                console.log(\"Book available\")\r\n                logMsg = logMsg + \"<p>Book available</p>\";\r\n//                console.log(bookData.books)\r\n                doc.setBook(bookData.book)\r\n//                doc.setBook(bookData.book_tests)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [bookLoading, bookError, bookData]\r\n    );\r\n*/\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Server Query Updated\");\r\n            logMsg = logMsg + \"<p>Server Query Updated</p>\";\r\n\r\n            console.log(serverData);\r\n            console.log(initialized);\r\n            if (!serverData || !initialized)\r\n                return\r\n\r\n            console.log(\"Server info available\")\r\n            logMsg = logMsg + \"<p>Server info available</p>\";\r\n            console.log(serverData)\r\n            doc.setServerInfo(serverData.serverInfo)\r\n\r\n            if (!doc.serverAvailable)\r\n            {\r\n                console.log(\"Server is not available. Load books from cloud DB\");\r\n//                loadBook();\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.LOADING;\r\n                prop.autoClose = false;\r\n                prop.toastId = loadingId;\r\n                toast.loading(textString.loading, prop);\r\n                doc.setLogCallback(updateLog);\r\n\r\n                console.log(\"Get github file\");\r\n                const url = \"https://raw.githubusercontent.com/linupa/hkmccBook/main/book.json\";\r\n//                const url = \"https://raw.githubusercontent.com/linupa/hkmccBook/main/book.json.gz\";\r\n                doc.requestGet(url, {}).then(function (response) {\r\n/*\r\n                    const zipData = response.data;\r\n                    console.log(typeof(zipData));\r\n                    console.log(zipData.substring(0,50));\r\n                    console.log(zipData.length);\r\n                    zlib.gunzip(zipData, (err, buffer) => {\r\n                        console.log(\"Unzipped \");\r\n                        console.log(buffer)\r\n                    });\r\n*/\r\n                    const data = response.data;\r\n                    console.log(\"Downloaded books\");\r\n                    const bookList = []\r\n                    for (let key in data)\r\n                    {\r\n                        const entry = data[key];\r\n                        bookList.push(entry);\r\n                    }\r\n                    doc.setBook(bookList);\r\n                    if (doc.initialized)\r\n                        notifyInit()\r\n                });\r\n            }\r\n        }, [serverLoading, serverError, serverData, initialized]\r\n    );\r\n\r\n    function notifyInit()\r\n    {\r\n        const prop = toastProp;\r\n        prop.type = toast.TYPE.SUCCESS;\r\n        prop.render = textString.succeededToOpen;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = \"\";\r\n        toast.info(textString.succeededToOpen, prop);\r\n    }\r\n\r\n    function updateLog(logged) {\r\n        console.log(\"==== Update logging state \" + doc.logged);\r\n//        console.log(doc.userInfo);\r\n        setLogged(doc.logged);\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n        <div className=\"App\">\r\n            <div>\r\n                <ToastContainer\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    limit={10}\r\n                />\r\n            </div>\r\n            <Navbar doc={doc} text={textString}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home doc={doc} text={textString}/>} />\r\n                <Route path=\"/notice/:id?\" element={<Notice doc={doc} text={textString} />} />\r\n                <Route path=\"/search/:id?\" element={<Search doc={doc} text={textString}/>} />\r\n                <Route path=\"/checkOutStatus\" element={<CheckOutStatus context={context} doc={doc} text={textString} logged={logged}/>} />\r\n                <Route path=\"/userSearch/:id?\" element={<UserSearch context={context} doc={doc} text={textString} />} />\r\n                <Route path=\"/checkOut/:id?\" element={<CheckOut context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/return\" element={<Return context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentalSituation\" element={<RentalSituation context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentHistory\" element={<RentHistory context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/newMember\" element={<NewMember context={context} doc={doc} text={textString}/>} />\r\n            </Routes>\r\n\r\n            <h3>\r\n                v {process.env.REACT_APP_VERSION}\r\n            </h3>\r\n        </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport {createRoot} from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\n//import * as Realm from \"realm-web\";\r\nimport {\r\n    ApolloClient,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    InMemoryCache,\r\n} from \"@apollo/client\";\r\n\r\n\r\nconst graphqlUri = `https://hkmcc-library.hasura.app/v1/graphql`;\r\nconst authToken=\"bkkZk6R6B9zITCmVyVDCtjDLWURfW4lC0ye04GP4UWN77ASpl69W6bk4BvyjN9ZH\";\r\n\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        headers: {\r\n            'x-hasura-admin-secret': authToken\r\n        }\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\n\r\n/*\r\nconst APP_ID = 'data-xaque';\r\nconst graphqlUri = `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\r\nconst app = new Realm.App(APP_ID);\r\n\r\n// Gets a valid Realm user access token to authenticate requests\r\nasync function getValidAccessToken() {\r\n    // Guarantee that there's a logged in user with a valid access token\r\n    if (!app.currentUser) {\r\n        // If no user is logged in, log in an anonymous user. The logged in user will have a valid\r\n        // access token.\r\n        await app.logIn(Realm.Credentials.anonymous());\r\n//        await app.logIn(apiKey);\r\n    } else {\r\n        // An already logged in user's access token might be stale. Tokens must be refreshed after\r\n        // 30 minutes. To guarantee that the token is valid, we refresh the user's access token.\r\n        await app.currentUser.refreshAccessToken();\r\n    }\r\n//    console.log(\"AccessToken: [\" + app.currentUser.accessToken + \"]\");\r\n\r\n    return app.currentUser.accessToken;\r\n}\r\n\r\n// Configure the ApolloClient to connect to your app's GraphQL endpoint\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\r\n        // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\r\n        // access token before sending the request.\r\n        fetch: async (uri, options) => {\r\n            const accessToken = await getValidAccessToken();\r\n            options.headers.Authorization = `Bearer ${accessToken}`;\r\n            return fetch(uri, options);\r\n        },\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n*/\r\n\r\nconst container = document.getElementById('root')\r\nconst root = createRoot(container);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}