{"version":3,"sources":["pages/Home.js","Util.js","api/query.js","pages/Notice.js","ListView.js","pages/Search.js","pages/CheckOutStatus.js","pages/CheckOut.js","pages/Return.js","UserInfo.js","pages/UserSearch.js","pages/RentalSituation.js","pages/RentHistory.js","pages/NewMember.js","Doc.js","Context.js","Dropdown.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useEffect","_initialize","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","console","log","doc","setCallback","undefined","stop","apply","arguments","initialize","_jsx","id","dangerouslySetInnerHTML","__html","text","homeText","SEARCH_PER_SCREEN","MAX_SEARCH_ENTRY","String","prototype","format","formatted","this","i","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","getUserState","state","normal","overDue","stopped","getBookState","available","checkedOut","notAvailable","compareRent","a1","a2","rentDate","title","toUtf8","unescape","encodeURIComponent","loadingId","loggingId","BOOK_QUERY","gql","_templateObject","_taggedTemplateLiteral","RENT_QUERY","_templateObject2","USERS_QUERY","_templateObject3","USER_QUERY","_templateObject4","HISTORY_QUERY","_templateObject5","HISTORY_PERIOD_QUERY","_templateObject6","NOTICE_QUERY","_templateObject7","CONTENT_QUERY","_templateObject8","SERVER_QUERY","_templateObject9","Notice","_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useState3","_useState4","displayedCodes","setDisplayedCodes","_useState5","_useState6","pageNum","setPageNum","_useState7","_useState8","selectedId","setSelectedId","_useQuery","useQuery","noticeLoading","loading","noticeData","data","noticeError","error","_useLazyQuery","useLazyQuery","_useLazyQuery2","loadSelected","_useLazyQuery2$","selectedLoading","selectedData","selectedError","notices","toString","startIdx","count","Math","min","slice","showEntry","result","_jsxs","className","children","date","colSpan","onClick","_id","notice","content","map","NavigateBeforeIcon","fontSize","sx","color","NavigateNextIcon","showCallback","ListView","itemList","setItemList","displayList","setDisplayList","list","detail","initialized","Search","inputText","setInputText","_useDebounce","useDebounce","searchQuery","selectedRef","useRef","bookList","setBookList","rentList","setRentList","useParams","updateDoc","_updateDoc","_callee6","rl","rented","bl","books","key","book","_context6","rent","push","code","book_id","retDate","return_date","name","num","author","claim","claim_num","totalName","series","category","publisher","publish","isOpen","findBooks","_x","_findBooks","_callee2","results","url","obj","response","resultString","resultObject","_i","row","_resultString","_retDate","_state","_iterator","_step","entry","_resultObject","_context2","serverAvailable","btoa","serverInfo","localIp","port","axios","get","sent","return","abrupt","concat","BOOKNAME","CLAIMNUM","_STATE","returnDate","_RETURN","index","BARCODE","AUTHOR","TOTAL_NAME","CLAMENUM","PUBLISH","CLAIM","includes","_createForOfIteratorHelper","s","n","done","value","t0","e","f","finish","sort","a","b","_query","_callee3","sr","_context3","current","query","selectId","_ref","_callee4","_context4","_x2","hidden","entryId","_callee5","_context5","rowSpan","bookSearch","placeholder","searchBook","onChange","event","target","entries","State","LoggedOut","LoggingIn","LoggedIn","CheckOutStatus","userText","setUserText","passwordText","setPasswordText","setInitialized","_useState9","_useState10","userId","setUserId","_useState11","_useState12","setState","_useState13","_useState14","history","setHistory","_useState15","_useState16","autoLogin","setAutoLogin","loadUser","userData","_useLazyQuery3","_useLazyQuery4","loadHistory","historyData","_useState17","_useState18","expireDate","setExpireDate","_useState19","_useState20","setTitle","_userId","logged","userInfo","getRent","t1","adminMode","userSearch","checkOut","logIn","_autoLogin","context","cookie","Date","setTime","getTime","days","toGMTString","_func","compare","func","bookReady","rentReady","hist","rentLogs","book_state","return_data","split","showEntries","retText","bookName","React","Fragment","Link","to","showRented","noEntry","toUpperCase","_ref2","prop","toast","isActive","checkLogIn","user","type","TYPE","SUCCESS","logInSucceed","document","ERROR","logInFail","render","toastId","update","info","idHolder","disabled","onInput","pwHolder","checked","cookieString","toggleAutoLogin","dueDate","Navigate","LoggingOut","CheckOut","bookText","setBookText","setUserData","scannedBook","setScannedBook","needConfirm","setNeedConfirm","notifyRequest","setNotifyRequest","barcode","setBarcode","interval","setInterval","ipAddr","portNum","then","scan","clearInterval","notify","RENTED","getElementById","dismiss","updateUser","JSON","stringify","_ref3","logOut","_ref4","imageCaptured","files","file","INFO","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","getBase64","img","method","mode","crossDomain","headers","withCredentials","credentials","image","succeededToOpen","INVALID_BOOK","bookId","USER_CODE","USER_NAME","nameSuffix","USER_STATE","_RENT","rentSuffix","CameraAltIcon","accept","capture","inputMode","pattern","bookHolder","confirmRent","ret","rentSucceed","NOT_AVAILABLE","confirmAction","confirm","cancel","Return","NOT_RENTED","confirmReturn","returnSucceed","UserInfo","setDisabled","setUserInfo","setProperty","PHONE_NUMBER","EMAIL","ADDRESS","USER_LEVEL","NOTICE","Object","keys","registeredDate","REG_DATE","phone","email","address","notice_","level","kid","adult","admin","save","confirmSave","post","refresh","queryRequest","toggleQueryRequest","userLoading","userListData","userError","userList","setUserList","_args6","users","setUser","getUser","showUsers","showUser","_Fragment","findUsers","_findUsers","toLowerCase","input","trim","err","RentHistory","userName","RETURN_DATE","STATS","LENT_DATE","USER","situation","fromTime","setFromTime","toTime","setToTime","_useLazyQuery4$","historyLoading","historyError","yearValue","setYear","monthValue","setMonth","option","year","month","thisYear","thisMonth","createElement","add","getFullYear","getMonth","bookInfo","user_id","timestamp","parseInt","_search","queryTo","nextMonth","padStart","RENT_DATE","warn","search","movePrev","moveNext","NewMember","prepareNewMember","newMember","Doc","_classCallCheck","userReady","logCallback","_createClass","_updateIpAddr","ip","checkServerIp","_this","globalIp","timeout","catch","window","open","callback","checkState","checkRent","_getRent","_entry","_book","retEntry","_args2","rent_date","_openDoc","updateFunc","prk","require","config","Context","rawCookie","v","reduce","acc","shift","join","decodeURIComponent","passwordTyped","matched","emailDb","encrypted_email","phoneDb","encrypted_phone","sign","numberString","isNaN","DropDown","dropdown","setDropdown","click","setClick","menu","classList","remove","home","checkOutStatus","Navbar","isMobile","maxWidth","style","width","MenuIcon","textString","logMsg","App","setLogged","rentLoading","rentError","rentData","_useQuery2","serverLoading","serverError","serverData","loadBook","bookLoading","bookError","bookData","notifyInit","updateLog","lang","ts","process","APP_NAME","APP_VERSION","navigator","languages","kr","en","updateIpAddr","nothing","password","setRent","rents","setBook","setServerInfo","LOADING","setLogCallback","Router","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","limit","Routes","Route","path","element","UserSearch","RentalSituation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","APP_ID","graphqlUri","app","Realm","getValidAccessToken","_getValidAccessToken","currentUser","anonymous","refreshAccessToken","accessToken","client","ApolloClient","link","HttpLink","uri","fetch","_fetch","options","Authorization","_x3","_x4","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider"],"mappings":"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","file":"static/js/main.7502c100.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./Home.css\";\r\n\r\nfunction Home(props) {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Home\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (<div id=\"home\" dangerouslySetInnerHTML={{__html:props.text.homeText}}></div>);\r\n}\r\n\r\nexport default Home;\r\n","export const SEARCH_PER_SCREEN = 10;\r\nexport const MAX_SEARCH_ENTRY = 500;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n\r\nexport const getUserState = function(text, state) {\r\n    if (state === \"0\" || state === 0)\r\n        return text.normal;\r\n    else if (state === \"1\" || state === 1)\r\n        return text.overDue;\r\n    else if (state === \"2\" || state === 2)\r\n        return text.stopped;\r\n}\r\n\r\nexport const getBookState = function(text, state) {\r\n    if (state === \"0\")\r\n    {\r\n        return text.available;\r\n    }\r\n    else if (state === \"1\")\r\n    {\r\n        return text.checkedOut;\r\n    }\r\n    else if (state === \"3\")\r\n    {\r\n        return text.overDue;\r\n    }\r\n    else\r\n    {\r\n        return text.notAvailable;\r\n    }\r\n}\r\n\r\nexport const compareRent = function(a1, a2)\r\n{\r\n    if (a1.rentDate > a2.rentDate)\r\n        return true;\r\n    else if (a1.rentDate < a2.rentDate)\r\n        return false;\r\n    return a1.title > a2.title;\r\n}\r\n\r\nexport const toUtf8 = function(text) {\r\n    return unescape(encodeURIComponent(text));\r\n};\r\n\r\nexport const fromUtf8 = function(text) {\r\n    return decodeURIComponent(escape(text));\r\n};\r\n\r\nexport const loadingId = \"custom-loading-id\";\r\nexport const loggingId = \"custom-logging-id\";\r\n","import gql from \"graphql-tag\";\n\nexport const BOOK_QUERY = gql`\n    query AllBook{\n        books (sortBy: TITLE_ASC, limit:20000) {\n            _id\n            author\n            title\n            claim_num\n            num\n            series\n            category\n            claim\n            publisher\n            seqnum\n        }\n    }\n`;\n\nexport const RENT_QUERY = gql`\n    query AllRent{\n        rents (limit:20000) {\n            _id\n            book_id\n            user_id\n            rent_date\n            return_date\n            state\n        }\n    }\n`;\n\nexport const USERS_QUERY = gql`\n    query AllUser {\n        users (limit: 20000) {\n            _id\n            name\n            state\n            level\n        }\n    }`;\n\nexport const USER_QUERY = gql`\n    query FindUser($_id: String!){\n        user (query: {_id:$_id}) {\n            _id\n            name\n            state\n            level\n            encrypted_email\n            encrypted_phone\n        }\n    }`;\n\nexport const HISTORY_QUERY = gql`\n    query findLogs($user_id: String!){\n        rentLogs (limit: 20000, query: {user_id: $user_id}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_data\n            user_id\n        }\n    }`;\n\nexport const HISTORY_PERIOD_QUERY = gql`\n    query findLogs ($fromTime: String!, $toTime: String!) {\n        rentLogs(limit: 20000, query: {AND: [{timestamp_gte: $fromTime}, {timestamp_lt: $toTime}]}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_data\n            user_id\n        }\n    }`;\n\nexport const NOTICE_QUERY = gql`\n    query GetNotices {\n        notices (sortBy: _ID_DESC, limit:20000) {\n            _id\n            date\n            title\n        }\n    }`;\n\nexport const CONTENT_QUERY = gql`\n    query GetContent ($_id: String!) {\n        notice (query: {_id: $_id}) {\n            _id\n            date\n            title\n            content\n        }\n    }`;\n\nexport const SERVER_QUERY = gql`\n    query GetServerInfo {\n        serverInfo {\n            _id\n            globalIp\n            localIp\n            port\n        }\n    }`;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { SEARCH_PER_SCREEN } from \"../Util\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport {NOTICE_QUERY, CONTENT_QUERY} from \"../api/query.js\";\r\n\r\nfunction Notice(props) {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(-1);\r\n    const { loading: noticeLoading, data: noticeData, error: noticeError } = useQuery(NOTICE_QUERY);\r\n    const [loadSelected, { loading: selectedLoading, data: selectedData, error: selectedError}] = useLazyQuery(CONTENT_QUERY,\r\n            {\"variables\": {\"_id\": selectedId}});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Notice\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Notice\");\r\n//            console.log(noticeData);\r\n//            console.log(noticeError);\r\n//            console.log(noticeLoading);\r\n            if (noticeData)\r\n            {\r\n                setSearchResults(noticeData.notices);\r\n            }\r\n        }, [noticeData, noticeError, noticeLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Content\");\r\n//            console.log(selectedData);\r\n//            console.log(selectedError);\r\n//            console.log(selectedLoading);\r\n            if (selectedData)\r\n            {\r\n//                setSearchResults(selectedData.content);\r\n            }\r\n        }, [selectedData, selectedError, selectedLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n            console.log(\"Page num \" + pageNum.toString() + \" \");\r\n            console.log(length);\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n//           console.log(displayedCodes);\r\n        }, [displayedCodes]\r\n    );\r\n\r\n    const selectEntry = (id) => {\r\n        console.log(\"selected \" + id.toString());\r\n        if (selectedId === id)\r\n        {\r\n            setSelectedId(-1);\r\n        }\r\n        else\r\n        {\r\n            setSelectedId(id);\r\n        }\r\n        loadSelected();\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n//        console.log(result);\r\n        return (\r\n                <tr className=\"\" key={result._id}>\r\n                    <td className=\"\"> {result.date} </td>\r\n                    <td className=\"noticeEntry\" colSpan=\"2\" onClick={() => selectEntry(result._id)}> {result.title}</td>\r\n                </tr>\r\n        );\r\n    }\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (searchResults.length > (pageNum + 1) * SEARCH_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div id=\"notice\">\r\n                <div id=\"title\">\r\n                    <h2>\r\n                        {props.text.notice}\r\n                    </h2>\r\n                </div>\r\n                {selectedId > 0 && selectedData &&\r\n                <div id=\"noticeContent\">\r\n                    <table className=\"content\"><tbody>\r\n                           {showEntry(selectedData.notice)}\r\n                        <tr>\r\n                            <td className=\"content\" colSpan=\"3\">\r\n                                {selectedData.notice.content}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                </div>\r\n                }\r\n                <div id=\"noticeList\">\r\n                    <table><tbody>\r\n                       {displayedCodes.length > 0 && displayedCodes.map((result) => showEntry(result))}\r\n                    </tbody></table>\r\n                </div>\r\n                {searchResults.length > SEARCH_PER_SCREEN && (\r\n                    <div id=\"pageControl\">\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={movePrev}/>\r\n                        </div>\r\n                        <div className=\"pageNum\" id=\"pageNum\">\r\n                            {pageNum+1}\r\n                        </div>\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateNextIcon fontSize=\"large\" sx={{color: (searchResults.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={moveNext}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default Notice;\r\n","import { useEffect, useState } from \"react\";\nimport { SEARCH_PER_SCREEN } from \"./Util\";\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\n\nfunction doNothing() {\n    console.log(\"Do nothing...\");\n}\n\nvar showCallback = doNothing;\nfunction ListView(props) {\n        const [itemList, setItemList] = useState([]);\n//        const [showCallback, setShowCallback] = useState(doNothing);\n        const [pageNum, setPageNum] = useState(0);\n        const [displayList, setDisplayList] = useState([]);\n\n    useEffect(function () {\n        console.log(\"Init List View\");\n    }, []);\n\n    useEffect(function () {\n//        console.log(\"Set Item List\");\n        setItemList(props.list);\n        setPageNum(0);\n    }, [props.list]);\n\n    useEffect(function () {\n        if (props.showCallback)\n        {\n//            console.log(\"Set show callback\");\n //           setShowCallback(props.showCallback);\n            showCallback = props.showCallback;\n        }\n    }, [props.showCallback]);\n\n    useEffect(function () {\n        const length = itemList.length;\n //       console.log(\"Page num \" + pageNum.toString());\n        if (length > SEARCH_PER_SCREEN)\n        {\n            const startIdx = pageNum * SEARCH_PER_SCREEN;\n            const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\n            setDisplayList(itemList.slice(startIdx,startIdx+count));\n        }\n        else\n        {\n            setDisplayList(itemList)\n        }\n    }, [itemList, pageNum]);\n\n    function movePrev() {\n        console.log(\"Prev\");\n        if (pageNum > 0)\n        {\n            setPageNum(pageNum - 1);\n        }\n    }\n\n    function moveNext() {\n        console.log(\"Next\");\n        if (itemList.length > (pageNum + 1) * SEARCH_PER_SCREEN)\n        {\n            setPageNum(pageNum + 1);\n        }\n    }\n\n    return (\n        <div id=\"listView\">\n            {showCallback(displayList, props.detail)}\n            {itemList && itemList.length > SEARCH_PER_SCREEN && (\n                <div id=\"pageControl\">\n                    <div className=\"page\" id = \"page\">\n                        <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={() => {movePrev();} }/>\n                    </div>\n                    <div className=\"pageNum\" id=\"pageNum\">\n                        {pageNum+1}\n                    </div>\n                    <div className=\"page\" id = \"page\">\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: (itemList.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={() => {moveNext();} }/>\n                    </div>\n                </div>)\n            }\n        </div>\n    );\n}\nexport default ListView;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { MAX_SEARCH_ENTRY, getBookState, toUtf8 } from \"../Util\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ListView from \"../ListView\";\r\n\r\nlet initialized = false;\r\n\r\nfunction Search(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(inputText, 50);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n//    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n\r\n    const [bookList, setBookList] = useState([]);\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"BOOK ID: \" + id);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setInputText(id);\r\n            }\r\n            else\r\n            {\r\n                setInputText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findBooks(text) {\r\n                let results = [];\r\n\r\n                if (props.doc.serverAvailable)\r\n                {\r\n                    console.log(toUtf8(text));\r\n                    console.log(btoa(toUtf8(text)));\r\n                    const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                        props.doc.serverInfo.port + \"/book\";\r\n                    const obj = {\"params\": {\"book\": btoa(toUtf8(text)), \"match\":false}};\r\n                    console.log(obj);\r\n                    const response = await axios.get(url, obj);\r\n                    console.log(response)\r\n                    if (!(\"books\" in response.data.return))\r\n                        return results;\r\n                    const books = response.data.return.books;\r\n                    let retDate = \"\";\r\n                    for (let i = 0 ; i < books.length ; i++)\r\n                    {\r\n                        const book = books[i];\r\n                        const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                        const state = book._STATE;\r\n                        if (state === 1 || state === 3)\r\n                        {\r\n                            retDate = props.text.returnDate + \" \" + book._RETURN;\r\n                        }\r\n                        let resultObject = {\r\n                            index: i,\r\n                            text: resultString,\r\n                            name: book.BOOKNAME,\r\n                            code: book.BARCODE,\r\n                            rent: getBookState(props.text, book._STATE.toString()),\r\n                            retDate: retDate,\r\n                            author: book.AUTHOR,\r\n                            totalName: book.TOTAL_NAME,\r\n                            claim_num: book.CLAMENUM,\r\n                            publish: book.PUBLISH,\r\n                            claim: book.CLAIM\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n\r\n                    for (let i = 0 ; i < bookList.length ; i++) {\r\n                        const row = bookList[i];\r\n                        if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                        if ((row.name && row.name.toString().includes(text)) ||\r\n                            (row.code === text))\r\n                        {\r\n                            let resultString = `${row.name} ${row.claim_num}`;\r\n                            let retDate = \"\";\r\n                            let state = \"0\";\r\n                            for (const entry of rentList)\r\n                            {\r\n                                if (entry.code === row.code)\r\n                                {\r\n                                    state = entry.state;\r\n                                    if (state === \"1\" || state === \"3\")\r\n                                    {\r\n                                        retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                            let resultObject = {\r\n                                index: i,\r\n                                text: resultString,\r\n                                name: row.name,\r\n                                code: row.code.toString(),\r\n                                rent: getBookState(props.text, state),\r\n                                retDate: retDate,\r\n                                author: row.author,\r\n                                totalName: row.totalName,\r\n                                claim_num: row.claim_num,\r\n                                publish: row.publish,\r\n                                claim: row.claim\r\n                            };\r\n                            results.push(resultObject);\r\n                        }\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a['text'] > b['text']; });\r\n                return results;\r\n            }\r\n            async function query() {\r\n                if (searchQuery) {\r\n                    let sr = await findBooks(searchQuery);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        selectedRef.current = sr[0].code;\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, bookList, rentList, props]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        initialized = true;\r\n\r\n        let rl = [];\r\n        const rented = props.doc.rent;\r\n        for (let i = 0 ; i < rented.length; i++)\r\n        {\r\n           rl.push({code:rented[i].book_id, retDate:rented[i].return_date, state:rented[i].state});\r\n        }\r\n        setRentList(rl);\r\n\r\n        let bl = [];\r\n        const books = props.doc.book\r\n        for (const key in books)\r\n        {\r\n           const book = books[key];\r\n           bl.push({code: book._id, name: book.title, num: book.num, author: book.author, claim: book.claim,\r\n                    claim_num: book.claim_num, totalName: book.series, category: book.publisher, publish: book.publisher});\r\n        }\r\n        console.log(\"Load\");\r\n        console.log(books.length);\r\n        setBookList(bl);\r\n    }\r\n\r\n    const selectId = async (code) => {\r\n        console.log(\"Prev \" + selectedRef.current);\r\n        if (selectedRef.current === -1 || selectedRef.current !== code)\r\n        {\r\n            console.log(\"Select \" + code);\r\n//            setSelectedId(code);\r\n            selectedRef.current = code;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + code);\r\n //           setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n        }\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n        const hidden = (result.code !== selectedRef.current);\r\n        const entryId = (hidden) ? \"searchResult\" : \"selectedSearchResult\";\r\n        return (\r\n            <div key={result.code}>\r\n            <div id={entryId} onClick={async () => await selectId(result.code)}>\r\n                <table><tbody>\r\n                    <tr className=\"searchTr\">\r\n                        <td className=\"searchTitle\"> {result.text}</td>\r\n                        <td className=\"searchRent\"> {result.rent} </td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {!hidden &&\r\n            <div>\r\n                <table><tbody>\r\n                <tr>\r\n                    <td>{result.author} </td>\r\n                    <td colSpan=\"2\" rowSpan=\"2\">{result.totalName} <b>{result.name}</b> { result.claim_num} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.code} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.publish}</td>\r\n                    <td colSpan={result.retDate.length > 0 ? \"1\":\"2\"}>{result.claim} </td>\r\n                    {result.retDate.length > 0 && <td>{result.retDate}</td> }\r\n                </tr>\r\n                </tbody></table>\r\n            </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function showEntries(results)\r\n    {\r\n        return results.map((result) => showEntry(result))\r\n    }\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <div id=\"title\">\r\n                <h2> {props.text.bookSearch} </h2>\r\n            </div>\r\n            <div id=\"searchContents\">\r\n                <input id=\"searchInput\"\r\n                    placeholder={props.text.searchBook}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n            </div>\r\n            <ListView list={searchResults} showCallback={(entries) => { return showEntries(entries); }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, compareRent } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USER_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction CheckOutStatus(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [expireDate, setExpireDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOutStatus initialize\");\r\n\r\n\r\n            if (\"autoLogin\" in props.context.cookie)\r\n            {\r\n                const autoLogin = (props.context.cookie.autoLogin === \"true\") ? true : false;\r\n                setAutoLogin(autoLogin);\r\n            }\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            setExpireDate(date.toGMTString());\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.doc.logged]\r\n    );\r\n\r\n    useEffect(() => {\r\n            async function func() {\r\n                console.log(\"User data updated \");\r\n                await compare();\r\n            }\r\n            func();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n            console.log(historyData);\r\n            let hist = [];\r\n            for (let i = 0 ; i < historyData.rentLogs.length ; i++)\r\n            {\r\n                const entry = historyData.rentLogs[i];\r\n                if (entry.book_state !== \"1\")\r\n                    continue;\r\n                if (! (\"return_data\" in entry) || ! entry.return_data)\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const title = props.doc.book[id][\"title\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                const retDate = entry.return_data;\r\n                hist.push({\"id\": id, \"title\": title, \"rentDate\": date, \"retDate\": retDate});\r\n\r\n            }\r\n            hist.sort(compareRent);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.logged)\r\n        {\r\n            setState(State.LoggedIn);\r\n            const userId = props.doc.userInfo['_id'];\r\n            setUserId(userId);\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            await loadHistory();\r\n        }\r\n        else\r\n        {\r\n            setState(State.LoggedOut);\r\n            setUserId(\"\");\r\n            setPasswordText(\"\");\r\n        }\r\n\r\n        console.log(\"Set title \" + props.doc.logged)\r\n        if (props.doc.logged)\r\n        {\r\n            if (props.doc.adminMode)\r\n                setTitle(props.text.userSearch);\r\n            else\r\n                setTitle(props.text.checkOut);\r\n        }\r\n        else\r\n        {\r\n            setTitle(props.text.logIn);\r\n        }\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const toggleAutoLogin = () => {\r\n        console.log(\"Toggle autoLogin\");\r\n        const cookieString = \"autoLogin=\" + (autoLogin ? \"false\":\"true\") + \"; expires=\" + expireDate + \";\";\r\n        console.log(cookieString);\r\n        document.cookie = cookieString;\r\n        setAutoLogin(!autoLogin);\r\n    }\r\n\r\n    const showEntries = (result, retText) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{retText}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        setState(State.LoggingIn);\r\n        setUserId(userText.toUpperCase());\r\n        await loadUser();\r\n        await loadHistory();\r\n        console.log(\"Log In\");\r\n        await compare();\r\n    }\r\n\r\n    const compare = async () => {\r\n        if (!userData || state === State.LoggedOut)\r\n            return;\r\n\r\n        console.log(toast.isActive(loggingId));\r\n        const prop = toastProp;\r\n\r\n        let text;\r\n        if (props.context.checkLogIn(userData, passwordText))\r\n        {\r\n            props.doc.logIn(userData.user);\r\n\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            setState(State.LoggedIn);\r\n\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            document.cookie = \"user_id=\" + userId + \"; expires=\" + expireDate + \";\";\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.render = text;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = loggingId;\r\n        if (toast.isActive(loggingId))\r\n        {\r\n            console.log(\"update toast\");\r\n            toast.update(loggingId, prop);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"New toast\");\r\n            toast.info(text, prop);\r\n        }\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {title}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!(state !== State.LoggedIn)}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <input type=\"password\" id=\"searchPassword\"\r\n                    placeholder={props.text.pwHolder}\r\n                    value={passwordText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setPasswordText(event.target.value);\r\n                    }} />\r\n                <div id=\"autoLogin\">\r\n                    <input type=\"checkbox\" id=\"autoLoginButton\" checked={autoLogin} onChange={() => toggleAutoLogin()}/>\r\n                    <label>\r\n                            {props.text.autoLogin}\r\n                    </label>\r\n                </div>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={!(state === State.LoggedIn)}>\r\n                <div>\r\n                    { showEntries(searchResults, props.text.dueDate) }\r\n                </div>\r\n\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <ListView list={history} showCallback={(entries) => { return showEntries(entries, props.text.returnDate); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOutStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, loadingId, getUserState } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2,\r\n    LoggingOut: 3\r\n}\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 50);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [userData, setUserData] = useState({});\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOut initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n//            console.log(props.doc.serverInfo);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                axios.get(url).then( response => {\r\n                        const book = response.data.scan;\r\n                        if (book) {\r\n                            console.log(book)\r\n                            setBarcode(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            console.log(toast.isActive(loggingId));\r\n            const prop = toastProp;\r\n\r\n            let text;\r\n            let notify = false;\r\n            if (\"USER_CODE\" in userData && state !== State.LoggedIn)\r\n            {\r\n                setState(State.LoggedIn);\r\n\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                text = props.text.logInSucceed;\r\n                notify = true;\r\n            }\r\n            else if (!(\"USER_CODE\" in userData))\r\n            {\r\n                setState(State.LoggedOut);\r\n\r\n                if (state === State.LoggingIn)\r\n                {\r\n                    prop.type = toast.TYPE.ERROR;\r\n                    text = props.text.logInFail;\r\n                    notify = true;\r\n                }\r\n            }\r\n\r\n            if (notify)\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": prop.type})\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 0)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n                setBarcode(\"\")\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            console.log(\"Notification \" + notifyRequest.text)\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//            if (\"id\" in notifyRequest)\r\n//                id = notifyRequest.id\r\n\r\n//            prop.toastId = id\r\n//            if (toast.isActive(id))\r\n//                toast.update(id, notifyRequest.text, prop);\r\n//            else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (state !== State.LoggedIn)\r\n                setBarcode(userText);\r\n        }, [state, userText]\r\n    );\r\n\r\n    const updateUser = async (userText) => {\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/user?user=\" + userText;\r\n        const obj = {\"params\": {\"user\": userText, \"data\":\"nothing\"}};\r\n        console.log(obj);\r\n        const response = await axios.get(url, btoa(JSON.stringify(obj)));\r\n        const user = response.data.return;\r\n        setUserData(user);\r\n        console.log(user);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        console.log(\"LOGIN\");\r\n        console.log(userText);\r\n        if (userText.length === 0)\r\n            return;\r\n        setState(State.LoggingIn);\r\n        const id = userText.toUpperCase();\r\n        setUserId(id);\r\n        updateUser(id);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Log Out\");\r\n        setUserData({});\r\n        setUserText(\"\");\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n        document.getElementById('barcodeScan').value= null;\r\n    }\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            console.log(url)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.loading,\r\n                              \"type\": toast.TYPE.INFO})\r\n            getBase64(file).then(\r\n                img => {\r\n                    axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(response);\r\n                        console.log(book);\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.succeededToOpen,\r\n                                              \"type\": toast.TYPE.SUCCESS});\r\n                        }\r\n                        else\r\n                        {\r\n                            console.log(\"Failed\");\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR});\r\n                            setScannedBook({});\r\n                            setBarcode(\"\")\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                const bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            console.log(book.books)\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery, bookText, props.doc]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Barcode: \" + barcode);\r\n            if (barcode.length === 0)\r\n                return;\r\n            if (state !== State.LoggedIn)\r\n            {\r\n                setUserText(barcode);\r\n            }\r\n            else\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [barcode, props.doc, state]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n        document.getElementById('barcodeScan').value= null;\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/checkOut\"\r\n        axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE,\r\n                user: userId\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return\r\n            console.log(\"Rent confirmed\");\r\n            console.log(ret)\r\n\r\n            if (ret === \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.rentSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            setScannedBook({});\r\n            setBarcode(\"\")\r\n            updateUser(userId);\r\n        });\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        document.getElementById('barcodeScan').value= null;\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n//            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn ? true : false }>\r\n//            <div id=\"checkOutResult\" hidden={true}>\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.checkOut}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={state === State.LoggedIn}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn}>\r\n                {userData.USER_CODE && (\r\n                    <div id=\"userInfo\">\r\n                        <div id=\"userItem\">\r\n                            {userData.USER_CODE + \" : \" + userData.USER_NAME + props.text.nameSuffix}\r\n                        </div>\r\n                        <div id=\"userItem\"> {getUserState(props.text, userData.USER_STATE)} </div>\r\n                        <div id=\"userItem\"> {userData._RENT.length + \" \" + props.text.rentSuffix} </div>\r\n                    </div>\r\n                )}\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                    <label id=\"barcodeScan\" hidden>\r\n                        <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                        <span>\r\n                        <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                        </span>\r\n                    </label>\r\n                    <label id=\"manualInput\">\r\n                        <div id=\"hkPrefix\">\r\n                        HK\r\n                        </div>\r\n                        <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n                            placeholder={props.text.bookHolder}\r\n                            onInput={(event) => {\r\n                                setBookText(event.target.value);\r\n                            }} />\r\n                    </label>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmRent} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \": \" + scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.logOut} </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\n\r\nfunction Return(props) {\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 50);\r\n//    const [initialized, setInitialized] = useState(false);\r\n//    const [userId, setUserId] = useState(\"\");\r\n//    const [state, setState] = useState(State.LoggedOut);\r\n//    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n//                     { \"variables\": { \"_id\": userId } });\r\n//    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n//                     { \"variables\": { \"user_id\": userId } });\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            props.doc.setCallback(undefined);\r\n            console.log(\"=======================================\");\r\n            console.log(\"Return initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr && ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                axios.get(url).then( response => {\r\n                        const book = response.data.scan;\r\n                        if (book) {\r\n                            console.log(barcode + \" -> \" + book)\r\n                            setBarcode(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n*/\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                const bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery, bookText, props.doc]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"B\" + barcode);\r\n            if (barcode.length > 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [barcode, props.doc]\r\n    );\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.loading,\r\n                              \"type\": toast.TYPE.INFO})\r\n            getBase64(file).then(\r\n                img => {\r\n                    axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.succeededToOpen,\r\n                                              \"type\": toast.TYPE.SUCCESS});\r\n                        }\r\n                        else\r\n                        {\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR})\r\n                            setScannedBook({})\r\n                            setBarcode(\"\")\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 1 || scannedBook._STATE === 3)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    console.log(\"Not rented\")\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.NOT_RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                    setBarcode(\"\")\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//           if (\"id\" in notifyRequest)\r\n//               id = notifyRequest.id\r\n\r\n//           prop.toastId = id\r\n //          if (toast.isActive(id))\r\n//               toast.update(id, notifyRequest.text, prop);\r\n//           else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/return\"\r\n        axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return;\r\n            console.log(ret);\r\n            if (ret === \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.returnSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            setScannedBook({});\r\n            setBarcode(\"\")\r\n        });\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.return}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                <label id=\"barcodeScan\" hidden>\r\n                    <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                    <span>\r\n                    <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                    </span>\r\n                </label>\r\n                <label id=\"manualInput\">\r\n                    <div id=\"hkPrefix\">\r\n                        HK\r\n                    </div>\r\n                    <input inputMode=\"numeric\" pattern=\"\\d*\" type=\"text\" id=\"searchInput\"\r\n                        placeholder={props.text.bookHolder}\r\n                        onInput={(event) => {\r\n                            setBookText(event.target.value);\r\n                        }} />\r\n                </label>\r\n                </div>\r\n                <div id=\"checkReturn\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmReturn} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\" + scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n//                    <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n\r\nexport default Return;\r\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toUtf8 } from \"./Util\";\nimport \"./UserInfo.css\";\n\nfunction UserInfo(props) {\n    const [needConfirm, setNeedConfirm] = useState(false);\n    const [disabled, setDisabled] = useState(true);\n    const [userInfo, setUserInfo] = useState({});\n\n    useEffect(function() {\n        console.log(\"User Info\");\n        console.log(props.info);\n        document.getElementById('userName').value = props.info.USER_NAME;\n        document.getElementById('phone').value = props.info.PHONE_NUMBER;\n        document.getElementById('email').value = props.info.EMAIL;\n        document.getElementById('address').value = props.info.ADDRESS;\n        document.getElementById('notice_').value = props.info.NOTICE;\n        document.getElementById('user_level').value = props.info.USER_LEVEL;\n        setUserInfo({\"USER_CODE\": props.info.USER_CODE});\n        setDisabled(true);\n\n    }, [props.info]);\n\n    function setProperty(index, value)\n    {\n        console.log(index);\n        console.log(value);\n        var info = userInfo;\n        switch (index)\n        {\n        case 0:\n            info.USER_NAME = value;\n            break;\n        case 1:\n            info.PHONE_NUMBER = value;\n            break;\n        case 2:\n            info.EMAIL = value;\n            break;\n        case 3:\n            info.ADDRESS = value;\n            break;\n        case 4:\n            info.USER_LEVEL = value;\n            break;\n        case 5:\n            info.NOTICE = value;\n            break;\n        default:\n            break;\n        }\n        const length = Object.keys(info).length;\n        console.log(length);\n//        if (length >= 1 && \"USER_LEVEL\" in info && info.USER_LEVEL >= 0 && info.USER_LEVEL <= 2)\n        if (length > 1)\n            setDisabled(false);\n        setUserInfo(info);\n    }\n\n    function confirmAction()\n    {\n        console.log(\"Save modification\");\n        console.log(userInfo);\n        const ipAddr = props.doc.serverInfo.localIp;\n        const portNum = props.doc.serverInfo.port;\n        if (ipAddr.length === 0 || portNum <= 0)\n            return;\n\n        const url = \"https://\" + ipAddr + \":\" +\n            portNum + \"/user\";\n\n        var obj = {};\n        for (const key in userInfo)\n        {\n            obj[key] = btoa(toUtf8(userInfo[key]));\n        }\n        axios.post(url, obj).then( response => {\n            console.log(response);\n            props.refresh(response);\n        });\n        setNeedConfirm(false);\n    }\n\n    function cancelAction()\n    {\n        setNeedConfirm(false);\n    }\n\n    return (\n        <div>\n            <table><tbody>\n                <tr key=\"Name\">\n                    <td> {props.text.name} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"userName\" onChange={(event) => {setProperty(0, event.target.value);}} />\n                    </td>\n                </tr>\n                {\"REG_DATE\" in props.info &&\n                    <tr key=\"Register\">\n                        <td> {props.text.registeredDate} </td>\n                        <td colSpan=\"3\" className=\"data\">\n                            {props.info.REG_DATE}\n                        </td>\n                    </tr>\n                }\n                <tr key=\"Phone\">\n                    <td> {props.text.phone} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"phone\" onChange={(event) => {setProperty(1, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Email\">\n                    <td> {props.text.email} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"email\" onChange={(event) => {setProperty(2, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Address\">\n                    <td> {props.text.address} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"address\" onChange={(event) => {setProperty(3, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Notice\">\n                    <td> {props.text.notice_} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"notice_\" onChange={(event) => {setProperty(5, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Level\">\n                    <td> {props.text.level} </td>\n                    <td colSpan=\"3\" className=\"cell\">\n                        <select name=\"User Level\" id=\"user_level\" className=\"dropdown\" onChange={(event) => {setProperty(4, event.target.value);}}>\n                            <option value=\"0\"> {props.text.kid} </option>\n                            <option value=\"1\"> {props.text.adult} </option>\n                            <option value=\"2\"> {props.text.admin} </option>\n                        </select>\n                    </td>\n                </tr>\n            </tbody></table>\n           <button id=\"modify\" hidden={needConfirm} onClick={async () => setNeedConfirm(true)} disabled={disabled}> {props.text.save} </button>\n            <div id=\"checkModify\" hidden={!needConfirm}>\n                <div id=\"noticeMsg\"> {props.text.confirmSave} </div>\n                <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\n                <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\n            </div>\n        </div>\n    );\n}\nexport default UserInfo;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp, MAX_SEARCH_ENTRY, getUserState, toUtf8 } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate, useParams } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\nimport UserInfo from \"../UserInfo\";\r\nimport axios from \"axios\";\r\n\r\n//var rentList = [];\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(userText, 50);\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n//    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n    const { id } = useParams();\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n            {\r\n                return;\r\n            }\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"UserSearch initialize\");\r\n            console.log(\"User ID: \" + id);\r\n\r\n            if (!props.doc.serverAvailable)\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc(false);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n\r\n        if (notify)\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Set title \" + props.logged)\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const selectId = async (id) => {\r\n        if (selectedRef.current === -1 || selectedRef.current !== id)\r\n        {\r\n            console.log(\"Select \" + id);\r\n//            setSelectedId(id);\r\n            selectedRef.current = id;\r\n            const rent = await props.doc.getRent(id);\r\n            console.log(\"Set Rent List\");\r\n            console.log(rent)\r\n            setRentList(rent);\r\n//            rentList = rent;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n//            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n            setRentList([]);\r\n//            rentList = [];\r\n        }\r\n    }\r\n\r\n    const showUser = (user, detail, index) => {\r\n        const key = index.toString();\r\n        return (\r\n                <div key={key}>\r\n                    <table><tbody>\r\n                        <tr key={user.id} className=\"searchTr\" onClick={async ()=> await selectId(user.id)}>\r\n                            <td className=\"bookData\">{user.id}</td>\r\n                            <td className=\"bookData\">{user.name}</td>\r\n                            <td className=\"bookData\">{user.state}</td>\r\n                            <td className=\"bookData\">{user.rent}</td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                        {user.id === selectedRef.current && showEntries(user, detail) }\r\n                </div>\r\n                );\r\n    }\r\n\r\n    const showUsers = (result, detail) => {\r\n        return (<div>\r\n                    {\r\n                        result.map((user, index) => {\r\n                            return showUser(user, detail, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 &&\r\n                        <table><tbody>\r\n                            <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                        </tbody></table>\r\n                    }\r\n                </div>);\r\n    }\r\n\r\n    const showEntries = (user, detail) => {\r\n        console.log(\"Detail\");\r\n        console.log(user);\r\n        return (<>\r\n                    {props.doc.serverAvailable &&\r\n                        <UserInfo text={props.text} doc={props.doc} info={user} refresh={refresh}/>\r\n                    }\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        detail.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        detail.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </>);\r\n    }\r\n    useEffect(\r\n        () => {\r\n            async function findUsers(text) {\r\n                let results = [];\r\n\r\n//                for (let i = 0 ; i < userList.length ; i++) {\r\n                  for (const key in userList) {\r\n                    const row = userList[key];\r\n                    if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                    if ((row.name && row.name.toString().includes(text)) ||\r\n                        (row.id.toLowerCase() === text.toLowerCase()))\r\n                    {\r\n                        results.push(row);\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a.name > b.name; });\r\n                console.log(results);\r\n                return results;\r\n            }\r\n            async function query() {\r\n                const input = userText.trim()\r\n                console.log(\"Query \" + input + \" \" + searchQuery)\r\n                if (input.length > 0 && searchQuery) {\r\n\r\n                    let sr;\r\n                    if (props.doc.serverAvailable)\r\n                    {\r\n                        console.log(\"from CLIB\")\r\n                        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/users\";\r\n                        const obj = {\"params\": {\"user\": btoa(toUtf8(input))}};\r\n                        console.log(obj);\r\n                        const response = await axios.get(url, obj);\r\n                        const users = response.data.return.data;\r\n                        console.log(response.data.return);\r\n                        sr = [];\r\n                        if (users) {\r\n                            for (const entry of response.data.return.data)\r\n                            {\r\n                                console.log(entry);\r\n                                let user = entry;\r\n                                user.id = entry.USER_CODE;\r\n                                user.name = entry.USER_NAME;\r\n                                user.state = getUserState(props.text, entry.USER_STATE);\r\n                                user.rent = entry._RENT.length;\r\n                                sr.push(user);\r\n                            }\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log(\"from DB\")\r\n                        sr = await findUsers(searchQuery);\r\n                    }\r\n\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                       selectId(sr[0].id);\r\n                   else\r\n                       selectId(0);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n       [searchQuery, props, userList, queryRequest, userText]\r\n    );\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.userSearch}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onChange={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <div>\r\n                    <ListView list={searchResults} detail={rentList} showCallback={(entries, detail) => { return showUsers(entries, detail); }}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getBookState } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\nimport axios from \"axios\";\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userList]\r\n    );\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        return a1.rentDate > a2.rentDate;\r\n    }\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.serverAvailable)\r\n        {\r\n            let results = [];\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n            const obj = {\"params\": {\"user\": \"*\", \"match\":false}};\r\n//            console.log(obj);\r\n            const response = await axios.get(url, obj);\r\n//           console.log(response)\r\n//            if (!(\"books\" in response.data.return))\r\n//                return results;\r\n            const books = response.data.return.books;\r\n            let retDate = \"\";\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                const state = book._STATE;\r\n                if (state === 1 || state === 3)\r\n                {\r\n                    retDate = book.RETURN_DATE;\r\n                }\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: book.BOOKNAME,\r\n                    id: book.BARCODE,\r\n                    rent: getBookState(props.text, book.STATS.toString()),\r\n                    rentDate: book.LENT_DATE,\r\n                    retDate: retDate,\r\n                    author: book.AUTHOR,\r\n                    totalName: book.TOTAL_NAME,\r\n                    claim_num: book.CLAMENUM,\r\n                    publish: book.PUBLISH,\r\n                    claim: book.CLAIM,\r\n                    user: book.USER,\r\n                    userName: book.USER_NAME\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compare);\r\n            setRentList(results);\r\n        }\r\n        else\r\n        {\r\n\r\n            const rent = await props.doc.getRent();\r\n            console.log(\"Rent\");\r\n            console.log(rent);\r\n            rent.sort(compare);\r\n            for (const index in rent)\r\n            {\r\n                const userId = rent[index][\"user\"];\r\n                let userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                rent[index][\"userName\"] = userName;\r\n//                console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n            }\r\n            setRentList(rent);\r\n        }\r\n\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td colSpan=\"3\" className=\"bookCell\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"situation\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.situation}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { compareRent } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\nimport axios from \"axios\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n//    const [initialized, setInitialized] = useState(false);\r\n    const [fromTime, setFromTime] = useState(\"\");\r\n    const [toTime, setToTime] = useState(\"\");\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [loadHistory, {loading: historyLoading, data: historyData, error: historyError }] = useLazyQuery(HISTORY_PERIOD_QUERY,\r\n            {\"variables\": { \"fromTime\" : fromTime, \"toTime\": toTime}});\r\n    const [userList, setUserList] = useState({});\r\n    const [yearValue, setYear] = useState(0);\r\n    const [monthValue, setMonth] = useState(0);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            var i;\r\n            var option;\r\n            var year = document.getElementById('year')\r\n            var month = document.getElementById('month')\r\n            for (i = 1; i <= 12 ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                month.add(option, i);\r\n            }\r\n            const thisYear = new Date().getFullYear();\r\n            const thisMonth = new Date().getMonth() + 1;\r\n            const fromYear = 2017;\r\n\r\n            for (i = fromYear ; i <= thisYear ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                year.add(option, i);\r\n            }\r\n\r\n            console.log(thisYear);\r\n            console.log(thisMonth);\r\n            setYear(thisYear);\r\n            setMonth(thisMonth);\r\n            document.getElementById('year').value = thisYear;\r\n            document.getElementById('month').value = thisMonth;\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n//                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"History update\")\r\n\r\n            if (!historyData)\r\n                return\r\n\r\n//            console.log(historyData.rentLogs)\r\n\r\n            const books = historyData.rentLogs;\r\n            let results = [];\r\n            let retDate = \"\";\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const state = book.book_state;\r\n                if (state !== \"1\")\r\n                    continue\r\n                if (!book.return_data || book.return_data.length == 0)\r\n                    continue\r\n//                console.log(book)\r\n                const bookId = book.book_id;\r\n                const userId = book.user_id;\r\n                var userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                var bookInfo;\r\n                if (bookId in props.doc.book)\r\n                {\r\n                    bookInfo = props.doc.book[bookId];\r\n                }\r\n                else\r\n                {\r\n                    bookInfo = {}\r\n                    bookInfo.author = \"\"\r\n                    bookInfo.totalName = \"\"\r\n                    bookInfo.claim_num = \"\"\r\n                    bookInfo.publish = \"\"\r\n                    bookInfo.title = \"\"\r\n                }\r\n                const resultString = `${bookInfo.title} ${bookInfo.claim_num}`;\r\n                retDate = book.return_data;\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: bookInfo.title,\r\n                    id: bookId,\r\n                    rentDate: book.timestamp,\r\n                    retDate: retDate,\r\n                    author: bookInfo.author,\r\n                    claim_num: bookInfo.claim_num,\r\n                    publish: bookInfo.publisher,\r\n                    claim: bookInfo.claim,\r\n                    user: userId,\r\n                    userName: userName\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compareRent);\r\n//            console.log(results);\r\n            setRentList(results);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, historyLoading, historyError]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        }, [userList]\r\n    );\r\n*/\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        if (a1.rentDate > a2.rentDate)\r\n            return true;\r\n        else if (a1.rentDate < a2.rentDate)\r\n            return false;\r\n        return a1.title > a2.title;\r\n    }\r\n\r\n/*\r\n    async function updateDoc()\r\n    {\r\n        setInitialized(true);\r\n    }\r\n*/\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td colSpan=\"3\" className=\"bookCell\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n    function setProperty(index, value)\r\n    {\r\n        console.log(index);\r\n        console.log(value);\r\n        switch (index)\r\n        {\r\n            case 0:\r\n                setYear(value);\r\n                break;\r\n            case 1:\r\n                setMonth(parseInt(value));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(function () {\r\n        async function search()\r\n        {\r\n            console.log(\"Search\")\r\n            var query;\r\n            query = yearValue.toString() + \"-\" + monthValue.toString().padStart(2, \"0\")\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/history\";\r\n                const obj = {\"params\": {\"period\": query}};\r\n                console.log(obj);\r\n                const response = await axios.get(url, obj);\r\n                console.log(response);\r\n\r\n                const books = response.data.return.books;\r\n                let results = [];\r\n                let retDate = \"\";\r\n                for (let i = 0 ; i < books.length ; i++)\r\n                {\r\n                    const book = books[i];\r\n                    const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                    if (\"RETURN_DATE\" in book)\r\n                    {\r\n                        retDate = book.RETURN_DATE;\r\n                    }\r\n                    let resultObject = {\r\n                        index: i,\r\n                        text: resultString,\r\n                        title: book.BOOKNAME,\r\n                        id: book.BARCODE,\r\n        //                rent: getBookState(props.text, book..toString()),\r\n                        rentDate: book.RENT_DATE,\r\n                        retDate: retDate,\r\n                        author: book.AUTHOR,\r\n                        totalName: book.TOTAL_NAME,\r\n                        claim_num: book.CLAMENUM,\r\n                        publish: book.PUBLISH,\r\n                        claim: book.CLAIM,\r\n                        user: book.USER,\r\n                        userName: book.USER_NAME\r\n                    };\r\n                    results.push(resultObject);\r\n                }\r\n                results.sort(compare);\r\n                setRentList(results);\r\n            }\r\n            else\r\n            {\r\n                var queryTo;\r\n                const nextMonth = monthValue + 1\r\n                queryTo = yearValue.toString() + \"-\" + nextMonth.toString().padStart(2, \"0\")\r\n                setFromTime(query)\r\n                setToTime(queryTo)\r\n                console.log(query)\r\n                console.log(queryTo)\r\n\r\n                try {\r\n                    await loadHistory();\r\n                }\r\n                catch (e)\r\n                {\r\n                    console.warn(e.name);\r\n                }\r\n\r\n    /*\r\n                for (const index in rent)\r\n                {\r\n                    const userId = rent[index][\"user\"];\r\n                    let userName;\r\n                    if (userList && userId in userList)\r\n                        userName = userList[userId].name;\r\n                    else\r\n                        userName = \"\"\r\n                    rent[index][\"userName\"] = userName;\r\n                    console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n                }\r\n                setRentList(rent);\r\n    */\r\n            }\r\n        }\r\n        search();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [yearValue, monthValue]\r\n    );\r\n\r\n    function movePrev()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (month > 1)\r\n        {\r\n            month -= 1\r\n        }\r\n        else\r\n        {\r\n            year -= 1;\r\n            month = 12;\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    function moveNext()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (month < 12)\r\n        {\r\n            month += 1\r\n        }\r\n        else\r\n        {\r\n            year += 1\r\n            month = 1\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.history}\r\n                </h2>\r\n            </div>\r\n            <div id=\"searchRange\">\r\n                <div className=\"page\" id = \"page\">\r\n                    <NavigateBeforeIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {movePrev();} }/>\r\n                </div>\r\n                <select name=\"year\" id=\"year\" className=\"dropdown\" onChange={(event) => {setProperty(0, event.target.value);}}/>\r\n                <select name=\"month\" id=\"month\" className=\"dropdown\" onChange={(event) => {setProperty(1, event.target.value);}}/>\r\n                    <div className=\"page\" id = \"page\">\r\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {moveNext();} }/>\r\n                    </div>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp } from \"../Util\";\r\n//import { useLazyQuery } from \"@apollo/client\";\r\nimport { Navigate } from 'react-router-dom'\r\n//import {USERS_QUERY} from \"../api/query.js\";\r\nimport UserInfo from \"../UserInfo\";\r\n\r\nfunction NewMember(props) {\r\n//    const [userText, setUserText] = useState(\"\");\r\n    const [userInfo, setUserInfo] = useState({});\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n//    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n//    const [userList, setUserList] = useState({});\r\n//    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized || !props.doc.serverAvailable)\r\n            {\r\n                return;\r\n            }\r\n            console.log(\"=======================================\");\r\n            console.log(\"NewMember initialize\");\r\n            prepareNewMember();\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n*/\r\n\r\n    function prepareNewMember()\r\n    {\r\n        var info = {};\r\n        info.USER_CODE = \"\";\r\n        info.USER_NAME = \"\";\r\n        info.PHONE_NUMBER = \"\";\r\n        info.EMAIL = \"\";\r\n        info.ADDRESS = \"\";\r\n        info.NOTICE = \"\";\r\n        info.USER_LEVEL = -1;\r\n        setUserInfo(info);\r\n    }\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n*/\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n\r\n        const prop = toastProp;\r\n        var text\r\n        if (response.data.return === \"OK\")\r\n        {\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            prepareNewMember()\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.autoClose = 3000;\r\n        toast.info(text, prop);\r\n    }\r\n    if (!props.doc.initialized || !props.doc.serverAvailable)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.newMember}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                {props.doc.serverAvailable &&\r\n                    <UserInfo text={props.text} doc={props.doc} info={userInfo} refresh={refresh}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewMember;\r\n","import { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        this.initialized = false;\r\n        this.bookReady = false;\r\n        this.rentReady = false;\r\n        this.userReady = false;\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        this.book = {};\r\n        this.rent = {};\r\n        this.logCallback = undefined;\r\n        this.admin = false;\r\n        this.serverInfo = {};\r\n        this.serverAvailable = false;\r\n        this.ipAddr = \"\"\r\n    }\r\n\r\n    async updateIpAddr()\r\n    {\r\n//        const response = await axios.get(\"https://ipv4.seeip.org/jsonip\");\r\n        const response = await axios.get(\"https://api.ipify.org/?format=json\")\r\n        console.log(\"Get IP Address\");\r\n        console.log(response.data);\r\n        const ipAddr = response.data.ip;\r\n        console.log(\"IP addr updated \" + ipAddr)\r\n        this.ipAddr = ipAddr;\r\n        this.checkServerIp()\r\n    }\r\n\r\n    checkServerIp()\r\n    {\r\n        if (this.ipAddr.length === 0 || !this.serverInfo.globalIp)\r\n            return\r\n        if (this.serverInfo.globalIp === this.ipAddr)\r\n        {\r\n            console.log(\"Server is accessible \" + this.serverInfo.localIp);\r\n            const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n            this.serverAvailable = true;\r\n            axios.get(query, {timeout: 1000})\r\n                .then( (response) => {\r\n                    console.log(\"Server connected\");\r\n                    console.log(response.data);\r\n                    this.admin = response.data.admin;\r\n                    this.initialized = true;\r\n                })\r\n                .catch(error => {\r\n                  const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n                  window.open(query);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    checkState() {\r\n        if (this.bookReady && this.rentReady) {\r\n            this.initialized = true;\r\n            toast.dismiss();\r\n            if (this.callback) {\r\n                this.callback();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setLogCallback(callback) {\r\n        this.logCallback = callback;\r\n    }\r\n\r\n    setRent(rent) {\r\n        this.rent = rent\r\n        this.rentReady = true;\r\n        this.checkState();\r\n        this.checkRent();\r\n    }\r\n\r\n    setServerInfo(serverInfo)\r\n    {\r\n        this.serverInfo = serverInfo;\r\n        console.log(this.serverInfo.globalIp);\r\n        this.checkServerIp()\r\n    }\r\n\r\n    setBook(books) {\r\n        this.book = {};\r\n        for (let i = 0 ; i < books.length ; i++)\r\n        {\r\n            const book = books[i];\r\n            const id = book['_id'];\r\n            this.book[id] = book;\r\n        }\r\n        this.bookReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setUser(users) {\r\n        this.user = {};\r\n        for (let i = 0 ; i < users.length ; i++)\r\n        {\r\n            const user = users[i];\r\n            const id = user.id;\r\n            this.user[id] = user;\r\n            this.user[id][\"rent\"] = 0;\r\n        }\r\n        this.userReady = true;\r\n        this.checkRent();\r\n    }\r\n\r\n    checkRent() {\r\n        if (!this.userReady || !this.rentReady)\r\n        {\r\n            console.log(\"Cannot check rent\");\r\n            return;\r\n        }\r\n//        console.log(this.rent);\r\n        for (let i = 0 ; i < this.rent.length ; i++)\r\n        {\r\n            const state = this.rent[i].state;\r\n\r\n//            console.log(state);\r\n            if (state !== \"1\" && state !== \"3\")\r\n                continue;\r\n\r\n            const userId = this.rent[i].user_id;\r\n//            console.log(this.rent[i]);\r\n//           console.log(userId);\r\n//           console.log(userId.length);\r\n            if (userId && userId.length > 0 && userId in this.user)\r\n                this.user[userId][\"rent\"] += 1;\r\n            else\r\n                this.user[userId][\"rent\"] = 1;\r\n        }\r\n        console.log(this.user);\r\n    }\r\n\r\n    logIn(userInfo) {\r\n        console.log(\"Logged in: \" + userInfo['_id']);\r\n        this.logged = true;\r\n        this.userInfo = userInfo;\r\n        if (userInfo['level'] === \"2\")\r\n            this.admin = true;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n    }\r\n\r\n    logOut() {\r\n        console.log(\"Logged out\");\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        if (this.logCallback)\r\n            this.logCallback(false);\r\n    }\r\n\r\n    async getRent(userId = undefined) {\r\n        let ret = [];\r\n        if (this.serverAvailable) {\r\n            const url = \"https://\" + this.serverInfo.localIp + \":\" +\r\n                this.serverInfo.port + \"/book\";\r\n            const obj = {\"params\": {\"user\": userId}};\r\n            console.log(obj);\r\n            const result = await axios.get(url, obj);\r\n            console.log(result);\r\n            if (\"books\" in result.data.return)\r\n            {\r\n                // BARCODE, BOOKNAME, LENT_DATE, RETURN_DATE, STATS\r\n                // id, title, rentDate, retData,  stat\r\n                for (const entry of result.data.return.books)\r\n                {\r\n                    console.log(entry);\r\n                    const book = {'id': entry.BARCODE, 'title': entry.BOOKNAME, 'rentDate': entry.LENT_DATE, 'retDate': entry.RETURN_DATE, 'stat': entry.STATS}\r\n                    ret.push(book);\r\n                }\r\n//                ret = result.data.return.books;\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"Check \" + userId);\r\n            console.log(this.bookReady);\r\n            if (!this.bookReady)\r\n                return ret;\r\n    //        console.log(this.rent.length);\r\n            for (let i = 0 ; i < this.rent.length ; i++) {\r\n                const entry = this.rent[i];\r\n                if (userId !== undefined && entry.user_id !== userId)\r\n                    continue;\r\n    //            console.log(entry)\r\n                if (entry.state !== \"1\" && entry.state !== \"3\")\r\n                    continue;\r\n    //            console.log(entry);\r\n                const id = entry[\"book_id\"];\r\n                const book = this.book[id];\r\n    //            console.log(book)\r\n                let retEntry = {}\r\n                retEntry[\"id\"] = book._id\r\n                retEntry[\"title\"] = book.title\r\n                retEntry[\"rentDate\"] = entry.rent_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"retDate\"] = entry.return_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"user\"] = entry.user_id;\r\n                ret.push(retEntry)\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n\r\n    async openDoc() {\r\n        try {\r\n            this.initialized = true;\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.initialized;\r\n    }\r\n\r\n    setCallback(updateFunc)\r\n    {\r\n        console.log(\"Update function registered\");\r\n        this.callback = updateFunc;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","import config from \"./api/key\";\n\nconst NodeRSA = require('node-rsa');\n\nconst prk = new NodeRSA(config[\"privateKey\"]);\n\nclass Context {\n    constructor() {\n        console.log(\"Create Context\");\n\n        console.log(\"Cookies\");\n        const rawCookie = document.cookie;\n        this.cookie = rawCookie\n            .split(\";\")\n            .map(v => v.split(\"=\"))\n            .reduce((acc, v) => {\n                const key = v.shift().trim();\n                const value = v.join(\"=\").trim();\n                acc[decodeURIComponent(key)] = decodeURIComponent(value);\n                return acc;\n            }, {});\n        console.log(this.cookie);\n    }\n\n    checkLogIn(userData, passwordText) {\n        var matched = false;\n        var passwordTyped;\n        if (userData.user && passwordText.length > 0) {\n            console.log(\"User data available\");\n            const emailDb = userData.user.encrypted_email;\n            const phoneDb = userData.user.encrypted_phone;\n\n            passwordTyped = prk.sign(passwordText, 'base64');\n            if (passwordText === emailDb ||\n                passwordText === phoneDb )\n            {\n                passwordTyped = passwordText;\n                matched = true;\n            }\n            else if (emailDb === passwordTyped)\n            {\n//                console.log(\"Email match\");\n                matched = true;\n            }\n            else\n            {\n                var numberString = \"\";\n                for (let i = 0 ; i < passwordText.length ; i++)\n                {\n                    if (!isNaN(passwordText[i]))\n                        numberString += passwordText[i];;\n                }\n                passwordTyped = prk.sign(numberString, 'base64');\n                if (passwordTyped === phoneDb)\n                {\n//                    console.log(\"Phone match\");\n                    matched = true;\n                }\n                else\n                {\n//                    console.log(\"Nothing matched\");\n                }\n            }\n\n//            console.log(\"toast available\");\n        }\n        if (matched)\n        {\n            const date = new Date();\n            const days=2;\n            date.setTime(date.getTime()+(days*24*60*60*1000));\n            const expireDate = date.toGMTString();\n            document.cookie = \"password=\" +  passwordTyped + \"; expires=\" + expireDate + \" ; SameSite=Lax ;\" ;\n        }\n        return matched\n    }\n}\n\nexport default Context;\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Dropdown.css'\r\n\r\nfunction DropDown(props) {\r\n\r\n    const [dropdown, setDropdown] = useState(false);\r\n    const [click, setClick] = useState(false)\r\n\r\n    useEffect(\r\n        () => {\r\n            if (dropdown !== props.dropdown)\r\n            {\r\n                console.log(\"User clicked \" + props.doc.logged);\r\n                console.log(props.dropdown);\r\n                setClick(!click);\r\n                setDropdown(props.dropdown);\r\n            }\r\n            const menu = document.getElementById(\"dropdown-menu\");\r\n//            menu.hidden = !click;\r\n            if (!click)\r\n            {\r\n               menu.classList.remove('is-show');\r\n            }\r\n            else\r\n            {\r\n               menu.classList.add('is-show');\r\n            }\r\n\r\n        }, [props.dropdown, dropdown, click, props.doc.logged]\r\n    );\r\n\r\n    const logOut = () =>\r\n    {\r\n        setClick(false);\r\n        props.doc.logOut();\r\n        document.cookie = \"user_id=\";\r\n        document.cookie = \"password=\";\r\n        document.cookie = \"autoLogin=false\";\r\n    }\r\n\r\n    return (\r\n            <div id='dropdown-menu' onClick={() => { setClick(!click)}} className='dropdown-menu'>\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                    <div className='menu-items'>\r\n                        {props.doc.userInfo[\"_id\"] + \" : \" + props.doc.userInfo[\"name\"] + props.text.nameSuffix}\r\n                    </div>\r\n                    <hr className=\"hline\"/>\r\n                    </>\r\n                }\r\n                <Link className='menu-items' to=\"/\" onClick={() => setClick(false)}>\r\n                    {props.text.home}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/notice\" onClick={() => setClick(false)}>\r\n                    {props.text.notice}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/search\" onClick={() => setClick(false)}>\r\n                    {props.text.bookSearch}\r\n                </Link>\r\n                {props.doc.serverAvailable &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOut\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOut}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/return\" onClick={() => setClick(false)}>\r\n                            {props.text.return}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOutStatus}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {props.doc.admin &&\r\n                    <>\r\n                    <hr className=\"hline\"/>\r\n                    <Link className='menu-items' to=\"/userSearch\" onClick={() => setClick(false)}>\r\n                        {props.text.userSearch}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentalSituation\" onClick={() => setClick(false)}>\r\n                        {props.text.situation}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentHistory\" onClick={() => setClick(false)}>\r\n                        {props.text.history}\r\n                    </Link>\r\n                    </>\r\n                }\r\n                {props.doc.serverAvailable && props.doc.admin &&\r\n                    <Link className='menu-items' to=\"/newMember\" onClick={() => setClick(false)}>\r\n                        {props.text.newMember}\r\n                    </Link>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <hr className=\"hline\"/>\r\n                        <div className='menu-items' onClick={() => logOut()}>\r\n                            {props.text.logOut}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && !props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.logIn}\r\n                        </Link>\r\n                    </>\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default DropDown;\r\n","import React, { useState } from 'react';\r\nimport {isMobile} from \"react-device-detect\";\r\nimport \"./Navbar.css\";\r\nimport DropDown from \"./Dropdown\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction Navbar(props) {\r\n    const [dropdown, setDropdown] = useState(false)\r\n\r\n    const onClick = () => {\r\n        const maxWidth = document.getElementById(\"navbar\").style.maxWidth;\r\n        console.log(\"maxWidth\");\r\n        console.log(maxWidth);\r\n        console.log(document.getElementById(\"navbar\").style.width);\r\n        setDropdown(!dropdown);\r\n    }\r\n\r\nreturn (\r\n    <>\r\n        <div id=\"navbar\" className=\"navbar\">\r\n            <div className='title'>\r\n                {isMobile? (<h1>{props.text[\"titleShort\"]}</h1>) : (<h1>{props.text[\"titleLong\"]}</h1>)}\r\n            </div>\r\n            <div className='menu' onClick={onClick} >\r\n                <MenuIcon className=\"img\" fontSize=\"large\" sx={{ color: \"#ffffff\"}}/>\r\n            </div>\r\n            <DropDown text={props.text} doc={props.doc} dropdown={dropdown}/>\r\n        </div>\r\n    </>\r\n)\r\n}\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Notice from \"./pages/Notice\";\r\nimport Search from \"./pages/Search\";\r\nimport CheckOutStatus from \"./pages/CheckOutStatus\";\r\nimport CheckOut from \"./pages/CheckOut\";\r\nimport Return from \"./pages/Return\";\r\nimport UserSearch from \"./pages/UserSearch\";\r\nimport RentalSituation from \"./pages/RentalSituation\";\r\nimport RentHistory from \"./pages/RentHistory\";\r\nimport NewMember from \"./pages/NewMember\";\r\n//import Reader from \"./pages/Reader\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\nimport Context from \"./Context\";\r\nimport text from \"./api/text\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"./Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport Navbar from \"./Navbar\";\r\nimport {BOOK_QUERY, RENT_QUERY, USER_QUERY, SERVER_QUERY} from \"./api/query.js\";\r\n\r\nconst doc = new Doc();\r\nconst context = new Context();\r\n\r\nconst textString = {};\r\nlet logMsg = \"\"\r\nfunction App() {\r\n\r\n//    const [checkOutStr, setCheckOutStr] = useState(\"\");\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [logged, setLogged] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const { loading: rentLoading, error: rentError, data: rentData } = useQuery(RENT_QUERY);\r\n    const { loading: serverLoading, error: serverError, data: serverData } = useQuery(SERVER_QUERY);\r\n    const [loadBook, { loading: bookLoading, error: bookError, data: bookData }] = useLazyQuery(BOOK_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY, { \"variables\": { \"_id\": userId } });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            logMsg = logMsg + \"<p>Initialize app</p>\";\r\n            console.log(process.env.APP_NAME);\r\n            console.log(process.env.APP_VERSION);\r\n            const lang = navigator.languages;\r\n            console.log(lang);\r\n            let ts = {}\r\n            if (lang.length> 0 && (lang[0].toLowerCase().includes(\"kr\") || lang[0].toLowerCase().includes(\"ko\")))\r\n            {\r\n                ts = text.kr;\r\n            }\r\n            else\r\n            {\r\n                ts = text.en;\r\n            }\r\n            for (let key in ts)\r\n            {\r\n                textString[key] = ts[key];\r\n            }\r\n\r\n            await doc.updateIpAddr();\r\n\r\n            if (\"autoLogin\" in context.cookie &&  context.cookie.autoLogin === \"true\")\r\n            {\r\n                console.log(\"Auto Login: \" + context.cookie.user_id);\r\n                setUserId(context.cookie.user_id);\r\n                console.log(context.cookie.nothing);\r\n                loadUser();\r\n            }\r\n            setInitialized(true);\r\n        }\r\n        initialize();\r\n    }, [loadUser]);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data loaded\");\r\n            if (!userData)\r\n            {\r\n                return;\r\n            }\r\n\r\n            console.log(\"Login check \" + context.cookie.password);\r\n            console.log(userData);\r\n            if (context.cookie.password && context.checkLogIn(userData, context.cookie.password))\r\n            {\r\n                console.log(\"Login suceeded\");\r\n                doc.logIn(userData.user);\r\n            }\r\n\r\n\r\n\r\n        }, [userData]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Rent Query Updated\");\r\n            logMsg = logMsg + \"<p>Rent Query Updated \" + rentLoading + \" \" + rentError + \"</p>\";\r\n            console.log(rentLoading);\r\n            console.log(rentError);\r\n            if (rentData)\r\n            {\r\n                console.log(\"Rent available\");\r\n                logMsg = logMsg + \"<p>Rent available</p>\"\r\n//                console.log(rentData.rents)\r\n                doc.setRent(rentData.rents)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [rentLoading, rentError, rentData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Book Query Updated\");\r\n            logMsg = logMsg + \"<p>Book Query Updated</p>\";\r\n            console.log(bookLoading)\r\n            console.log(bookError)\r\n            if (bookData)\r\n            {\r\n                console.log(\"Book available\")\r\n                logMsg = logMsg + \"<p>Book available</p>\";\r\n//                console.log(bookData.books)\r\n                doc.setBook(bookData.books)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [bookLoading, bookError, bookData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Server Query Updated\");\r\n            logMsg = logMsg + \"<p>Server Query Updated</p>\";\r\n\r\n            console.log(serverData);\r\n            console.log(initialized);\r\n            if (!serverData || !initialized)\r\n                return\r\n\r\n            console.log(\"Server info available\")\r\n            logMsg = logMsg + \"<p>Server info available</p>\";\r\n            console.log(serverData.serverInfo)\r\n            doc.setServerInfo(serverData.serverInfo)\r\n\r\n            if (!doc.serverAvailable)\r\n            {\r\n                console.log(\"Server is not available. Load books from cloud DB\");\r\n                loadBook();\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.LOADING;\r\n                prop.autoClose = false;\r\n                prop.toastId = loadingId;\r\n                toast.loading(textString.loading, prop);\r\n                doc.setLogCallback(updateLog);\r\n            }\r\n        }, [serverLoading, serverError, serverData, loadBook, initialized]\r\n    );\r\n\r\n    function notifyInit()\r\n    {\r\n        const prop = toastProp;\r\n        prop.type = toast.TYPE.SUCCESS;\r\n        prop.render = textString.succeededToOpen;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = \"\";\r\n        toast.info(textString.succeededToOpen, prop);\r\n    }\r\n\r\n    function updateLog(logged) {\r\n        console.log(\"==== Update logging state \" + doc.logged);\r\n        console.log(doc.userInfo);\r\n        setLogged(doc.logged);\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n        <div className=\"App\">\r\n            <div>\r\n                <ToastContainer\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    limit={10}\r\n                />\r\n            </div>\r\n            <Navbar doc={doc} text={textString}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home doc={doc} text={textString}/>} />\r\n                <Route path=\"/notice\" element={<Notice doc={doc} text={textString} />} />\r\n                <Route path=\"/search/:id?\" element={<Search doc={doc} text={textString}/>} />\r\n                <Route path=\"/checkOutStatus\" element={<CheckOutStatus context={context} doc={doc} text={textString} logged={logged}/>} />\r\n                <Route path=\"/userSearch/:id?\" element={<UserSearch context={context} doc={doc} text={textString} />} />\r\n                <Route path=\"/checkOut\" element={<CheckOut context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/return\" element={<Return context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentalSituation\" element={<RentalSituation context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentHistory\" element={<RentHistory context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/newMember\" element={<NewMember context={context} doc={doc} text={textString}/>} />\r\n            </Routes>\r\n\r\n            <h3>\r\n                v {process.env.REACT_APP_VERSION}\r\n            </h3>\r\n        </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport * as Realm from \"realm-web\";\r\nimport {\r\n    ApolloClient,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    InMemoryCache,\r\n} from \"@apollo/client\";\r\n\r\nconst APP_ID = 'data-xaque';\r\nconst graphqlUri = `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\r\nconst app = new Realm.App(APP_ID);\r\n\r\n// Gets a valid Realm user access token to authenticate requests\r\nasync function getValidAccessToken() {\r\n    // Guarantee that there's a logged in user with a valid access token\r\n    if (!app.currentUser) {\r\n        // If no user is logged in, log in an anonymous user. The logged in user will have a valid\r\n        // access token.\r\n        await app.logIn(Realm.Credentials.anonymous());\r\n//        await app.logIn(apiKey);\r\n    } else {\r\n        // An already logged in user's access token might be stale. Tokens must be refreshed after\r\n        // 30 minutes. To guarantee that the token is valid, we refresh the user's access token.\r\n        await app.currentUser.refreshAccessToken();\r\n    }\r\n//    console.log(\"AccessToken: [\" + app.currentUser.accessToken + \"]\");\r\n\r\n    return app.currentUser.accessToken;\r\n}\r\n\r\n// Configure the ApolloClient to connect to your app's GraphQL endpoint\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\r\n        // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\r\n        // access token before sending the request.\r\n        fetch: async (uri, options) => {\r\n            const accessToken = await getValidAccessToken();\r\n            options.headers.Authorization = `Bearer ${accessToken}`;\r\n            return fetch(uri, options);\r\n        },\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}